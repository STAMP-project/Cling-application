import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest32 {

    public static boolean debug = false;

    @Test
    public void test16001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16001");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer2.getTrimmerMatcher();
        boolean boolean27 = strTokenizer2.hasNext();
        java.lang.Class<?> wildcardClass28 = strTokenizer2.getClass();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test16002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16002");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder14.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder14.appendSeparator(' ', 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder14.setNewLineText("!ihfalsehi!sehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.setNewLineText("\000\000\000");
        boolean boolean47 = strBuilder45.contains("StrTokenizer[i!hi!97!!!]");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test16003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16003");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0", "hi!!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('h', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.deleteCharAt(9);
        char[] charArray41 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        char[] charArray49 = strBuilder38.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder18.insert(76, charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "!ih100.00");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "!ih100.00");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[!, i, h, 1, 0, 0, ., 0, 0]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
    }

    @Test
    public void test16004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16004");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        java.lang.Object obj25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(obj25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.delete(11, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer32.setQuoteMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer32.setEmptyTokenAsNull(true);
        java.lang.String str58 = strTokenizer57.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer57.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder24.append((java.lang.Object) strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder24.appendSeparator(' ', 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder24.appendSeparator("!ih100.0");
        java.lang.String str66 = strBuilder65.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.append(".1.00hi!35");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strBuilder68.asTokenizer();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strTokenizer69);
    }

    @Test
    public void test16005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16005");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendSeparator("i", (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendFixedWidthPadLeft((int) '4', (int) (short) -1, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.setLength(105);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.insert((int) 'i', (double) 48);
        char[] charArray40 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getDelimiterMatcher();
        int int44 = strTokenizer42.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setDelimiterChar('!');
        java.util.List<java.lang.String> strList47 = strTokenizer46.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer46.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder32.replaceAll(strMatcher48, "#########################0.0\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence53 = strBuilder32.subSequence(60, 18);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -42");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a]");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test16006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16006");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.reset(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '#', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strBuilder51.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setEmptyTokenAsNull(false);
        java.lang.String str58 = strTokenizer55.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer55.setDelimiterMatcher(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer39.setQuoteMatcher(strMatcher61);
        java.lang.String str66 = strTokenizer39.next();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer39.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "!ih100.0" + "'", str58, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "#a" + "'", str66, "#a");
    }

    @Test
    public void test16007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16007");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.deleteFirst("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((long) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln((long) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append('a');
        int int19 = strBuilder12.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("", "hi!");
        java.lang.String str54 = strBuilder49.leftString((int) '4');
        boolean boolean55 = strBuilder37.equalsIgnoreCase(strBuilder49);
        java.lang.StringBuffer stringBuffer56 = strBuilder49.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder12.appendln(stringBuffer56);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder6.appendln(stringBuffer56, (int) 'f', 63);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "!ih100.0" + "'", str54, "!ih100.0");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(stringBuffer56);
        org.junit.Assert.assertEquals(stringBuffer56.toString(), "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test16008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16008");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder14.append(100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder14.appendSeparator(' ', 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.appendFixedWidthPadRight((int) '!', 19, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.minimizeCapacity();
        int int49 = strBuilder45.lastIndexOf("java.io.IOException: fals", 49);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test16009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16009");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(3, "!ih");
        java.io.Reader reader31 = strBuilder27.asReader();
        java.lang.String str34 = strBuilder27.midString(25, (int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.append((double) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder27.appendSeparator("i!45210.0hhhhhhhhhhhh");
        int int39 = strBuilder38.capacity();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 76 + "'", int39 == 76);
    }

    @Test
    public void test16010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16010");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder11.append(strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.appendln('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        int int56 = strBuilder54.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder54.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln(stringBuffer75);
        char[] charArray79 = strBuilder74.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray80 = strBuilder39.getChars(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, "hi!!ih100.0#a");
        char[] charArray83 = strBuilder37.getChars(charArray80);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "hi!a\nh\n00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "hi!a\nh\n00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[h, i, !, a, \n, h, \n, 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "hi!a\nh\n00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "hi!a\nh\n00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[h, i, !, a, \n, h, \n, 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "hi!a\nh\n00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "hi!a\nh\n00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[h, i, !, a, \n, h, \n, 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
    }

    @Test
    public void test16011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16011");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.setLength(9);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        int int26 = strBuilder23.lastIndexOf('v', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.replaceAll(strMatcher34, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder28.asTokenizer();
        boolean boolean54 = strTokenizer53.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceAll("", "hi!");
        java.lang.String str71 = strBuilder66.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.append("");
        char[] charArray74 = strBuilder66.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer53.reset(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder23.appendFixedWidthPadLeft((java.lang.Object) charArray74, 42, 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder23.appendSeparator(' ', 'i');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "!" + "'", str71, "!");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test16012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16012");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!100!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
    }

    @Test
    public void test16013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16013");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        java.lang.String str17 = strBuilder16.toString();
        int int20 = strBuilder16.lastIndexOf('a', (int) (short) 1);
        boolean boolean22 = strBuilder16.endsWith("hi!");
        int int25 = strBuilder16.indexOf('a', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.insert(0, 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.deleteAll(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        int int69 = strBuilder58.indexOf(strMatcher63, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder58.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int76 = strBuilder72.lastIndexOf(strMatcher74, 1);
        boolean boolean77 = strBuilder53.contains(strMatcher74);
        int int78 = strBuilder28.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder28.minimizeCapacity();
        int int82 = strBuilder28.lastIndexOf("hi!\n# ", 112);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "!ih100.00" + "'", str17, "!ih100.00");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test16014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16014");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        int int14 = strBuilder11.indexOf("hi!\n", 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append((float) 18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append(0L);
        java.lang.String str34 = strBuilder33.toString();
        int int37 = strBuilder33.lastIndexOf('a', (int) (short) 1);
        boolean boolean39 = strBuilder33.endsWith("hi!");
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder33.append(stringBuffer40, 7, 0);
        boolean boolean44 = strBuilder11.equals(strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder11.appendSeparator("java.io.IOException: java.io.IOException: java.io.IOException: ", 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder11.setLength(124);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "!ih100.00" + "'", str34, "!ih100.00");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test16015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16015");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder1.appendSeparator('#', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.replaceAll("hi!hi!", "hi!\n10");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer24.getDelimiterMatcher();
        int int28 = strBuilder1.lastIndexOf(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        int int46 = strBuilder44.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean57 = strBuilder48.contains(strMatcher56);
        java.lang.StringBuffer stringBuffer58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder48.appendln(stringBuffer58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder48.replaceFirst(strMatcher60, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder44.appendFixedWidthPadLeft((java.lang.Object) strBuilder62, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder44.reverse();
        char[] charArray69 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, 'a');
        char[] charArray75 = strBuilder44.getChars(charArray69);
        char[] charArray76 = strBuilder29.getChars(charArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder29.appendln("01hi!\n", 0, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.replace(0, 58, "!!ih100.0#a#1hi!hi!2\n \n");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#\n!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#\n!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, \n, !, i, h]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test16016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16016");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceAll("", "hi!");
        int int17 = strBuilder15.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher39);
        int int42 = strBuilder19.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder19.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder19.deleteFirst(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n", strMatcher64);
        java.lang.String str69 = strTokenizer68.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer68.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = strTokenizer73.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
    }

    @Test
    public void test16017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16017");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.insert(7, (long) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendSeparator("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", "eh!0a\nStrT");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.appendSeparator("!ih100.0St", 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((float) 102);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test16018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16018");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.append((double) (short) 0);
        java.lang.String str21 = strBuilder19.rightString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append(0L);
        java.lang.String str39 = strBuilder38.toString();
        int int42 = strBuilder38.lastIndexOf('a', (int) (short) 1);
        boolean boolean44 = strBuilder38.endsWith("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!ih100.0StrTokenizer[!ih100.0]11.0");
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder38.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder38.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder19.append(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.replaceFirst("StrTokenizer[!ih100.0]1.0", "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n#a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder50.setCharAt(0, ' ');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "!ih100.00" + "'", str39, "!ih100.00");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test16019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16019");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.appendln((long) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder11.replaceAll(strMatcher17, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strBuilder11.asTokenizer();
        boolean boolean37 = strTokenizer36.isIgnoreEmptyTokens();
        java.util.List<java.lang.String> strList38 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder8.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList38, "!ih100.0\n4\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test16020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16020");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        java.util.stream.IntStream intStream32 = strBuilder1.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder1.appendSeparator(' ', ' ');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendSeparator('#', 33);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.setLength(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean60 = strBuilder51.contains(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder49.deleteAll(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln('a');
        java.io.Writer writer66 = strBuilder63.asWriter();
        writer66.write((int) (short) 0);
        char[] charArray71 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, strMatcher77, strMatcher79);
        writer66.write(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder41.append(charArray71, 12, 171);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 171");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(writer66);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer83);
    }

    @Test
    public void test16021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16021");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar('1');
        int int4 = strTokenizer1.previousIndex();
        boolean boolean5 = strTokenizer1.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test16022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16022");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("hi!");
        boolean boolean27 = strBuilder1.equals(strBuilder24);
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        boolean boolean31 = strTokenizer30.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setIgnoredChar(' ');
        java.lang.String str36 = strTokenizer35.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer35.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer35.setDelimiterString("StrTokenizer[!ih100.0]");
        int int41 = strTokenizer40.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer40.setDelimiterString("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer40.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer30.setIgnoredMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer30.setQuoteChar('a');
        int int48 = strTokenizer47.previousIndex();
        java.lang.String str49 = strTokenizer47.nextToken();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "falsehi!#hi!" + "'", str49, "falsehi!#hi!");
    }

    @Test
    public void test16023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16023");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendSeparator("java.io.IOException: java.io.IOException: hi!-1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.setNullText("falsehi!!ih100.0");
        java.lang.String str24 = strBuilder23.toString();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "!ih100.10.084java.io.IOException: java.io.IOException: hi!-1.0" + "'", str24, "!ih100.10.084java.io.IOException: java.io.IOException: hi!-1.0");
    }

    @Test
    public void test16024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16024");
        java.io.IOException iOException2 = new java.io.IOException("h");
        java.io.IOException iOException3 = new java.io.IOException("rTokenizer[!ih100.0]\n", (java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException("hi!97!!!!!!!!!!!!!!!!!");
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        iOException3.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.lang.String str9 = iOException8.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "java.io.IOException: java.io.IOException: rTokenizer[!ih100.0]\n" + "'", str9, "java.io.IOException: java.io.IOException: rTokenizer[!ih100.0]\n");
    }

    @Test
    public void test16025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16025");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        writer24.write((int) 'a');
        writer24.flush();
        writer24.flush();
        java.io.Writer writer32 = writer24.append('.');
        java.lang.CharSequence charSequence33 = null;
        java.io.Writer writer34 = writer32.append(charSequence33);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(writer32);
        org.junit.Assert.assertNotNull(writer34);
    }

    @Test
    public void test16026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16026");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        boolean boolean2 = strBuilder1.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.append((double) 290);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
    }

    @Test
    public void test16027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16027");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("hi!");
        boolean boolean27 = strBuilder1.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean38 = strBuilder29.contains(strMatcher37);
        java.lang.StringBuffer stringBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder29.appendln(stringBuffer39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder29.replaceFirst(strMatcher41, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.insert((int) (short) 1, 'a');
        boolean boolean47 = strBuilder24.equals(strBuilder29);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder24.appendln((java.lang.Object) "!ih100.010.0a#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder24.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll('e');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test16028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16028");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendSeparator(' ', (int) (byte) 10);
        boolean boolean22 = strBuilder17.startsWith("h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getTrimmerMatcher();
        java.lang.String str27 = strTokenizer25.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer25);
        boolean boolean30 = strBuilder28.contains("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!4444444falsehi!0");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.setLength(47);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((float) 90);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('1', '5');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str27, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test16029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16029");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean35 = strBuilder26.contains(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.deleteAll(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("hi!");
        boolean boolean42 = strBuilder16.equals(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.replaceFirst(strMatcher56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder44.insert((int) (short) 1, 'a');
        boolean boolean62 = strBuilder39.equals(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.replaceAll(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.append((float) (byte) 100);
        java.lang.String str77 = strBuilder74.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strBuilder74.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer78.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder39.replaceFirst(strMatcher79, "!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("hi!a\nh", strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setIgnoreEmptyTokens(false);
        java.lang.String str86 = strTokenizer83.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "#a" + "'", str86, "#a");
    }

    @Test
    public void test16030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16030");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        boolean boolean17 = strBuilder15.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendFixedWidthPadLeft((int) '4', 1, '#');
        char[] charArray25 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder15.deleteFirst(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder15.minimizeCapacity();
        java.io.Writer writer41 = strBuilder40.asWriter();
        writer41.write("ih100.00.0#\n4a");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(writer41);
    }

    @Test
    public void test16031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16031");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll('h');
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.append(100L);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test16032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16032");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(stringBuffer12);
        java.io.Writer writer14 = strBuilder13.asWriter();
        writer14.write("!i100.00\n!ih33");
        writer14.flush();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(writer14);
    }

    @Test
    public void test16033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16033");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        int int19 = strBuilder18.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder43.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder43.replaceFirst(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.appendln((java.lang.Object) (short) 1);
        java.lang.String str63 = strBuilder61.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.deleteAll("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.insert((int) (byte) 1, (long) (short) 0);
        int int70 = strBuilder68.indexOf("sehi!!");
        boolean boolean72 = strBuilder68.contains("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder21.append(strBuilder68, (int) (byte) 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("1hi!hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.deleteFirst(strMatcher78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder75.appendSeparator("!ih100.04\nStrTokenizer[not tokenized yet]", 104);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.appendSeparator('1', 104);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.replaceFirst('#', 'v');
        boolean boolean90 = strBuilder85.endsWith("!ihfalsehi!!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder85.delete(83, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test16034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16034");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        int int32 = strBuilder30.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        java.util.stream.IntStream intStream38 = strBuilder37.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.appendln(stringBuffer50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.replaceFirst(strMatcher52, "hi!");
        int int55 = strBuilder37.indexOf(strMatcher52);
        int int57 = strBuilder30.indexOf(strMatcher52, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder15.replaceFirst(strMatcher52, "");
        int int60 = strBuilder59.capacity();
        int int62 = strBuilder59.indexOf("100.0100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append(43);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 35 + "'", int60 == 35);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test16035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16035");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder19.setLength(12);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = null;
        int int37 = strBuilder35.lastIndexOf(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append("!ih100.00h100.0\n\n");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test16036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16036");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.replaceFirst(strMatcher19, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.insert(0, (java.lang.Object) (byte) 1);
        boolean boolean25 = strBuilder4.equalsIgnoreCase(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        java.lang.CharSequence charSequence40 = strBuilder37.subSequence(1, (int) (short) 1);
        boolean boolean42 = strBuilder37.endsWith("!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.replaceAll(strMatcher67, "");
        int int73 = strBuilder62.indexOf(strMatcher67, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder57.append(strBuilder62, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder57.setNullText("hi!");
        boolean boolean79 = strBuilder37.equalsIgnoreCase(strBuilder78);
        java.lang.Object[] objArray80 = new java.lang.Object[] { strBuilder37 };
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder4.appendAll(objArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder4.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder4.append((long) 22);
        int int87 = strBuilder84.indexOf('v', 8);
        java.io.Reader reader88 = strBuilder84.asReader();
        reader88.mark(1);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[!ih100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[!ih100.0]");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(reader88);
    }

    @Test
    public void test16037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16037");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendFixedWidthPadRight((int) (byte) 10, (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((float) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.insert(9, (long) 100);
        java.util.stream.IntStream intStream20 = strBuilder14.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.appendSeparator('h', 'e');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test16038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16038");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        boolean boolean34 = strBuilder32.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder14.append((java.lang.CharSequence) strBuilder32);
        java.lang.String str42 = strBuilder14.midString(100, 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder14.appendln('i');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder14.append("33hi!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n#a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append('#');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test16039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16039");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteAll("100.00\n010.0hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln((long) 112);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.appendSeparator("!ih100.0#a100.0\n\n", 90);
        char[] charArray29 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        java.util.stream.IntStream intStream35 = strBuilder34.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.deleteFirst(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setDelimiterString("4a");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getQuoteMatcher();
        int int48 = strBuilder26.lastIndexOf(strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test16040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16040");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        boolean boolean56 = strBuilder1.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder1.append(strBuilder58);
        java.util.stream.IntStream intStream60 = strBuilder59.chars();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(intStream60);
    }

    @Test
    public void test16041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16041");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setLength(0);
        java.lang.String str22 = strBuilder17.midString((int) ' ', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.appendln(18);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        int int41 = strBuilder39.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer50 = strBuilder49.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder17.append(stringBuffer50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder17.append("ih100.00.0#\n", 113, 15);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(stringBuffer50);
        org.junit.Assert.assertEquals(stringBuffer50.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test16042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16042");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean48 = strBuilder39.contains(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.replaceAll(strMatcher33, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean56 = strTokenizer55.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer55, "!ih100.0");
        char[] charArray61 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder27.appendln(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ', ' ');
        char[] charArray70 = strBuilder1.getChars(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, "!ih100.0\n4\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setDelimiterString("");
        boolean boolean77 = strTokenizer74.hasNext();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[h, i, !]");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test16043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16043");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer79.append('a');
        writer81.write("hi!#java.io.IOException              ");
        writer81.flush();
        java.io.Writer writer86 = writer81.append('1');
        java.io.Writer writer88 = writer81.append('5');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
        org.junit.Assert.assertNotNull(writer86);
        org.junit.Assert.assertNotNull(writer88);
    }

    @Test
    public void test16044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16044");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        java.util.stream.IntStream intStream32 = strBuilder1.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder1.appendSeparator(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder1.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.minimizeCapacity();
        int int39 = strBuilder38.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append(".");
        java.io.Writer writer42 = strBuilder38.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("", "hi!");
        int int59 = strBuilder57.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean70 = strBuilder61.contains(strMatcher69);
        java.lang.StringBuffer stringBuffer71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.appendln(stringBuffer71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder61.replaceFirst(strMatcher73, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder57.appendFixedWidthPadLeft((java.lang.Object) strBuilder75, 1, ' ');
        char[] charArray79 = strBuilder78.toCharArray();
        char[] charArray82 = strBuilder78.toCharArray(6, 11);
        // The following exception was thrown during execution in test generation
        try {
            writer42.write(charArray82, 0, 98);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 98");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), ".0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), ".0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[., 0, !]");
    }

    @Test
    public void test16045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16045");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendSeparator('!', 1);
        char[] charArray31 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(2, "0.001hi!hi!30.001hi 1");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.append((long) (byte) 100);
        java.util.stream.IntStream intStream39 = strBuilder38.chars();
        java.lang.String str40 = strBuilder38.toString();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "!ih100.0a#!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "!ih100.0a#!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[!, i, h, 1, 0, 0, ., 0, a, #, !]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "!i0.001hi!hi!30.001hi 1h100.0a#!true\n100" + "'", str40, "!i0.001hi!hi!30.001hi 1h100.0a#!true\n100");
    }

    @Test
    public void test16046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16046");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("a\n10\n", '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer24, "100.0hi!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test16047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16047");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        boolean boolean5 = strBuilder3.isEmpty();
        int int8 = strBuilder3.indexOf('!', 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.replaceAll(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        int int39 = strBuilder28.indexOf(strMatcher33, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.append(strBuilder28, (int) (byte) 1, 0);
        int int43 = strBuilder42.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendFixedWidthPadLeft(10, 3, '!');
        int int49 = strBuilder42.indexOf("001hi 1");
        boolean boolean50 = strBuilder3.equals(strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder3.replace(2, 18, "i!hi!!ih100.04\nStrTokenizer[not tokenized yet]");
        java.util.stream.IntStream intStream55 = strBuilder54.chars();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8 + "'", int43 == 8);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(intStream55);
    }

    @Test
    public void test16048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16048");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (byte) 0, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((double) (byte) 10);
        int int27 = strBuilder24.length();
        java.util.stream.IntStream intStream28 = strBuilder24.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendSeparator('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendFixedWidthPadRight((int) '#', 1, '4');
        java.lang.String str51 = strBuilder48.substring((int) (byte) 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.appendSeparator("!", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strBuilder66.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setIgnoredMatcher(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder48.deleteAll(strMatcher73);
        int int76 = strBuilder33.lastIndexOf(strMatcher73);
        int int78 = strBuilder12.lastIndexOf(strMatcher73, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder12.clear();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 12 + "'", int27 == 12);
        org.junit.Assert.assertNotNull(intStream28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!3" + "'", str51, "hi!3");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test16049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16049");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert(1, (float) (byte) 1);
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        java.io.IOException iOException23 = new java.io.IOException();
        iOException22.addSuppressed((java.lang.Throwable) iOException23);
        iOException21.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException26 = new java.io.IOException();
        java.io.IOException iOException27 = new java.io.IOException();
        iOException26.addSuppressed((java.lang.Throwable) iOException27);
        iOException23.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException30 = new java.io.IOException();
        java.io.IOException iOException31 = new java.io.IOException();
        java.io.IOException iOException32 = new java.io.IOException();
        iOException31.addSuppressed((java.lang.Throwable) iOException32);
        iOException30.addSuppressed((java.lang.Throwable) iOException32);
        java.io.IOException iOException35 = new java.io.IOException();
        java.io.IOException iOException36 = new java.io.IOException();
        iOException35.addSuppressed((java.lang.Throwable) iOException36);
        iOException32.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException39 = new java.io.IOException((java.lang.Throwable) iOException36);
        iOException23.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException36);
        java.lang.Throwable[] throwableArray42 = iOException41.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.appendWithSeparators((java.lang.Object[]) throwableArray42, "falsehi!!i!#hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendPadding((int) 'f', 'v');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.insert((int) '5', 'h');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test16050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16050");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendSeparator("!ih100.0StrTokenizer[!ih100.0]11.0", 105);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteAll('.');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        int int10 = strBuilder6.lastIndexOf(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test16051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16051");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer20.setQuoteMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer20.getTrimmerMatcher();
        int int46 = strBuilder4.lastIndexOf(strMatcher44, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder48.replaceAll(strMatcher54, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean77 = strTokenizer76.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder48.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer76, "!ih100.0");
        char[] charArray82 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder48.appendln(charArray82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray82);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray82);
        int int90 = strBuilder4.lastIndexOf(strMatcher88, 29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder4.insert((int) 'h', 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test16052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16052");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!\n10");
        boolean boolean2 = strTokenizer1.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test16053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16053");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll('h');
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setCharAt(0, '4');
        java.lang.String str17 = strBuilder15.rightString(20);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.append(0L);
        java.io.Reader reader20 = strBuilder19.asReader();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4alsei!100.0\n" + "'", str17, "4alsei!100.0\n");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
    }

    @Test
    public void test16054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16054");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        char[] charArray15 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher27);
        java.lang.String[] strArray29 = strTokenizer28.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder1.appendAll((java.lang.Object[]) strArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.appendFixedWidthPadRight(17, 102, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        boolean boolean52 = strBuilder39.equalsIgnoreCase(strBuilder51);
        java.lang.String str54 = strBuilder51.leftString(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.replaceAll("i!hi!97!!!", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNull();
        java.lang.String str61 = strBuilder58.midString((int) (byte) 100, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.insert(0, "!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.deleteAll("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteAll("!ih100.00\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.appendSeparator('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder66.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder34.appendln(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "!" + "'", str54, "!");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test16055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16055");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        int int33 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder1.setNullText("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator(' ', '4');
        boolean boolean40 = strBuilder38.endsWith("!ih00.0#a\n");
        java.lang.String str41 = strBuilder38.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.appendFixedWidthPadLeft(120, 0, '0');
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 11 + "'", int33 == 11);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "!" + "'", str41, "!");
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test16056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16056");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setEmptyTokenAsNull(false);
        java.lang.String str49 = strTokenizer46.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer46);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        java.util.stream.IntStream intStream57 = strBuilder56.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.appendln((java.lang.Object) strBuilder58);
        char[] charArray62 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer85 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder79.append(stringBuffer85);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int88 = strBuilder86.indexOf(strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher87);
        char[] charArray90 = strBuilder59.getChars(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        java.lang.String str93 = strTokenizer92.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer92.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer95.setQuoteChar('f');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = strTokenizer95.reset("!ih100");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "!ih100.0" + "'", str49, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(intStream57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "hai!hi!hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "hai!hi!hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[h, a, i, !, h, i, !, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "#a" + "'", str93, "#a");
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strTokenizer97);
        org.junit.Assert.assertNotNull(strTokenizer99);
    }

    @Test
    public void test16057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16057");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("hi!");
        boolean boolean27 = strBuilder1.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln((float) 4);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test16058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16058");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceFirst(strMatcher35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        boolean boolean55 = strBuilder50.endsWith("!ih100.0");
        char char57 = strBuilder50.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        int int63 = strBuilder50.indexOf('#', 100);
        boolean boolean64 = strBuilder38.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher76, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher76, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer81, "");
        int int88 = strBuilder85.indexOf("", 30);
        java.io.Reader reader89 = strBuilder85.asReader();
        java.io.Writer writer90 = strBuilder85.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder85.append('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder92.replaceFirst('e', '3');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + char57 + "' != '" + '!' + "'", char57 == '!');
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 30 + "'", int88 == 30);
        org.junit.Assert.assertNotNull(reader89);
        org.junit.Assert.assertNotNull(writer90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test16059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16059");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append('#');
        int int17 = strBuilder15.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.append((java.lang.Object) "");
        java.lang.String str19 = strBuilder1.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceAll("StrTokenizer[!ih100.0]", "i!");
        int int39 = strBuilder36.lastIndexOf("!ih100.0", 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strBuilder51.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setEmptyTokenAsNull(false);
        java.lang.String str58 = strTokenizer55.next();
        java.lang.String str59 = strTokenizer55.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer55.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst(strMatcher78, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder75.replaceAll(strMatcher78, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean84 = strBuilder75.contains(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder63.replaceAll(strMatcher69, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer55.setTrimmerMatcher(strMatcher69);
        java.lang.String[] strArray89 = strTokenizer55.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder36.appendWithSeparators((java.lang.Object[]) strArray89, "ih100.010.0i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder1.appendAll((java.lang.Object[]) strArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder1.setNullText("!ih100.0StrTokenizer[!ih100.0]11.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder94.setNullText("java.io.IOException: 1hi!hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder96.replaceFirst("!ih100.0StrTokenizer[!ih100.0]11.0", "h1.0i!######true10.0\n0");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "falsehi!" + "'", str19, "falsehi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "!ih100.0" + "'", str58, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "!ih100.0" + "'", str59, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test16060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16060");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.append((float) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendFixedWidthPadLeft((int) ' ', (int) '4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        java.lang.String str46 = strBuilder41.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.append("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder25.appendln((java.lang.Object) strBuilder47);
        java.lang.String str59 = strBuilder58.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendSeparator(".0", 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln((int) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendln("hi!46                    1", (int) (short) 10, 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((float) 290);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "!" + "'", str46, "!");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "!ih100.0\n!ih100.0011.04444444444444444444444444444444444444444444444444432!ih100.0\n!ih100.00hi!\n" + "'", str59, "!ih100.0\n!ih100.0011.04444444444444444444444444444444444444444444444444432!ih100.0\n!ih100.00hi!\n");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test16061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16061");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendFixedWidthPadRight((int) (short) 10, (int) ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder11.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        boolean boolean49 = strBuilder39.endsWith("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll("", "hi!");
        java.lang.String str66 = strBuilder61.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.replaceFirst(strMatcher70, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder39.appendln(strBuilder61, 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder39.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder37.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder77.insert(17, (long) 24);
        java.lang.StringBuffer stringBuffer82 = strBuilder81.toStringBuffer();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "!" + "'", str66, "!");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(stringBuffer82);
        org.junit.Assert.assertEquals(stringBuffer82.toString(), "!ih100.0hi!hi!10a24aaaaaaaaaaaaaaaaaaaaaaaaaaaaa!ih\n\n\n");
    }

    @Test
    public void test16062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16062");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln("hi!");
        java.lang.String str27 = strBuilder24.midString((int) 'a', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strBuilder51.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setEmptyTokenAsNull(false);
        java.lang.String str58 = strTokenizer55.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean78 = strBuilder69.contains(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder67.deleteAll(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder59.append(strBuilder67);
        java.lang.Object obj81 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder59.appendFixedWidthPadLeft(obj81, (int) (byte) 1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.replaceAll("hi!\n", "h");
        java.lang.String str89 = strBuilder87.rightString(105);
        int int91 = strBuilder87.lastIndexOf('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder87.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder87.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder24.appendln(strBuilder93);
        int int96 = strBuilder24.indexOf("!ih100.00!ih100.0252");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "!ih100.0" + "'", str58, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "!ihfalsehi!!" + "'", str89, "!ihfalsehi!!");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 8 + "'", int91 == 8);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test16063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16063");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("i!", 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll("", "hi!");
        int int19 = strBuilder17.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder17.setLength((int) '4');
        java.lang.Object obj28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(obj28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.delete(11, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean56 = strBuilder47.contains(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer35.setQuoteMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer35.setEmptyTokenAsNull(true);
        java.lang.String str61 = strTokenizer60.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer60.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder27.append((java.lang.Object) strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder27.appendSeparator(' ', 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder27.appendSeparator("!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder27.append(7L);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        int int75 = strBuilder27.indexOf(strMatcher73, 105);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer2.setDelimiterMatcher(strMatcher73);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test16064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16064");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendFixedWidthPadRight((int) (byte) 10, (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((float) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.insert(9, (long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.appendSeparator("\n", "!ih100.01.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.setNullText("!ih100");
        boolean boolean26 = strBuilder22.contains('h');
        int int27 = strBuilder22.capacity();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 216 + "'", int27 == 216);
    }

    @Test
    public void test16065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16065");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean48 = strBuilder39.contains(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.replaceAll(strMatcher33, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean56 = strTokenizer55.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer55, "!ih100.0");
        char[] charArray61 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder27.appendln(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ', ' ');
        char[] charArray70 = strBuilder1.getChars(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer72.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer73.setQuoteChar('!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer73.reset();
        java.lang.String str78 = strTokenizer73.toString();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[h, i, !]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str78, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test16066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16066");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder21.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(false);
        java.lang.String str50 = strTokenizer47.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder21.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean70 = strBuilder61.contains(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder59.deleteAll(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder51.append(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) strBuilder72, (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendln((float) 12);
        java.io.Reader reader78 = strBuilder77.asReader();
        reader78.reset();
        reader78.reset();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "!ih100.0" + "'", str50, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(reader78);
    }

    @Test
    public void test16067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16067");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replace(strMatcher6, "", 0, (int) '#', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("0.001hi !ih100.0\n\n", "ih100.010.0i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append((long) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceAll("!ih100.1.00", "########0.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean38 = strBuilder29.contains(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder27.deleteAll(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendPadding((int) 'a', '4');
        char[] charArray52 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.insert((int) (byte) 100, charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder16.appendln(charArray52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder16.insert(51, 171);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test16068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16068");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteAll("#########################################################################################0.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst('#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.insert(70, (long) 124);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 70");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test16069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16069");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder14.appendln((long) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList42 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder14.appendFixedWidthPadRight((java.lang.Object) strList42, 25, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder14.replaceAll('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder14.delete(33, 35);
        java.lang.String str52 = strBuilder51.getNewLineText();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test16070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16070");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('!', 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll("", "hi!");
        int int36 = strBuilder34.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.appendln(stringBuffer48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.replaceFirst(strMatcher50, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) strBuilder52, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder34.reverse();
        char[] charArray59 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a');
        char[] charArray65 = strBuilder34.getChars(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder18.insert(2, charArray59);
        java.lang.String str72 = strBuilder70.rightString(109);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.append("java.io.IOException: hi!a\nh", 60, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi#a!hi!!" + "'", str72, "hi#a!hi!!");
    }

    @Test
    public void test16071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16071");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("OException");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test16072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16072");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendln((java.lang.Object) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder57.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.replaceAll('#', 'a');
        boolean boolean75 = strBuilder55.equals((java.lang.Object) strBuilder70);
        java.lang.StringBuffer stringBuffer76 = strBuilder70.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder19.append(stringBuffer76);
        java.lang.Object obj78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append(obj78);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test16073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16073");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.deleteAll("");
        java.lang.String str41 = strBuilder28.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder28.append(0L);
        char[] charArray44 = strBuilder43.toCharArray();
        char[] charArray45 = strBuilder26.getChars(charArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder26.replaceAll('a', 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder26.append(true);
        java.lang.CharSequence charSequence51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder26.append(charSequence51);
        java.lang.String str54 = strBuilder26.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst(strMatcher79, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder76.replaceAll(strMatcher79, "");
        int int85 = strBuilder74.indexOf(strMatcher79, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder69.append(strBuilder74, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder69.replaceFirst('i', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder69.appendSeparator("33hi!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n#a\n", "hi!3\000\000\000\000!");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder26.append((java.lang.Object) strBuilder95);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "!ih0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "!ih0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[!, i, h, 0]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "!ih100.0a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "!ih100.0a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[!, i, h, 1, 0, 0, ., 0, a]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ih100.0htrue" + "'", str54, "ih100.0htrue");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test16074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16074");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder21.replaceAll(strMatcher27, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strBuilder21.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder21.appendln("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean59 = strBuilder50.contains(strMatcher58);
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendln(stringBuffer60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder50.replaceFirst(strMatcher62, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((double) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder48.appendln(strBuilder64);
        boolean boolean68 = strBuilder17.equals((java.lang.Object) strBuilder64);
        java.io.Writer writer69 = strBuilder64.asWriter();
        java.io.Writer writer71 = writer69.append('#');
        // The following exception was thrown during execution in test generation
        try {
            writer71.write("#\n!ih0\n", 84, 62);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(writer69);
        org.junit.Assert.assertNotNull(writer71);
    }

    @Test
    public void test16075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16075");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) iOException10, (int) '!', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.appendSeparator(' ', '1');
        int int24 = strBuilder4.lastIndexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder32.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder32.replaceFirst(strMatcher44, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert(0, (java.lang.Object) (byte) 1);
        boolean boolean50 = strBuilder29.equalsIgnoreCase(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder29.setLength(19);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.insert(8, (float) '4');
        int int57 = strBuilder52.indexOf("100.0#");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) strBuilder52, 111, 'i');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 37 + "'", int24 == 37);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test16076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16076");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.setCharAt((int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.ensureCapacity((int) 'h');
        java.util.Iterator<java.lang.String> strItor12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendAll(strItor12);
        int int14 = strBuilder13.length();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test16077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16077");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendPadding((int) (short) -1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("!ih");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append("StrTokenizer[4a]");
        char[] charArray27 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'e');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "100.0100.0\nStrTokenizer[4a]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "100.0100.0\nStrTokenizer[4a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[1, 0, 0, ., 0, 1, 0, 0, ., 0, \n, S, t, r, T, o, k, e, n, i, z, e, r, [, 4, a, ]]");
    }

    @Test
    public void test16078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16078");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException();
        iOException2.addSuppressed((java.lang.Throwable) iOException3);
        iOException1.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException();
        java.io.IOException iOException7 = new java.io.IOException();
        iOException6.addSuppressed((java.lang.Throwable) iOException7);
        iOException3.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException11 = new java.io.IOException("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!100!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", (java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException11.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test16079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16079");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 10);
        java.lang.Object[] objArray26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendWithSeparators(objArray26, "hi!hi!0.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.trim();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test16080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16080");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceAll("StrTokenizer[]", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendFixedWidthPadRight((int) '#', 1, '4');
        java.lang.String str39 = strBuilder36.substring((int) (byte) 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("!", "i!");
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer53.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", strMatcher55, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getIgnoredMatcher();
        int int60 = strBuilder36.lastIndexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder16.deleteAll(strMatcher59);
        boolean boolean62 = strBuilder61.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.clear();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!3" + "'", str39, "hi!3");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test16081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16081");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("", "hi!");
        int int34 = strBuilder32.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        java.util.stream.IntStream intStream40 = strBuilder39.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder42.appendln(stringBuffer52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder42.replaceFirst(strMatcher54, "hi!");
        int int57 = strBuilder39.indexOf(strMatcher54);
        int int59 = strBuilder32.indexOf(strMatcher54, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder32.replaceAll('!', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder11.appendFixedWidthPadRight((java.lang.Object) strBuilder62, (int) '!', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder11.setNewLineText("001hi 1");
        int int68 = strBuilder11.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder11.deleteAll("hi!0100");
        java.lang.StringBuffer stringBuffer71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder11.append(stringBuffer71, 34, (int) (byte) -1);
        char[] charArray75 = strBuilder74.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean80 = strTokenizer79.isEmptyTokenAsNull();
        boolean boolean81 = strTokenizer79.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer79.setIgnoredChar('.');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setQuoteMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setDelimiterString("hi!10aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa!ih\n\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer87.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder74.replaceAll(strMatcher89, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000100.0-14");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 45 + "'", int68 == 45);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!ih100.010.0#ih100.0.........................");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!ih100.010.0#ih100.0.........................");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i, h, 1, 0, 0, ., 0, 1, 0, ., 0, #, i, h, 1, 0, 0, ., 0, ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test16082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16082");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((double) ' ');
        java.io.Writer writer21 = strBuilder20.asWriter();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(writer21);
    }

    @Test
    public void test16083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16083");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.replaceAll("StrTokenizer[]", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendFixedWidthPadRight((int) '#', 1, '4');
        java.lang.String str39 = strBuilder36.substring((int) (byte) 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("!", "i!");
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer53.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher51, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", strMatcher55, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer58.getIgnoredMatcher();
        int int60 = strBuilder36.lastIndexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder16.deleteAll(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder16.append((long) 290);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder16.appendln(51);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder16.replace(72, (int) (byte) 100, "!ih7!ih100.0hi!7!ih100.0hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!3" + "'", str39, "hi!3");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test16084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16084");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("!ih100.00\n", "");
        boolean boolean27 = strBuilder25.startsWith("i!");
        int int30 = strBuilder25.lastIndexOf('.', 17);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.setCharAt(0, 'v');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder25.insert(84, (float) 210);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test16085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16085");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(29);
        char[] charArray2 = strBuilder1.toCharArray();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
    }

    @Test
    public void test16086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16086");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) '#', 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.append((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder18.replaceAll(strMatcher24, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean47 = strTokenizer46.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder18.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer46, "!ih100.0");
        int int50 = strBuilder18.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder18.appendNull();
        java.io.IOException iOException53 = new java.io.IOException();
        java.io.IOException iOException54 = new java.io.IOException();
        iOException53.addSuppressed((java.lang.Throwable) iOException54);
        java.lang.Throwable[] throwableArray56 = iOException54.getSuppressed();
        java.io.IOException iOException57 = new java.io.IOException();
        java.io.IOException iOException58 = new java.io.IOException();
        iOException57.addSuppressed((java.lang.Throwable) iOException58);
        iOException54.addSuppressed((java.lang.Throwable) iOException57);
        java.io.IOException iOException61 = new java.io.IOException("ih100.010.0i!", (java.lang.Throwable) iOException54);
        java.lang.Throwable[] throwableArray62 = iOException61.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder18.appendWithSeparators((java.lang.Object[]) throwableArray62, "hi!a\nh");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder16.appendWithSeparators((java.lang.Object[]) throwableArray62, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.replaceAll(strMatcher81, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean87 = strBuilder78.contains(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder76.deleteAll(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.appendln("hi!");
        boolean boolean94 = strBuilder68.equals(strBuilder91);
        char[] charArray95 = strBuilder91.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder66.append(charArray95, 11, 74);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 74");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 11 + "'", int50 == 11);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
    }

    @Test
    public void test16087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16087");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.io.IOException iOException53 = new java.io.IOException();
        java.io.IOException iOException54 = new java.io.IOException();
        iOException53.addSuppressed((java.lang.Throwable) iOException54);
        java.lang.Throwable[] throwableArray56 = iOException54.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.appendFixedWidthPadRight((java.lang.Object) iOException54, 0, '4');
        java.io.IOException iOException60 = new java.io.IOException((java.lang.Throwable) iOException54);
        java.io.IOException iOException61 = new java.io.IOException((java.lang.Throwable) iOException54);
        java.io.IOException iOException62 = new java.io.IOException((java.lang.Throwable) iOException54);
        java.io.IOException iOException63 = new java.io.IOException((java.lang.Throwable) iOException62);
        java.io.IOException iOException64 = new java.io.IOException((java.lang.Throwable) iOException63);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test16088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16088");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        java.io.Reader reader42 = strBuilder14.asReader();
        boolean boolean43 = reader42.markSupported();
        int int44 = reader42.read();
        boolean boolean45 = reader42.markSupported();
        reader42.reset();
        boolean boolean47 = reader42.markSupported();
        reader42.mark(212);
        boolean boolean50 = reader42.ready();
        reader42.reset();
        int int52 = reader42.read();
        int int53 = reader42.read();
        boolean boolean54 = reader42.ready();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 33 + "'", int44 == 33);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 33 + "'", int52 == 33);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 105 + "'", int53 == 105);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test16089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16089");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendSeparator("sehi!!");
        char[] charArray24 = strBuilder11.toCharArray();
        boolean boolean26 = strBuilder11.endsWith("#i4100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder38.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.append((-1.0d));
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.append((float) 100L);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.deleteAll(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.append(strBuilder61);
        int int70 = strBuilder69.capacity();
        boolean boolean71 = strBuilder11.equals(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder11.trim();
        char[] charArray75 = strBuilder72.toCharArray((int) (byte) 0, 7);
        int int76 = strBuilder72.size();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "!ih100.01sehi!!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "!ih100.01sehi!!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[!, i, h, 1, 0, 0, ., 0, 1, s, e, h, i, !, !]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 35 + "'", int70 == 35);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!ih100.");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!ih100.");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i, h, 1, 0, 0, .]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 15 + "'", int76 == 15);
    }

    @Test
    public void test16090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16090");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendln((java.lang.Object) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder19.appendSeparator(' ', 18);
        java.util.stream.IntStream intStream43 = strBuilder42.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendln(false);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test16091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16091");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        char[] charArray14 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        char[] charArray29 = strBuilder11.getChars(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder11.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.append(false);
        java.io.Writer writer34 = strBuilder33.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence37 = strBuilder33.subSequence(9, 34);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[!, i, h]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
    }

    @Test
    public void test16092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16092");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.reset(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '#', '1');
        java.lang.String str39 = strTokenizer38.toString();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str39, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test16093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16093");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        int int31 = strBuilder11.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.replaceAll('4', '!');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.appendln(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendln((int) (byte) 0);
        int int42 = strBuilder40.indexOf("!0.001hi!100.0 33.................");
        java.lang.Object[] objArray43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendWithSeparators(objArray43, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append('2');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test16094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16094");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        java.util.stream.IntStream intStream5 = strBuilder4.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.insert(0, (long) '!');
        int int11 = strBuilder8.indexOf('#', (int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendSeparator('#', (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = null;
        int int18 = strBuilder14.lastIndexOf(strMatcher16, (int) (byte) 10);
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher31);
        boolean boolean33 = strTokenizer32.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer32, "java.io.IOException: \n530.001StrTokenizer[not tokenized yet]!ih100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.setNewLineText("hi#a!hi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append((float) 83);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test16095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16095");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("i!hi!97!!!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str13 = strTokenizer12.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getQuoteMatcher();
        int int16 = strBuilder10.lastIndexOf(strMatcher14, (int) (byte) 100);
        int int18 = strBuilder10.indexOf("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder26.deleteAll(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder10.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder38.appendSeparator("falsehi!!i!#hi!\n", (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.deleteFirst("001hi 1");
        char[] charArray53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder38.appendln(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder1.appendFixedWidthPadRight((java.lang.Object) strBuilder38, 105, '#');
        java.io.IOException iOException58 = new java.io.IOException();
        java.io.IOException iOException59 = new java.io.IOException();
        java.io.IOException iOException60 = new java.io.IOException();
        iOException59.addSuppressed((java.lang.Throwable) iOException60);
        iOException58.addSuppressed((java.lang.Throwable) iOException60);
        java.io.IOException iOException63 = new java.io.IOException();
        java.io.IOException iOException64 = new java.io.IOException();
        iOException63.addSuppressed((java.lang.Throwable) iOException64);
        iOException60.addSuppressed((java.lang.Throwable) iOException64);
        java.io.IOException iOException67 = new java.io.IOException();
        java.io.IOException iOException68 = new java.io.IOException();
        java.io.IOException iOException69 = new java.io.IOException();
        iOException68.addSuppressed((java.lang.Throwable) iOException69);
        iOException67.addSuppressed((java.lang.Throwable) iOException69);
        java.io.IOException iOException72 = new java.io.IOException();
        java.io.IOException iOException73 = new java.io.IOException();
        iOException72.addSuppressed((java.lang.Throwable) iOException73);
        iOException69.addSuppressed((java.lang.Throwable) iOException73);
        java.io.IOException iOException76 = new java.io.IOException((java.lang.Throwable) iOException73);
        iOException60.addSuppressed((java.lang.Throwable) iOException73);
        java.io.IOException iOException78 = new java.io.IOException();
        java.io.IOException iOException79 = new java.io.IOException((java.lang.Throwable) iOException78);
        iOException60.addSuppressed((java.lang.Throwable) iOException78);
        java.lang.Throwable[] throwableArray81 = iOException78.getSuppressed();
        java.lang.Throwable[] throwableArray82 = iOException78.getSuppressed();
        java.lang.Throwable[] throwableArray83 = iOException78.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder38.appendWithSeparators((java.lang.Object[]) throwableArray83, "StrTokenizer[!ih100.0]hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.replace(141, 0, "java.io.IOException: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!100!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test16096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16096");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert(1, (float) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.appendFixedWidthPadRight(100, 66, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.deleteAll("false");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test16097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16097");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        iOException0.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        iOException2.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray10 = iOException6.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException6.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.lang.Throwable[] throwableArray17 = iOException15.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException19 = new java.io.IOException("0.001hi !ih100.0\n\n", (java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException18);
        iOException12.addSuppressed((java.lang.Throwable) iOException18);
        java.lang.Throwable[] throwableArray22 = iOException18.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test16098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16098");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendFixedWidthPadRight(0, (int) (byte) 0, 'h');
        int int29 = strBuilder26.lastIndexOf('a', 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.replaceAll("hi!!ih100.0", "!ih100.011\n#");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.append("h!ih100.0#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((long) 25);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test16099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16099");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean21 = strBuilder12.contains(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.append((int) (short) 0);
        java.io.Writer writer28 = writer10.append((java.lang.CharSequence) strBuilder12);
        writer10.close();
        writer10.write("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n#a\n");
        char[] charArray34 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'h', ' ');
        writer10.write(charArray34);
        writer10.write("StrTokenizer[!ih100.0]1.0");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test16100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16100");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0!ih\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('a');
        java.lang.String str4 = strTokenizer3.getContent();
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0!ih\n" + "'", str4, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0!ih\n");
    }

    @Test
    public void test16101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16101");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean11 = strBuilder2.contains(strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher10, strMatcher12);
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.reset(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        java.lang.String str22 = strTokenizer21.toString();
        java.lang.String str23 = strTokenizer21.getContent();
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#a" + "'", str23, "#a");
    }

    @Test
    public void test16102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16102");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("h100.0");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test16103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16103");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (byte) 0, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.deleteFirst('.');
        int int16 = strBuilder4.indexOf("!ih100.01");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.deleteCharAt(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) '!');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test16104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16104");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) iOException10, (int) '!', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: !ih100.0", strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.deleteFirst(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.insert((int) (short) 1, '4');
        char[] charArray28 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder19.appendln(90);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder38.deleteAll(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln('a');
        java.io.Writer writer55 = strBuilder52.asWriter();
        writer55.write((int) (short) 0);
        writer55.write((int) 'a');
        writer55.flush();
        writer55.close();
        char[] charArray64 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, 'a');
        writer55.write(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, "!ih100.0\n4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder30.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer72, "");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "i4!#java.io.IOException              ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "i4!#java.io.IOException              ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[i, 4, !, #, j, a, v, a, ., i, o, ., I, O, E, x, c, e, p, t, i, o, n,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(writer55);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test16105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16105");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("!i");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("falsehi!!i!#hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('v');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterChar('3');
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test16106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16106");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        boolean boolean25 = reader24.ready();
        reader24.reset();
        reader24.mark(4);
        int int29 = reader24.read();
        int int30 = reader24.read();
        reader24.close();
        reader24.reset();
        boolean boolean33 = reader24.ready();
        int int34 = reader24.read();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 33 + "'", int29 == 33);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 105 + "'", int30 == 105);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 33 + "'", int34 == 33);
    }

    @Test
    public void test16107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16107");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setLength(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendSeparator("h", "hi!!ih100.0#a\nfalse!!!!!!!!!!!!!!!!");
        java.lang.Iterable<java.lang.String> strIterable23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendWithSeparators(strIterable23, "hi!#java.io.IOException              ");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendln("!ih100.0\n!ih100.0011.04444444444444444444444444444444444444444444444444432!ih100.0\n!ih100.00hi!\n!ih100.014\n", (int) (byte) 100, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test16108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16108");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.appendFixedWidthPadRight((java.lang.Object) iOException10, (int) '!', ' ');
        java.lang.String str20 = strBuilder4.toString();
        java.util.stream.IntStream intStream21 = strBuilder4.codePoints();
        boolean boolean23 = strBuilder4.startsWith("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        int int39 = strBuilder28.indexOf(strMatcher33, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder28.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln((double) 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((float) (byte) 100);
        boolean boolean64 = strBuilder51.equalsIgnoreCase(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.insert(7, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.replaceAll(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder74.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append((float) (byte) 100);
        boolean boolean85 = strBuilder72.equalsIgnoreCase(strBuilder84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder72.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder63.append(strBuilder87);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder42.appendln(strBuilder87);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.appendSeparator("java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder89.appendln((double) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder89.append(21);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder4.appendln(strBuilder89);
        int int99 = strBuilder96.lastIndexOf("#########################################################################################0.0\n", 0);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!#java.io.IOException              " + "'", str20, "hi!#java.io.IOException              ");
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test16109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16109");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher35, strMatcher37);
        writer24.write(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        java.util.stream.IntStream intStream55 = strBuilder54.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append('#');
        int int59 = strBuilder57.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.append((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder67.replaceAll(strMatcher70, "");
        int int76 = strBuilder65.indexOf(strMatcher70, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder65.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int83 = strBuilder79.lastIndexOf(strMatcher81, 1);
        int int84 = strBuilder60.indexOf(strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("sehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder60.appendAll((java.util.Iterator<java.lang.String>) strTokenizer86);
        char[] charArray88 = strBuilder87.toCharArray();
        char[] charArray89 = strBuilder41.getChars(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray89);
        // The following exception was thrown during execution in test generation
        try {
            writer24.write(charArray89, 109, 30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 30");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(intStream55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 6 + "'", int84 == 6);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "falsehi!sehi!!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "falsehi!sehi!!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[f, a, l, s, e, h, i, !, s, e, h, i, !, !]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "falsehi!sehi!!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "falsehi!sehi!!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[f, a, l, s, e, h, i, !, s, e, h, i, !, !]");
    }

    @Test
    public void test16110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16110");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        boolean boolean56 = strBuilder1.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder1.append(strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendFixedWidthPadRight(25, 11, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.deleteFirst("StrTokenizer[!ih100.0\n!ih100.0#]");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test16111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16111");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append('4');
        java.util.stream.IntStream intStream38 = strBuilder37.chars();
        char[] charArray42 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.append(stringBuffer65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int68 = strBuilder66.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder37.insert(4, charArray42);
        java.util.stream.IntStream intStream73 = strBuilder37.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder37.setNewLineText("false18.");
        int int78 = strBuilder37.lastIndexOf('a', 148);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(intStream73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 5 + "'", int78 == 5);
    }

    @Test
    public void test16112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16112");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        int int31 = strBuilder11.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.replaceAll('4', '!');
        boolean boolean36 = strBuilder11.contains("hi!!ih100.0");
        java.lang.String str37 = strBuilder11.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder11.append(206);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test16113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16113");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("\n530.001hi!");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test16114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16114");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.lang.Object obj53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendFixedWidthPadLeft(obj53, (int) (byte) 1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendSeparator('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceAll(' ', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln((long) 25);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.reverse();
        boolean boolean66 = strBuilder63.startsWith("4alsei!100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.append(52);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder63.replaceFirst('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.setNullText("!ih100.010.052.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) 10L);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test16115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16115");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        boolean boolean25 = reader24.ready();
        reader24.close();
        long long28 = reader24.skip((long) 100);
        char[] charArray31 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.append(stringBuffer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int57 = strBuilder55.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '4', 'h');
        int int64 = reader24.read(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray31);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 18L + "'", long28 == 18L);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer65);
    }

    @Test
    public void test16116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16116");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        writer79.close();
        java.io.Writer writer82 = writer79.append('f');
        writer79.write(34);
        java.io.Writer writer86 = writer79.append('1');
        writer79.write(35);
        writer79.close();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer82);
        org.junit.Assert.assertNotNull(writer86);
    }

    @Test
    public void test16117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16117");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        int int23 = strBuilder21.indexOf("");
        java.lang.String str24 = strBuilder21.getNullText();
        java.util.stream.IntStream intStream25 = strBuilder21.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendNull();
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        char[] charArray39 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        java.util.stream.IntStream intStream45 = strBuilder44.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.deleteFirst(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer36.reset(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer34.reset(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        java.util.stream.IntStream intStream59 = strBuilder58.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteFirst(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendSeparator("", "!ih");
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.deleteAll(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'h', 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer86, "kenizer");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.appendln(true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder88.insert((int) 'f', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 102");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(intStream59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test16118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16118");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('#', '#');
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.append(charArray75);
        int int79 = reader53.read(charArray75);
        long long81 = reader53.skip((long) (short) 10);
        long long83 = reader53.skip((long) 18);
        reader53.close();
        int int85 = reader53.read();
        boolean boolean86 = reader53.markSupported();
        boolean boolean87 = reader53.ready();
        reader53.close();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10L + "'", long81 == 10L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 8L + "'", long83 == 8L);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test16119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16119");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln('.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean61 = strBuilder52.contains(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder50.deleteAll(strMatcher60);
        boolean boolean63 = strBuilder36.contains(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer24.setQuoteMatcher(strMatcher60);
        java.lang.String str65 = strTokenizer64.previousToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer64);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.replace(strMatcher67, "!ih100.0\n!ih100.0#", 0, 16, 16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer75.setIgnoredChar(' ');
        java.lang.String str78 = strTokenizer75.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer75.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("falsehi!#hi!", strMatcher79);
        int int82 = strBuilder72.lastIndexOf(strMatcher79, 17);
        int int84 = strBuilder72.lastIndexOf("okenizer[not");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test16120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16120");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("hi!", "StrTokenizer[not tokenized yet]");
        java.io.Writer writer25 = strBuilder24.asWriter();
        int int26 = strBuilder24.capacity();
        int int28 = strBuilder24.lastIndexOf("!ih100.04\nStrTokenizer[not tokenized yet]");
        int int29 = strBuilder24.size();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(writer25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 78 + "'", int26 == 78);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 39 + "'", int29 == 39);
    }

    @Test
    public void test16121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16121");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!46                    1");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        java.util.stream.IntStream intStream7 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(stringBuffer19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder9.replaceFirst(strMatcher21, "hi!");
        int int24 = strBuilder6.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('#', '#');
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.append(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.replace(0, 52, "hi!!ih100.0#a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder6.append((java.lang.CharSequence) strBuilder54, 2, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        boolean boolean59 = strBuilder1.equalsIgnoreCase(strBuilder57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.reset("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.deleteAll(strMatcher65);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test16122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16122");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((double) 30);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean14 = strBuilder5.contains(strMatcher13);
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder5.appendln(stringBuffer15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder5.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll("", "hi!");
        java.lang.String str35 = strBuilder30.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.append("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.append((float) 11);
        int int46 = strBuilder44.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean57 = strBuilder48.contains(strMatcher56);
        java.lang.StringBuffer stringBuffer58 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder48.appendln(stringBuffer58);
        char[] charArray62 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher72);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher74);
        java.lang.String[] strArray76 = strTokenizer75.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder48.appendAll((java.lang.Object[]) strArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder44.appendAll((java.lang.Object[]) strArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder5.appendAll((java.lang.Object[]) strArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder1.appendAll((java.lang.Object[]) strArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder80.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.appendFixedWidthPadLeft(92, 1, '.');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = strBuilder80.substring((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "!" + "'", str35, "!");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test16123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16123");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.deleteAll(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("hi!");
        boolean boolean49 = strBuilder23.equals(strBuilder46);
        char[] charArray50 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder21.appendln(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.setCharAt((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendln('4');
        boolean boolean59 = strBuilder51.contains('a');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test16124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16124");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("i!");
        int int17 = strBuilder14.indexOf('#', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.appendSeparator("!hi!StrTokenizer[hi!]", "!i0.001hi!hi!30.001hi 1h100.0a#!4a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer24.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean46 = strBuilder37.contains(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer25.setQuoteMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer25.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer25.setDelimiterString("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer25.getDelimiterMatcher();
        int int54 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer25.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList57 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder22.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList57, "StrTokenizer[!ih00.0].0hi\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test16125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16125");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendFixedWidthPadRight((int) (byte) 10, (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((float) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.insert(9, (long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append((float) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append('!');
        boolean boolean28 = strBuilder24.contains('a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test16126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16126");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceFirst(strMatcher35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        boolean boolean55 = strBuilder50.endsWith("!ih100.0");
        char char57 = strBuilder50.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        int int63 = strBuilder50.indexOf('#', 100);
        boolean boolean64 = strBuilder38.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder50.appendSeparator('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        java.util.stream.IntStream intStream73 = strBuilder72.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder72.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder50.append((java.lang.Object) strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln((double) 43);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + char57 + "' != '" + '!' + "'", char57 == '!');
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(intStream73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test16127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16127");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        java.lang.String str21 = strBuilder7.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList26 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((float) (byte) 100);
        java.lang.CharSequence charSequence42 = strBuilder39.subSequence(1, (int) (short) 1);
        boolean boolean44 = strBuilder39.endsWith("!ih100.0");
        char char46 = strBuilder39.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder39.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.append("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteAll('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator('!', '#');
        boolean boolean58 = strBuilder56.contains('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder60.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder60.deleteAll("");
        char[] charArray73 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher83);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray73);
        char[] charArray88 = strBuilder70.getChars(charArray73);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher90);
        java.lang.String str92 = strTokenizer91.nextToken();
        java.lang.String str93 = strTokenizer91.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder56.appendAll((java.util.Iterator<java.lang.String>) strTokenizer91);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder7.appendln(strBuilder56);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder95.delete(85, 206);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + char46 + "' != '" + '!' + "'", char46 == '!');
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "#" + "'", str92, "#");
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test16128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16128");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        boolean boolean17 = strBuilder15.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setEmptyTokenAsNull(false);
        java.lang.String str40 = strTokenizer37.next();
        java.lang.String str41 = strTokenizer37.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer37.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        java.lang.String str45 = strTokenizer44.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer44, "00.00.");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer44.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "!ih100.0" + "'", str40, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "!ih100.0" + "'", str41, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "!ih100.0" + "'", str45, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer49);
    }

    @Test
    public void test16129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16129");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("hi!\n", "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.insert(7, (java.lang.Object) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder16.replaceAll("hi", "hi!a\n!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test16130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16130");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("i!");
        int int16 = strBuilder12.indexOf("!ih100.00");
        int int17 = strBuilder12.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("", "hi!");
        int int34 = strBuilder32.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean57 = strBuilder48.contains(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher42, strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder36.replaceAll(strMatcher42, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strBuilder36.asTokenizer();
        boolean boolean62 = strTokenizer61.isIgnoreEmptyTokens();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder32.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList63, "falsehi!#hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder12.appendAll((java.lang.Iterable<java.lang.String>) strList63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder12.append((long) 78);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder12.append(14);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test16131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16131");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder1.append((double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.setNullText("hi!!ih100.0#a");
        java.lang.Object obj30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln(obj30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendSeparator("hi!hi!0.00", 25);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.appendln("h!ih100.022");
        int int37 = strBuilder29.size();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 43 + "'", int37 == 43);
    }

    @Test
    public void test16132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16132");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.append("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder37.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setEmptyTokenAsNull(false);
        java.lang.String str44 = strTokenizer41.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer41.setDelimiterMatcher(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setIgnoredChar('a');
        char[] charArray55 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer50.reset(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer67.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setDelimiterString("h");
        char[] charArray73 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray73);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer80.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher78, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer68.setTrimmerMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder23.replaceAll(strMatcher82, "!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strBuilder86.asTokenizer();
        java.util.stream.IntStream intStream88 = strBuilder86.codePoints();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "!ih100.0" + "'", str44, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(intStream88);
    }

    @Test
    public void test16133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16133");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        char[] charArray17 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.insert((int) (byte) 1, charArray17);
        java.lang.Object[] objArray21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.appendAll(objArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('1');
        // The following exception was thrown during execution in test generation
        try {
            char char27 = strBuilder22.charAt(28);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 28");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test16134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16134");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        java.lang.String[] strArray27 = strTokenizer24.getTokenArray();
        int int28 = strTokenizer24.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer24.setDelimiterChar('h');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = strTokenizer30.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test16135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16135");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(35);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(stringBuffer19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.append("");
        java.lang.String str23 = strBuilder22.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder7.appendFixedWidthPadLeft((java.lang.Object) strBuilder22, 0, '.');
        java.lang.String str29 = strBuilder7.midString(69, 47);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test16136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16136");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("izer[!ih100.0]");
    }

    @Test
    public void test16137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16137");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.replaceAll(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strBuilder18.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setEmptyTokenAsNull(false);
        java.lang.String str25 = strTokenizer22.next();
        java.lang.String str26 = strTokenizer22.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer22.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder30.replaceAll(strMatcher36, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer22.setTrimmerMatcher(strMatcher36);
        java.lang.String[] strArray56 = strTokenizer22.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer22.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer5.setQuoteMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer5.setDelimiterChar('a');
        java.util.List<java.lang.String> strList61 = strTokenizer5.getTokenList();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "!ih100.0" + "'", str25, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "!ih100.0" + "'", str26, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strList61);
    }

    @Test
    public void test16138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16138");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int12 = strBuilder6.lastIndexOf(strMatcher10, 2);
        boolean boolean14 = strBuilder6.contains('#');
        char[] charArray15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder6.appendln(charArray15, 17, 12);
        boolean boolean20 = strBuilder18.endsWith("!ih100.0#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.clear();
        boolean boolean23 = strBuilder21.contains('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.insert(0, 'a');
        int int27 = strBuilder21.size();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test16139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16139");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strBuilder14.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder28.deleteAll(strMatcher38);
        boolean boolean41 = strBuilder14.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer2.setQuoteMatcher(strMatcher38);
        java.lang.String str43 = strTokenizer42.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setTrimmerMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(stringBuffer59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean71 = strBuilder62.contains(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder62.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder62.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder62.replaceAll(strMatcher78, "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.replaceAll(strMatcher78, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer42.setDelimiterMatcher(strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setIgnoredChar('4');
        java.util.List<java.lang.String> strList86 = strTokenizer83.getTokenList();
        java.util.List<java.lang.String> strList87 = strTokenizer83.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer83.setDelimiterString("");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer83.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test16140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16140");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        boolean boolean56 = strBuilder1.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher67, strMatcher69);
        boolean boolean71 = strBuilder1.contains(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.trim();
        int int77 = strBuilder74.indexOf("java.io.IOException: hi!hi!.");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test16141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16141");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNullText("java.io.IOException");
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder25.deleteFirst(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append(53);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test16142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16142");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(stringBuffer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.setLength(102);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.setNullText("org.apach");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendSeparator('#', 3);
        int int23 = strBuilder17.indexOf("", 40);
        int int25 = strBuilder17.indexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        int int42 = strBuilder40.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.replaceFirst(strMatcher56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.appendFixedWidthPadLeft((java.lang.Object) strBuilder58, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.insert(1, (float) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.append((float) 12);
        int int71 = strBuilder70.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder17.append((java.lang.Object) int71);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 40 + "'", int23 == 40);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 16 + "'", int71 == 16);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test16143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16143");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        boolean boolean47 = strBuilder45.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder27.append((java.lang.CharSequence) strBuilder45);
        java.util.stream.IntStream intStream53 = strBuilder45.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder4.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.append((long) 23);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln(stringBuffer60);
        java.lang.String str63 = strBuilder61.rightString((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.append(strBuilder64, 30, 44);
        java.lang.String str70 = strBuilder67.midString(104, 54);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder57.append(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(intStream53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "!ih100.00\n" + "'", str63, "!ih100.00\n");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test16144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16144");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        int int19 = strBuilder18.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder43.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder43.replaceFirst(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.appendln((java.lang.Object) (short) 1);
        java.lang.String str63 = strBuilder61.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.deleteAll("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.insert((int) (byte) 1, (long) (short) 0);
        int int70 = strBuilder68.indexOf("sehi!!");
        boolean boolean72 = strBuilder68.contains("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder21.append(strBuilder68, (int) (byte) 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder68.appendFixedWidthPadRight(44, 48, 'v');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder68.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.setCharAt(0, 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.appendSeparator("falsehi!0a", "\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test16145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16145");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer1.setTrimmerMatcher(strMatcher6);
        java.lang.String[] strArray12 = strTokenizer1.getTokenArray();
        java.lang.String str13 = strTokenizer1.next();
        java.lang.Object obj14 = strTokenizer1.clone();
        java.lang.String str15 = strTokenizer1.toString();
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#" + "'", str13, "#");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[#]" + "'", str15, "StrTokenizer[#]");
    }

    @Test
    public void test16146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16146");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'h');
        int int3 = strTokenizer2.size();
        char[] charArray6 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        char[] charArray16 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer13.reset(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer11.reset(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer2.setQuoteMatcher(strMatcher31);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test16147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16147");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("i!");
        int int16 = strBuilder12.indexOf("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer20.setQuoteMatcher(strMatcher40);
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer43.reset(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder12.insert(12, charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst('!', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.insert(0, (float) 11L);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!\n10hi!\000\000\000\000\000\000\000\000\000hi!97!!!!!!!!!!!!!!!!!");
        boolean boolean63 = strBuilder54.equals((java.lang.Object) "hi!\n10hi!\000\000\000\000\000\000\000\000\000hi!97!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test16148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16148");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        int int45 = strBuilder18.indexOf('#');
        int int46 = strBuilder18.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder18.appendln((long) 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.setNewLineText("");
        java.lang.String str51 = strBuilder48.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln((float) 74);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.append("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst("!ih100.0", "!ih100.0");
        int int66 = strBuilder60.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        char[] charArray72 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, 'a', 'i');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder55.appendln(charArray72, 65, 76);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 76");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[h, i, !, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ]]");
        org.junit.Assert.assertNotNull(strTokenizer73);
    }

    @Test
    public void test16149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16149");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean4 = strTokenizer3.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setQuoteMatcher(strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer11.setQuoteMatcher(strMatcher31);
        char[] charArray37 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer34.reset(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer3.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getTrimmerMatcher();
        boolean boolean48 = strTokenizer46.hasNext();
        int int49 = strTokenizer46.size();
        java.lang.String str50 = strTokenizer46.next();
        boolean boolean51 = strTokenizer46.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#" + "'", str50, "#");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test16150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16150");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: ih100.010.0i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!ih100.00\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'h');
        java.lang.String str10 = strTokenizer9.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer9.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer6.setTrimmerMatcher(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("i!1", strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer1.setTrimmerMatcher(strMatcher11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = strTokenizer14.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "!i" + "'", str10, "!i");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
    }

    @Test
    public void test16151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16151");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder2.replaceAll(strMatcher8, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder2.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder2.appendln("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.appendln(stringBuffer41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder31.replaceFirst(strMatcher43, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((double) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder29.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("rTokenizer[!ih100.0]\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.replaceFirst(strMatcher50, "StrTokenizer[not tokenvized yet]h!ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("!ih1falsehi!0111111111100.0hi!hi!10aaaaaaaa", strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.setIgnoredChar('2');
        java.lang.String str56 = strTokenizer55.next();
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "!ih1falsehi!0111111111100.0hi!hi!10aaaaaaaa" + "'", str56, "!ih1falsehi!0111111111100.0hi!hi!10aaaaaaaa");
    }

    @Test
    public void test16152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16152");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceAll("", "hi!");
        int int26 = strBuilder24.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher34, strMatcher48);
        int int51 = strBuilder28.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder28.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher68, strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer56.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder53.deleteFirst(strMatcher73);
        boolean boolean75 = strBuilder1.contains(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder1.replaceFirst('h', '1');
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        int int80 = strBuilder78.lastIndexOf(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test16153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16153");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("java.io.IOException: !ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        java.lang.String str19 = strBuilder16.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoredChar('a');
        int int23 = strTokenizer20.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer20.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean46 = strBuilder37.contains(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("i!", strMatcher45, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer20.setQuoteMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("falsehi!", strMatcher4, strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer1.setDelimiterMatcher(strMatcher4);
        int int53 = strTokenizer52.size();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 13 + "'", int53 == 13);
    }

    @Test
    public void test16154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16154");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: !ih100.0");
        java.lang.Object[] objArray2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendWithSeparators(objArray2, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.insert(0, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder19.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer23.getTrimmerMatcher();
        int int27 = strBuilder7.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder7.insert(15, 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder32.appendFixedWidthPadRight((int) '#', 1, '4');
        java.lang.String str48 = strBuilder45.substring((int) (byte) 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendSeparator("!", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strBuilder63.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer69.setIgnoredMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder45.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder7.replaceFirst(strMatcher70, "!ih100.0097\n16\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append((double) '4');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!3" + "'", str48, "hi!3");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test16155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16155");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.appendln((float) (byte) 10);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        iOException17.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray25 = iOException21.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.appendWithSeparators((java.lang.Object[]) throwableArray25, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder14.insert(10, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder14.clear();
        int int33 = strBuilder14.lastIndexOf('5');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test16156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16156");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder33.deleteAll(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("hi!");
        boolean boolean51 = strBuilder25.equals(strBuilder48);
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder23.appendln(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder1.append(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0\n!ih100.0#", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer57);
        int int61 = strBuilder58.indexOf("falsehi!0a\n", 19);
        boolean boolean63 = strBuilder58.equals((java.lang.Object) ".0");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.delete(20, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteAll('.');
        java.io.Reader reader69 = strBuilder68.asReader();
        long long71 = reader69.skip((long) 37);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(reader69);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 19L + "'", long71 == 19L);
    }

    @Test
    public void test16157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16157");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer27.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer27.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer27.setQuoteChar('.');
        int int38 = strTokenizer37.nextIndex();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test16158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16158");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer21.reset();
        int int23 = strTokenizer21.previousIndex();
        boolean boolean24 = strTokenizer21.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer21.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test16159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16159");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer24.setQuoteMatcher(strMatcher44);
        char[] charArray50 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer47.reset(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer54, "!ih100.00");
        java.lang.String str57 = strTokenizer54.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer54.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#a" + "'", str57, "#a");
        org.junit.Assert.assertNotNull(strMatcher58);
    }

    @Test
    public void test16160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16160");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer9.setDelimiterChar('!');
        java.util.List<java.lang.String> strList14 = strTokenizer13.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer13.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strMatcher15);
    }

    @Test
    public void test16161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16161");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("hi!");
        boolean boolean27 = strBuilder1.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder1.append(1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteAll('1');
        int int34 = strBuilder29.indexOf("!ih100.0StrTokenizer[!ih100.0]hi!hi!a", 244);
        java.io.Writer writer35 = strBuilder29.asWriter();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n", '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList41 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendAll((java.lang.Iterable<java.lang.String>) strList41);
        java.util.stream.IntStream intStream43 = strBuilder42.chars();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
    }

    @Test
    public void test16162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16162");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        java.lang.String str17 = strTokenizer16.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setQuoteChar('.');
        int int20 = strTokenizer16.size();
        java.lang.String[] strArray21 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer16.setDelimiterChar('5');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str17, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test16163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16163");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[!]");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher2);
    }

    @Test
    public void test16164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16164");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.replaceAll(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setEmptyTokenAsNull(false);
        java.lang.String str32 = strTokenizer29.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder3.appendAll((java.util.Iterator<java.lang.String>) strTokenizer29);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder41.deleteAll(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder33.append(strBuilder41);
        java.io.IOException iOException55 = new java.io.IOException();
        java.io.IOException iOException56 = new java.io.IOException();
        iOException55.addSuppressed((java.lang.Throwable) iOException56);
        java.lang.Throwable[] throwableArray58 = iOException56.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.appendFixedWidthPadRight((java.lang.Object) iOException56, 0, '4');
        boolean boolean62 = strBuilder1.equals(strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.appendPadding((int) (byte) 100, 'h');
        int int66 = strBuilder65.capacity();
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "!ih100.0" + "'", str32, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 216 + "'", int66 == 216);
    }

    @Test
    public void test16165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16165");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer79.append('a');
        writer81.flush();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test16166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16166");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("#", '2', '3');
    }

    @Test
    public void test16167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16167");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('#', '#');
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.append(charArray75);
        int int79 = reader53.read(charArray75);
        boolean boolean80 = reader53.markSupported();
        reader53.mark(2);
        reader53.close();
        boolean boolean84 = reader53.ready();
        boolean boolean85 = reader53.markSupported();
        reader53.mark(206);
        java.nio.CharBuffer charBuffer88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int89 = reader53.read(charBuffer88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test16168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16168");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 10);
        char[] charArray29 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        java.util.stream.IntStream intStream35 = strBuilder34.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.deleteFirst(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.insert(6, charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln("0.001hi!hi!30.001hi 1");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        boolean boolean62 = strBuilder49.equalsIgnoreCase(strBuilder61);
        java.lang.String str64 = strBuilder61.leftString(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.replaceAll("i!hi!97!!!", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.appendNull();
        java.lang.String str71 = strBuilder68.midString((int) (byte) 100, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.insert(0, "!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder68.deleteAll("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteAll("!ih100.00\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder44.appendFixedWidthPadLeft((java.lang.Object) strBuilder76, 30, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder44.append("hi!97!!!!!!!!!!!!!!!!!");
        int int86 = strBuilder83.lastIndexOf('a', 15);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "!" + "'", str64, "!");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 11 + "'", int86 == 11);
    }

    @Test
    public void test16169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16169");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder19.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder7.replace(strMatcher25, "hi!3", 0, 0, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setLength((int) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append(false);
        java.io.IOException iOException37 = new java.io.IOException();
        java.io.IOException iOException38 = new java.io.IOException();
        java.io.IOException iOException39 = new java.io.IOException();
        iOException38.addSuppressed((java.lang.Throwable) iOException39);
        iOException37.addSuppressed((java.lang.Throwable) iOException39);
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException();
        iOException42.addSuppressed((java.lang.Throwable) iOException43);
        iOException39.addSuppressed((java.lang.Throwable) iOException43);
        java.io.IOException iOException46 = new java.io.IOException((java.lang.Throwable) iOException43);
        java.lang.Throwable[] throwableArray47 = iOException43.getSuppressed();
        java.io.IOException iOException48 = new java.io.IOException("!ih100.00\n", (java.lang.Throwable) iOException43);
        java.lang.Throwable[] throwableArray49 = iOException48.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder35.appendAll((java.lang.Object[]) throwableArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.append('.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0\n!ih100.0#", 'f', 'f');
        boolean boolean58 = strTokenizer57.isEmptyTokenAsNull();
        boolean boolean59 = strTokenizer57.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer57, "!!!!!!!!!!");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test16170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16170");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.lang.String str6 = strBuilder4.substring((int) (byte) 1);
        int int8 = strBuilder4.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.append(false);
        boolean boolean12 = strBuilder10.endsWith("!ih100.04\nStrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append((float) 100L);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.deleteAll(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder10.append(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder10.appendSeparator("!ia100.00\nStrTokenizer[!ih100.0]1.0", "!32\n1.0\n");
        int int41 = strBuilder10.length();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "i!" + "'", str6, "i!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 63 + "'", int41 == 63);
    }

    @Test
    public void test16171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16171");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("\n\n", '!', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setQuoteChar(' ');
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test16172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16172");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendSeparator("falsehi!01111111111", 16);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder11.minimizeCapacity();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test16173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16173");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceAll("", "hi!");
        int int26 = strBuilder24.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder24.appendFixedWidthPadLeft((java.lang.Object) strBuilder42, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((long) '4');
        boolean boolean50 = strBuilder9.equals((java.lang.Object) strBuilder47);
        int int52 = strBuilder47.lastIndexOf('1');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test16174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16174");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!97!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.replaceAll(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean26 = strBuilder17.contains(strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11, strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.replaceAll(strMatcher11, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher37, strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder31.replaceAll(strMatcher37, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean60 = strTokenizer59.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder31.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer59, "!ih100.0");
        char[] charArray65 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder31.appendln(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ', ' ');
        char[] charArray74 = strBuilder5.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, '#', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ', '1');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer2.setIgnoredMatcher(strMatcher81);
        boolean boolean83 = strTokenizer82.hasNext();
        java.lang.Object obj84 = strTokenizer82.clone();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[h, i, !]");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test16175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16175");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.String str5 = iOException4.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str5, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test16176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16176");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", "!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean25 = strBuilder16.contains(strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher10, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder4.replaceAll(strMatcher10, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean33 = strTokenizer32.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder4.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer32, "!ih100.0");
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder4.appendln(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer2.setIgnoredMatcher(strMatcher44);
        boolean boolean46 = strTokenizer2.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer2.reset("4a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer2.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer2.setDelimiterChar('i');
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
    }

    @Test
    public void test16177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16177");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln((long) (short) 1);
        java.lang.String str31 = strBuilder30.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(1, "");
        java.lang.String str36 = strBuilder34.leftString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceAll("java.io.IOException", "");
        boolean boolean41 = strBuilder39.endsWith("!ih100.0100.0!\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\na0!iheslaf1\n" + "'", str36, "\na0!iheslaf1\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test16178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16178");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        boolean boolean21 = strBuilder18.startsWith("java.io.IOException: !ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        int int67 = strBuilder41.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer25.setIgnoredMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer68);
        boolean boolean70 = strTokenizer68.hasNext();
        java.lang.String str71 = strTokenizer68.previous();
        java.lang.String str72 = strTokenizer68.getContent();
        boolean boolean73 = strTokenizer68.isEmptyTokenAsNull();
        java.lang.String str74 = strTokenizer68.toString();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "StrTokenizer[hi!]" + "'", str74, "StrTokenizer[hi!]");
    }

    @Test
    public void test16179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16179");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(171);
    }

    @Test
    public void test16180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16180");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        writer79.close();
        java.io.Writer writer82 = writer79.append(' ');
        writer82.write("hi!hi!97!!");
        writer82.flush();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer82);
    }

    @Test
    public void test16181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16181");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        boolean boolean21 = strBuilder18.startsWith("java.io.IOException: !ih100.0");
        java.util.stream.IntStream intStream22 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(2, (java.lang.Object) "i!");
        int int28 = strBuilder18.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder18.appendln(111);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test16182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16182");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        java.lang.String str21 = strBuilder15.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder15.append(stringBuffer47);
        java.lang.String str51 = strBuilder48.midString(2, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln((int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.appendFixedWidthPadRight(124, 30, ' ');
        // The following exception was thrown during execution in test generation
        try {
            char char59 = strBuilder53.charAt(98);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 98");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "h" + "'", str21, "h");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test16183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16183");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!hi!StrTokenizer[hi!]");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test16184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16184");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.append((double) 11);
        java.lang.String str25 = strBuilder11.rightString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder33.deleteAll(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln("hi!");
        java.lang.String str53 = strBuilder50.midString((int) 'a', (int) (byte) 100);
        boolean boolean54 = strBuilder11.equalsIgnoreCase(strBuilder50);
        java.lang.String str57 = strBuilder50.midString((int) '#', 109);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendFixedWidthPadLeft(80, (int) (short) 1, '2');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("001hi 115\n");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "!ih100.0StrTokenizer[!ih100.0]11.0" + "'", str25, "!ih100.0StrTokenizer[!ih100.0]11.0");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test16185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16185");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        boolean boolean11 = strBuilder1.endsWith("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        java.lang.String str28 = strBuilder23.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.replaceFirst(strMatcher32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder1.appendln(strBuilder23, 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        int int56 = strBuilder50.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder50.appendFixedWidthPadRight(0, (int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder65.replaceAll(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strBuilder75.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setEmptyTokenAsNull(false);
        boolean boolean82 = strTokenizer81.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder50.insert((int) (byte) 0, (java.lang.Object) boolean82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceAll('#', '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n10", 'h');
        java.util.List<java.lang.String> strList90 = strTokenizer89.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder83.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList90, "i!");
        boolean boolean93 = strBuilder38.equalsIgnoreCase(strBuilder92);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder92.appendln(strBuilder94);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "!" + "'", str28, "!");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test16186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16186");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.reset("StrTokenizer[!ih100.0]");
        int int25 = strTokenizer15.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer15.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setQuoteChar('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer46.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setIgnoredMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.reset("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer52.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer30.setTrimmerMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer30.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setIgnoredChar('2');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
    }

    @Test
    public void test16187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16187");
        java.io.IOException iOException1 = new java.io.IOException("java.io.IOException");
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException("!ih100.0#a", (java.lang.Throwable) iOException5);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException5);
        iOException1.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException15);
        iOException1.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.String str20 = iOException19.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "java.io.IOException: java.io.IOException: java.io.IOException" + "'", str20, "java.io.IOException: java.io.IOException: java.io.IOException");
    }

    @Test
    public void test16188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16188");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0100.0\n.");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.junit.Assert.assertNotNull(strTokenizer2);
    }

    @Test
    public void test16189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16189");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[!ih100.0]", strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('#');
        boolean boolean7 = strTokenizer4.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setQuoteChar('4');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test16190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16190");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        int int16 = strBuilder15.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('#', '#');
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.append(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder32.appendPadding((int) (short) 1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder53.deleteAll(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((int) (byte) 10);
        char[] charArray75 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst(strMatcher78, "");
        java.util.stream.IntStream intStream81 = strBuilder80.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.deleteFirst(strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder69.insert(6, charArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder44.insert(0, charArray75);
        int int90 = strBuilder44.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder44.appendPadding((int) (byte) -1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder94.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder15.append(strBuilder94);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(intStream81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 20 + "'", int90 == 20);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test16191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16191");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean12 = strBuilder3.contains(strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher11, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher11, strMatcher15);
        boolean boolean17 = strTokenizer16.hasNext();
        boolean boolean18 = strTokenizer16.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test16192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16192");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setTrimmerMatcher(strMatcher5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test16193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16193");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.replaceAll('#', 'a');
        boolean boolean35 = strBuilder15.equals((java.lang.Object) strBuilder30);
        java.lang.StringBuffer stringBuffer36 = strBuilder30.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder30.replaceFirst(strMatcher41, " ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln((double) 19L);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.replaceAll(strMatcher66, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean72 = strBuilder63.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder51.replaceAll(strMatcher57, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean80 = strTokenizer79.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder51.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer79, "!ih100.0");
        char[] charArray85 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder51.appendln(charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray85);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("0.001hi \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, strMatcher95);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder49.appendln(charArray85, (int) '#', 54);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 54");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(stringBuffer36);
        org.junit.Assert.assertEquals(stringBuffer36.toString(), "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strMatcher95);
    }

    @Test
    public void test16194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16194");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        int int19 = strBuilder16.lastIndexOf("!ih100.0", 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setNewLineText(".001hi !ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.trim();
        java.lang.Object obj44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln(obj44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer48.setQuoteMatcher(strMatcher68);
        char[] charArray74 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer71.reset(charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder43.replaceFirst(strMatcher82, "falsehi!#hi!");
        int int86 = strBuilder26.lastIndexOf(strMatcher82, 106);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test16195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16195");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer79.append('a');
        writer81.write("hi!#java.io.IOException              ");
        writer81.flush();
        java.io.Writer writer86 = writer81.append('1');
        java.io.Writer writer88 = writer81.append('!');
        writer81.close();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
        org.junit.Assert.assertNotNull(writer86);
        org.junit.Assert.assertNotNull(writer88);
    }

    @Test
    public void test16196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16196");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int2 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendFixedWidthPadRight((int) '.', 22, ' ');
        boolean boolean8 = strBuilder6.contains("hi!!ih100.0#a");
        java.io.Writer writer9 = strBuilder6.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strBuilder21.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setEmptyTokenAsNull(false);
        java.lang.String str28 = strTokenizer25.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer25.setDelimiterMatcher(strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer37.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean59 = strBuilder50.contains(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer38.setQuoteMatcher(strMatcher58);
        char[] charArray64 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer61.reset(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray64);
        int int75 = strMatcher35.isMatch(charArray64, (int) ' ', 11, (int) (short) 1);
        writer9.write(charArray64);
        writer9.write("f0alsehi!1\n10");
        writer9.close();
        java.io.Writer writer81 = writer9.append('1');
        java.io.Writer writer83 = writer9.append('i');
        writer83.write("hi!##a");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "!ih100.0" + "'", str28, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(writer81);
        org.junit.Assert.assertNotNull(writer83);
    }

    @Test
    public void test16197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16197");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        java.lang.String str13 = strTokenizer10.getContent();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.set("ih100.00.0#");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "!" + "'", str13, "!");
    }

    @Test
    public void test16198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16198");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        int int19 = strBuilder16.lastIndexOf("!ih100.0", 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setNewLineText(".001hi !ih100.0");
        int int29 = strBuilder26.lastIndexOf("falsehi!!i!#hi!\n", 210);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test16199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16199");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer11.setQuoteMatcher(strMatcher31);
        char[] charArray37 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer34.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterString("#");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer47.setEmptyTokenAsNull(true);
        java.lang.String str51 = strTokenizer47.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer47.setDelimiterString("se18.0f");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer47.setDelimiterChar('3');
        int int56 = strTokenizer55.previousIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str51, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test16200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16200");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        int int19 = strBuilder18.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder29.deleteAll(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder43.appendln(stringBuffer53);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder43.replaceFirst(strMatcher55, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.appendln((java.lang.Object) (short) 1);
        java.lang.String str63 = strBuilder61.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.deleteAll("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.insert((int) (byte) 1, (long) (short) 0);
        int int70 = strBuilder68.indexOf("sehi!!");
        boolean boolean72 = strBuilder68.contains("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder21.append(strBuilder68, (int) (byte) 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder68.insert(7, (double) '4');
        java.lang.String str79 = strBuilder78.getNewLineText();
        java.lang.String str80 = strBuilder78.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "f0alseh52.0i!1\n" + "'", str80, "f0alseh52.0i!1\n");
    }

    @Test
    public void test16201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16201");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("100.0100.0");
        java.util.List<java.lang.String> strList2 = strTokenizer1.getTokenList();
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test16202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16202");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendSeparator("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder29.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strBuilder51.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setEmptyTokenAsNull(false);
        java.lang.String str58 = strTokenizer55.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer55.setDelimiterChar('#');
        boolean boolean62 = strBuilder25.equals((java.lang.Object) strTokenizer61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        java.lang.String str67 = strTokenizer66.nextToken();
        int int68 = strTokenizer66.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer66.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer61.setQuoteMatcher(strMatcher69);
        java.lang.String[] strArray71 = strTokenizer70.getTokenArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "!ih100.0" + "'", str58, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test16203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16203");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        iOException1.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException4.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray21 = iOException20.getSuppressed();
        java.lang.Throwable[] throwableArray22 = iOException20.getSuppressed();
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException20);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test16204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16204");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder37.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setEmptyTokenAsNull(false);
        java.lang.String str44 = strTokenizer41.next();
        java.lang.String str45 = strTokenizer41.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer41.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean70 = strBuilder61.contains(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder49.replaceAll(strMatcher55, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer41.setTrimmerMatcher(strMatcher55);
        java.util.List<java.lang.String> strList75 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder25.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList75, "hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder25.appendSeparator("!ih100.0\n4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder25.deleteAll('v');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder25.deleteFirst("java.io.IOException: i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.insert(0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder83.append((-1.0f));
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "!ih100.0" + "'", str44, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "!ih100.0" + "'", str45, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test16205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16205");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.io.IOException iOException53 = new java.io.IOException();
        java.io.IOException iOException54 = new java.io.IOException();
        iOException53.addSuppressed((java.lang.Throwable) iOException54);
        java.lang.Throwable[] throwableArray56 = iOException54.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.appendFixedWidthPadRight((java.lang.Object) iOException54, 0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceAll('h', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder62.appendFixedWidthPadLeft(10, (int) '!', '4');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test16206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16206");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.!ih100.00\n010.0hi!\n");
    }

    @Test
    public void test16207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16207");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.appendFixedWidthPadRight((int) (byte) 10, (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln((float) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("!ih100.0", "!ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strBuilder48.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder67.replaceAll(strMatcher70, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean76 = strBuilder67.contains(strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher61, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer55.setQuoteMatcher(strMatcher75);
        char[] charArray81 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer78.reset(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer52.reset(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder43.append(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray81);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder23.appendln(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, 'v', 'v');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test16208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16208");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("20.0falsei!", "!0\n");
    }

    @Test
    public void test16209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16209");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder1.appendSeparator('#', '.');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException");
        boolean boolean20 = strBuilder1.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder1.appendFixedWidthPadRight(53, 52, '.');
        int int26 = strBuilder1.indexOf("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test16210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16210");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.replaceAll("StrTokenizer[!ih100.0]", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator("hi!\n", "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.insert(7, (java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst("!ih100.0", "!ih100.0");
        int int72 = strBuilder66.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder66.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        char[] charArray78 = strBuilder77.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder61.appendln(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, '#', '!');
        int int83 = strTokenizer82.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder19.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer82, "!hi!10aaaaaaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln(1L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder87.appendln("hi!fals4e#########8\nrTokenizer[!ih100.0]\n", 21, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[h, i, !, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ]]");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test16211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16211");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean28 = strBuilder19.contains(strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher27, strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder11.replaceFirst(strMatcher27, "i!");
        char[] charArray33 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "!ih100.00");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "!ih100.00");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[!, i, h, 1, 0, 0, ., 0, 0]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
    }

    @Test
    public void test16212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16212");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert(0, (java.lang.Object) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendFixedWidthPadLeft(8, (int) (byte) 100, '#');
        int int25 = strBuilder18.indexOf("hi!#i!!ih100.0", 112);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test16213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16213");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("h1.0i!######true10.0\n0");
        java.lang.String str2 = strTokenizer1.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "h1.0i!######true10.0\n0" + "'", str2, "h1.0i!######true10.0\n0");
    }

    @Test
    public void test16214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16214");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        int int3 = strTokenizer2.previousIndex();
        java.lang.Class<?> wildcardClass4 = strTokenizer2.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test16215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16215");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.insert((int) (byte) 0, 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendln(true);
        java.lang.StringBuffer stringBuffer24 = strBuilder23.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendSeparator('3', 48);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(stringBuffer24);
        org.junit.Assert.assertEquals(stringBuffer24.toString(), "0.0!ih100.0true\n");
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test16216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16216");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.appendln((float) (byte) 10);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        iOException17.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray25 = iOException21.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.appendWithSeparators((java.lang.Object[]) throwableArray25, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.replaceAll(strMatcher59, "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder41.replaceAll(strMatcher59, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder27.replace(strMatcher59, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0", (int) (short) 0, 0, 18);
        boolean boolean70 = strBuilder68.contains("java.io.IOException: !ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder72.replaceAll(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder72.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.setNewLineText("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder68.appendln(strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.append(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setDelimiterMatcher(strMatcher92);
        java.util.List<java.lang.String> strList94 = strTokenizer91.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder89.appendAll((java.lang.Iterable<java.lang.String>) strList94);
        java.lang.String str98 = strBuilder89.midString(55, 412);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "" + "'", str98, "");
    }

    @Test
    public void test16217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16217");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!##a");
    }

    @Test
    public void test16218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16218");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.append(stringBuffer25);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int28 = strBuilder26.indexOf(strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher40, strMatcher42);
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer43.reset(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer29.reset(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, "hi!!ih100.0#a\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray46);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer54);
    }

    @Test
    public void test16219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16219");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(stringBuffer37);
        char[] charArray41 = strBuilder36.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray42 = strBuilder1.getChars(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean61 = strBuilder52.contains(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder50.deleteAll(strMatcher60);
        java.lang.String str64 = strBuilder50.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList69 = strTokenizer68.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder50.appendAll((java.lang.Iterable<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.setCharAt(1, '1');
        char[] charArray77 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray77);
        int int84 = strBuilder71.indexOf(strMatcher82, (int) 'i');
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test16220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16220");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.replaceAll('#', 'a');
        boolean boolean35 = strBuilder15.equals((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.replaceFirst("hi!\n", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder15.appendSeparator("i!hi!97!!!", "hi!\n");
        boolean boolean42 = strBuilder15.isEmpty();
        java.io.Reader reader43 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder15.deleteAll("!ih100.0StrTokenizer[!ih100.0]11.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((long) 115);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendFixedWidthPadLeft(41, 56, '.');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test16221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16221");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.append(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder15.setNewLineText("#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean32 = strTokenizer31.isEmptyTokenAsNull();
        boolean boolean33 = strTokenizer31.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer31.setIgnoredChar('.');
        boolean boolean36 = strTokenizer31.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer31.reset("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder15.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer40, "falsehi!");
        java.lang.String str43 = strTokenizer40.getContent();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.appendln(stringBuffer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder45.replaceFirst(strMatcher57, "hi!");
        int int62 = strBuilder59.lastIndexOf("", (int) (byte) 0);
        java.lang.String str65 = strBuilder59.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        int int69 = strBuilder59.lastIndexOf(strMatcher67, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer40.setIgnoredMatcher(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[]" + "'", str43, "StrTokenizer[]");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "h" + "'", str65, "h");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer70);
    }

    @Test
    public void test16222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16222");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(stringBuffer37);
        char[] charArray41 = strBuilder36.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray42 = strBuilder1.getChars(charArray41);
        char[] charArray45 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher51, strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder1.append(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder1.replaceAll("########0.0\n", "ih100.011\n");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test16223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16223");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendSeparator("i", (int) (short) -1);
        java.util.stream.IntStream intStream29 = strBuilder28.codePoints();
        boolean boolean31 = strBuilder28.endsWith("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll('v', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln((float) 206);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test16224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16224");
        char[] charArray2 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        java.util.stream.IntStream intStream8 = strBuilder7.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.deleteFirst(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder44.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setEmptyTokenAsNull(false);
        java.lang.String str51 = strTokenizer48.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer48.setDelimiterMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer59.getDelimiterMatcher();
        int int62 = strBuilder32.indexOf(strMatcher60, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4', '!');
        java.lang.String str67 = strTokenizer66.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer66.getTrimmerMatcher();
        boolean boolean69 = strTokenizer66.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer66.reset("!ih100.0.h");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "!ih100.0" + "'", str51, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str67, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strTokenizer71);
    }

    @Test
    public void test16225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16225");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("i!");
        int int16 = strBuilder12.indexOf("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer20.setQuoteMatcher(strMatcher40);
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer43.reset(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder12.insert(12, charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder12.append("StrTokenizer[not tokenized yet]");
        int int60 = strBuilder57.indexOf('v', 56);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.append(true);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test16226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16226");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        int int33 = strBuilder31.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean56 = strBuilder47.contains(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher41, strMatcher55);
        int int58 = strBuilder35.indexOf(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder35.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer63.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder67.replaceAll(strMatcher70, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean76 = strBuilder67.contains(strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher75, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer63.setDelimiterMatcher(strMatcher75);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer79.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder60.deleteFirst(strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln(false);
        java.lang.String str84 = strBuilder81.getNewLineText();
        boolean boolean85 = strBuilder16.equals(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test16227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16227");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        char[] charArray36 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('#');
        int int41 = strBuilder35.indexOf('.', 21);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.appendSeparator("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test16228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16228");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("alsehi!!ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar('h');
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test16229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16229");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.setNewLineText("!");
        int int34 = strBuilder29.indexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.appendln(stringBuffer46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.replaceFirst(strMatcher48, "hi!");
        int int53 = strBuilder50.lastIndexOf("", (int) (byte) 0);
        java.lang.String str56 = strBuilder50.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll("", "hi!");
        int int73 = strBuilder71.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer82 = strBuilder81.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder50.append(stringBuffer82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder29.append(stringBuffer82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder11.appendln(stringBuffer82);
        int int86 = strBuilder85.length();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "h" + "'", str56, "h");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(stringBuffer82);
        org.junit.Assert.assertEquals(stringBuffer82.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 18 + "'", int86 == 18);
    }

    @Test
    public void test16230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16230");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        long long55 = reader53.skip((long) (byte) 100);
        reader53.close();
        int int57 = reader53.read();
        reader53.mark((int) (short) -1);
        reader53.reset();
        reader53.reset();
        long long63 = reader53.skip(16L);
        reader53.close();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 20L + "'", long55 == 20L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
    }

    @Test
    public void test16231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16231");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("h", 'a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceAll("", "hi!");
        java.lang.String str21 = strBuilder16.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.append("!ih100.00");
        java.io.Reader reader29 = strBuilder28.asReader();
        reader29.close();
        reader29.reset();
        long long33 = reader29.skip((long) (byte) 10);
        reader29.reset();
        char[] charArray37 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        int int44 = reader29.read(charArray37);
        int int48 = strMatcher4.isMatch(charArray37, 113, 16, (int) '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "!" + "'", str21, "!");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10L + "'", long33 == 10L);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[!, i]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strTokenizer49);
    }

    @Test
    public void test16232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16232");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!46                    1");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        java.util.stream.IntStream intStream7 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(stringBuffer19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder9.replaceFirst(strMatcher21, "hi!");
        int int24 = strBuilder6.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('#', '#');
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.append(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder40.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.replace(0, 52, "hi!!ih100.0#a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder6.append((java.lang.CharSequence) strBuilder54, 2, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.clear();
        boolean boolean59 = strBuilder1.equalsIgnoreCase(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        java.util.stream.IntStream intStream65 = strBuilder64.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.deleteAll("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.appendSeparator("i!", 3);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder72.appendFixedWidthPadRight((java.lang.Object) strMatcher79, 0, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder57.deleteAll(strMatcher79);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(intStream65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test16233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16233");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("0.001hi!0.001hi 1\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test16234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16234");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.reset(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        java.lang.String str37 = strTokenizer35.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer35.setDelimiterChar('f');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strTokenizer39);
    }

    @Test
    public void test16235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16235");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append((java.lang.CharSequence) strBuilder31);
        java.util.stream.IntStream intStream33 = strBuilder27.codePoints();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
    }

    @Test
    public void test16236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16236");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        reader24.close();
        reader24.reset();
        long long28 = reader24.skip((long) (byte) 0);
        reader24.reset();
        reader24.close();
        reader24.reset();
        boolean boolean32 = reader24.ready();
        int int33 = reader24.read();
        boolean boolean34 = reader24.ready();
        reader24.mark(5);
        reader24.mark(40);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 33 + "'", int33 == 33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test16237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16237");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder15.indexOf(strMatcher38);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder15.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceAll("", "hi!");
        int int60 = strBuilder58.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder15.append(strBuilder58);
        java.io.Reader reader67 = strBuilder66.asReader();
        java.lang.String str68 = strBuilder66.toString();
        int int70 = strBuilder66.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.setCharAt(11, 'a');
        char[] charArray74 = strBuilder73.toCharArray();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(reader67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "!ih100.0\n!ih100.0#" + "'", str68, "!ih100.0\n!ih100.0#");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 17 + "'", int70 == 17);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "!ih100.0\n!ia100.0#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "!ih100.0\n!ia100.0#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[!, i, h, 1, 0, 0, ., 0, \n, !, i, a, 1, 0, 0, ., 0, #]");
    }

    @Test
    public void test16238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16238");
        java.io.IOException iOException2 = new java.io.IOException("!ih100.0");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException("i!");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        iOException2.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray8 = iOException6.getSuppressed();
        java.io.IOException iOException11 = new java.io.IOException("!ih100.0");
        java.io.IOException iOException12 = new java.io.IOException("!ih", (java.lang.Throwable) iOException11);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException14.getSuppressed();
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException12.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException19 = new java.io.IOException();
        java.io.IOException iOException20 = new java.io.IOException();
        iOException19.addSuppressed((java.lang.Throwable) iOException20);
        java.lang.Throwable[] throwableArray22 = iOException20.getSuppressed();
        iOException14.addSuppressed((java.lang.Throwable) iOException20);
        iOException6.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException25 = new java.io.IOException("", (java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray26 = iOException6.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test16239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16239");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        boolean boolean9 = strBuilder7.endsWith("!ih0");
        int int12 = strBuilder7.lastIndexOf('v', 20);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test16240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16240");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.insert((int) (short) 1, 'a');
        boolean boolean19 = strBuilder18.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test16241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16241");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        java.io.Reader reader15 = strBuilder11.asReader();
        reader15.reset();
        long long18 = reader15.skip((long) 7);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 7L + "'", long18 == 7L);
    }

    @Test
    public void test16242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16242");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        java.lang.String str8 = strTokenizer7.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer7.setIgnoredMatcher(strMatcher10);
        java.lang.Object obj12 = strTokenizer7.clone();
        java.lang.String str13 = strTokenizer7.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer7.setIgnoredChar(' ');
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "#a" + "'", str8, "#a");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[#a]" + "'", str13, "StrTokenizer[#a]");
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test16243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16243");
        java.io.IOException iOException3 = new java.io.IOException();
        java.io.IOException iOException4 = new java.io.IOException();
        iOException3.addSuppressed((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException4.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException("0.001hi !ih100.0\n\n", (java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException("!ih100.0\n!ih100.0#", (java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("h1.0######tr#aueStrTokenizer[not tokenized yet]", (java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test16244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16244");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException");
        java.lang.String str2 = strBuilder1.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.insert(106, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 106");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test16245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16245");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", 'f', '0');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean15 = strBuilder6.contains(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder6.appendFixedWidthPadRight((int) '#', 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.append((-1));
        char[] charArray24 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher33);
        int int36 = strBuilder21.indexOf(strMatcher29, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer3.setQuoteMatcher(strMatcher29);
        java.lang.String str38 = strTokenizer37.nextToken();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test16246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16246");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher49);
        int int52 = strBuilder26.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer10.setIgnoredMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer6.setDelimiterMatcher(strMatcher49);
        boolean boolean55 = strTokenizer54.isIgnoreEmptyTokens();
        java.lang.String str56 = strTokenizer54.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strBuilder68.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setEmptyTokenAsNull(false);
        java.lang.String str75 = strTokenizer72.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst(strMatcher78, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer72.setDelimiterMatcher(strMatcher78);
        boolean boolean82 = strTokenizer72.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer72.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer54.setTrimmerMatcher(strMatcher83);
        java.lang.String str85 = strTokenizer54.toString();
        boolean boolean86 = strTokenizer54.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str56, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "!ih100.0" + "'", str75, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str85, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test16247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16247");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer8.reset();
        boolean boolean10 = strTokenizer9.isEmptyTokenAsNull();
        boolean boolean11 = strTokenizer9.hasPrevious();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test16248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16248");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendFixedWidthPadRight((int) '#', 1, '4');
        int int36 = strBuilder34.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.deleteFirst(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        int int56 = strBuilder54.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer65 = strBuilder64.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder39.append(stringBuffer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder18.append(stringBuffer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll('1');
        java.lang.String str71 = strBuilder67.rightString(52);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.appendln((long) 53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        boolean boolean76 = strTokenizer75.hasPrevious();
        boolean boolean77 = strTokenizer75.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer75, "");
        java.lang.String[] strArray80 = strTokenizer75.getTokenArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(stringBuffer65);
        org.junit.Assert.assertEquals(stringBuffer65.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "0.00hi!0.00hi " + "'", str71, "0.00hi!0.00hi ");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strArray80);
    }

    @Test
    public void test16249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16249");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.setCharAt((int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        java.util.stream.IntStream intStream15 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean26 = strBuilder17.contains(strMatcher25);
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.appendln(stringBuffer27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder17.replaceFirst(strMatcher29, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert(0, (java.lang.Object) (byte) 1);
        boolean boolean35 = strBuilder14.equalsIgnoreCase(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((float) (byte) 100);
        java.lang.CharSequence charSequence50 = strBuilder47.subSequence(1, (int) (short) 1);
        boolean boolean52 = strBuilder47.endsWith("!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.replaceAll(strMatcher77, "");
        int int83 = strBuilder72.indexOf(strMatcher77, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder67.append(strBuilder72, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder67.setNullText("hi!");
        boolean boolean89 = strBuilder47.equalsIgnoreCase(strBuilder88);
        java.lang.Object[] objArray90 = new java.lang.Object[] { strBuilder47 };
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder14.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder4.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder4.replaceFirst('.', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder4.appendln((float) 100);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[!ih100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[!ih100.0]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test16250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16250");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(".0");
        java.lang.String str3 = strBuilder1.leftString(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.deleteAll("4a");
        // The following exception was thrown during execution in test generation
        try {
            char char7 = strBuilder1.charAt(108);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 108");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + ".0" + "'", str3, ".0");
        org.junit.Assert.assertNotNull(strBuilder5);
    }

    @Test
    public void test16251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16251");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer24.append('h');
        writer24.close();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test16252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16252");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        long long55 = reader53.skip((long) (byte) 100);
        reader53.close();
        int int57 = reader53.read();
        long long59 = reader53.skip((long) 10);
        boolean boolean60 = reader53.ready();
        reader53.mark(34);
        boolean boolean63 = reader53.ready();
        reader53.mark(48);
        java.nio.CharBuffer charBuffer66 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int67 = reader53.read(charBuffer66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 20L + "'", long55 == 20L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test16253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16253");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.appendSeparator('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strBuilder28.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setEmptyTokenAsNull(false);
        java.lang.String str35 = strTokenizer32.next();
        java.lang.String str36 = strTokenizer32.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer32.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        java.util.stream.IntStream intStream46 = strBuilder45.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteAll("i!");
        int int57 = strBuilder53.indexOf("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean78 = strBuilder69.contains(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder67.deleteAll(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln("hi!");
        boolean boolean85 = strBuilder59.equals(strBuilder82);
        char[] charArray86 = strBuilder82.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder53.append(charArray86, 3, 7);
        int int92 = strMatcher40.isMatch(charArray86, (int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder1.append(charArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder1.minimizeCapacity();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "!ih100.0" + "'", str35, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "!ih100.0" + "'", str36, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test16254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16254");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("", "hi!");
        int int43 = strBuilder41.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln(stringBuffer62);
        char[] charArray66 = strBuilder61.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray67 = strBuilder26.getChars(charArray66);
        int int68 = reader24.read(charArray66);
        reader24.reset();
        java.nio.CharBuffer charBuffer70 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int71 = reader24.read(charBuffer70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[!, i, h, 1, 0, 0, ., 0, \n, !, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[!, i, h, 1, 0, 0, ., 0, \n, !, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 17 + "'", int68 == 17);
    }

    @Test
    public void test16255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16255");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.insert((int) (short) 1, "\n0!ie");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        int int41 = strBuilder39.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean67 = strBuilder58.contains(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder56.deleteAll(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln("hi!");
        boolean boolean74 = strBuilder48.equals(strBuilder71);
        char[] charArray75 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder46.appendln(charArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.setCharAt((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder76.appendln('4');
        boolean boolean83 = strBuilder24.equals(strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.appendSeparator('i', 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder86.appendFixedWidthPadRight(120, 80, 'f');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test16256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16256");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        boolean boolean54 = reader53.markSupported();
        reader53.mark(2);
        reader53.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test16257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16257");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoredChar(' ');
        java.lang.String str14 = strTokenizer13.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer13.setDelimiterString("StrTokenizer[!ih100.0]");
        java.lang.Object obj19 = strTokenizer13.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder4.appendln((java.lang.Object) strTokenizer13);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder23.appendSeparator('#', '.');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException");
        boolean boolean42 = strBuilder23.contains(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder4.replaceFirst(strMatcher41, "hi!falsefalse\n-1.0\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test16258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16258");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.append((float) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendFixedWidthPadLeft((int) ' ', (int) '4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        java.lang.String str46 = strBuilder41.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.append("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder25.appendln((java.lang.Object) strBuilder47);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        int int60 = strBuilder58.lastIndexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.replace(10, 104, "hi!!ih100.0#a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst("!ih100.0", "!ih100.0");
        int int75 = strBuilder69.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        char[] charArray81 = strBuilder80.toCharArray();
        char[] charArray82 = strBuilder58.getChars(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray81);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "!" + "'", str46, "!");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[!, i, h, 1, 0, 0, ., 0, \n, !, h, i, !, !, i, h, 1, 0, 0, ., 0, #, a, \n, n, i, z, e, d,  , y, e, t, ]]");
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[!, i, h, 1, 0, 0, ., 0, \n, !, h, i, !, !, i, h, 1, 0, 0, ., 0, #, a, \n, n, i, z, e, d,  , y, e, t, ]]");
        org.junit.Assert.assertNotNull(strTokenizer85);
    }

    @Test
    public void test16259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16259");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        java.lang.String str42 = strTokenizer24.getContent();
        boolean boolean43 = strTokenizer24.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#a" + "'", str42, "#a");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test16260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16260");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        int int45 = strBuilder18.indexOf('#');
        int int46 = strBuilder18.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder18.appendln((long) 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.setNewLineText("");
        boolean boolean52 = strBuilder48.endsWith("!ih100.04\nStrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.setCharAt(145, '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 145");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test16261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16261");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean48 = strBuilder39.contains(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.replaceAll(strMatcher33, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean56 = strTokenizer55.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer55, "!ih100.0");
        char[] charArray61 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder27.appendln(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ', ' ');
        char[] charArray70 = strBuilder1.getChars(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        boolean boolean72 = strTokenizer71.hasNext();
        java.lang.String str73 = strTokenizer71.toString();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[h, i, !]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "StrTokenizer[hi!]" + "'", str73, "StrTokenizer[hi!]");
    }

    @Test
    public void test16262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16262");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        iOException0.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        iOException2.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException();
        iOException10.addSuppressed((java.lang.Throwable) iOException11);
        iOException9.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        iOException11.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException15);
        iOException2.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException21 = new java.io.IOException("StrTokenizer[]");
        iOException2.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException23 = new java.io.IOException();
        java.io.IOException iOException24 = new java.io.IOException();
        iOException23.addSuppressed((java.lang.Throwable) iOException24);
        java.lang.Throwable[] throwableArray26 = iOException24.getSuppressed();
        java.io.IOException iOException27 = new java.io.IOException();
        java.io.IOException iOException28 = new java.io.IOException();
        iOException27.addSuppressed((java.lang.Throwable) iOException28);
        iOException24.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException31 = new java.io.IOException();
        java.io.IOException iOException32 = new java.io.IOException();
        iOException31.addSuppressed((java.lang.Throwable) iOException32);
        java.lang.Throwable[] throwableArray34 = iOException32.getSuppressed();
        java.io.IOException iOException35 = new java.io.IOException();
        java.io.IOException iOException36 = new java.io.IOException();
        iOException35.addSuppressed((java.lang.Throwable) iOException36);
        iOException32.addSuppressed((java.lang.Throwable) iOException35);
        iOException27.addSuppressed((java.lang.Throwable) iOException32);
        iOException2.addSuppressed((java.lang.Throwable) iOException27);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException27);
        java.io.IOException iOException44 = new java.io.IOException();
        java.io.IOException iOException45 = new java.io.IOException();
        iOException44.addSuppressed((java.lang.Throwable) iOException45);
        java.lang.Throwable[] throwableArray47 = iOException45.getSuppressed();
        java.io.IOException iOException48 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException45);
        java.io.IOException iOException49 = new java.io.IOException("!ih100.0#a", (java.lang.Throwable) iOException45);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException45);
        java.io.IOException iOException52 = new java.io.IOException("i!");
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException52);
        java.lang.Throwable[] throwableArray54 = iOException53.getSuppressed();
        iOException45.addSuppressed((java.lang.Throwable) iOException53);
        iOException41.addSuppressed((java.lang.Throwable) iOException45);
        java.lang.String str57 = iOException41.toString();
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str57, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test16263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16263");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("ih100.010.0i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert((int) (short) 10, 8L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.replaceAll("hi!\n10", "java.io.IOException");
        boolean boolean11 = strBuilder9.endsWith("hi!1.0!ihfalsehi!aaaaaa");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test16264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16264");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendSeparator("StrTokenizer[]", (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((double) (byte) 10);
        int int26 = strBuilder23.length();
        java.util.stream.IntStream intStream27 = strBuilder23.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.appendSeparator('!');
        java.lang.String str32 = strBuilder31.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder44.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setEmptyTokenAsNull(false);
        java.lang.String str51 = strTokenizer48.next();
        java.lang.String str52 = strTokenizer48.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer48.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder56.replaceAll(strMatcher62, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer48.setTrimmerMatcher(strMatcher62);
        java.util.List<java.lang.String> strList82 = strTokenizer48.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder31.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList82, "!ihfalsehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList82);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 12 + "'", int26 == 12);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "!ih100.0" + "'", str51, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "!ih100.0" + "'", str52, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test16265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16265");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int12 = strBuilder6.lastIndexOf(strMatcher10, 2);
        boolean boolean14 = strBuilder6.contains('#');
        boolean boolean16 = strBuilder6.contains('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        java.lang.String str33 = strBuilder28.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.append("");
        char[] charArray36 = strBuilder28.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '.', '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean63 = strBuilder54.contains(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher48, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer42.setQuoteMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer42.setEmptyTokenAsNull(true);
        java.lang.String str68 = strTokenizer67.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer67.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher69);
        java.lang.String str71 = strTokenizer70.toString();
        java.lang.String str72 = strTokenizer70.previousToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder6.appendln((java.lang.Object) strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "!" + "'", str33, "!");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str71, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test16266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16266");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        java.lang.String str22 = strTokenizer21.toString();
        java.lang.String str23 = strTokenizer21.getContent();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer21.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[!ih100.0]" + "'", str22, "StrTokenizer[!ih100.0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "!ih100.0" + "'", str23, "!ih100.0");
    }

    @Test
    public void test16267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16267");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln((float) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendFixedWidthPadRight((int) (short) 10, 33, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        java.lang.CharSequence charSequence39 = strBuilder36.subSequence(1, (int) (short) 1);
        int int42 = strBuilder36.lastIndexOf("!", (int) (byte) 1);
        int int45 = strBuilder36.indexOf("hi!", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.appendln(11);
        java.io.IOException iOException48 = new java.io.IOException();
        java.io.IOException iOException49 = new java.io.IOException();
        java.io.IOException iOException50 = new java.io.IOException();
        iOException49.addSuppressed((java.lang.Throwable) iOException50);
        iOException48.addSuppressed((java.lang.Throwable) iOException50);
        java.io.IOException iOException53 = new java.io.IOException();
        java.io.IOException iOException54 = new java.io.IOException();
        iOException53.addSuppressed((java.lang.Throwable) iOException54);
        iOException50.addSuppressed((java.lang.Throwable) iOException54);
        java.io.IOException iOException57 = new java.io.IOException();
        java.io.IOException iOException58 = new java.io.IOException();
        java.io.IOException iOException59 = new java.io.IOException();
        iOException58.addSuppressed((java.lang.Throwable) iOException59);
        iOException57.addSuppressed((java.lang.Throwable) iOException59);
        java.io.IOException iOException62 = new java.io.IOException();
        java.io.IOException iOException63 = new java.io.IOException();
        iOException62.addSuppressed((java.lang.Throwable) iOException63);
        iOException59.addSuppressed((java.lang.Throwable) iOException63);
        java.io.IOException iOException66 = new java.io.IOException((java.lang.Throwable) iOException63);
        iOException50.addSuppressed((java.lang.Throwable) iOException63);
        java.lang.Throwable[] throwableArray68 = iOException50.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder36.appendWithSeparators((java.lang.Object[]) throwableArray68, "java.io.IOException: !ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder23.appendWithSeparators((java.lang.Object[]) throwableArray68, "##########################################0.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder23.appendSeparator('!');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test16268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16268");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.append(strBuilder7);
        java.lang.String str24 = strBuilder3.midString(1, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        boolean boolean40 = strBuilder3.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(stringBuffer43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendln('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder3.append(strBuilder48, 10, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder3.appendPadding(2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean59 = strTokenizer58.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer58.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer58.setQuoteMatcher(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder54.replaceFirst(strMatcher62, "ih100.010.0i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder69.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("!ih100.0", "!ih100.0");
        int int76 = strBuilder70.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder70.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        char[] charArray82 = strBuilder81.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray82);
        int int85 = strBuilder54.lastIndexOf(strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder54.appendln((float) 13L);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder54.appendSeparator("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001", 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder54.trim();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "i!hi!97!!!" + "'", str24, "i!hi!97!!!");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[h, i, !, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ]]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 102 + "'", int85 == 102);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test16269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16269");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder19.append((long) (byte) 1);
        java.io.IOException iOException36 = new java.io.IOException();
        java.io.IOException iOException37 = new java.io.IOException();
        iOException36.addSuppressed((java.lang.Throwable) iOException37);
        java.lang.Throwable[] throwableArray39 = iOException37.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.appendAll((java.lang.Object[]) throwableArray39);
        java.lang.String str41 = strBuilder19.getNewLineText();
        java.util.stream.IntStream intStream42 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean61 = strBuilder52.contains(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder50.deleteAll(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.replaceAll(strMatcher67, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean73 = strBuilder64.contains(strMatcher72);
        java.lang.StringBuffer stringBuffer74 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder64.appendln(stringBuffer74);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder64.replaceFirst(strMatcher76, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder64.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder62.appendln((java.lang.Object) (short) 1);
        java.lang.StringBuffer stringBuffer83 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append(stringBuffer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.appendSeparator('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '#');
        java.lang.String[] strArray90 = strTokenizer89.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder82.appendAll((java.lang.Object[]) strArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder19.appendWithSeparators((java.lang.Object[]) strArray90, "java.io.IOException: hi!3");
        java.lang.String str95 = strBuilder93.rightString(63);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(intStream42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi!1StrTokenizer[not tokenized yet]" + "'", str95, "hi!1StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test16270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16270");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        char[] charArray14 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        char[] charArray29 = strBuilder11.getChars(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher31);
        boolean boolean33 = strTokenizer32.isIgnoreEmptyTokens();
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((float) (byte) 100);
        java.lang.CharSequence charSequence51 = strBuilder48.subSequence(1, (int) (short) 1);
        int int54 = strBuilder48.lastIndexOf("!", (int) (byte) 1);
        int int57 = strBuilder48.indexOf("hi!", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder48.appendln(11);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendSeparator("#");
        java.lang.String str64 = strBuilder59.midString((int) '4', 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.appendNewLine();
        char[] charArray68 = strBuilder59.toCharArray(1, 5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer32.reset(charArray68);
        java.lang.String str70 = strTokenizer69.nextToken();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "ih10");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "ih10");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[i, h, 1, 0]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ih10" + "'", str70, "ih10");
    }

    @Test
    public void test16271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16271");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        boolean boolean2 = strBuilder1.isEmpty();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strBuilder1.asTokenizer();
        int int4 = strTokenizer3.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test16272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16272");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.reset("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setTrimmerMatcher(strMatcher5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer4.setQuoteChar('a');
        int int9 = strTokenizer8.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setIgnoredChar('f');
        boolean boolean12 = strTokenizer11.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test16273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16273");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder14.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(stringBuffer35);
        int int38 = strBuilder34.indexOf('a');
        java.util.stream.IntStream intStream39 = strBuilder34.codePoints();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(intStream39);
    }

    @Test
    public void test16274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16274");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        int int47 = strBuilder36.indexOf(strMatcher41, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder31.append(strBuilder36, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder36.setLength(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder36.appendNewLine();
        boolean boolean55 = strBuilder36.endsWith("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder16.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder36.ensureCapacity(105);
        java.lang.Class<?> wildcardClass59 = strBuilder58.getClass();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test16275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16275");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.append(strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteAll(".");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert(81, (double) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder34.deleteAll(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln('a');
        java.io.Writer writer51 = strBuilder48.asWriter();
        writer51.write((int) (short) 0);
        char[] charArray56 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher62, strMatcher64);
        writer51.write(charArray56);
        char[] charArray67 = strBuilder26.getChars(charArray56);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(writer51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "hi!hi!97!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!100.0!!!!!!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "hi!hi!97!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!100.0!!!!!!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[h, i, !, h, i, !, 9, 7, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, 1, 0, 0, ., 0, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !, !]");
    }

    @Test
    public void test16276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16276");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendln((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        int int47 = strBuilder36.indexOf(strMatcher41, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int54 = strBuilder50.lastIndexOf(strMatcher52, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll('a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNewLine();
        java.lang.String str59 = strBuilder58.getNewLineText();
        boolean boolean60 = strBuilder31.equals(strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder31.clear();
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray64 = strBuilder31.toCharArray((-1), 38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test16277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16277");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.appendln("");
        int int19 = strBuilder17.lastIndexOf('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceAll("", "hi!");
        int int53 = strBuilder51.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder55.appendln(stringBuffer65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder55.replaceFirst(strMatcher67, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder51.appendFixedWidthPadLeft((java.lang.Object) strBuilder69, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder51.reverse();
        char[] charArray76 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, 'a');
        char[] charArray82 = strBuilder51.getChars(charArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder31.append(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, '1', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str90 = strTokenizer89.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer89.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer89.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher92);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder17.deleteFirst(strMatcher92);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder94.trim();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test16278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16278");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(stringBuffer37);
        char[] charArray41 = strBuilder36.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray42 = strBuilder1.getChars(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean61 = strBuilder52.contains(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder50.deleteAll(strMatcher60);
        java.lang.String str64 = strBuilder50.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList69 = strTokenizer68.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder50.appendAll((java.lang.Iterable<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.append((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.delete(3, (int) 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.append("!ih100.010.0i!hi!97!!!\n");
        int int79 = strBuilder78.size();
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 26 + "'", int79 == 26);
    }

    @Test
    public void test16279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16279");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.replaceFirst(strMatcher19, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.insert(0, (java.lang.Object) (byte) 1);
        boolean boolean25 = strBuilder4.equalsIgnoreCase(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        java.lang.CharSequence charSequence40 = strBuilder37.subSequence(1, (int) (short) 1);
        boolean boolean42 = strBuilder37.endsWith("!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.replaceAll(strMatcher67, "");
        int int73 = strBuilder62.indexOf(strMatcher67, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder57.append(strBuilder62, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder57.setNullText("hi!");
        boolean boolean79 = strBuilder37.equalsIgnoreCase(strBuilder78);
        java.lang.Object[] objArray80 = new java.lang.Object[] { strBuilder37 };
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder4.appendAll(objArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder4.appendln('h');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.setCharAt(21, '2');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 21");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[!ih100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[!ih100.0]");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test16280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16280");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('#', '#');
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.append(charArray75);
        int int79 = reader53.read(charArray75);
        long long81 = reader53.skip((long) (short) 10);
        reader53.close();
        long long84 = reader53.skip((long) (byte) 1);
        boolean boolean85 = reader53.markSupported();
        boolean boolean86 = reader53.markSupported();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10L + "'", long81 == 10L);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 1L + "'", long84 == 1L);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test16281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16281");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(stringBuffer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        int int18 = strBuilder13.lastIndexOf(strMatcher16, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strBuilder13.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.minimizeCapacity();
        boolean boolean55 = strBuilder53.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder35.append((java.lang.CharSequence) strBuilder53);
        int int63 = strBuilder35.lastIndexOf('!', (int) (short) 0);
        java.lang.StringBuffer stringBuffer64 = strBuilder35.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder13.append(stringBuffer64, 171, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(stringBuffer64);
        org.junit.Assert.assertEquals(stringBuffer64.toString(), "!ih100.00!ih100.02");
    }

    @Test
    public void test16282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16282");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setTrimmerMatcher(strMatcher5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getDelimiterMatcher();
        int int10 = strTokenizer8.previousIndex();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test16283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16283");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.setCharAt((int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.ensureCapacity((int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.insert((int) (short) 0, (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("!ih100.0#ah1.0i!######true");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test16284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16284");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("i.av", ".0##########################################0.0\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16285");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        boolean boolean12 = strBuilder9.startsWith("!ih100.0#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        java.lang.CharSequence charSequence27 = strBuilder24.subSequence(1, (int) (short) 1);
        boolean boolean29 = strBuilder24.endsWith("!ih100.0");
        char char31 = strBuilder24.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.append((double) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(true);
        boolean boolean39 = strBuilder9.equals(strBuilder36);
        java.io.IOException iOException42 = new java.io.IOException();
        java.io.IOException iOException43 = new java.io.IOException();
        java.io.IOException iOException44 = new java.io.IOException();
        iOException43.addSuppressed((java.lang.Throwable) iOException44);
        iOException42.addSuppressed((java.lang.Throwable) iOException44);
        java.io.IOException iOException47 = new java.io.IOException();
        java.io.IOException iOException48 = new java.io.IOException();
        iOException47.addSuppressed((java.lang.Throwable) iOException48);
        iOException44.addSuppressed((java.lang.Throwable) iOException48);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException48);
        java.lang.Throwable[] throwableArray52 = iOException48.getSuppressed();
        java.io.IOException iOException53 = new java.io.IOException("!ih100.00\n", (java.lang.Throwable) iOException48);
        java.io.IOException iOException54 = new java.io.IOException((java.lang.Throwable) iOException48);
        java.io.IOException iOException55 = new java.io.IOException("eh!0a\nStrT", (java.lang.Throwable) iOException48);
        java.lang.Throwable[] throwableArray56 = iOException48.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder9.appendAll((java.lang.Object[]) throwableArray56);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + char31 + "' != '" + '!' + "'", char31 == '!');
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test16286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16286");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(".80i!\n37");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test16287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16287");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int12 = strBuilder6.lastIndexOf(strMatcher10, 2);
        boolean boolean14 = strBuilder6.contains('#');
        java.io.Reader reader15 = strBuilder6.asReader();
        reader15.mark((int) 'f');
        reader15.mark(105);
        reader15.mark(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        int int39 = strBuilder36.indexOf("StrTokenizer[not tokenized yet]", (int) '1');
        boolean boolean41 = strBuilder36.contains("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder43.replaceAll(strMatcher49, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean72 = strTokenizer71.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder43.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer71, "!ih100.0");
        char[] charArray77 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder43.appendln(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder36.append((java.lang.Object) charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray77);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = reader15.read(charArray77, 55, 98);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher88);
    }

    @Test
    public void test16288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16288");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.String str14 = strBuilder11.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar('a');
        int int18 = strTokenizer15.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean43 = strBuilder34.contains(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer22.setQuoteMatcher(strMatcher42);
        char[] charArray48 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer45.reset(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int58 = strMatcher19.isMatch(charArray48, 0, (int) (short) 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("i!i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strMatcher61);
    }

    @Test
    public void test16289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16289");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendSeparator("sehi!!");
        char[] charArray24 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.appendln((long) 115);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.replaceAll("!ih100.010.052.0\n", ".0");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "!ih100.01sehi!!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "!ih100.01sehi!!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[!, i, h, 1, 0, 0, ., 0, 1, s, e, h, i, !, !]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test16290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16290");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll("", "hi!");
        int int19 = strBuilder17.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder34.deleteAll(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln("hi!");
        boolean boolean52 = strBuilder26.equals(strBuilder49);
        char[] charArray53 = strBuilder49.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder24.appendln(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder2.append(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.insert(0, (double) (short) 1);
        char[] charArray61 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder68.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer84 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.append(stringBuffer84);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int87 = strBuilder85.indexOf(strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.setQuoteChar('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder58.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer90, "hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer90.setIgnoredChar('i');
        java.lang.String str95 = strTokenizer94.previous();
        org.apache.commons.lang3.text.StrMatcher strMatcher96 = strTokenizer94.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[]", strMatcher96);
        org.apache.commons.lang3.text.StrMatcher strMatcher98 = strTokenizer97.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "#a" + "'", str95, "#a");
        org.junit.Assert.assertNotNull(strMatcher96);
        org.junit.Assert.assertNotNull(strMatcher98);
    }

    @Test
    public void test16291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16291");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.deleteCharAt(9);
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray21);
        char[] charArray29 = strBuilder18.getChars(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "!ih100.00");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "!ih100.00");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[!, i, h, 1, 0, 0, ., 0, 0]");
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test16292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16292");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendPadding((int) (short) -1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendln((int) ' ');
        java.lang.StringBuffer stringBuffer25 = strBuilder24.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.replaceFirst('4', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher36, strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder30.replaceAll(strMatcher36, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean59 = strTokenizer58.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder30.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer58, "!ih100.0");
        int int62 = strBuilder30.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder30.appendNull();
        java.io.IOException iOException65 = new java.io.IOException();
        java.io.IOException iOException66 = new java.io.IOException();
        iOException65.addSuppressed((java.lang.Throwable) iOException66);
        java.lang.Throwable[] throwableArray68 = iOException66.getSuppressed();
        java.io.IOException iOException69 = new java.io.IOException();
        java.io.IOException iOException70 = new java.io.IOException();
        iOException69.addSuppressed((java.lang.Throwable) iOException70);
        iOException66.addSuppressed((java.lang.Throwable) iOException69);
        java.io.IOException iOException73 = new java.io.IOException("ih100.010.0i!", (java.lang.Throwable) iOException66);
        java.lang.Throwable[] throwableArray74 = iOException73.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder30.appendWithSeparators((java.lang.Object[]) throwableArray74, "hi!a\nh");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder24.appendWithSeparators((java.lang.Object[]) throwableArray74, "hi!1.0!ihfalsehi!aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln((long) 122);
        boolean boolean81 = strBuilder80.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(stringBuffer25);
        org.junit.Assert.assertEquals(stringBuffer25.toString(), "!32\n");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 11 + "'", int62 == 11);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test16293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16293");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(stringBuffer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        int int18 = strBuilder13.lastIndexOf(strMatcher16, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.clear();
        int int21 = strBuilder13.lastIndexOf("hi!StrTokenizer[not tokenized yet]\nhi!hi!49.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.setNullText("hai!hi!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test16294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16294");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher49);
        int int52 = strBuilder26.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer10.setIgnoredMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer6.setDelimiterMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        int int70 = strBuilder59.indexOf(strMatcher64, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder59.replaceAll("i!", "!ih100.0");
        char[] charArray76 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher86);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder59.appendln(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer54.reset(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, 'v', '4');
        boolean boolean95 = strTokenizer94.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test16295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16295");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder19.setLength(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        boolean boolean40 = strTokenizer39.hasPrevious();
        java.lang.String[] strArray41 = strTokenizer39.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.appendAll((java.lang.Object[]) strArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append(72);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendPadding(28, 'v');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test16296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16296");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) '#', 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.append((-1));
        java.io.Writer writer17 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder1.appendln((float) 16L);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(writer17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test16297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16297");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.append(strBuilder9, 11, 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNullText("f0alsehi!1\n      10");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setEmptyTokenAsNull(false);
        java.lang.String str33 = strTokenizer30.next();
        java.lang.String str34 = strTokenizer30.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer30.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean59 = strBuilder50.contains(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder38.replaceAll(strMatcher44, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer30.setTrimmerMatcher(strMatcher44);
        java.util.List<java.lang.String> strList64 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder14.appendAll((java.lang.Iterable<java.lang.String>) strList64);
        char char67 = strBuilder14.charAt(9);
        boolean boolean69 = strBuilder14.startsWith("java.io.IOException: !ih100.0100.0!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder14.append((float) 43);
        java.lang.String str72 = strBuilder71.toString();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "!ih100.0" + "'", str33, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "!ih100.0" + "'", str34, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + char67 + "' != '" + 'i' + "'", char67 == 'i');
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!false!ih100.043.0" + "'", str72, "hi!false!ih100.043.0");
    }

    @Test
    public void test16298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16298");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setDelimiterString("StrTokenizer[!ih100.0]");
        int int9 = strTokenizer8.nextIndex();
        java.lang.String str10 = strTokenizer8.toString();
        boolean boolean11 = strTokenizer8.hasNext();
        char[] charArray14 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        char[] charArray24 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.deleteFirst(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer21.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer19.reset(charArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        java.util.stream.IntStream intStream44 = strBuilder43.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.deleteFirst(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendSeparator("", "!ih");
        char[] charArray55 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder52.deleteAll(strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'h', 'f');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer8.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test16299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16299");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.String str14 = strBuilder11.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.deleteAll("");
        char[] charArray32 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray32);
        char[] charArray47 = strBuilder29.getChars(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer17.setQuoteMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer17.setIgnoredChar('h');
        java.lang.String str54 = strTokenizer53.getContent();
        java.lang.String str55 = strTokenizer53.previousToken();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "!ih100.0" + "'", str54, "!ih100.0");
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test16300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16300");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[java.io.IOException]", '.');
    }

    @Test
    public void test16301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16301");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst('!', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendln('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!3104.00.001hi 1");
        int int40 = strBuilder36.lastIndexOf(strMatcher38, (int) (short) 0);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test16302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16302");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        boolean boolean21 = strBuilder18.startsWith("java.io.IOException: !ih100.0");
        java.util.stream.IntStream intStream22 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.setNullText("!ih100.0#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.appendln((java.lang.Object) ".0");
        java.io.Reader reader27 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder18.setCharAt(0, '3');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strBuilder30.asTokenizer();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer31);
    }

    @Test
    public void test16303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16303");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        java.util.stream.IntStream intStream19 = strBuilder17.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean38 = strBuilder29.contains(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder27.deleteAll(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder27.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator("", (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.appendln((java.lang.Object) strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder17.replaceFirst(strMatcher49, "hi!!ih100.0#a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.setNullText("f");
        java.io.Writer writer55 = strBuilder52.asWriter();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(writer55);
    }

    @Test
    public void test16304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16304");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(false);
        java.util.stream.IntStream intStream21 = strBuilder17.chars();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
    }

    @Test
    public void test16305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16305");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        java.util.stream.IntStream intStream5 = strBuilder4.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.insert(0, (long) '!');
        int int11 = strBuilder8.indexOf('#', (int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendSeparator('#', (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll('a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert((int) (byte) 0, (long) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendSeparator('h', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(25);
        boolean boolean27 = strBuilder20.contains("!ih!0.00ahi!\nStrTokenizer[not tokenized yet]\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test16306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16306");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        char[] charArray36 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean57 = strBuilder48.contains(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder46.deleteAll(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln('a');
        java.io.Writer writer63 = strBuilder60.asWriter();
        char[] charArray64 = new char[] {};
        writer63.write(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder38.appendFixedWidthPadLeft((java.lang.Object) charArray64, 104, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendSeparator("!iha00.0!2.0\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaah !\nfalse\n", "01hi!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test16307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16307");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.replaceAll(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strBuilder25.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setEmptyTokenAsNull(false);
        java.lang.String str32 = strTokenizer29.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder3.appendAll((java.util.Iterator<java.lang.String>) strTokenizer29);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder41.deleteAll(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder33.append(strBuilder41);
        java.io.IOException iOException55 = new java.io.IOException();
        java.io.IOException iOException56 = new java.io.IOException();
        iOException55.addSuppressed((java.lang.Throwable) iOException56);
        java.lang.Throwable[] throwableArray58 = iOException56.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder41.appendFixedWidthPadRight((java.lang.Object) iOException56, 0, '4');
        boolean boolean62 = strBuilder1.equals(strBuilder61);
        java.lang.String str63 = strBuilder1.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder1.appendln('2');
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "!ih100.0" + "'", str32, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test16308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16308");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        java.util.stream.IntStream intStream5 = strBuilder4.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.insert(0, (long) '!');
        int int11 = strBuilder8.indexOf('#', (int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendSeparator('#', (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll('a', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert((int) (byte) 0, (long) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendSeparator('h', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int28 = strBuilder27.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendFixedWidthPadRight((int) '.', 22, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(11);
        char[] charArray37 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        java.util.stream.IntStream intStream43 = strBuilder42.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.deleteFirst(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer50.setEmptyTokenAsNull(true);
        int int53 = strTokenizer52.size();
        java.util.List<java.lang.String> strList54 = strTokenizer52.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder34.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList54, "44444444");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder20.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList54, "java.io.IOException: h");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.insert(52, "0.001hi !ih100.0\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test16309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16309");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("", (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((java.lang.Object) strMatcher29);
        char[] charArray31 = null;
        char[] charArray32 = strBuilder30.getChars(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setEmptyTokenAsNull(false);
        boolean boolean37 = strTokenizer34.hasNext();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray32);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[f, a, l, s, e, h, i, !, o, r, g, ., a, p, a, c, h, e, ., c, o, m, m, o, n, s, ., l, a, n, g, 3, ., t, e, x, t, ., S, t, r, M, a, t, c, h, e, r, $, T, r, i, m, M, a, t, c, h, e, r, @, 5, f, 7, 8, d, e, 2, 2, \n]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test16310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16310");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean43 = strBuilder34.contains(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder30.append(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        java.util.stream.IntStream intStream54 = strBuilder53.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder34.append((java.lang.CharSequence) strBuilder58);
        java.lang.StringBuffer stringBuffer60 = strBuilder59.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder19.append(stringBuffer60, 0, 50);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder19.appendln(45);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder19.insert(21, (long) '.');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.insert(113, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 113");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(stringBuffer60);
        org.junit.Assert.assertEquals(stringBuffer60.toString(), "hi!97!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-1.0hi!");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test16311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16311");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        writer24.write("a\n10\n");
        java.io.Writer writer30 = writer24.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher38, strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder32.replaceAll(strMatcher38, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean61 = strTokenizer60.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder32.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer60, "!ih100.0");
        int int64 = strBuilder32.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder32.trim();
        java.util.stream.IntStream intStream66 = strBuilder65.codePoints();
        java.lang.String str67 = strBuilder65.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer70 = writer24.append((java.lang.CharSequence) strBuilder65, (int) '3', 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 19");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 11 + "'", int64 == 11);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(intStream66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!!ih100.0" + "'", str67, "hi!!ih100.0");
    }

    @Test
    public void test16312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16312");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendNewLine();
        int int24 = strBuilder21.indexOf("!ih23", 38);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test16313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16313");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceAll("", "hi!");
        int int17 = strBuilder15.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher25, strMatcher39);
        int int42 = strBuilder19.indexOf(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder19.appendln('4');
        int int46 = strBuilder19.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder19.append((double) 27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.replaceAll(strMatcher66, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean72 = strBuilder63.contains(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher57, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer51.setQuoteMatcher(strMatcher71);
        char[] charArray77 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer74.reset(charArray77);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher83);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder19.replaceAll(strMatcher85, "zed yet]1");
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher85, strMatcher89);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str91 = strTokenizer90.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strMatcher89);
    }

    @Test
    public void test16314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16314");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.appendNewLine();
        java.util.stream.IntStream intStream58 = strBuilder57.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.insert(0, (long) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder52.append((java.lang.CharSequence) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder52.append((int) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean75 = strBuilder66.contains(strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder66.appendFixedWidthPadRight((int) '#', 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder66.append((-1));
        char[] charArray84 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray84);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer91.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer92.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, strMatcher89, strMatcher93);
        int int96 = strBuilder81.indexOf(strMatcher89, (int) '#');
        boolean boolean97 = strBuilder52.contains(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder52.appendln((double) 32);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test16315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16315");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("0#a\n", '.');
        boolean boolean3 = strTokenizer2.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test16316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16316");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        java.lang.String str21 = strBuilder7.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList26 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder7.appendAll((java.lang.Iterable<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(11, '4');
        java.io.Reader reader31 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.deleteAll('h');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test16317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16317");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder4.appendln(strBuilder19, 9, 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.append('!');
        int int28 = strBuilder19.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder19.appendSeparator("!ih100.01");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder19.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder19.insert(25, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln((long) 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append(6L);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder19.appendln((java.lang.Object) strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 35 + "'", int28 == 35);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test16318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16318");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[#a]");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test16319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16319");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(stringBuffer37);
        char[] charArray41 = strBuilder36.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray42 = strBuilder1.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "hi!!ih100.0#a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setEmptyTokenAsNull(false);
        java.util.List<java.lang.String> strList47 = strTokenizer44.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer44.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strMatcher48);
    }

    @Test
    public void test16320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16320");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher38);
        int int40 = strBuilder25.lastIndexOf(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder25.deleteFirst('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.appendNewLine();
        int int44 = strBuilder42.capacity();
        java.io.Reader reader45 = strBuilder42.asReader();
        boolean boolean46 = reader45.ready();
        reader45.close();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 35 + "'", int44 == 35);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test16321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16321");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendSeparator('!', 1);
        char[] charArray31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln(charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.deleteAll(strMatcher50);
        java.lang.String str54 = strBuilder40.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList59 = strTokenizer58.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder40.appendAll((java.lang.Iterable<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.insert(11, '4');
        java.io.Reader reader64 = strBuilder60.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder32.append((java.lang.CharSequence) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder67.replaceAll(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder67.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder67.deleteAll("");
        java.lang.String str80 = strBuilder67.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder67.append((long) 16);
        java.lang.String str85 = strBuilder67.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder67.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder65.append((java.lang.Object) strBuilder86);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder65.insert(105, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 105");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(reader64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test16322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16322");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        java.lang.String str16 = strBuilder13.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strBuilder13.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder21.deleteAll("");
        char[] charArray34 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray34);
        char[] charArray49 = strBuilder31.getChars(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer19.setQuoteMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", strMatcher1, strMatcher51);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test16323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16323");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        int int34 = strBuilder33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendNull();
        boolean boolean37 = strBuilder35.contains("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("", "hi!");
        int int54 = strBuilder52.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.appendSeparator('#');
        boolean boolean57 = strBuilder35.equals(strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder35.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder35.appendSeparator("!ih100.010.032", "falsehi!#hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteCharAt((int) (short) 1);
        char[] charArray65 = strBuilder62.toCharArray();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "!h100.0true\n!ih100.010.032");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "!h100.0true\n!ih100.010.032");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[!, h, 1, 0, 0, ., 0, t, r, u, e, \n, !, i, h, 1, 0, 0, ., 0, 1, 0, ., 0, 3, 2]");
    }

    @Test
    public void test16324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16324");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        boolean boolean27 = strBuilder25.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendNewLine();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test16325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16325");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer0.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.replaceAll(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strBuilder18.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setEmptyTokenAsNull(false);
        java.lang.String str25 = strTokenizer22.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer22.setDelimiterMatcher(strMatcher28);
        boolean boolean32 = strTokenizer22.hasPrevious();
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer22.reset(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer6.reset(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a', 'f');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer4.reset(charArray35);
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "!ih100.0" + "'", str25, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
    }

    @Test
    public void test16326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16326");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator('4');
        int int20 = strBuilder12.lastIndexOf("java.io.IOException: ", 72);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendPadding(41, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.appendln(false);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test16327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16327");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        iOException0.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        iOException2.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        java.io.IOException iOException11 = new java.io.IOException();
        iOException10.addSuppressed((java.lang.Throwable) iOException11);
        iOException9.addSuppressed((java.lang.Throwable) iOException11);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        iOException11.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException((java.lang.Throwable) iOException15);
        iOException2.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        iOException20.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException25 = new java.io.IOException();
        java.io.IOException iOException26 = new java.io.IOException();
        iOException25.addSuppressed((java.lang.Throwable) iOException26);
        iOException22.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException();
        java.io.IOException iOException30 = new java.io.IOException();
        java.io.IOException iOException31 = new java.io.IOException();
        iOException30.addSuppressed((java.lang.Throwable) iOException31);
        iOException29.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException();
        iOException34.addSuppressed((java.lang.Throwable) iOException35);
        iOException31.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException35);
        iOException22.addSuppressed((java.lang.Throwable) iOException35);
        iOException2.addSuppressed((java.lang.Throwable) iOException35);
        java.lang.Throwable[] throwableArray41 = iOException2.getSuppressed();
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable throwable46 = null;
        java.io.IOException iOException47 = new java.io.IOException("1hi!hi!", throwable46);
        java.io.IOException iOException48 = new java.io.IOException("!ihfalsehi!!", throwable46);
        java.io.IOException iOException49 = new java.io.IOException();
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.io.IOException iOException51 = new java.io.IOException();
        java.io.IOException iOException52 = new java.io.IOException();
        iOException51.addSuppressed((java.lang.Throwable) iOException52);
        java.lang.Throwable[] throwableArray54 = iOException52.getSuppressed();
        java.io.IOException iOException55 = new java.io.IOException();
        java.io.IOException iOException56 = new java.io.IOException();
        iOException55.addSuppressed((java.lang.Throwable) iOException56);
        iOException52.addSuppressed((java.lang.Throwable) iOException55);
        java.io.IOException iOException59 = new java.io.IOException();
        java.io.IOException iOException60 = new java.io.IOException();
        java.io.IOException iOException61 = new java.io.IOException();
        iOException60.addSuppressed((java.lang.Throwable) iOException61);
        iOException59.addSuppressed((java.lang.Throwable) iOException61);
        java.io.IOException iOException64 = new java.io.IOException();
        java.io.IOException iOException65 = new java.io.IOException();
        iOException64.addSuppressed((java.lang.Throwable) iOException65);
        iOException61.addSuppressed((java.lang.Throwable) iOException65);
        java.io.IOException iOException68 = new java.io.IOException((java.lang.Throwable) iOException65);
        iOException55.addSuppressed((java.lang.Throwable) iOException65);
        java.io.IOException iOException70 = new java.io.IOException((java.lang.Throwable) iOException65);
        iOException50.addSuppressed((java.lang.Throwable) iOException70);
        iOException48.addSuppressed((java.lang.Throwable) iOException50);
        iOException43.addSuppressed((java.lang.Throwable) iOException50);
        java.lang.String str74 = iOException43.toString();
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str74, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test16328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16328");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(stringBuffer37);
        char[] charArray41 = strBuilder36.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray42 = strBuilder1.getChars(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "hi!!ih100.0#a");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer44.add("hi!!ih100.0#a\nfalse!!!!!!!!!!!!!!!!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
    }

    @Test
    public void test16329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16329");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.01", "h");
        boolean boolean3 = strTokenizer2.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        java.util.stream.IntStream intStream17 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.append('#');
        int int21 = strBuilder19.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.append((java.lang.Object) "");
        java.lang.String str23 = strBuilder5.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder5.appendln(strBuilder24, 5, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean32 = strTokenizer31.isEmptyTokenAsNull();
        boolean boolean33 = strTokenizer31.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer31.setIgnoredChar('.');
        boolean boolean36 = strTokenizer31.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer31.reset("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.reset("!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", "!ih100.00");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer45.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer40.setTrimmerMatcher(strMatcher46);
        boolean boolean48 = strBuilder5.contains(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer2.setIgnoredMatcher(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "falsehi!" + "'", str23, "falsehi!");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strTokenizer49);
    }

    @Test
    public void test16330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16330");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer2.getTrimmerMatcher();
        int int27 = strTokenizer2.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer2.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer2.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer2.setQuoteChar('2');
        java.lang.String str33 = strTokenizer32.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(strMatcher34);
    }

    @Test
    public void test16331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16331");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer11.setQuoteMatcher(strMatcher31);
        char[] charArray37 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer34.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setDelimiterString("#");
        java.lang.String str48 = strTokenizer45.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer45.reset("!hi!StrTokenizer[hi!]");
        int int51 = strTokenizer45.previousIndex();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "a" + "'", str48, "a");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test16332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16332");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: !ih0", '4');
    }

    @Test
    public void test16333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16333");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.insert(8, (double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendPadding(0, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator("java.io.IOException: !ih100.0", (int) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.setNewLineText("!ih100.00\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.appendSeparator('1', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder25.appendSeparator('0');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceAll("", "hi!");
        java.lang.String str52 = strBuilder47.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean78 = strBuilder69.contains(strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher63, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer57.setQuoteMatcher(strMatcher77);
        char[] charArray83 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer80.reset(charArray83);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder53.append(charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder25.append(charArray83);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "!" + "'", str52, "!");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test16334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16334");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        iOException1.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        iOException8.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        iOException9.addSuppressed((java.lang.Throwable) iOException12);
        iOException4.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray17 = iOException9.getSuppressed();
        java.lang.Throwable[] throwableArray18 = iOException9.getSuppressed();
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray20 = iOException19.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        int int51 = strBuilder40.indexOf(strMatcher45, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.append(strBuilder40, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder35.setNullText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder35.appendln((long) (short) 10);
        java.io.IOException iOException60 = new java.io.IOException("java.io.IOException");
        java.io.IOException iOException63 = new java.io.IOException();
        java.io.IOException iOException64 = new java.io.IOException();
        iOException63.addSuppressed((java.lang.Throwable) iOException64);
        java.lang.Throwable[] throwableArray66 = iOException64.getSuppressed();
        java.io.IOException iOException67 = new java.io.IOException("java.io.IOException: ", (java.lang.Throwable) iOException64);
        java.io.IOException iOException68 = new java.io.IOException("!ih100.0#a", (java.lang.Throwable) iOException64);
        java.io.IOException iOException69 = new java.io.IOException((java.lang.Throwable) iOException64);
        iOException60.addSuppressed((java.lang.Throwable) iOException69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder35.append((java.lang.Object) iOException60);
        java.io.IOException iOException72 = new java.io.IOException((java.lang.Throwable) iOException60);
        iOException19.addSuppressed((java.lang.Throwable) iOException60);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test16335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16335");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendFixedWidthPadRight((int) '#', 1, '4');
        int int36 = strBuilder34.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.deleteFirst(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        int int56 = strBuilder54.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer65 = strBuilder64.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder39.append(stringBuffer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder18.append(stringBuffer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.appendSeparator('#', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.setNewLineText("\n0!ie");
        char[] charArray74 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.append(charArray74, 0, 21);
        java.lang.Object obj78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.appendln(obj78);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(stringBuffer65);
        org.junit.Assert.assertEquals(stringBuffer65.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test16336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16336");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(35);
    }

    @Test
    public void test16337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16337");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.replaceFirst(strMatcher4, "i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendPadding(115, 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.appendFixedWidthPadLeft((int) (byte) -1, 28, 'e');
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test16338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16338");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("hi!##a", 'h', 'h');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setQuoteChar('i');
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test16339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16339");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.replaceAll(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.reverse();
        java.io.Writer writer19 = strBuilder18.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder21.append((int) (short) 0);
        java.io.Writer writer37 = writer19.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.appendln('a');
        boolean boolean41 = strBuilder39.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder1.append((java.lang.CharSequence) strBuilder39, 34, 1);
        int int46 = strBuilder1.indexOf('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder1.appendln("sehi!0a\n10ih100i0StrTokenizer[ih100.0]StrTokenizer[]\n");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test16340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16340");
        java.io.IOException iOException4 = new java.io.IOException("hi!97!!!!!!!!!!!!!!!!!");
        java.io.IOException iOException5 = new java.io.IOException("0.001hi !ih100.0\n\n", (java.lang.Throwable) iOException4);
        java.io.IOException iOException6 = new java.io.IOException("i!45210.0hhhhhhhhhhhh", (java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException("java.io.IOException: java.io.IOException: hi!97!!!!!!!!!!!!!!!!!", (java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException10.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException17 = new java.io.IOException();
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        iOException17.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException22 = new java.io.IOException();
        java.io.IOException iOException23 = new java.io.IOException();
        iOException22.addSuppressed((java.lang.Throwable) iOException23);
        iOException19.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException23);
        iOException13.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException31 = new java.io.IOException("hi!97!!!!!!!!!!!!!!!!!");
        java.lang.Throwable[] throwableArray32 = iOException31.getSuppressed();
        iOException29.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException();
        java.io.IOException iOException36 = new java.io.IOException();
        iOException35.addSuppressed((java.lang.Throwable) iOException36);
        iOException34.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException39 = new java.io.IOException();
        java.io.IOException iOException40 = new java.io.IOException();
        iOException39.addSuppressed((java.lang.Throwable) iOException40);
        iOException36.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException43 = new java.io.IOException();
        java.io.IOException iOException44 = new java.io.IOException();
        java.io.IOException iOException45 = new java.io.IOException();
        iOException44.addSuppressed((java.lang.Throwable) iOException45);
        iOException43.addSuppressed((java.lang.Throwable) iOException45);
        java.io.IOException iOException48 = new java.io.IOException();
        java.io.IOException iOException49 = new java.io.IOException();
        iOException48.addSuppressed((java.lang.Throwable) iOException49);
        iOException45.addSuppressed((java.lang.Throwable) iOException49);
        java.io.IOException iOException52 = new java.io.IOException((java.lang.Throwable) iOException49);
        iOException36.addSuppressed((java.lang.Throwable) iOException49);
        java.io.IOException iOException55 = new java.io.IOException("StrTokenizer[]");
        iOException36.addSuppressed((java.lang.Throwable) iOException55);
        java.io.IOException iOException57 = new java.io.IOException();
        java.io.IOException iOException58 = new java.io.IOException();
        iOException57.addSuppressed((java.lang.Throwable) iOException58);
        java.lang.Throwable[] throwableArray60 = iOException58.getSuppressed();
        java.io.IOException iOException61 = new java.io.IOException();
        java.io.IOException iOException62 = new java.io.IOException();
        iOException61.addSuppressed((java.lang.Throwable) iOException62);
        iOException58.addSuppressed((java.lang.Throwable) iOException61);
        java.io.IOException iOException65 = new java.io.IOException();
        java.io.IOException iOException66 = new java.io.IOException();
        iOException65.addSuppressed((java.lang.Throwable) iOException66);
        java.lang.Throwable[] throwableArray68 = iOException66.getSuppressed();
        java.io.IOException iOException69 = new java.io.IOException();
        java.io.IOException iOException70 = new java.io.IOException();
        iOException69.addSuppressed((java.lang.Throwable) iOException70);
        iOException66.addSuppressed((java.lang.Throwable) iOException69);
        iOException61.addSuppressed((java.lang.Throwable) iOException66);
        iOException36.addSuppressed((java.lang.Throwable) iOException61);
        iOException29.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException76 = new java.io.IOException("!ih100.00.0", (java.lang.Throwable) iOException29);
        iOException5.addSuppressed((java.lang.Throwable) iOException29);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test16341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16341");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.lang.Object obj53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendFixedWidthPadLeft(obj53, (int) (byte) 1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.setLength(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.reverse();
        int int63 = strBuilder61.size();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
    }

    @Test
    public void test16342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16342");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder(9);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.append((java.lang.CharSequence) strBuilder3);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.replaceFirst('4', 'f');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        int int23 = strBuilder12.indexOf(strMatcher17, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder12.replaceAll("i!", "!ih100.0");
        int int27 = strBuilder26.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendln(22);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean48 = strBuilder39.contains(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder37.deleteAll(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean60 = strBuilder51.contains(strMatcher59);
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder51.appendln(stringBuffer61);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder51.replaceFirst(strMatcher63, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder51.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder49.appendln((java.lang.Object) (short) 1);
        java.lang.String str71 = strBuilder69.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.deleteAll("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.insert((int) (byte) 1, (long) (short) 0);
        int int78 = strBuilder76.indexOf("sehi!!");
        boolean boolean80 = strBuilder76.contains("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder29.append(strBuilder76, (int) (byte) 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder76.appendFixedWidthPadRight(44, 48, 'v');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder76.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder7.append(strBuilder89, 13, 36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence95 = strBuilder92.subSequence(76, 42);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 42");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 35 + "'", int27 == 35);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test16343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16343");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.append(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert((int) (short) 1, (float) 1L);
        char[] charArray38 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder15.append(charArray38);
        boolean boolean41 = strBuilder39.startsWith("100.0100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.replaceFirst('h', 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.appendln('2');
        boolean boolean49 = strBuilder47.contains('4');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "h1.0i!######true");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "h1.0i!######true");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[h, 1, ., 0, i, !, #, #, #, #, #, #, t, r, u, e]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test16344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16344");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteCharAt(35);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendln(stringBuffer19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder9.append("");
        java.lang.String str23 = strBuilder22.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder7.appendFixedWidthPadLeft((java.lang.Object) strBuilder22, 0, '.');
        java.lang.String str28 = strBuilder22.rightString(80);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!\n" + "'", str28, "hi!\n");
    }

    @Test
    public void test16345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16345");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray5 = iOException1.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray7 = iOException6.getSuppressed();
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("i!hi!!ih100.04\nStrTokenizer[not tokenized yet]", (java.lang.Throwable) iOException6);
        java.lang.String str10 = iOException9.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.io.IOException: i!hi!!ih100.04\nStrTokenizer[not tokenized yet]" + "'", str10, "java.io.IOException: i!hi!!ih100.04\nStrTokenizer[not tokenized yet]");
    }

    @Test
    public void test16346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16346");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer21.reset();
        java.lang.String str23 = strTokenizer22.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.setQuoteChar('h');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("", "hi!");
        int int43 = strBuilder41.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.appendln(stringBuffer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder45.replaceFirst(strMatcher57, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder41.appendFixedWidthPadLeft((java.lang.Object) strBuilder59, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder41.reverse();
        char[] charArray66 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a');
        char[] charArray72 = strBuilder41.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setEmptyTokenAsNull(true);
        java.lang.String str77 = strTokenizer76.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer76.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer26.setIgnoredMatcher(strMatcher78);
        java.lang.String str80 = strTokenizer79.previousToken();
        java.util.List<java.lang.String> strList81 = strTokenizer79.getTokenList();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "!ih100.0" + "'", str23, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "#a" + "'", str77, "#a");
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strList81);
    }

    @Test
    public void test16347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16347");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        java.lang.String str19 = strBuilder16.leftString(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll("", "hi!");
        int int36 = strBuilder34.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.appendln(stringBuffer48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.replaceFirst(strMatcher50, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) strBuilder52, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder34.reverse();
        char[] charArray59 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a');
        char[] charArray65 = strBuilder34.getChars(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder16.append(strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((long) 24);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.append(strBuilder69, 7, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.setNewLineText("hi!");
        java.lang.String str77 = strBuilder74.midString(27, 111);
        java.lang.String str78 = strBuilder74.getNullText();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!" + "'", str19, "!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test16348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16348");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(9);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.insert(0, false);
        java.io.Writer writer11 = strBuilder10.asWriter();
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.lang.Throwable[] throwableArray16 = iOException12.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.appendWithSeparators((java.lang.Object[]) throwableArray16, "hi!3!..................................java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendWithSeparators((java.lang.Object[]) throwableArray16, "!ih100.010.0i!hi!97!!!\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test16349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16349");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        java.util.stream.IntStream intStream24 = strBuilder23.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean35 = strBuilder26.contains(strMatcher34);
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder26.appendln(stringBuffer36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.replaceFirst(strMatcher38, "hi!");
        int int41 = strBuilder23.indexOf(strMatcher38);
        int int43 = strBuilder16.indexOf(strMatcher38, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder16.replaceAll('!', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.setCharAt(2, '4');
        char[] charArray52 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        char[] charArray62 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        java.util.stream.IntStream intStream68 = strBuilder67.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.deleteFirst(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer59.reset(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer57.reset(charArray62);
        char[] charArray77 = strBuilder46.getChars(charArray62);
        char[] charArray78 = strBuilder1.getChars(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(intStream68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#i4100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#i4100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, i, 4, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#i4100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#i4100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, i, 4, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test16350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16350");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendSeparator("0!");
        int int17 = strBuilder14.lastIndexOf("sehi!#18", 0);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test16351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16351");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.044");
    }

    @Test
    public void test16352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16352");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(stringBuffer12);
        boolean boolean15 = strBuilder8.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder8.replaceAll("", "hi!true");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test16353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16353");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaajava.io.IOExce", "i!");
    }

    @Test
    public void test16354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16354");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        java.lang.String str19 = strBuilder16.leftString(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.replaceAll("i!hi!97!!!", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendSeparator('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("f0alsehi!1\n10", "!ih100.01");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.appendSeparator('!', 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.appendln(true);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!" + "'", str19, "!");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test16355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16355");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert(0, (java.lang.Object) (byte) 1);
        java.lang.String str19 = strBuilder18.toString();
        int int22 = strBuilder18.indexOf(' ', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll('v');
        java.lang.String str29 = strBuilder26.midString((int) 'a', 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.insert(172, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 172");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1hi!hi!" + "'", str19, "1hi!hi!");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test16356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16356");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        int int33 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst('#', '#');
        char[] charArray56 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder50.append(charArray56);
        int int61 = strBuilder59.lastIndexOf("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.appendFixedWidthPadLeft((int) 'h', (int) (short) 1, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder59.appendln((float) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[!ih100.0]", strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder59.deleteFirst(strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("kenizer");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: ", strMatcher71, strMatcher75);
        int int78 = strBuilder1.indexOf(strMatcher75, 43);
        boolean boolean80 = strBuilder1.startsWith("!ih100.00\n!ih0\n");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 11 + "'", int33 == 11);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test16357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16357");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("ih100.011\n", 'i', '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("!#h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterChar('3');
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test16358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16358");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("false18.01.", 'i', ' ');
    }

    @Test
    public void test16359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16359");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.replaceAll('#', 'a');
        boolean boolean35 = strBuilder15.equals((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.replaceFirst("hi!\n", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendln((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendSeparator('.', '.');
        int int48 = strBuilder42.indexOf("hi!#java.io.IOException              ", 18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.deleteAll('f');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = strBuilder42.substring(6, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test16360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16360");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replace(strMatcher6, "", 0, (int) '#', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("0.001hi !ih100.0\n\n", "ih100.010.0i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendSeparator('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.deleteAll(strMatcher18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.setCharAt(81, 'v');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 81");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test16361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16361");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln((double) 22);
        java.util.stream.IntStream intStream13 = strBuilder7.chars();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
    }

    @Test
    public void test16362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16362");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer2.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer2.setDelimiterString("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setEmptyTokenAsNull(true);
        java.lang.Object obj32 = strTokenizer31.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer31.setIgnoredChar('1');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer34);
    }

    @Test
    public void test16363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16363");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendPadding(0, ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.deleteCharAt(72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test16364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16364");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer24.setQuoteMatcher(strMatcher44);
        char[] charArray50 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer47.reset(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer54, "!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setIgnoredChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer54.setIgnoredChar('i');
        int int61 = strTokenizer54.nextIndex();
        java.lang.String str62 = strTokenizer54.getContent();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#a" + "'", str62, "#a");
    }

    @Test
    public void test16365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16365");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.replaceFirst(strMatcher4, "i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln((double) 62);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test16366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16366");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!3\000\000\000\000!                 ");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        java.lang.String str18 = strBuilder13.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.append("");
        char[] charArray21 = strBuilder13.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '.', '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer1.reset(charArray21);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!" + "'", str18, "!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strTokenizer26);
    }

    @Test
    public void test16367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16367");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        int int32 = strBuilder30.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean43 = strBuilder34.contains(strMatcher42);
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder34.appendln(stringBuffer44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder34.replaceFirst(strMatcher46, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder30.appendFixedWidthPadLeft((java.lang.Object) strBuilder48, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder30.reverse();
        char[] charArray55 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a');
        char[] charArray61 = strBuilder30.getChars(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        int int66 = strBuilder14.lastIndexOf(strMatcher64, 4);
        java.io.Writer writer67 = strBuilder14.asWriter();
        writer67.write("java.io.IOException: java.io.IOException: java.io.IOException");
        java.io.Writer writer71 = writer67.append('h');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(writer67);
        org.junit.Assert.assertNotNull(writer71);
    }

    @Test
    public void test16368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16368");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.appendln((float) (byte) 10);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        iOException17.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray25 = iOException21.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.appendWithSeparators((java.lang.Object[]) throwableArray25, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.replaceAll(strMatcher59, "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder41.replaceAll(strMatcher59, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder27.replace(strMatcher59, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0", (int) (short) 0, 0, 18);
        java.lang.CharSequence charSequence71 = strBuilder68.subSequence(0, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.appendFixedWidthPadRight(39, 35, 'e');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "h" + "'", charSequence71, "h");
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test16369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16369");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        java.util.stream.IntStream intStream32 = strBuilder1.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder1.appendSeparator(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((double) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln("!ih100.04\nStrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.replaceAll("java.io.IOException: hi!", "#i4100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.appendln((float) 4);
        java.lang.String str47 = strBuilder45.rightString(580);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "!ih 10.0!ih100.04\nStrTokenizer[not tokenized yet]\n4.0\n" + "'", str47, "!ih 10.0!ih100.04\nStrTokenizer[not tokenized yet]\n4.0\n");
    }

    @Test
    public void test16370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16370");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder2.replaceAll(strMatcher8, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean31 = strTokenizer30.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder2.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer30, "!ih100.0");
        char[] charArray36 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder2.appendln(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ', ' ');
        int int45 = strTokenizer44.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strTokenizer44.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("i!", strMatcher46, strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strMatcher46);
    }

    @Test
    public void test16371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16371");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!97!!!!!!!!!!!!!!!!!", "hi!!ih100.0#a\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.add("#\n!ih0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test16372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16372");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.insert((int) (short) 0, "i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("", "hi!");
        int int40 = strBuilder38.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder55.deleteAll(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln("hi!");
        boolean boolean73 = strBuilder47.equals(strBuilder70);
        char[] charArray74 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder45.appendln(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.setCharAt((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln("hi!97!!!!!!!!!!!!!!!!!");
        int int83 = strBuilder78.lastIndexOf('f', 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.appendln((float) 4L);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder20.appendln((java.lang.Object) strBuilder78);
        int int88 = strBuilder78.indexOf('3');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test16373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16373");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.setQuoteMatcher(strMatcher64);
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.reset(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer24.reset(charArray70);
        int int76 = strTokenizer75.nextIndex();
        int int77 = strTokenizer75.size();
        int int78 = strTokenizer75.size();
        java.lang.String[] strArray79 = strTokenizer75.getTokenArray();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(strArray79);
    }

    @Test
    public void test16374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16374");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setEmptyTokenAsNull(false);
        java.lang.String str29 = strTokenizer26.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer26.setDelimiterMatcher(strMatcher32);
        boolean boolean36 = strTokenizer26.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList37 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder10.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList37, "hi!3");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterMatcher(strMatcher42);
        java.util.List<java.lang.String> strList44 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendAll((java.lang.Iterable<java.lang.String>) strList44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNullText("f");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("falsehi!h1.0i!######true\n4444444444444444444", "!!ih100.01");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.replaceAll("!ih", "0.001hi 10");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "!ih100.0" + "'", str29, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test16375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16375");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.replaceAll('#', 'a');
        boolean boolean35 = strBuilder15.equals((java.lang.Object) strBuilder30);
        java.lang.StringBuffer stringBuffer36 = strBuilder30.toStringBuffer();
        int int39 = strBuilder30.indexOf("#a", 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        int int55 = strBuilder44.indexOf(strMatcher49, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder44.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder44.appendln(strBuilder59, 9, 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.append('!');
        int int68 = strBuilder59.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln("!ih100.1.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder30.appendln(strBuilder69);
        char[] charArray77 = strBuilder69.toCharArray(44, (int) 'v');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder69.delete(76, 141);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(stringBuffer36);
        org.junit.Assert.assertEquals(stringBuffer36.toString(), "!ih100.0");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 35 + "'", int68 == 35);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), ".00\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), ".00\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[., 0, 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test16376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16376");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        boolean boolean34 = strBuilder1.startsWith("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendFixedWidthPadRight((int) '#', 1, '4');
        int int51 = strBuilder49.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceAll("", "hi!");
        int int71 = strBuilder69.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer80 = strBuilder79.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder54.append(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder1.append(stringBuffer80);
        int int83 = strBuilder82.length();
        boolean boolean85 = strBuilder82.endsWith("hi!falsefalse");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 20 + "'", int83 == 20);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test16377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16377");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendSeparator('a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer20.setQuoteMatcher(strMatcher40);
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer43.reset(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer50.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setEmptyTokenAsNull(false);
        java.lang.String[] strArray54 = strTokenizer53.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder11.appendAll((java.lang.Object[]) strArray54);
        int int57 = strBuilder11.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder11.append(81);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test16378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16378");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendSeparator("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.setNullText("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.append('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder13.appendFixedWidthPadRight(84, 80, 'h');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test16379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16379");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.close();
        writer24.write(12);
        java.io.Writer writer29 = writer24.append('a');
        java.io.Writer writer31 = writer29.append('a');
        java.lang.CharSequence charSequence32 = null;
        java.io.Writer writer33 = writer29.append(charSequence32);
        java.io.Writer writer35 = writer29.append('1');
        // The following exception was thrown during execution in test generation
        try {
            writer29.write("hi!a\n", 36, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertNotNull(writer35);
    }

    @Test
    public void test16380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16380");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.insert((int) (short) 1, "\n0!ie");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        int int41 = strBuilder39.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean67 = strBuilder58.contains(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder56.deleteAll(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln("hi!");
        boolean boolean74 = strBuilder48.equals(strBuilder71);
        char[] charArray75 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder46.appendln(charArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.setCharAt((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder76.appendln('4');
        boolean boolean83 = strBuilder24.equals(strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder24.trim();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test16381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16381");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.replaceFirst("StrTokenizer[!ih100.0]", "!ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoredChar(' ');
        java.lang.String str25 = strTokenizer24.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer24.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer24.setDelimiterString("StrTokenizer[!ih100.0]");
        java.lang.Object obj30 = strTokenizer24.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer24.setIgnoredMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer24.getDelimiterMatcher();
        boolean boolean35 = strBuilder11.contains(strMatcher34);
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder11.append(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder48.deleteAll("");
        java.lang.String str61 = strBuilder48.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder48.append(0L);
        char[] charArray64 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, '1', '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder46.appendln((java.lang.Object) strTokenizer69);
        java.lang.Object obj71 = strTokenizer69.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer69.setDelimiterString("100.00\n010.0hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer69.setDelimiterString("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer75.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "!ih0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "!ih0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[!, i, h, 0]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test16382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16382");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append('#');
        int int17 = strBuilder15.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.append((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        int int34 = strBuilder23.indexOf(strMatcher28, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int41 = strBuilder37.lastIndexOf(strMatcher39, 1);
        int int42 = strBuilder18.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("sehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator('4', (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst('i');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 6 + "'", int42 == 6);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test16383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16383");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        java.lang.String str19 = strBuilder16.leftString(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.replaceAll("i!hi!97!!!", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNull();
        java.lang.String str26 = strBuilder23.midString((int) (byte) 100, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.insert(0, "!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.replaceAll('#', 'a');
        boolean boolean65 = strBuilder45.equals((java.lang.Object) strBuilder60);
        java.lang.StringBuffer stringBuffer66 = strBuilder60.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder29.append(stringBuffer66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charMatcher('h');
        int int87 = strBuilder79.indexOf(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder29.replaceFirst(strMatcher86, "Tokenizer[!ih100.0]");
        java.lang.String str90 = strBuilder89.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder89.delete(0, 0);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!" + "'", str19, "!");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(stringBuffer66);
        org.junit.Assert.assertEquals(stringBuffer66.toString(), "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test16384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16384");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("100.00\n010.0hi!\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
    }

    @Test
    public void test16385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16385");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append((float) (byte) 100);
        java.lang.CharSequence charSequence15 = strBuilder12.subSequence(1, (int) (short) 1);
        int int18 = strBuilder12.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendPadding((int) (short) -1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.append(7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        int int42 = strBuilder40.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder40.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln(stringBuffer61);
        char[] charArray65 = strBuilder60.toCharArray((int) (byte) 1, (int) '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer25.reset(charArray65);
        char[] charArray67 = strBuilder23.getChars(charArray65);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(" ih100.00", strMatcher68, strMatcher70);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer71.add("StrTokenizer[#a]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "!ih100.07h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "!ih100.07h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[!, i, h, 1, 0, 0, ., 0, 7, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "!ih100.07h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "!ih100.07h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[!, i, h, 1, 0, 0, ., 0, 7, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strMatcher68);
    }

    @Test
    public void test16386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16386");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceAll("", "hi!");
        int int20 = strBuilder18.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean31 = strBuilder22.contains(strMatcher30);
        java.lang.StringBuffer stringBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder22.appendln(stringBuffer32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.replaceFirst(strMatcher34, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.appendFixedWidthPadLeft((java.lang.Object) strBuilder36, 1, ' ');
        char[] charArray40 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder1.appendln(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer42.reset();
        java.lang.String str44 = strTokenizer43.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getDelimiterMatcher();
        java.util.List<java.lang.String> strList46 = strTokenizer43.getTokenList();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "!ih100.0!" + "'", str44, "!ih100.0!");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strList46);
    }

    @Test
    public void test16387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16387");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.trim();
        java.lang.String str29 = strBuilder27.rightString((int) (short) 1);
        char[] charArray30 = null;
        char[] charArray31 = strBuilder27.getChars(charArray30);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.append("java.io.IOException: hi!hi!-1.0", 52, 112);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "f" + "'", str29, "f");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "01\na0!iheslaf");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "01\na0!iheslaf");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[0, 1, \n, a, 0, !, i, h, e, s, l, a, f]");
    }

    @Test
    public void test16388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16388");
        java.io.IOException iOException1 = new java.io.IOException("ih100.0htrue");
    }

    @Test
    public void test16389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16389");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteAll('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.deleteAll("");
        java.lang.String str22 = strBuilder9.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder9.append((int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder7.appendln(strBuilder24);
        java.lang.String str26 = strBuilder24.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.setNullText("i!35");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        java.util.stream.IntStream intStream34 = strBuilder33.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.append(strBuilder38, 11, 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNullText("f0alsehi!1\n      10");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder24.appendln(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test16390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16390");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strBuilder28.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setEmptyTokenAsNull(false);
        java.lang.String str35 = strTokenizer32.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer32.setDelimiterMatcher(strMatcher38);
        boolean boolean42 = strTokenizer32.hasPrevious();
        char[] charArray45 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer32.reset(charArray45);
        boolean boolean60 = strTokenizer59.isIgnoreEmptyTokens();
        java.lang.String str61 = strTokenizer59.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer59.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer59, "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((double) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!a\nh", '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer72.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer70.setQuoteMatcher(strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer70.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer70.setIgnoredMatcher(strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.setDelimiterString("ih100.011\n");
        char[] charArray83 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, "!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer78.reset(charArray83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder66.insert(90, (java.lang.Object) strTokenizer78);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 90");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "!ih100.0" + "'", str35, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#a" + "'", str61, "#a");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer90);
    }

    @Test
    public void test16391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16391");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!\000\000\000\000\000\000\000\000\000hi!97!!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test16392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16392");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("!ih", "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("!ih100.0#a", "hi!97!!!!!!!!!!!!!!!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(78);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.minimizeCapacity();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test16393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16393");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst(strMatcher3, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.replaceAll(strMatcher13, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean19 = strBuilder10.contains(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder8.deleteAll(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((int) (byte) 10);
        char[] charArray30 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder26.insert(0, charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: java.io.IOException: StrTokenizer[not tokenized yet]", strMatcher47);
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
    }

    @Test
    public void test16394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16394");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        char[] charArray36 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.replaceAll('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln((double) 2);
        int int44 = strBuilder41.indexOf('4', 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        java.util.stream.IntStream intStream50 = strBuilder49.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.setCharAt((int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder41.appendFixedWidthPadLeft((java.lang.Object) strBuilder49, 33, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder67.replaceAll(strMatcher70, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean76 = strBuilder67.contains(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder65.deleteAll(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln('a');
        java.lang.String str82 = strBuilder81.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder81.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder81.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln((long) (short) 1);
        java.lang.String str89 = strBuilder88.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder88.insert(1, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder57.appendln(strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.replaceAll("100.0#", "i!45210.0hhhhhhhhhhhh");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test16395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16395");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((long) 23);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendFixedWidthPadLeft(105, 25, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendPadding(115, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('#', '#');
        java.util.stream.IntStream intStream39 = strBuilder38.chars();
        boolean boolean41 = strBuilder38.startsWith("java.io.IOException: !ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.deleteFirst("0.001hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", "\000\000\000");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer46.getQuoteMatcher();
        int int48 = strBuilder38.indexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder19.replace(strMatcher47, "0.001hi!hi!30.001hi 1100.0##fals", 24, 145, 242);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test16396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16396");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((long) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append((double) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.appendln("hi!!ih100.00105!!!!!!!!!!!!!!", (int) (byte) 1, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test16397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16397");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln((long) '#');
        boolean boolean21 = strBuilder11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder11.appendSeparator("!ih100.0\n4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendSeparator('0', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadLeft(100, 16, 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert(16, true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test16398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16398");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        int int33 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNull();
        java.io.Writer writer36 = strBuilder35.asWriter();
        writer36.write("java.io.IOException: ");
        writer36.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        java.util.stream.IntStream intStream45 = strBuilder44.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst('.');
        java.io.Writer writer60 = writer36.append((java.lang.CharSequence) strBuilder57);
        writer36.flush();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 11 + "'", int33 == 11);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(writer60);
    }

    @Test
    public void test16399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16399");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        int int31 = strBuilder11.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder11.setNewLineText("hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder11.deleteAll("4a");
        int int36 = strBuilder11.length();
        int int39 = strBuilder11.lastIndexOf('4', (int) 'a');
        char[] charArray42 = strBuilder11.toCharArray((int) (short) 10, (int) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder11.reverse();
        java.util.stream.IntStream intStream44 = strBuilder11.codePoints();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 30 + "'", int36 == 30);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "rTokenizer[!ih100.0]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "rTokenizer[!ih100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[r, T, o, k, e, n, i, z, e, r, [, !, i, h, 1, 0, 0, ., 0, ]]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
    }

    @Test
    public void test16400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16400");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.deleteCharAt(9);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.setLength(20);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!!ih100.01");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteFirst(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test16401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16401");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(3, "!ih");
        java.io.Reader reader31 = strBuilder27.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(false);
        java.lang.String str50 = strTokenizer47.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer47.setDelimiterMatcher(strMatcher53);
        boolean boolean57 = strTokenizer47.hasPrevious();
        char[] charArray60 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer47.reset(charArray60);
        int int75 = reader31.read(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, '1', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer78.reset();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(reader31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "!ih100.0" + "'", str50, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "fa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "fa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[f, a]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test16402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16402");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0htrue", '0', '5');
    }

    @Test
    public void test16403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16403");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst('!', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendln('!');
        int int35 = strBuilder31.size();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
    }

    @Test
    public void test16404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16404");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.lang.String str54 = strBuilder39.substring(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder39.appendln('4');
        java.lang.String str58 = strBuilder57.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.append(48);
        int int62 = strBuilder60.lastIndexOf("falsehi!!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendSeparator('h', 78);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "falsehi!" + "'", str54, "falsehi!");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test16405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16405");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getIgnoredMatcher();
        java.lang.Object obj19 = strTokenizer17.clone();
        boolean boolean20 = strTokenizer17.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = strTokenizer17.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test16406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16406");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.append(strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder7.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.replace(8, 12, "sehi!!");
        boolean boolean39 = strBuilder37.contains('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendln('f');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("", "hi!");
        java.lang.String str59 = strBuilder54.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.append("");
        char[] charArray62 = strBuilder54.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder37.insert(92, (java.lang.Object) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.append((float) 244);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendSeparator('e', 25);
        boolean boolean72 = strBuilder70.contains('4');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "!" + "'", str59, "!");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test16407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16407");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        boolean boolean34 = strBuilder32.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder14.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoredChar(' ');
        java.lang.String str44 = strTokenizer43.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder14.deleteFirst(strMatcher45);
        java.util.stream.IntStream intStream47 = strBuilder46.codePoints();
        java.io.Reader reader48 = strBuilder46.asReader();
        boolean boolean49 = reader48.markSupported();
        int int50 = reader48.read();
        boolean boolean51 = reader48.markSupported();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 33 + "'", int50 == 33);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test16408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16408");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll('h');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int11 = strBuilder9.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.deleteAll(strMatcher50);
        boolean boolean53 = strBuilder26.contains(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer14.setQuoteMatcher(strMatcher50);
        java.lang.String str55 = strTokenizer54.previousToken();
        boolean boolean56 = strBuilder9.equals((java.lang.Object) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder9.setNewLineText("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append(0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.replaceAll(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceAll("", "hi!");
        java.lang.String str79 = strBuilder74.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.append("");
        char[] charArray82 = strBuilder74.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder74.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.deleteAll("!ih100.0.h");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder87.appendNull();
        char[] charArray89 = strBuilder88.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, "hi!\n10");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder62.appendln(charArray89);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "!" + "'", str79, "!");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test16409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16409");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.append((float) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendFixedWidthPadLeft(0, 0, 'a');
        int int29 = strBuilder24.size();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 12 + "'", int29 == 12);
    }

    @Test
    public void test16410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16410");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder19.append((long) (byte) 1);
        java.io.IOException iOException36 = new java.io.IOException();
        java.io.IOException iOException37 = new java.io.IOException();
        iOException36.addSuppressed((java.lang.Throwable) iOException37);
        java.lang.Throwable[] throwableArray39 = iOException37.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.appendAll((java.lang.Object[]) throwableArray39);
        java.lang.String str43 = strBuilder19.midString((int) (short) 1, (int) '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder19.deleteAll('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder19.deleteAll("hi!!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "i!1" + "'", str43, "i!1");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test16411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16411");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.append(charArray21);
        int int26 = strBuilder24.lastIndexOf("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendFixedWidthPadLeft((int) 'h', (int) (short) 1, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.appendln((float) (byte) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[!ih100.0]", strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.deleteFirst(strMatcher36);
        java.lang.String str39 = strBuilder38.getNullText();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.replaceAll(strMatcher40, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("#################################################");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
    }

    @Test
    public void test16412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16412");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteAll("!ih100.010.0-11\n#######################StrTokenizer[not tokenized yet]true");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((double) 4);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test16413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16413");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean67 = strBuilder58.contains(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder46.replaceAll(strMatcher52, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer44.setDelimiterMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
    }

    @Test
    public void test16414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16414");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.append((float) 11);
        java.lang.StringBuffer stringBuffer8 = strBuilder5.toStringBuffer();
        int int9 = strBuilder5.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendSeparator('f');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(stringBuffer8);
        org.junit.Assert.assertEquals(stringBuffer8.toString(), "hi!11.0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test16415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16415");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder19.setLength(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder19.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.minimizeCapacity();
        boolean boolean41 = strBuilder36.startsWith("true\n");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test16416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16416");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer2.setEmptyTokenAsNull(true);
        java.lang.String str28 = strTokenizer27.next();
        java.lang.String str29 = strTokenizer27.nextToken();
        java.lang.Object obj30 = strTokenizer27.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer27.setDelimiterString("!ih100.0.h");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteCharAt(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.trim();
        java.lang.Object obj50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(obj50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer53.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean75 = strBuilder66.contains(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer54.setQuoteMatcher(strMatcher74);
        char[] charArray80 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer77.reset(charArray80);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, strMatcher86);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder49.replaceFirst(strMatcher88, "falsehi!#hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer32.setIgnoredMatcher(strMatcher88);
        java.lang.String str92 = strTokenizer32.getContent();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str93 = strTokenizer32.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
    }

    @Test
    public void test16417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16417");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer2.setEmptyTokenAsNull(true);
        java.lang.String str28 = strTokenizer27.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.reset();
        java.lang.String str30 = strTokenizer29.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test16418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16418");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendFixedWidthPadRight((int) (short) 10, (int) ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.ensureCapacity(11);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((long) 52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("hi!a\nh", '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer26.setQuoteMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder38.deleteAll(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean61 = strBuilder52.contains(strMatcher60);
        java.lang.StringBuffer stringBuffer62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder52.appendln(stringBuffer62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder52.replaceFirst(strMatcher64, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder52.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder50.appendln((java.lang.Object) (short) 1);
        java.lang.String str72 = strBuilder70.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder70.deleteAll("StrTokenizer[!ih100.0]");
        int int75 = strBuilder74.size();
        char[] charArray76 = null;
        char[] charArray77 = strBuilder74.getChars(charArray76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, '#', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strTokenizer83.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer80.setDelimiterMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer30.setTrimmerMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer86, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.appendln((float) 0);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "falsehi!1\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "falsehi!1\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[f, a, l, s, e, h, i, !, 1, \n]");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test16419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16419");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.append(strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("", "hi!");
        int int40 = strBuilder38.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder42.appendln(stringBuffer52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder42.replaceFirst(strMatcher54, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder38.appendFixedWidthPadLeft((java.lang.Object) strBuilder56, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.append(true);
        boolean boolean64 = strBuilder21.equals(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder21.appendSeparator('3');
        java.io.Writer writer67 = strBuilder66.asWriter();
        writer67.close();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(writer67);
    }

    @Test
    public void test16420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16420");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        int int14 = strBuilder1.indexOf('h', 6);
        int int16 = strBuilder1.indexOf("!ihfalsehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean35 = strBuilder26.contains(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.deleteAll(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln('a');
        boolean boolean42 = strBuilder38.contains('#');
        char[] charArray43 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder1.appendln(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '1', '1');
        int int48 = strTokenizer47.nextIndex();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "falsehi!0a\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "falsehi!0a\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[f, a, l, s, e, h, i, !, 0, a, \n]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test16421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16421");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.append((double) 11);
        java.io.Writer writer24 = strBuilder11.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder11.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.setNullText("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        java.lang.String str28 = strBuilder11.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((float) (byte) 100);
        boolean boolean46 = strBuilder33.equalsIgnoreCase(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator('!', 12);
        boolean boolean52 = strBuilder11.equals((java.lang.Object) strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendln((double) 246);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0" + "'", str28, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test16422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16422");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean34 = strBuilder25.contains(strMatcher33);
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder25.appendln(stringBuffer35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder25.replaceFirst(strMatcher37, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.insert(0, (java.lang.Object) (byte) 1);
        java.lang.String str43 = strBuilder42.toString();
        int int46 = strBuilder42.indexOf(' ', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(stringBuffer51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.setNullText("i");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll('a', '4');
        int int59 = strBuilder57.lastIndexOf("hi!hi!");
        java.lang.String str61 = strBuilder57.rightString(7);
        char[] charArray62 = strBuilder57.toCharArray();
        char[] charArray63 = strBuilder42.getChars(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder21.appendln(charArray63);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1hi!hi!" + "'", str43, "1hi!hi!");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "100.00\n" + "'", str61, "100.00\n");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "1hi!hi! 0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "1hi!hi! 0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[1, h, i, !, h, i, !,  , 0, \n]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "1hi!hi! 0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "1hi!hi! 0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[1, h, i, !, h, i, !,  , 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test16423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16423");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.String str14 = strBuilder11.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.deleteAll('i');
        int int20 = strBuilder19.capacity();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 35 + "'", int20 == 35);
    }

    @Test
    public void test16424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16424");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" ih100.00");
    }

    @Test
    public void test16425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16425");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("h", 'a', ' ');
        boolean boolean4 = strTokenizer3.isIgnoreEmptyTokens();
        boolean boolean5 = strTokenizer3.hasNext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test16426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16426");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        java.io.Reader reader15 = strBuilder11.asReader();
        reader15.reset();
        int int17 = reader15.read();
        reader15.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 33 + "'", int17 == 33);
    }

    @Test
    public void test16427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16427");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder1.append(' ');
        java.lang.String str28 = strBuilder27.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        int int44 = strBuilder33.indexOf(strMatcher38, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder27.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 100, '.');
        java.io.Writer writer50 = strBuilder49.asWriter();
        writer50.write((int) (short) -1);
        writer50.write("falsehi!0a\n");
        writer50.write(78);
        java.io.Writer writer58 = writer50.append('#');
        writer58.close();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(writer50);
        org.junit.Assert.assertNotNull(writer58);
    }

    @Test
    public void test16428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16428");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendSeparator('!', 1);
        char[] charArray31 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.replaceFirst('h', 'i');
        java.util.stream.IntStream intStream36 = strBuilder30.codePoints();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "!ih100.0a#!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "!ih100.0a#!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[!, i, h, 1, 0, 0, ., 0, a, #, !]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(intStream36);
    }

    @Test
    public void test16429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16429");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        int int19 = strBuilder16.lastIndexOf("!ih100.0", 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.appendFixedWidthPadRight(28, 18, 'f');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer26.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher53, strMatcher67);
        int int70 = strBuilder44.indexOf(strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer27.setDelimiterMatcher(strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getDelimiterMatcher();
        int int74 = strBuilder16.lastIndexOf(strMatcher72, 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder16.append("hi!falsefalse\n-1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst("ih100.00.0#\n", "hi!a");
        int int80 = strBuilder79.size();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 12 + "'", int74 == 12);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 50 + "'", int80 == 50);
    }

    @Test
    public void test16430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16430");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceFirst(strMatcher35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        boolean boolean55 = strBuilder50.endsWith("!ih100.0");
        char char57 = strBuilder50.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        int int63 = strBuilder50.indexOf('#', 100);
        boolean boolean64 = strBuilder38.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder50.deleteFirst('.');
        boolean boolean68 = strBuilder50.startsWith("!ih100.!ih100.00\n010.0hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder50.replaceAll('v', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.append((double) 10.0f);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + char57 + "' != '" + '!' + "'", char57 == '!');
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test16431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16431");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        boolean boolean25 = strTokenizer15.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList26 = strTokenizer15.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer15.reset();
        java.lang.Object obj28 = strTokenizer27.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer27.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher29);
    }

    @Test
    public void test16432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16432");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(stringBuffer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendSeparator("h", "StrTokenizer[not tokenized yet]");
        java.lang.String str20 = strBuilder13.leftString(22);
        java.util.stream.IntStream intStream21 = strBuilder13.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.trim();
        java.lang.String str42 = strBuilder37.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder13.append(strBuilder37);
        java.lang.StringBuffer stringBuffer46 = strBuilder45.toStringBuffer();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!a\nh" + "'", str20, "hi!a\nh");
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(stringBuffer46);
        org.junit.Assert.assertEquals(stringBuffer46.toString(), "hi!a\nh!ih100.0a");
    }

    @Test
    public void test16433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16433");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", "!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer4.getIgnoredMatcher();
        char[] charArray8 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, 'h', ' ');
        int int17 = strMatcher5.isMatch(charArray8, (int) '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strTokenizer18);
    }

    @Test
    public void test16434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16434");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        char[] charArray14 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        char[] charArray29 = strBuilder11.getChars(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '#', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        char[] charArray36 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        char[] charArray46 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        java.util.stream.IntStream intStream52 = strBuilder51.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.deleteFirst(strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer43.reset(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer41.reset(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, "###true1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer33.reset(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        java.util.stream.IntStream intStream69 = strBuilder68.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder68.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteAll("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.appendSeparator("i!", 3);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder76.appendFixedWidthPadRight((java.lang.Object) strMatcher83, 0, '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str89 = strTokenizer88.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer88.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder76.deleteFirst(strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer63.setDelimiterMatcher(strMatcher90);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[!, i, h]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(intStream52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(intStream69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
    }

    @Test
    public void test16435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16435");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder23.replaceAll(strMatcher29, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer15.setTrimmerMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder60.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setEmptyTokenAsNull(false);
        java.lang.String str67 = strTokenizer64.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer64.setDelimiterMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setIgnoredChar('a');
        char[] charArray78 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer73.reset(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer48.reset(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer94.setDelimiterString("!!!!!!!!!!!!!!!!");
        java.lang.String str97 = strTokenizer96.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer96.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "!ih100.0" + "'", str67, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "a" + "'", str97, "a");
        org.junit.Assert.assertNotNull(strTokenizer98);
    }

    @Test
    public void test16436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16436");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.deleteAll('4');
        java.lang.Object obj20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendFixedWidthPadLeft(obj20, 0, '.');
        java.lang.String str25 = strBuilder23.leftString(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendNull();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test16437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16437");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.appendln("!ih");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteCharAt(52);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strBuilder32.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setEmptyTokenAsNull(false);
        java.lang.String str39 = strTokenizer36.next();
        java.lang.String str40 = strTokenizer36.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer36.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer42.reset();
        java.lang.String str44 = strTokenizer43.next();
        java.lang.String str45 = strTokenizer43.toString();
        boolean boolean46 = strTokenizer43.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder20.appendAll((java.util.Iterator<java.lang.String>) strTokenizer43);
        int int48 = strBuilder20.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder67.replaceAll(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder67.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder80.minimizeCapacity();
        boolean boolean83 = strBuilder81.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder63.append((java.lang.CharSequence) strBuilder81);
        int int91 = strBuilder63.lastIndexOf('!', (int) (short) 0);
        java.lang.StringBuffer stringBuffer92 = strBuilder63.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder20.appendln(stringBuffer92, 122, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "!ih100.0" + "'", str39, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "!ih100.0" + "'", str40, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "!ih100.0" + "'", str44, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[!ih100.0]" + "'", str45, "StrTokenizer[!ih100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 104 + "'", int48 == 104);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(stringBuffer92);
        org.junit.Assert.assertEquals(stringBuffer92.toString(), "!ih100.00!ih100.02");
    }

    @Test
    public void test16438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16438");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        boolean boolean25 = reader24.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        int int42 = strBuilder40.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.replaceFirst(strMatcher56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.appendFixedWidthPadLeft((java.lang.Object) strBuilder58, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder40.reverse();
        char[] charArray65 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a');
        char[] charArray71 = strBuilder40.getChars(charArray65);
        int int72 = reader24.read(charArray71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, 'h', '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setIgnoreEmptyTokens(false);
        int int79 = strTokenizer76.previousIndex();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 9 + "'", int72 == 9);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test16439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16439");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.reset(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, "vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test16440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16440");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.String str14 = strBuilder11.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar('a');
        int int18 = strTokenizer15.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean43 = strBuilder34.contains(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer22.setQuoteMatcher(strMatcher42);
        char[] charArray48 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer45.reset(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int58 = strMatcher19.isMatch(charArray48, 0, (int) (short) 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ', '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test16441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16441");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst("StrTokenizer[!ih100.0]", "!ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoredChar(' ');
        java.lang.String str44 = strTokenizer43.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setDelimiterString("StrTokenizer[!ih100.0]");
        java.lang.Object obj49 = strTokenizer43.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer43.setIgnoredMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer43.getDelimiterMatcher();
        boolean boolean54 = strBuilder30.contains(strMatcher53);
        char[] charArray57 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder30.append(charArray57);
        char[] charArray66 = strBuilder15.getChars(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4', 'v');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[!, i, h, 1, 0, 0, ., 0]");
    }

    @Test
    public void test16442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16442");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.clear();
        java.io.Writer writer27 = strBuilder26.asWriter();
        writer27.write("eslafhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        int int46 = strBuilder44.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher68);
        int int71 = strBuilder48.indexOf(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder48.appendln('4');
        int int75 = strBuilder48.indexOf('#');
        int int76 = strBuilder48.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder48.appendln((long) 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.setNewLineText("");
        boolean boolean82 = strBuilder78.endsWith("!ih100.04\nStrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.replaceFirst('f', '1');
        java.io.Writer writer86 = writer27.append((java.lang.CharSequence) strBuilder78);
        writer27.close();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(writer27);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(writer86);
    }

    @Test
    public void test16443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16443");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        java.lang.String str21 = strBuilder15.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder15.append(stringBuffer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((long) 212);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.appendln(30);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        java.util.stream.IntStream intStream60 = strBuilder59.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.minimizeCapacity();
        char[] charArray64 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher74);
        int int77 = strBuilder61.lastIndexOf(strMatcher74, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst(strMatcher80, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.replaceFirst(strMatcher86, "!ih100.0");
        int int89 = strBuilder61.indexOf(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder54.deleteFirst(strMatcher86);
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder54.insert(12, (java.lang.Object) "ih100.0");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "h" + "'", str21, "h");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(intStream60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test16444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16444");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceFirst(strMatcher35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        boolean boolean55 = strBuilder50.endsWith("!ih100.0");
        char char57 = strBuilder50.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        int int63 = strBuilder50.indexOf('#', 100);
        boolean boolean64 = strBuilder38.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher76, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher76, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.appendSeparator('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder85.append(' ');
        java.util.Iterator<java.lang.String> strItor91 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.appendAll(strItor91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.deleteAll("!hi!10aaaaaaaaaaaaaa");
        java.lang.String str96 = strBuilder92.rightString(33);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + char57 + "' != '" + '!' + "'", char57 == '!');
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "0.0StrTokenizer[!ih100.0]hi!hi!a " + "'", str96, "0.0StrTokenizer[!ih100.0]hi!hi!a ");
    }

    @Test
    public void test16445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16445");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("!ih", "StrTokenizer[]");
        int int22 = strBuilder19.lastIndexOf("!ih100.0", (int) 'h');
        boolean boolean23 = strBuilder19.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.minimizeCapacity();
        int int25 = strBuilder19.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.append(false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 13 + "'", int25 == 13);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test16446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16446");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.reset(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '#', '1');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoredChar(' ');
        char[] charArray44 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '4');
        java.lang.String str50 = strTokenizer49.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer49.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer39.setDelimiterMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer39.setQuoteChar('a');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#a" + "'", str50, "#a");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
    }

    @Test
    public void test16447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16447");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        reader53.reset();
        reader53.reset();
        int int56 = reader53.read();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 33 + "'", int56 == 33);
    }

    @Test
    public void test16448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16448");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        java.lang.String str33 = strBuilder28.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.replaceFirst(strMatcher37, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendSeparator('!', 1);
        char[] charArray48 = strBuilder47.toCharArray();
        char[] charArray49 = strBuilder14.getChars(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("falsehi!10###########");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.reset("!!!!!!!!!!!!!!!!");
        java.lang.String str56 = strTokenizer55.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer55.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "!" + "'", str33, "!");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "!ih100.00#!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "!ih100.00#!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[!, i, h, 1, 0, 0, ., 0, 0, #, !]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "!ih100.00#!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "!ih100.00#!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[!, i, h, 1, 0, 0, ., 0, 0, #, !]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "!!!!!!!!!!!!!!!!" + "'", str56, "!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertNotNull(strMatcher57);
    }

    @Test
    public void test16449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16449");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        int int27 = strBuilder25.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher49);
        int int52 = strBuilder29.indexOf(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder29.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean75 = strBuilder66.contains(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder29.deleteFirst(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("hi!\n", strMatcher74);
        java.lang.String str79 = strTokenizer78.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer78.setQuoteChar('4');
        java.lang.String str82 = strTokenizer78.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer78.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer9.setDelimiterMatcher(strMatcher83);
        java.lang.Object obj85 = strTokenizer84.clone();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!\n" + "'", str82, "hi!\n");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test16450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16450");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        java.util.stream.IntStream intStream24 = strBuilder7.codePoints();
        java.util.stream.IntStream intStream25 = strBuilder7.chars();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(intStream25);
    }

    @Test
    public void test16451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16451");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder30.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst("StrTokenizer[!ih100.0]", "!ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoredChar(' ');
        java.lang.String str44 = strTokenizer43.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setDelimiterString("StrTokenizer[!ih100.0]");
        java.lang.Object obj49 = strTokenizer43.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer43.setIgnoredMatcher(strMatcher51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer43.getDelimiterMatcher();
        boolean boolean54 = strBuilder30.contains(strMatcher53);
        char[] charArray57 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder30.append(charArray57);
        char[] charArray66 = strBuilder15.getChars(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, '#');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[!, i, h, 1, 0, 0, ., 0]");
    }

    @Test
    public void test16452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16452");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder23.replaceAll(strMatcher29, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean52 = strTokenizer51.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer51, "!ih100.0");
        char[] charArray57 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder23.appendln(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        int int63 = strTokenizer62.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder14.appendln((java.lang.Object) int63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.setLength(9);
        char[] charArray69 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, "!");
        java.lang.String str76 = strTokenizer75.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder66.appendAll((java.util.Iterator<java.lang.String>) strTokenizer75);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer75.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer75.add("!ih100.0#a\nhi!!i");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "#a" + "'", str76, "#a");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher78);
    }

    @Test
    public void test16453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16453");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setEmptyTokenAsNull(true);
        java.lang.String str24 = strTokenizer23.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setQuoteChar('f');
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer26);
    }

    @Test
    public void test16454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16454");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll(strMatcher52, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean58 = strBuilder49.contains(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder47.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator("", (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.appendln((java.lang.Object) strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder63.appendSeparator('!', 3);
        java.io.Writer writer74 = strBuilder63.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder39.append((java.lang.CharSequence) strBuilder63, 60, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.setNullText(".0#a\n");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(writer74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test16455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16455");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int12 = strBuilder6.lastIndexOf(strMatcher10, 2);
        boolean boolean14 = strBuilder6.contains('#');
        char[] charArray15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder6.appendln(charArray15, 17, 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append(27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strBuilder20.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer21.add("StrTokenizer[!ih100.0]1.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test16456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16456");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        int int10 = strBuilder4.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator("#a", 8);
        java.lang.String str17 = strBuilder16.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.reverse();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!#a" + "'", str17, "hi!#a");
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test16457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16457");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int12 = strBuilder6.lastIndexOf(strMatcher10, 2);
        boolean boolean14 = strBuilder6.contains('#');
        char[] charArray15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder6.appendln(charArray15, 17, 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append(27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strBuilder20.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((double) 106);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!3\000\000\000\000!                 ");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.replaceFirst(strMatcher27, "sehi!0a\n10ih100i0StrTokenizer[ih100.0]StrTokenizer[]\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test16458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16458");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.reset(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        int int36 = strTokenizer35.previousIndex();
        java.lang.String str37 = strTokenizer35.next();
        boolean boolean38 = strTokenizer35.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#a" + "'", str37, "#a");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test16459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16459");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        boolean boolean34 = strBuilder1.startsWith("hi!#java.io.IOException              ");
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder1.appendFixedWidthPadLeft((java.lang.Object) strTokenizer51, 22, '1');
        java.lang.Object obj55 = strTokenizer51.clone();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test16460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16460");
        java.io.IOException iOException2 = new java.io.IOException("!ih100.04\nStrTokenizer[not tokenized yet]");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        iOException4.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        iOException6.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        iOException13.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException();
        java.io.IOException iOException19 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException19);
        iOException15.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException19);
        iOException6.addSuppressed((java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException();
        java.io.IOException iOException25 = new java.io.IOException();
        java.io.IOException iOException26 = new java.io.IOException();
        iOException25.addSuppressed((java.lang.Throwable) iOException26);
        iOException24.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException29 = new java.io.IOException();
        java.io.IOException iOException30 = new java.io.IOException();
        iOException29.addSuppressed((java.lang.Throwable) iOException30);
        iOException26.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException33 = new java.io.IOException();
        java.io.IOException iOException34 = new java.io.IOException();
        java.io.IOException iOException35 = new java.io.IOException();
        iOException34.addSuppressed((java.lang.Throwable) iOException35);
        iOException33.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException38 = new java.io.IOException();
        java.io.IOException iOException39 = new java.io.IOException();
        iOException38.addSuppressed((java.lang.Throwable) iOException39);
        iOException35.addSuppressed((java.lang.Throwable) iOException39);
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException39);
        iOException26.addSuppressed((java.lang.Throwable) iOException39);
        iOException6.addSuppressed((java.lang.Throwable) iOException39);
        iOException3.addSuppressed((java.lang.Throwable) iOException39);
        java.io.IOException iOException46 = new java.io.IOException("!ih100.0falsehi!10###########!\n", (java.lang.Throwable) iOException3);
        java.lang.String str47 = iOException46.toString();
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "java.io.IOException: !ih100.0falsehi!10###########!\n" + "'", str47, "java.io.IOException: !ih100.0falsehi!10###########!\n");
    }

    @Test
    public void test16461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16461");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendFixedWidthPadRight((int) (short) 10, (int) ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder11.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        boolean boolean49 = strBuilder39.endsWith("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll("", "hi!");
        java.lang.String str66 = strBuilder61.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.replaceFirst(strMatcher70, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder39.appendln(strBuilder61, 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder39.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder37.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.appendNewLine();
        boolean boolean80 = strBuilder77.startsWith("hi!8a");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.deleteFirst("a\n10\n");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "!" + "'", str66, "!");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test16462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16462");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.append("");
        java.lang.String str15 = strBuilder14.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.deleteAll(' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendln("!falfalsesehi!0a\n#", (int) '#', 62);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test16463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16463");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendln(false);
        boolean boolean22 = strBuilder20.contains("hi!false0");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test16464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16464");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        long long55 = reader53.skip((long) (byte) 100);
        reader53.close();
        int int57 = reader53.read();
        reader53.mark((int) (short) -1);
        reader53.close();
        reader53.reset();
        reader53.mark(5);
        boolean boolean64 = reader53.markSupported();
        boolean boolean65 = reader53.ready();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 20L + "'", long55 == 20L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test16465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16465");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", "!ih100.00");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher4);
        boolean boolean6 = strTokenizer5.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test16466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16466");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln('.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean61 = strBuilder52.contains(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder50.deleteAll(strMatcher60);
        boolean boolean63 = strBuilder36.contains(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer24.setQuoteMatcher(strMatcher60);
        java.lang.String str65 = strTokenizer64.previousToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer64);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.replace(strMatcher67, "!ih100.0\n!ih100.0#", 0, 16, 16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder66.appendln("!ih100.0\n!hi!!ih100.0#a\nnized yet]", 54, 44);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test16467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16467");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer2.getTrimmerMatcher();
        int int27 = strTokenizer2.nextIndex();
        java.lang.String str28 = strTokenizer2.getContent();
        java.lang.Object obj29 = strTokenizer2.clone();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test16468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16468");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('#', '#');
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.append(charArray75);
        int int79 = reader53.read(charArray75);
        long long81 = reader53.skip((long) (short) 10);
        long long83 = reader53.skip((long) 18);
        boolean boolean84 = reader53.markSupported();
        long long86 = reader53.skip((long) 43);
        reader53.close();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10L + "'", long81 == 10L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 8L + "'", long83 == 8L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
    }

    @Test
    public void test16469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16469");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("!ih100.0#a");
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(stringBuffer8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(strBuilder9);
        int int12 = strBuilder9.indexOf('3');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test16470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16470");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!!ih100.0!ih100.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.replaceAll(strMatcher18, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean24 = strBuilder15.contains(strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher9, strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder3.replaceAll(strMatcher9, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean32 = strTokenizer31.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder3.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer31, "!ih100.0");
        char[] charArray37 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder3.appendln(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer1.reset(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer1.setIgnoreEmptyTokens(true);
        boolean boolean45 = strTokenizer1.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test16471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16471");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setDelimiterString("StrTokenizer[!ih100.0]");
        java.lang.Object obj9 = strTokenizer3.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setQuoteChar('4');
        boolean boolean12 = strTokenizer3.isEmptyTokenAsNull();
        char[] charArray15 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer3.reset(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.appendln(stringBuffer50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.replaceFirst(strMatcher52, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder36.appendFixedWidthPadLeft((java.lang.Object) strBuilder54, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder36.reverse();
        char[] charArray61 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, 'a');
        char[] charArray67 = strBuilder36.getChars(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer3.reset(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, "hi!##a");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer75.add("]-1##################################################");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(strTokenizer73);
    }

    @Test
    public void test16472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16472");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(1, (float) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.append(stringBuffer60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.setCharAt((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceAll("hi!a\nh", "hi!!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder42.append(strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder42.append((long) 'v');
        java.lang.String str72 = strBuilder42.substring((int) (byte) 1);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "2.00.001hi!!ah100.010\n118" + "'", str72, "2.00.001hi!!ah100.010\n118");
    }

    @Test
    public void test16473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16473");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        java.io.Reader reader19 = strBuilder4.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder4.insert(0, "StrTokenizer[not tokenized yet]");
        char[] charArray23 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setIgnoredChar(' ');
        boolean boolean28 = strTokenizer25.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(stringBuffer43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean55 = strBuilder46.contains(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder46.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.replaceAll(strMatcher62, "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder44.replaceAll(strMatcher62, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher30, strMatcher62);
        boolean boolean68 = strBuilder4.contains(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder4.replace(13, (int) (short) 100, "h");
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, 'a');
        java.lang.String str81 = strTokenizer80.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[]", "\000\000\000");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer80.setQuoteMatcher(strMatcher85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder4.deleteAll(strMatcher85);
        boolean boolean89 = strBuilder87.startsWith("falsehi!0a\n#52.0\n");
        int int91 = strBuilder87.lastIndexOf('e');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "#" + "'", str81, "#");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 10 + "'", int91 == 10);
    }

    @Test
    public void test16474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16474");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder16.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(stringBuffer37);
        char[] charArray41 = strBuilder36.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray42 = strBuilder1.getChars(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.minimizeCapacity();
        boolean boolean60 = strBuilder58.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getTrimmerMatcher();
        int int69 = strBuilder58.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher68);
        java.lang.String str71 = strTokenizer70.getContent();
        java.lang.String str72 = strTokenizer70.toString();
        boolean boolean73 = strTokenizer70.isEmptyTokenAsNull();
        boolean boolean74 = strTokenizer70.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "!ih100.00h100.0\n\n" + "'", str71, "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str72, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test16475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16475");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0\n!ih100.0#", 'f', 'f');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        java.lang.String str5 = strTokenizer3.nextToken();
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "!ih100.0\n!ih100.0#" + "'", str5, "!ih100.0\n!ih100.0#");
    }

    @Test
    public void test16476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16476");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        java.io.Writer writer12 = writer10.append('h');
        java.io.Writer writer14 = writer12.append(' ');
        java.io.Writer writer16 = writer14.append('.');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(writer14);
        org.junit.Assert.assertNotNull(writer16);
    }

    @Test
    public void test16477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16477");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        java.lang.String str38 = strBuilder33.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.append("!ih100.00");
        java.io.Reader reader46 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceAll("", "hi!");
        int int65 = strBuilder63.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder63.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst(strMatcher80, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder63.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer84 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.appendln(stringBuffer84);
        char[] charArray88 = strBuilder83.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray89 = strBuilder48.getChars(charArray88);
        int int90 = reader46.read(charArray88);
        reader46.mark((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder21.appendln((java.lang.Object) reader46);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder93.appendFixedWidthPadRight(84, 50, 'i');
        java.lang.String str98 = strBuilder97.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "!" + "'", str38, "!");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[!, i, h, 1, 0, 0, ., 0, \n, !, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "!ih100.0\n!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[!, i, h, 1, 0, 0, ., 0, \n, !, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 17 + "'", int90 == 17);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "" + "'", str98, "");
    }

    @Test
    public void test16478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16478");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder21.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(false);
        java.lang.String str50 = strTokenizer47.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder21.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean70 = strBuilder61.contains(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder59.deleteAll(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder51.append(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) strBuilder72, (int) (short) 100, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setDelimiterMatcher(strMatcher78);
        java.util.List<java.lang.String> strList80 = strTokenizer77.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.appendAll((java.lang.Iterable<java.lang.String>) strList80);
        int int82 = strBuilder75.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.append((double) (short) 100);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "!ih100.0" + "'", str50, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 106 + "'", int82 == 106);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test16479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16479");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        int int34 = strBuilder32.indexOf("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        int int65 = strBuilder54.indexOf(strMatcher59, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder49.append(strBuilder54, (int) (byte) 1, 0);
        int int69 = strBuilder68.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.setLength((int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder32.appendln((java.lang.Object) strBuilder70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!\n");
        java.lang.String str76 = strTokenizer75.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder32.append((java.lang.Object) str76);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append('1');
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 8 + "'", int69 == 8);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test16480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16480");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.appendNewLine();
        java.util.stream.IntStream intStream9 = strBuilder8.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.insert(0, (long) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) 0, (int) (short) 0, '1');
        java.lang.String str17 = strBuilder15.leftString(4);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        java.lang.CharSequence charSequence32 = strBuilder29.subSequence(1, (int) (short) 1);
        int int35 = strBuilder29.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.appendPadding((int) (short) -1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append('!');
        boolean boolean43 = strBuilder15.equalsIgnoreCase(strBuilder40);
        boolean boolean44 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder15.append((float) 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert(5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.append('1');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(intStream9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\000\000\000" + "'", str17, "\000\000\000");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test16481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16481");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append("StrTokenizer[not tokenized yet]");
        int int42 = strBuilder41.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append('v');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln((long) 38);
        int int49 = strBuilder41.lastIndexOf('0', 216);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 40 + "'", int42 == 40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
    }

    @Test
    public void test16482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16482");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        java.io.Writer writer12 = writer10.append('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setEmptyTokenAsNull(false);
        java.lang.String str43 = strTokenizer40.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean63 = strBuilder54.contains(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder52.deleteAll(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder44.append(strBuilder52);
        java.io.Writer writer66 = writer10.append((java.lang.CharSequence) strBuilder52);
        writer10.write("falsehi!");
        writer10.close();
        java.io.Writer writer71 = writer10.append('#');
        writer10.write("hi!3!..................................java.io.IOException: java.io.IOException");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "!ih100.0" + "'", str43, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(writer66);
        org.junit.Assert.assertNotNull(writer71);
    }

    @Test
    public void test16483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16483");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.append(strBuilder9, 11, 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNullText("f0alsehi!1\n      10");
        boolean boolean15 = strBuilder14.isEmpty();
        java.util.stream.IntStream intStream16 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.append(0);
        boolean boolean19 = strBuilder18.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test16484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16484");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        java.io.Reader reader42 = strBuilder14.asReader();
        boolean boolean43 = reader42.markSupported();
        int int44 = reader42.read();
        boolean boolean45 = reader42.markSupported();
        reader42.reset();
        reader42.mark(0);
        boolean boolean49 = reader42.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll("", "hi!");
        int int66 = strBuilder64.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder64.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder74.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst(strMatcher81, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder64.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer85 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendln(stringBuffer85);
        char[] charArray89 = strBuilder84.toCharArray((int) (byte) 1, (int) '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, 'h');
        int int95 = reader42.read(charArray89);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 33 + "'", int44 == 33);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "!ih100.0ih100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "!ih100.0ih100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[!, i, h, 1, 0, 0, ., 0, i, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 8 + "'", int95 == 8);
    }

    @Test
    public void test16485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16485");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "!");
        java.lang.String str9 = strTokenizer8.next();
        java.lang.String str10 = strTokenizer8.previous();
        int int11 = strTokenizer8.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean34 = strBuilder25.contains(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19, strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder13.replaceAll(strMatcher19, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean60 = strBuilder51.contains(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher45, strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder39.replaceAll(strMatcher45, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean68 = strTokenizer67.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder39.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer67, "!ih100.0");
        char[] charArray73 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder39.appendln(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ', ' ');
        char[] charArray82 = strBuilder13.getChars(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, "!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer84.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer8.setDelimiterMatcher(strMatcher86);
        java.lang.String str88 = strTokenizer8.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#a" + "'", str9, "#a");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#a" + "'", str10, "#a");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[h, i, !]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "StrTokenizer[#a]" + "'", str88, "StrTokenizer[#a]");
    }

    @Test
    public void test16486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16486");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.append(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert((int) (short) 1, (float) 1L);
        char[] charArray38 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder15.append(charArray38);
        boolean boolean41 = strBuilder39.startsWith("100.0100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.replaceFirst('h', 'i');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence48 = strBuilder39.subSequence(65, 134);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 134");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "h1.0i!######true");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "h1.0i!######true");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[h, 1, ., 0, i, !, #, #, #, #, #, #, t, r, u, e]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test16487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16487");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("44.0h1.0######true", 'e', '0');
    }

    @Test
    public void test16488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16488");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strBuilder13.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setEmptyTokenAsNull(false);
        java.lang.String str20 = strTokenizer17.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer17.setDelimiterMatcher(strMatcher23);
        boolean boolean27 = strTokenizer17.hasPrevious();
        char[] charArray30 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer17.reset(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder1.trim();
        int int49 = strBuilder46.lastIndexOf("hi!97!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0444444444444444444444444444444444444444444444hi!", 124);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "!ih100.0" + "'", str20, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test16489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16489");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        java.lang.String str17 = strBuilder16.toString();
        int int20 = strBuilder16.lastIndexOf('a', (int) (short) 1);
        boolean boolean22 = strBuilder16.endsWith("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!ih100.0StrTokenizer[!ih100.0]11.0");
        boolean boolean25 = strBuilder16.contains(strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setQuoteChar('f');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder30.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.replaceFirst(strMatcher42, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer28.setQuoteMatcher(strMatcher42);
        java.lang.String str46 = strTokenizer28.next();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "!ih100.00" + "'", str17, "!ih100.00");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "!ih100.00" + "'", str46, "!ih100.00");
    }

    @Test
    public void test16490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16490");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean21 = strBuilder12.contains(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.append((int) (short) 0);
        java.io.Writer writer28 = writer10.append((java.lang.CharSequence) strBuilder12);
        writer10.close();
        writer10.write("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n#a\n");
        // The following exception was thrown during execution in test generation
        try {
            writer10.write("h\n", 92, 80);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
    }

    @Test
    public void test16491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16491");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('#', '#');
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.append(charArray75);
        int int79 = reader53.read(charArray75);
        long long81 = reader53.skip((long) (short) 10);
        reader53.close();
        reader53.mark((int) '4');
        boolean boolean85 = reader53.markSupported();
        reader53.close();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10L + "'", long81 == 10L);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test16492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16492");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll("", "hi!");
        int int35 = strBuilder33.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean46 = strBuilder37.contains(strMatcher45);
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder37.appendln(stringBuffer47);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.replaceFirst(strMatcher49, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder33.appendFixedWidthPadLeft((java.lang.Object) strBuilder51, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append((double) (-1L));
        boolean boolean57 = strBuilder18.equalsIgnoreCase(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder18.ensureCapacity(25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strBuilder59.asTokenizer();
        int int61 = strTokenizer60.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setIgnoredChar('.');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer63);
    }

    @Test
    public void test16493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16493");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!hi!-1.0hi!3", "hi!!ih100.0104.0");
    }

    @Test
    public void test16494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16494");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer10.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher7, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        java.lang.String str14 = strTokenizer13.getContent();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = strTokenizer13.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#a" + "'", str14, "#a");
    }

    @Test
    public void test16495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16495");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder12.deleteAll(strMatcher22);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln("hi!");
        boolean boolean30 = strBuilder4.equals(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder32.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder32.replaceFirst(strMatcher44, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder32.insert((int) (short) 1, 'a');
        boolean boolean50 = strBuilder27.equals(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((float) (byte) 100);
        java.lang.String str65 = strBuilder62.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strBuilder62.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder27.replaceFirst(strMatcher67, "!");
        java.io.Reader reader70 = strBuilder69.asReader();
        java.lang.StringBuffer stringBuffer71 = strBuilder69.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.append(stringBuffer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln((long) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "falsehi!#hi!\n");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test16496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16496");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        java.io.Writer writer19 = strBuilder18.asWriter();
        java.io.Writer writer21 = writer19.append('1');
        char[] charArray24 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.deleteFirst(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray24);
        writer19.write(charArray24);
        writer19.flush();
        writer19.write(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((float) (byte) 100);
        boolean boolean59 = strBuilder46.equalsIgnoreCase(strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.insert(7, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append((float) (byte) 100);
        boolean boolean80 = strBuilder67.equalsIgnoreCase(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder58.append(strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer87 = writer19.append((java.lang.CharSequence) strBuilder84, 43, 38);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 38");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(writer21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test16497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16497");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: !ih100.0");
        java.lang.Object[] objArray2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendWithSeparators(objArray2, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.insert(0, (int) (byte) 10);
        java.lang.String str9 = strBuilder4.substring(9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.replaceAll(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher18, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer12.setQuoteMatcher(strMatcher32);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean59 = strBuilder50.contains(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder38.replaceAll(strMatcher44, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean67 = strTokenizer66.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer66, "!ih100.0");
        char[] charArray72 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder38.appendln(charArray72);
        int int78 = strMatcher36.isMatch(charArray72, (int) (short) 1);
        int int79 = strBuilder4.lastIndexOf(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder4.append((long) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.appendNewLine();
        java.lang.String str85 = strBuilder82.midString(17, 6);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ".IOException: !ih100.0" + "'", str9, ".IOException: !ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 22 + "'", int79 == 22);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "tion: " + "'", str85, "tion: ");
    }

    @Test
    public void test16498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16498");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setIgnoreEmptyTokens(false);
        java.lang.Object obj5 = strTokenizer4.clone();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test16499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16499");
        java.io.IOException iOException1 = new java.io.IOException("i!");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException1);
    }

    @Test
    public void test16500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16500");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder14.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.deleteFirst('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst('#', '#');
        char[] charArray60 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder54.append(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        java.util.stream.IntStream intStream69 = strBuilder68.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder68.insert((int) (short) 1, (float) 1L);
        char[] charArray77 = strBuilder76.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder54.append(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder38.append(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, 'f', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(intStream69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "h1.0i!######true");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "h1.0i!######true");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[h, 1, ., 0, i, !, #, #, #, #, #, #, t, r, u, e]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strTokenizer84);
    }
}
