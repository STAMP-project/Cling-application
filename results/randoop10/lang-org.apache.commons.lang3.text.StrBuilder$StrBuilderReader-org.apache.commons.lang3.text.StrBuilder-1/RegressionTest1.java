import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test00501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00501");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendPadding(3, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setEmptyTokenAsNull(false);
        java.lang.String str33 = strTokenizer30.next();
        java.lang.String str34 = strTokenizer30.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer30.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean59 = strBuilder50.contains(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher44, strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder38.replaceAll(strMatcher44, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer30.setTrimmerMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer30.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder67.replaceAll(strMatcher70, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean76 = strBuilder67.contains(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder67.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder67.replaceAll(strMatcher83, "hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer30.setDelimiterMatcher(strMatcher83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder14.replace(strMatcher83, "!ih100.0\n4\n", 12, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "!ih100.0" + "'", str33, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "!ih100.0" + "'", str34, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer86);
    }

    @Test
    public void test00502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00502");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        boolean boolean21 = strBuilder18.startsWith("java.io.IOException: !ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        int int67 = strBuilder41.indexOf(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer25.setIgnoredMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = strTokenizer68.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test00503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00503");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = strBuilder13.substring(4, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test00504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00504");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendSeparator('.', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        int int48 = strBuilder46.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean59 = strBuilder50.contains(strMatcher58);
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendln(stringBuffer60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder50.replaceFirst(strMatcher62, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) strBuilder64, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((long) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append((double) (short) 10);
        boolean boolean74 = strBuilder13.equalsIgnoreCase(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.appendPadding(12, 'h');
        boolean boolean79 = strBuilder73.contains(' ');
        java.lang.String str81 = strBuilder73.leftString(6);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!hi!" + "'", str81, "hi!hi!");
    }

    @Test
    public void test00505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00505");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        int int19 = strBuilder16.lastIndexOf("!ih100.0", 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strBuilder31.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setEmptyTokenAsNull(false);
        java.lang.String str38 = strTokenizer35.next();
        java.lang.String str39 = strTokenizer35.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer35.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder43.replaceAll(strMatcher49, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer35.setTrimmerMatcher(strMatcher49);
        java.lang.String[] strArray69 = strTokenizer35.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder16.appendWithSeparators((java.lang.Object[]) strArray69, "ih100.010.0i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.replaceAll(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.append((float) (byte) 100);
        boolean boolean89 = strBuilder76.equalsIgnoreCase(strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder90.appendNull();
        int int92 = strBuilder90.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder16.appendln((java.lang.Object) int92);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "!ih100.0" + "'", str38, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "!ih100.0" + "'", str39, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 8 + "'", int92 == 8);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test00506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00506");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean15 = strBuilder6.contains(strMatcher14);
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder6.appendln(stringBuffer16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder6.replaceFirst(strMatcher18, "hi!");
        int int23 = strBuilder20.lastIndexOf("", (int) (byte) 0);
        java.lang.String str26 = strBuilder20.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("", "hi!");
        int int43 = strBuilder41.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer52 = strBuilder51.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder20.append(stringBuffer52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln((double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder3.appendln(strBuilder55, 12, 105);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "h" + "'", str26, "h");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(stringBuffer52);
        org.junit.Assert.assertEquals(stringBuffer52.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test00507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00507");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 10);
        char[] charArray29 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        java.util.stream.IntStream intStream35 = strBuilder34.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.deleteFirst(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder23.insert(6, charArray29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.insert((int) '#', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test00508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00508");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        int int28 = strBuilder17.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.append(1.0d);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer33.setQuoteMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer33.getTrimmerMatcher();
        int int59 = strBuilder17.lastIndexOf(strMatcher57, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder4.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.insert((int) (byte) 0, (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.insert((int) (byte) 100, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test00509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00509");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        java.lang.String str3 = strTokenizer2.next();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    }

    @Test
    public void test00510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00510");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", "hi!\n");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00511");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        boolean boolean17 = strBuilder15.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setEmptyTokenAsNull(false);
        java.lang.String str40 = strTokenizer37.next();
        java.lang.String str41 = strTokenizer37.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer37.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        java.lang.String str45 = strTokenizer44.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer44, "00.00.");
        boolean boolean48 = strTokenizer44.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "!ih100.0" + "'", str40, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "!ih100.0" + "'", str41, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "!ih100.0" + "'", str45, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test00512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00512");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder18.appendPadding((int) (byte) 0, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.delete((int) (short) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendSeparator("h");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test00513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00513");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("hi!");
        boolean boolean27 = strBuilder1.equals(strBuilder24);
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln(20L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence33 = strBuilder24.subSequence(11, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test00514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00514");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test00515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00515");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        java.io.Writer writer12 = writer10.append('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setEmptyTokenAsNull(false);
        java.lang.String str43 = strTokenizer40.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean63 = strBuilder54.contains(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder52.deleteAll(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder44.append(strBuilder52);
        java.io.Writer writer66 = writer10.append((java.lang.CharSequence) strBuilder52);
        writer10.write("falsehi!");
        writer10.close();
        writer10.flush();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "!ih100.0" + "'", str43, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(writer66);
    }

    @Test
    public void test00516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00516");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        boolean boolean47 = strBuilder45.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder27.append((java.lang.CharSequence) strBuilder45);
        java.util.stream.IntStream intStream53 = strBuilder45.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder4.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setIgnoredChar(' ');
        boolean boolean59 = strTokenizer56.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer60.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder4.replace(strMatcher61, "falsehi!", 33, (-1), 2);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(intStream53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
    }

    @Test
    public void test00517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00517");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.append(stringBuffer18);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int21 = strBuilder19.indexOf(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setDelimiterMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setIgnoredChar(' ');
        java.lang.String str45 = strTokenizer44.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer44.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst(strMatcher76, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.replaceAll(strMatcher76, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.replaceFirst(strMatcher85, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder82.replaceAll(strMatcher85, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean91 = strBuilder82.contains(strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher76, strMatcher90);
        int int93 = strBuilder67.indexOf(strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer51.setIgnoredMatcher(strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer47.setDelimiterMatcher(strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer37.setQuoteMatcher(strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer("0.001hi !ih100.0\n\n", strMatcher20, strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = strTokenizer97.setIgnoredChar('#');
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strTokenizer99);
    }

    @Test
    public void test00518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00518");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("java.io.IOException");
        java.lang.String str2 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setIgnoredChar('h');
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        java.lang.Object obj6 = strTokenizer4.clone();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.io.IOException" + "'", str2, "java.io.IOException");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test00519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00519");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.String str14 = strBuilder11.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendSeparator('h', '4');
        int int22 = strBuilder19.indexOf('!', (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.insert((int) (short) 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test00520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00520");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        writer24.write((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.deleteAll(strMatcher46);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer51 = writer24.append((java.lang.CharSequence) strBuilder48, (int) (byte) 10, 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 25");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test00521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00521");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.deleteFirst("0.001hi !ih100.0\n\n");
        java.io.Writer writer7 = strBuilder6.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        java.lang.String str24 = strBuilder19.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean35 = strBuilder26.contains(strMatcher34);
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder26.appendln(stringBuffer36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.replaceFirst(strMatcher38, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendFixedWidthPadRight((int) (short) 10, (int) ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder19.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        boolean boolean57 = strBuilder47.endsWith("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        java.lang.String str74 = strBuilder69.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder69.replaceFirst(strMatcher78, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder47.appendln(strBuilder69, 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder47.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder45.append(strBuilder47);
        java.lang.String str86 = strBuilder47.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer89 = writer7.append((java.lang.CharSequence) strBuilder47, (int) (byte) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(writer7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "!" + "'", str24, "!");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "!" + "'", str74, "!");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test00522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00522");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        boolean boolean25 = reader24.ready();
        reader24.close();
        long long28 = reader24.skip((long) 100);
        java.nio.CharBuffer charBuffer29 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int30 = reader24.read(charBuffer29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 18L + "'", long28 == 18L);
    }

    @Test
    public void test00523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00523");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setDelimiterString("StrTokenizer[!ih100.0]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = strTokenizer3.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test00524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00524");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        boolean boolean1 = strTokenizer0.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test00525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00525");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("");
        java.lang.String str12 = strTokenizer9.toString();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str12, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test00526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00526");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.replaceFirst(strMatcher19, "hi!");
        int int22 = strBuilder4.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder4.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        int int41 = strBuilder39.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder39.setLength((int) '4');
        java.lang.Object obj50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(obj50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceAll("", "hi!");
        java.lang.String str69 = strBuilder64.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceFirst(strMatcher84, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder81.replaceAll(strMatcher84, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean90 = strBuilder81.contains(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder79.deleteAll(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder64.deleteFirst(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[!ih100.0]", strMatcher89);
        int int94 = strBuilder51.lastIndexOf(strMatcher89);
        int int96 = strBuilder24.indexOf(strMatcher89, (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder24.appendln(false);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "!" + "'", str69, "!");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 52 + "'", int94 == 52);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test00527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00527");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        char[] charArray19 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.setNewLineText("");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.setCharAt((int) '.', 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 46");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test00528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00528");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.deleteAll(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.appendln(stringBuffer45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder35.replaceFirst(strMatcher47, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder35.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder33.appendln((java.lang.Object) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.replaceAll(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder84.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.replaceAll('#', 'a');
        boolean boolean89 = strBuilder69.equals((java.lang.Object) strBuilder84);
        java.lang.StringBuffer stringBuffer90 = strBuilder84.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder33.append(stringBuffer90);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder13.appendln(stringBuffer90, 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(stringBuffer90);
        org.junit.Assert.assertEquals(stringBuffer90.toString(), "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test00529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00529");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("001hi 1");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test00530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00530");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!!ih100.0#a\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test00531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00531");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("", "hi!");
        int int34 = strBuilder32.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder32.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(stringBuffer53);
        char[] charArray57 = strBuilder52.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray58 = strBuilder17.getChars(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder66.deleteAll(strMatcher76);
        java.lang.String str80 = strBuilder66.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList85 = strTokenizer84.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder66.appendAll((java.lang.Iterable<java.lang.String>) strList85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder17.appendAll((java.lang.Iterable<java.lang.String>) strList85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder15.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList85, "#");
        char char91 = strBuilder89.charAt(10);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + char91 + "' != '" + 'h' + "'", char91 == 'h');
    }

    @Test
    public void test00532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00532");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        int int31 = strBuilder11.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.replaceAll('4', '!');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(charArray35);
        java.lang.String str39 = strBuilder34.midString(13, 7);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "kenizer" + "'", str39, "kenizer");
    }

    @Test
    public void test00533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00533");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.append((double) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.reverse();
        int int25 = strBuilder23.length();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 34 + "'", int25 == 34);
    }

    @Test
    public void test00534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00534");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        boolean boolean69 = strBuilder52.equals(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.append("!ih100.0\n!ih100.0#");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst(strMatcher76, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.replaceAll(strMatcher76, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strBuilder83.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer87.setEmptyTokenAsNull(false);
        java.lang.String str90 = strTokenizer87.next();
        java.lang.String str91 = strTokenizer87.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer87.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer93.reset();
        java.util.List<java.lang.String> strList95 = strTokenizer93.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder52.appendAll((java.lang.Iterable<java.lang.String>) strList95);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder52.deleteAll(' ');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "!ih100.0" + "'", str90, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "!ih100.0" + "'", str91, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test00535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00535");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll("", "hi!");
        int int45 = strBuilder43.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean56 = strBuilder47.contains(strMatcher55);
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder47.appendln(stringBuffer57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder47.replaceFirst(strMatcher59, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder43.appendFixedWidthPadLeft((java.lang.Object) strBuilder61, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder43.reverse();
        char[] charArray68 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, 'a');
        char[] charArray74 = strBuilder43.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '!', '4');
        // The following exception was thrown during execution in test generation
        try {
            int int84 = strMatcher26.isMatch(charArray68, 10, 14, 17);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[!, 0, ., 0, 0, 1, h, i, !]");
    }

    @Test
    public void test00536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00536");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean4 = strTokenizer3.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setQuoteMatcher(strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer3.getDelimiterMatcher();
        java.lang.String str10 = strTokenizer3.getContent();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "!ih100.0" + "'", str10, "!ih100.0");
    }

    @Test
    public void test00537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00537");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNullText("java.io.IOException");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer27.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher39, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer27.setDelimiterMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer43.setIgnoredMatcher(strMatcher45);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder23.replace(strMatcher45, "i", 25, 34, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
    }

    @Test
    public void test00538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00538");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        boolean boolean34 = strBuilder1.startsWith("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.appendFixedWidthPadRight((int) '#', 1, '4');
        int int51 = strBuilder49.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.deleteFirst(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceAll("", "hi!");
        int int71 = strBuilder69.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer80 = strBuilder79.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder54.append(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder1.append(stringBuffer80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln((double) (short) 0);
        int int87 = strBuilder84.indexOf('#', 10);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(stringBuffer80);
        org.junit.Assert.assertEquals(stringBuffer80.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test00539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00539");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) '#', 1, '4');
        java.lang.String str17 = strBuilder14.substring((int) (byte) 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendSeparator("!", "i!");
        int int23 = strBuilder14.lastIndexOf('h', (int) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.replaceAll("i!hi!97!!!", "!ih100.04\nStrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.insert((int) '4', (double) 104);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!3" + "'", str17, "hi!3");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test00540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00540");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("h");
    }

    @Test
    public void test00541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00541");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replace(strMatcher6, "", 0, (int) '#', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.replaceAll(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("", "hi!");
        int int30 = strBuilder28.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder28.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(stringBuffer49);
        char[] charArray53 = strBuilder48.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray54 = strBuilder13.getChars(charArray53);
        char[] charArray57 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher63, strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder13.append(charArray57);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = strMatcher6.isMatch(charArray57, 2, (-1), 105);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test00542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00542");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.lang.String str6 = strBuilder4.substring((int) (byte) 1);
        int int8 = strBuilder4.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.append(false);
        java.lang.String str11 = strBuilder4.getNewLineText();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "i!" + "'", str6, "i!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test00543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00543");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer2.setQuoteChar('4');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer27.add("4a");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test00544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00544");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("!");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer8.set("sehi!!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test00545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00545");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.setNewLineText("!");
        int int34 = strBuilder29.indexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.appendln(stringBuffer46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.replaceFirst(strMatcher48, "hi!");
        int int53 = strBuilder50.lastIndexOf("", (int) (byte) 0);
        java.lang.String str56 = strBuilder50.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll("", "hi!");
        int int73 = strBuilder71.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer82 = strBuilder81.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder50.append(stringBuffer82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder29.append(stringBuffer82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder11.appendln(stringBuffer82);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder11.insert(25, "00.00.");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 25");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "h" + "'", str56, "h");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(stringBuffer82);
        org.junit.Assert.assertEquals(stringBuffer82.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test00546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00546");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder15.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendSeparator(' ', 1);
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder15.appendln(charArray38, 22, (int) 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer45);
    }

    @Test
    public void test00547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00547");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean21 = strBuilder12.contains(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.append((int) (short) 0);
        java.io.Writer writer28 = writer10.append((java.lang.CharSequence) strBuilder12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = strBuilder12.substring(18, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
    }

    @Test
    public void test00548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00548");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder1.append(' ');
        java.lang.String str28 = strBuilder27.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        int int44 = strBuilder33.indexOf(strMatcher38, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder33.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder27.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 100, '.');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.delete(11, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test00549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00549");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        java.util.stream.IntStream intStream5 = strBuilder4.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.insert(0, (long) '!');
        int int10 = strBuilder8.lastIndexOf(' ');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test00550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00550");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendSeparator("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.setNullText("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll("", "hi!");
        java.lang.String str29 = strBuilder24.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.append("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.append((float) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder38.appendFixedWidthPadLeft((int) ' ', (int) '4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("", "hi!");
        java.lang.String str59 = strBuilder54.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.append("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer68.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder60.appendAll((java.util.Iterator<java.lang.String>) strTokenizer68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder38.appendln((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = null;
        int int73 = strBuilder71.lastIndexOf(strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.replace(10, 104, "hi!!ih100.0#a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst("!ih100.0", "!ih100.0");
        int int88 = strBuilder82.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder82.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        char[] charArray94 = strBuilder93.toCharArray();
        char[] charArray95 = strBuilder71.getChars(charArray94);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder7.insert((int) (byte) -1, (java.lang.Object) charArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "!" + "'", str29, "!");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "!" + "'", str59, "!");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[!, i, h, 1, 0, 0, ., 0, \n, !, h, i, !, !, i, h, 1, 0, 0, ., 0, #, a, \n, n, i, z, e, d,  , y, e, t, ]]");
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[!, i, h, 1, 0, 0, ., 0, \n, !, h, i, !, !, i, h, 1, 0, 0, ., 0, #, a, \n, n, i, z, e, d,  , y, e, t, ]]");
    }

    @Test
    public void test00551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00551");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        java.io.Writer writer19 = strBuilder18.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.insert(33, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 33");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
    }

    @Test
    public void test00552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00552");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.appendln("");
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder4.replaceFirst(strMatcher33, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder4.appendln(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = strBuilder4.substring(7, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test00553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00553");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder33.deleteAll(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln('a');
        java.io.Writer writer50 = strBuilder47.asWriter();
        writer50.write((int) (short) 0);
        writer50.write((int) 'a');
        writer50.flush();
        writer50.close();
        char[] charArray59 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a');
        writer50.write(charArray59);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = strMatcher7.isMatch(charArray59, 52, (int) '4', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(writer50);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer62);
    }

    @Test
    public void test00554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00554");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!97!!!!!!!!!!!!!!!!!", "001hi 1");
    }

    @Test
    public void test00555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00555");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll("", "hi!");
        int int35 = strBuilder33.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder33.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln(stringBuffer54);
        boolean boolean56 = strBuilder4.equals(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean67 = strBuilder58.contains(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.appendFixedWidthPadRight((int) '#', 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder58.append((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder58.appendSeparator("java.io.IOException");
        int int76 = strBuilder58.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder55.appendln((java.lang.Object) strBuilder58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder55.insert((int) 'a', "0.001hi !ih100.0\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 25 + "'", int76 == 25);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test00556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00556");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        boolean boolean17 = strBuilder15.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setEmptyTokenAsNull(false);
        java.lang.String str40 = strTokenizer37.next();
        java.lang.String str41 = strTokenizer37.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer37.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        java.lang.String str45 = strTokenizer44.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer44, "00.00.");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer44.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "!ih100.0" + "'", str40, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "!ih100.0" + "'", str41, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "!ih100.0" + "'", str45, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test00557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00557");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        writer24.write((int) 'a');
        writer24.flush();
        writer24.close();
        char[] charArray33 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a');
        writer24.write(charArray33);
        // The following exception was thrown during execution in test generation
        try {
            writer24.write("", (int) 'h', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer36);
    }

    @Test
    public void test00558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00558");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean35 = strBuilder26.contains(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.deleteAll(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.appendln('a');
        java.lang.String str41 = strBuilder40.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert(3, "!ih");
        java.io.Reader reader48 = strBuilder44.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder60.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setEmptyTokenAsNull(false);
        java.lang.String str67 = strTokenizer64.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer64.setDelimiterMatcher(strMatcher70);
        boolean boolean74 = strTokenizer64.hasPrevious();
        char[] charArray77 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer86.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer64.reset(charArray77);
        int int92 = reader48.read(charArray77);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder16.append(charArray77, (int) 'h', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(reader48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "!ih100.0" + "'", str67, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "fa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "fa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[f, a]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2 + "'", int92 == 2);
    }

    @Test
    public void test00559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00559");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendln((java.lang.Object) (short) 1);
        java.lang.String str41 = strBuilder39.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteAll("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.insert((int) (byte) 1, (long) (short) 0);
        int int48 = strBuilder46.indexOf("sehi!!");
        boolean boolean50 = strBuilder46.contains("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.appendFixedWidthPadLeft((int) (short) 10, 8, ' ');
        int int55 = strBuilder46.length();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 19 + "'", int55 == 19);
    }

    @Test
    public void test00560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00560");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        int int33 = strBuilder31.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.appendln(stringBuffer45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder35.replaceFirst(strMatcher47, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.appendFixedWidthPadLeft((java.lang.Object) strBuilder49, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder31.reverse();
        char[] charArray56 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a');
        char[] charArray62 = strBuilder31.getChars(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        int int67 = strBuilder15.lastIndexOf(strMatcher65, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.replaceAll(strMatcher77, "");
        int int83 = strBuilder72.indexOf(strMatcher77, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder72.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int90 = strBuilder86.lastIndexOf(strMatcher88, 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: !ih100.0", strMatcher65, strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test00561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00561");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        boolean boolean25 = reader24.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        int int42 = strBuilder40.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.replaceFirst(strMatcher56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.appendFixedWidthPadLeft((java.lang.Object) strBuilder58, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder40.reverse();
        char[] charArray65 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, 'a');
        char[] charArray71 = strBuilder40.getChars(charArray65);
        int int72 = reader24.read(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = strTokenizer73.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 9 + "'", int72 == 9);
        org.junit.Assert.assertNotNull(strTokenizer73);
    }

    @Test
    public void test00562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00562");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.insert(7, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.delete(23, 23);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test00563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00563");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        char[] charArray36 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.replaceAll('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln((double) 2);
        int int44 = strBuilder41.indexOf('4', 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        java.util.stream.IntStream intStream50 = strBuilder49.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.setCharAt((int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder41.appendFixedWidthPadLeft((java.lang.Object) strBuilder49, 33, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder41.setNewLineText("f0alsehi!1\n      10");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test00564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00564");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.reset("!ih100.0\n4\n");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer42.add("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
    }

    @Test
    public void test00565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00565");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        int int26 = strBuilder23.indexOf("!ih100.0StrTokenizer[!ih100.0]11.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replace(4, (int) (short) 0, "!ih100.014\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test00566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00566");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder19.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder7.replace(strMatcher25, "hi!3", 0, 0, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setLength((int) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceAll("", "hi!");
        int int50 = strBuilder48.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder48.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(stringBuffer69);
        boolean boolean72 = strBuilder68.contains("");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder31.appendln(strBuilder68, (int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test00567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00567");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        boolean boolean34 = strBuilder32.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder14.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setIgnoredChar(' ');
        java.lang.String str44 = strTokenizer43.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer43.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder14.deleteFirst(strMatcher45);
        java.lang.Class<?> wildcardClass47 = strBuilder46.getClass();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test00568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00568");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.minimizeCapacity();
        java.lang.String str5 = strBuilder4.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "i" + "'", str5, "i");
    }

    @Test
    public void test00569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00569");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("!ih100.014\n");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test00570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00570");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        int int23 = strBuilder21.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder34.deleteAll(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln("hi!");
        boolean boolean52 = strBuilder26.equals(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean63 = strBuilder54.contains(strMatcher62);
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder54.appendln(stringBuffer64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder54.replaceFirst(strMatcher66, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder54.insert((int) (short) 1, 'a');
        boolean boolean72 = strBuilder49.equals(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.replaceAll(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder74.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append((float) (byte) 100);
        java.lang.String str87 = strBuilder84.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strBuilder84.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder49.replaceFirst(strMatcher89, "!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer("hi!a\nh", strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder21.deleteFirst(strMatcher89);
        java.io.Reader reader94 = strBuilder93.asReader();
        boolean boolean96 = strBuilder93.startsWith("0.001hi!hi!30.001hi 1");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(reader94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test00571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00571");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        int int28 = strBuilder17.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.append(1.0d);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer33.setQuoteMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer33.getTrimmerMatcher();
        int int59 = strBuilder17.lastIndexOf(strMatcher57, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder4.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder4.ensureCapacity(22);
        int int63 = strBuilder4.length();
        int int65 = strBuilder4.indexOf('.');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder4.insert(25, 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 25");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 13 + "'", int63 == 13);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test00572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00572");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append('!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strBuilder40.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder54.deleteAll(strMatcher64);
        boolean boolean67 = strBuilder40.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer28.setQuoteMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder23.appendAll((java.util.Iterator<java.lang.String>) strTokenizer28);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.setNewLineText("java.io.IOException: ");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.insert((int) (short) 100, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test00573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00573");
        org.apache.commons.lang3.text.StrMatcher strMatcher0 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean11 = strBuilder2.contains(strMatcher10);
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendln(stringBuffer12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.replaceFirst(strMatcher14, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder21.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(false);
        java.lang.String str50 = strTokenizer47.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder21.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder2.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        java.util.stream.IntStream intStream58 = strBuilder57.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.appendln((java.lang.Object) strBuilder59);
        char[] charArray63 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst(strMatcher73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder70.replaceAll(strMatcher73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder70.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder80.append(stringBuffer86);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int89 = strBuilder87.indexOf(strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher88);
        char[] charArray91 = strBuilder60.getChars(charArray63);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = strMatcher0.isMatch(charArray91, (int) 'h', 14, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher0);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "!ih100.0" + "'", str50, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "hai!hi!hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "hai!hi!hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[h, a, i, !, h, i, !, h, i, !, \n]");
    }

    @Test
    public void test00574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00574");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        java.lang.String str21 = strBuilder15.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder15.append(stringBuffer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((double) (short) 0);
        char[] charArray53 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher65);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder50.append(charArray53, (int) (byte) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "h" + "'", str21, "h");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strMatcher65);
    }

    @Test
    public void test00575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00575");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        reader24.close();
        reader24.reset();
        long long28 = reader24.skip((long) (byte) 0);
        reader24.reset();
        reader24.mark((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder33.replaceAll(strMatcher39, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean62 = strTokenizer61.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder33.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer61, "!ih100.0");
        char[] charArray67 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder33.appendln(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = reader24.read(charArray67, 11, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test00576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00576");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        char[] charArray9 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher19);
        int int22 = strBuilder6.lastIndexOf(strMatcher19, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "!ih100.0");
        int int34 = strBuilder6.indexOf(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst('#', '#');
        java.util.stream.IntStream intStream54 = strBuilder53.chars();
        boolean boolean56 = strBuilder53.startsWith("java.io.IOException: !ih100.0");
        java.util.stream.IntStream intStream57 = strBuilder53.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.insert(2, (java.lang.Object) "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.replaceAll(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder63.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.append((float) (byte) 100);
        java.lang.CharSequence charSequence76 = strBuilder73.subSequence(1, (int) (short) 1);
        int int79 = strBuilder73.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder73.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder73.appendSeparator("sehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder53.append((java.lang.CharSequence) strBuilder85, 7, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("", "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setIgnoredChar('!');
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer91.getTrimmerMatcher();
        int int95 = strBuilder85.indexOf(strMatcher94);
        int int96 = strBuilder6.indexOf(strMatcher94);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(intStream57);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "" + "'", charSequence76, "");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test00577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00577");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.appendln((float) (byte) 10);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        iOException17.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray25 = iOException21.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.appendWithSeparators((java.lang.Object[]) throwableArray25, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.replaceAll(strMatcher59, "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder41.replaceAll(strMatcher59, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder27.replace(strMatcher59, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0", (int) (short) 0, 0, 18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder27.appendln("#", 7, 17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test00578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00578");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!\n10");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test00579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00579");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("h");
        boolean boolean45 = strTokenizer42.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer42.add("falsehi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test00580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00580");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceFirst(strMatcher35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        boolean boolean55 = strBuilder50.endsWith("!ih100.0");
        char char57 = strBuilder50.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        int int63 = strBuilder50.indexOf('#', 100);
        boolean boolean64 = strBuilder38.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher76, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher76, strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer81.setDelimiterString("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer81, "");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder38.insert((int) '4', 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + char57 + "' != '" + '!' + "'", char57 == '!');
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test00581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00581");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((long) 7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder17.append((java.lang.CharSequence) strBuilder32, 72, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test00582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00582");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder23.replaceAll(strMatcher29, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer15.setTrimmerMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer15.setIgnoredChar(' ');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer50.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
    }

    @Test
    public void test00583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00583");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        int int17 = strBuilder15.indexOf('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.ensureCapacity(0);
        char[] charArray23 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, '4');
        boolean boolean26 = strTokenizer25.hasNext();
        java.lang.Object obj27 = strTokenizer25.clone();
        char[] charArray30 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll(strMatcher52, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean58 = strBuilder49.contains(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("hi!");
        boolean boolean65 = strBuilder39.equals(strBuilder62);
        char[] charArray66 = strBuilder62.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer37.reset(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer25.reset(charArray66);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst(strMatcher79, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder76.replaceAll(strMatcher79, "");
        int int85 = strBuilder74.indexOf(strMatcher79, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher79);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder15.insert((int) '.', charArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 46");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test00584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00584");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer1.setTrimmerMatcher(strMatcher6);
        boolean boolean12 = strTokenizer11.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer11.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test00585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00585");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.append((float) 11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.setCharAt((int) 'a', '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test00586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00586");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("i!");
        int int17 = strBuilder14.indexOf('#', 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((long) ' ');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test00587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00587");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strBuilder14.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder28.deleteAll(strMatcher38);
        boolean boolean41 = strBuilder14.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer2.setQuoteMatcher(strMatcher38);
        java.lang.String str43 = strTokenizer42.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = strTokenizer42.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test00588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00588");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        java.lang.String str18 = strTokenizer17.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#a" + "'", str18, "#a");
    }

    @Test
    public void test00589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00589");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.deleteAll(strMatcher46);
        boolean boolean49 = strBuilder22.contains(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer10.setQuoteMatcher(strMatcher46);
        java.lang.String str51 = strTokenizer50.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer50.setTrimmerMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(stringBuffer67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst(strMatcher73, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder70.replaceAll(strMatcher73, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean79 = strBuilder70.contains(strMatcher78);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder70.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder70.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder70.replaceAll(strMatcher86, "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder68.replaceAll(strMatcher86, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer50.setDelimiterMatcher(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder4.deleteFirst(strMatcher86);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder4.appendln((float) 11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder4.replace(102, 3, ".0");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test00590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00590");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoredChar(' ');
        java.lang.String str23 = strTokenizer22.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher68);
        int int71 = strBuilder45.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer29.setIgnoredMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer25.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer15.setQuoteMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst(strMatcher79, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder76.replaceAll(strMatcher79, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder76.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder76.deleteAll("");
        java.lang.String str89 = strBuilder76.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder76.append(0L);
        char[] charArray92 = strBuilder91.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer15.reset(charArray92);
        java.lang.String str94 = strTokenizer93.previousToken();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "!ih0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "!ih0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[!, i, h, 0]");
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test00591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00591");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        boolean boolean11 = strBuilder1.endsWith("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        java.lang.String str28 = strBuilder23.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.replaceFirst(strMatcher32, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder1.appendln(strBuilder23, 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteAll(' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = strBuilder37.substring(100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "!" + "'", str28, "!");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test00592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00592");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        int int22 = strBuilder21.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.setNewLineText("java.io.IOException");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 9 + "'", int22 == 9);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test00593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00593");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.appendln((float) (byte) 10);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        iOException17.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray25 = iOException21.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.appendWithSeparators((java.lang.Object[]) throwableArray25, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.replaceAll(strMatcher59, "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder41.replaceAll(strMatcher59, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder27.replace(strMatcher59, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0", (int) (short) 0, 0, 18);
        boolean boolean70 = strBuilder68.contains("java.io.IOException: !ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder72.replaceAll(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder72.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.setNewLineText("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder68.appendln(strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.replaceFirst(strMatcher88, "");
        java.util.stream.IntStream intStream91 = strBuilder90.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder90.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder94.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder96.appendln((float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder68.append(strBuilder98);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(intStream91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test00594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00594");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("##########################################0.0\n", 'a');
    }

    @Test
    public void test00595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00595");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "hi!!ih100.0#a\n");
    }

    @Test
    public void test00596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00596");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        boolean boolean5 = strTokenizer4.hasNext();
        java.lang.Object obj6 = strTokenizer4.clone();
        char[] charArray9 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder26.deleteAll(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("hi!");
        boolean boolean44 = strBuilder18.equals(strBuilder41);
        char[] charArray45 = strBuilder41.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer16.reset(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer4.reset(charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        int int64 = strBuilder53.indexOf(strMatcher58, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray45);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer66);
    }

    @Test
    public void test00597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00597");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        int int10 = strBuilder4.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.replaceFirst("", "hi!3");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder4.insert(10, "0.001hi!hi!30.001hi 1");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test00598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00598");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln(3);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.replace(strMatcher22, "", 11, 0, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test00599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00599");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer2.setEmptyTokenAsNull(true);
        java.lang.String str28 = strTokenizer27.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer27.set("1hi!hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strTokenizer29);
    }

    @Test
    public void test00600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00600");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength((int) (short) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.deleteAll(strMatcher4);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("hi!");
        boolean boolean34 = strBuilder8.equals(strBuilder31);
        char[] charArray35 = strBuilder31.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder1.insert((int) '#', charArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test00601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00601");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        java.io.Reader reader42 = strBuilder14.asReader();
        reader42.reset();
        java.nio.CharBuffer charBuffer44 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int45 = reader42.read(charBuffer44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(reader42);
    }

    @Test
    public void test00602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00602");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        boolean boolean56 = strBuilder1.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher67, strMatcher69);
        boolean boolean71 = strBuilder1.contains(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder1.setCharAt(102, '!');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 102");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test00603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00603");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        java.lang.String str19 = strBuilder16.leftString(1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.insert(13, "java.io.IOException: !ih100.0");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 13");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!" + "'", str19, "!");
    }

    @Test
    public void test00604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00604");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.add("hi!3");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
    }

    @Test
    public void test00605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00605");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.setQuoteMatcher(strMatcher64);
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.reset(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer24.reset(charArray70);
        int int76 = strTokenizer75.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.replaceAll(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strBuilder88.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer92.setDelimiterMatcher(strMatcher94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer75.setTrimmerMatcher(strMatcher94);
        java.lang.String str97 = strTokenizer75.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher98 = strTokenizer75.getQuoteMatcher();
        java.lang.String str99 = strTokenizer75.getContent();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "#a" + "'", str97, "#a");
        org.junit.Assert.assertNotNull(strMatcher98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "#a" + "'", str99, "#a");
    }

    @Test
    public void test00606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00606");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(stringBuffer2);
        java.lang.String str5 = strBuilder3.rightString((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.setLength(18);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        int int24 = strBuilder22.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer33 = strBuilder32.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder7.append(stringBuffer33, 2, 17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "!ih100.00\n" + "'", str5, "!ih100.00\n");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(stringBuffer33);
        org.junit.Assert.assertEquals(stringBuffer33.toString(), "0.001hi 1");
    }

    @Test
    public void test00607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00607");
        char[] charArray3 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", strMatcher12, strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("", "hi!");
        int int34 = strBuilder32.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder32.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(stringBuffer53);
        char[] charArray57 = strBuilder52.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray58 = strBuilder17.getChars(charArray57);
        char[] charArray61 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher67, strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder17.append(charArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = strMatcher12.isMatch(charArray61, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test00608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00608");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.appendSeparator('4', 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert((-1), (float) 20L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test00609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00609");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        java.lang.String str21 = strBuilder15.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder15.append(stringBuffer47);
        java.lang.String str51 = strBuilder48.midString(2, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln((int) '1');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.append("!ih100.0#a", 7, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "h" + "'", str21, "h");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test00610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00610");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'h');
        java.lang.String str3 = strTokenizer2.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.reset("001hi 1");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "!i" + "'", str3, "!i");
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test00611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00611");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        boolean boolean56 = strBuilder1.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher67, strMatcher69);
        boolean boolean71 = strBuilder1.contains(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.insert((int) (short) 100, "hi!!ih100.0#a\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test00612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00612");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.lang.Object obj53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendFixedWidthPadLeft(obj53, (int) (byte) 1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendSeparator('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceAll(' ', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln((long) 25);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.reverse();
        java.lang.String str66 = strBuilder63.rightString(8);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "eslafhi!" + "'", str66, "eslafhi!");
    }

    @Test
    public void test00613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00613");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer42.setDelimiterString("h");
        char[] charArray47 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher52, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer42.setTrimmerMatcher(strMatcher56);
        java.lang.Object obj59 = strTokenizer58.clone();
        boolean boolean60 = strTokenizer58.hasNext();
        boolean boolean61 = strTokenizer58.hasNext();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test00614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00614");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln("hi!#java.io.IOException              ");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test00615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00615");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.replaceAll('#', 'a');
        boolean boolean35 = strBuilder15.equals((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.replaceFirst("hi!\n", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteAll('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll(strMatcher41);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.insert(104, (float) 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test00616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00616");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = null;
        int int24 = strBuilder21.lastIndexOf(strMatcher22, (int) (short) 10);
        java.lang.String str26 = strBuilder21.leftString(3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + " ih" + "'", str26, " ih");
    }

    @Test
    public void test00617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00617");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendln((double) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.setCharAt((int) (short) -1, '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test00618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00618");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendPadding((int) (short) -1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setLength((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.append("sehi!!", 19, 105);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test00619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00619");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        java.lang.Object obj25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(obj25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.delete(11, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.append((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.insert(8, (double) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder24.append(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        boolean boolean65 = strBuilder55.endsWith("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder67.replaceAll(strMatcher70, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean76 = strBuilder67.contains(strMatcher75);
        java.lang.StringBuffer stringBuffer77 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder67.appendln(stringBuffer77);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder67.replaceFirst(strMatcher79, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder67.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder84.appendNull();
        java.lang.StringBuffer stringBuffer86 = strBuilder84.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder55.appendln(stringBuffer86);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder53.append(strBuilder55, (int) '!', 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(stringBuffer86);
        org.junit.Assert.assertEquals(stringBuffer86.toString(), "hai!hi!");
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test00620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00620");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.append((float) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        java.util.stream.IntStream intStream31 = strBuilder30.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        int int54 = strBuilder43.indexOf(strMatcher48, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.append(1.0d);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer58.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.replaceAll(strMatcher74, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean80 = strBuilder71.contains(strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher65, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer59.setQuoteMatcher(strMatcher79);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer59.getTrimmerMatcher();
        int int85 = strBuilder43.lastIndexOf(strMatcher83, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder30.deleteAll(strMatcher83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder17.append(strBuilder86, 52, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test00621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00621");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendln(stringBuffer21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder11.replaceFirst(strMatcher23, "hi!");
        int int28 = strBuilder25.lastIndexOf("", (int) (byte) 0);
        java.lang.String str31 = strBuilder25.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        int int48 = strBuilder46.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer57 = strBuilder56.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder25.append(stringBuffer57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder9.append(stringBuffer57);
        int int60 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder9.appendSeparator("hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.reverse();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.replace((int) (byte) -1, (int) (byte) 1, "i!hi!97!!!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "h" + "'", str31, "h");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(stringBuffer57);
        org.junit.Assert.assertEquals(stringBuffer57.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 35 + "'", int60 == 35);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test00622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00622");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("kenizer");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test00623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00623");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.deleteAll(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("hi!");
        boolean boolean49 = strBuilder23.equals(strBuilder46);
        char[] charArray50 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder21.appendln(charArray50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append("0.001hi!hi!30.001hi 1", 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test00624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00624");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.replaceAll("StrTokenizer[!ih100.0]", "i!");
        int int19 = strBuilder16.lastIndexOf("!ih100.0", 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.insert((int) (short) -1, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test00625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00625");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append('#');
        int int17 = strBuilder15.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.append((java.lang.Object) "");
        java.lang.String str19 = strBuilder1.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replaceAll("StrTokenizer[!ih100.0]", "i!");
        int int39 = strBuilder36.lastIndexOf("!ih100.0", 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strBuilder51.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setEmptyTokenAsNull(false);
        java.lang.String str58 = strTokenizer55.next();
        java.lang.String str59 = strTokenizer55.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer55.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst(strMatcher78, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder75.replaceAll(strMatcher78, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean84 = strBuilder75.contains(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher69, strMatcher83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder63.replaceAll(strMatcher69, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer55.setTrimmerMatcher(strMatcher69);
        java.lang.String[] strArray89 = strTokenizer55.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder36.appendWithSeparators((java.lang.Object[]) strArray89, "ih100.010.0i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder1.appendAll((java.lang.Object[]) strArray89);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder1.setNullText("!ih100.0StrTokenizer[!ih100.0]11.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder94.appendFixedWidthPadLeft(5, 33, '4');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "falsehi!" + "'", str19, "falsehi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "!ih100.0" + "'", str58, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "!ih100.0" + "'", str59, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test00626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00626");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("i!hi!97!!!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test00627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00627");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer24.setQuoteMatcher(strMatcher44);
        char[] charArray50 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer47.reset(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer54, "!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setIgnoredChar('#');
        java.lang.String str59 = strTokenizer58.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer58.setEmptyTokenAsNull(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer58.set("hi!!ih100.0#a");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "#a" + "'", str59, "#a");
        org.junit.Assert.assertNotNull(strTokenizer61);
    }

    @Test
    public void test00628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00628");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean4 = strTokenizer3.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setQuoteMatcher(strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer11.setQuoteMatcher(strMatcher31);
        char[] charArray37 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer34.reset(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer3.reset(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer3.setQuoteChar('#');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.set(".0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
    }

    @Test
    public void test00629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00629");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder15.indexOf(strMatcher38);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder15.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceAll("", "hi!");
        java.lang.String str60 = strBuilder55.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.append("");
        char[] charArray63 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, '.', '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder43.appendFixedWidthPadRight((java.lang.Object) strTokenizer66, (int) '#', 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder43.insert((int) 'h', (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "!" + "'", str60, "!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test00630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00630");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.reset(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setDelimiterString("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = strTokenizer34.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
    }

    @Test
    public void test00631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00631");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str46 = strTokenizer45.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder72.replaceAll(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceFirst(strMatcher84, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder81.replaceAll(strMatcher84, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean90 = strBuilder81.contains(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher75, strMatcher89);
        int int92 = strBuilder66.indexOf(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer50.setIgnoredMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer45.setQuoteMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder18.append((java.lang.Object) strTokenizer94);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder95.insert((int) (byte) 0, 4);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test00632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00632");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendPadding((int) 'a', '4');
        char[] charArray32 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher44);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder28.replace(strMatcher44, "", 102, (int) (short) 0, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
    }

    @Test
    public void test00633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00633");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator("i!", 3);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) strMatcher19, 0, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strBuilder34.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setEmptyTokenAsNull(false);
        java.lang.String str41 = strTokenizer38.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer38.setDelimiterMatcher(strMatcher44);
        boolean boolean48 = strTokenizer38.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList49 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList49);
        // The following exception was thrown during execution in test generation
        try {
            char char52 = strBuilder50.charAt((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "!ih100.0" + "'", str41, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test00634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00634");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.setNewLineText("!");
        java.lang.String str16 = strBuilder13.midString(10, (int) (short) 1);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test00635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00635");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.insert(14, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 14");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test00636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00636");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        char[] charArray19 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, "StrTokenizer[not tokenized yet]");
        java.lang.String str22 = strTokenizer21.toString();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str22, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test00637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00637");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        int int60 = strBuilder49.indexOf(strMatcher54, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder49.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.clear();
        java.util.stream.IntStream intStream64 = strBuilder62.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.replaceAll(strMatcher77, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean83 = strBuilder74.contains(strMatcher82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder72.deleteAll(strMatcher82);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder72.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.appendSeparator("", (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder88.appendln((java.lang.Object) strMatcher94);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder62.replaceFirst(strMatcher94, "hi!!ih100.0#a\n");
        int int98 = strBuilder43.indexOf(strMatcher94);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 9 + "'", int98 == 9);
    }

    @Test
    public void test00638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00638");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt((int) (short) 0, ' ');
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.append(stringBuffer44, 1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder11.append(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder11.deleteFirst('1');
        java.lang.String str51 = strBuilder11.getNullText();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test00639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00639");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.setCharAt((int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteAll('h');
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendln((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.appendNull();
        int int40 = strBuilder39.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.append((long) '1');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.splitMatcher();
        int int44 = strBuilder42.indexOf(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder23.replaceAll(strMatcher43, "!ih100.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder4.insert((int) (short) -1, (java.lang.Object) "!ih100.0");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 35 + "'", int21 == 35);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test00640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00640");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean12 = strBuilder3.contains(strMatcher11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher11, strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher11, strMatcher15);
        boolean boolean17 = strTokenizer16.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.setDelimiterString("i");
        boolean boolean20 = strTokenizer19.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test00641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00641");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (byte) 0, (double) 1.0f);
        int int13 = strBuilder4.length();
        java.lang.Class<?> wildcardClass14 = strBuilder4.getClass();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test00642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00642");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder19.setLength(12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.insert((int) '4', (float) 8L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test00643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00643");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("100.0100.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert(104, "#");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00644");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(stringBuffer2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.setNullText("i");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendln("#", 19, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
    }

    @Test
    public void test00645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00645");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder14.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.appendln(14);
        java.lang.String str38 = strBuilder36.leftString(72);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strBuilder50.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder50.replaceFirst("StrTokenizer[!ih100.0]", "!ih100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setIgnoredChar(' ');
        java.lang.String str64 = strTokenizer63.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer63.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer63.setDelimiterString("StrTokenizer[!ih100.0]");
        java.lang.Object obj69 = strTokenizer63.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer63.setIgnoredMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = strTokenizer63.getDelimiterMatcher();
        boolean boolean74 = strBuilder50.contains(strMatcher73);
        char[] charArray77 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray77);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder50.append(charArray77);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder36.append(strBuilder50, (int) (short) 1, 17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "!ih100.014\n" + "'", str38, "!ih100.014\n");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test00646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00646");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        boolean boolean17 = strBuilder15.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strBuilder33.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setEmptyTokenAsNull(false);
        java.lang.String str40 = strTokenizer37.next();
        java.lang.String str41 = strTokenizer37.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer37.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        java.lang.String str45 = strTokenizer44.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer44, "00.00.");
        java.lang.String str48 = strTokenizer44.toString();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "!ih100.0" + "'", str40, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "!ih100.0" + "'", str41, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "!ih100.0" + "'", str45, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "StrTokenizer[!ih100.0]" + "'", str48, "StrTokenizer[!ih100.0]");
    }

    @Test
    public void test00647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00647");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        int int41 = strBuilder1.indexOf('4');
        java.lang.String str42 = strBuilder1.toString();
        int int45 = strBuilder1.lastIndexOf("0.001hi !ih100.0\n\n", 3);
        char[] charArray46 = strBuilder1.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder1.reverse();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = strBuilder47.substring((int) 'h', 102);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!!ih100.0#a\n" + "'", str42, "hi!!ih100.0#a\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "hi!!ih100.0#a\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "hi!!ih100.0#a\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[h, i, !, !, i, h, 1, 0, 0, ., 0, #, a, \n]");
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test00648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00648");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln((long) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.replace(105, 1, "#");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test00649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00649");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln(0.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append((float) 100L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.append(strBuilder26, 18, 21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test00650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00650");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        java.util.stream.IntStream intStream32 = strBuilder1.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder1.appendSeparator(' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "hi!3");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteCharAt(9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 9");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test00651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00651");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.insert(34, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test00652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00652");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert(100, "falsehi!!i!#hi!\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test00653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00653");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.replaceFirst(strMatcher20, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendSeparator('!', 1);
        char[] charArray31 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.insert(2, "0.001hi!hi!30.001hi 1");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.append((long) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append((long) (short) 100);
        int int42 = strBuilder34.indexOf("!!!!!!!!!!!!!!!!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "!ih100.0a#!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "!ih100.0a#!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[!, i, h, 1, 0, 0, ., 0, a, #, !]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test00654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00654");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.setNullText("!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.insert((int) (short) 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test00655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00655");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendln((java.lang.Object) (short) 1);
        java.lang.String str41 = strBuilder39.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteAll("StrTokenizer[!ih100.0]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.insert(52, (float) 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test00656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00656");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendFixedWidthPadRight((int) (byte) 10, (int) (byte) 100, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((float) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.minimizeCapacity();
        int int36 = strBuilder34.indexOf('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.trim();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder14.append((java.lang.CharSequence) strBuilder37, (int) (short) 100, 20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test00657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00657");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        iOException0.addSuppressed((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        iOException2.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.lang.Throwable[] throwableArray10 = iOException6.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException6.getSuppressed();
        java.lang.String str12 = iOException6.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "java.io.IOException" + "'", str12, "java.io.IOException");
    }

    @Test
    public void test00658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00658");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendln("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", (-1), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test00659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00659");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder19.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder7.replace(strMatcher25, "hi!3", 0, 0, 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder7.deleteFirst(strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder39.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strBuilder61.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setEmptyTokenAsNull(false);
        java.lang.String str68 = strTokenizer65.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder39.appendAll((java.util.Iterator<java.lang.String>) strTokenizer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst(strMatcher82, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder79.replaceAll(strMatcher82, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean88 = strBuilder79.contains(strMatcher87);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder77.deleteAll(strMatcher87);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder69.append(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder69.appendSeparator("sehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder36.append((java.lang.CharSequence) strBuilder92);
        java.lang.String str94 = strBuilder92.toString();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "!ih100.0" + "'", str68, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "!ihfalsehi!sehi!!" + "'", str94, "!ihfalsehi!sehi!!");
    }

    @Test
    public void test00660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00660");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) '#', 1, '4');
        int int16 = strBuilder14.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.deleteFirst(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll("", "hi!");
        int int36 = strBuilder34.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer45 = strBuilder44.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder19.append(stringBuffer45);
        int int47 = strBuilder46.capacity();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 35 + "'", int47 == 35);
    }

    @Test
    public void test00661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00661");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst('#', '#');
        char[] charArray47 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder41.append(charArray47);
        int int52 = strBuilder50.lastIndexOf("!");
        java.lang.String str53 = strBuilder50.getNewLineText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00");
        char[] charArray58 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        java.util.stream.IntStream intStream64 = strBuilder63.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.deleteFirst(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer55.reset(charArray58);
        char[] charArray72 = strBuilder50.getChars(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, "!ih100.04\nStrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder23.appendln(charArray72, 104, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 12");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "!ih100.0#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "!ih100.0#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[!, i, h, 1, 0, 0, ., 0, #, a]");
    }

    @Test
    public void test00662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00662");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setQuoteChar('a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = strTokenizer21.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test00663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00663");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder1.asTokenizer();
        boolean boolean27 = strTokenizer26.isIgnoreEmptyTokens();
        java.util.List<java.lang.String> strList28 = strTokenizer26.getTokenList();
        boolean boolean29 = strTokenizer26.hasNext();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test00664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00664");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.lang.Object obj53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendFixedWidthPadLeft(obj53, (int) (byte) 1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendSeparator('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(strMatcher75, "!ih100.0");
        int int79 = strBuilder66.indexOf(strMatcher75, (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder56.replaceAll(strMatcher75, "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln((float) 20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.appendln(" ih", (int) ' ', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test00665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00665");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean11 = strBuilder2.contains(strMatcher10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher10, strMatcher12);
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.reset(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("i!hi!97!!!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str32 = strTokenizer31.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer31.getQuoteMatcher();
        int int35 = strBuilder29.lastIndexOf(strMatcher33, (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer13.setQuoteMatcher(strMatcher33);
        java.lang.Object obj37 = strTokenizer36.clone();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer36.add("ih100.010.0i!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test00666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00666");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        int int20 = strBuilder18.size();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.insert(52, (double) 22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
    }

    @Test
    public void test00667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00667");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int19 = strBuilder12.lastIndexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln((long) 35);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray24 = strBuilder21.toCharArray((int) (byte) 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test00668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00668");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.append(strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append("!");
        java.lang.String str25 = strBuilder23.rightString(16);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = strBuilder23.equals(strBuilder26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "!!!!!!!!!!!!!!!!" + "'", str25, "!!!!!!!!!!!!!!!!");
    }

    @Test
    public void test00669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00669");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.deleteCharAt(9);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((int) 'a');
        int int22 = strBuilder18.indexOf('a');
        int int23 = strBuilder18.size();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 12 + "'", int23 == 12);
    }

    @Test
    public void test00670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00670");
        char[] charArray2 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        java.util.stream.IntStream intStream8 = strBuilder7.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.deleteFirst(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        java.lang.String str17 = strTokenizer16.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer16.add("java.io.IOException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str17, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test00671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00671");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.0");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray4 = strBuilder1.toCharArray((int) '.', 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00672");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.deleteAll(strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln("hi!");
        boolean boolean39 = strBuilder13.equals(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder13.append(1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceAll("", "hi!");
        int int58 = strBuilder56.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        java.lang.StringBuffer stringBuffer70 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder60.appendln(stringBuffer70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.replaceFirst(strMatcher72, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder56.appendFixedWidthPadLeft((java.lang.Object) strBuilder74, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder56.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.append("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder41.append(strBuilder81);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder41.deleteAll("h");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder11.appendln(strBuilder86, 7, 102);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test00673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00673");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendFixedWidthPadRight(0, (int) (short) 0, 'a');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray26 = strBuilder11.toCharArray((int) (byte) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test00674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00674");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln('a');
        boolean boolean34 = strBuilder30.contains('#');
        char[] charArray35 = strBuilder30.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            int int39 = strMatcher8.isMatch(charArray35, (int) '!', 1, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "falsehi!0a\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "falsehi!0a\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[f, a, l, s, e, h, i, !, 0, a, \n]");
    }

    @Test
    public void test00675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00675");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder1.append((double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.setNullText("hi!!ih100.0#a");
        java.lang.String str30 = strBuilder27.toString();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!-1.0" + "'", str30, "hi!-1.0");
    }

    @Test
    public void test00676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00676");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.append((float) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendFixedWidthPadLeft((int) ' ', (int) '4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        java.lang.String str46 = strBuilder41.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.append("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder25.appendln((java.lang.Object) strBuilder47);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = null;
        int int60 = strBuilder58.lastIndexOf(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.replace(10, 104, "hi!!ih100.0#a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst("!ih100.0", "!ih100.0");
        int int75 = strBuilder69.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        char[] charArray81 = strBuilder80.toCharArray();
        char[] charArray82 = strBuilder58.getChars(charArray81);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder58.appendln("#a", 13, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "!" + "'", str46, "!");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[!, i, h, 1, 0, 0, ., 0, \n, !, h, i, !, !, i, h, 1, 0, 0, ., 0, #, a, \n, n, i, z, e, d,  , y, e, t, ]]");
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "!ih100.0\n!hi!!ih100.0#a\nnized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[!, i, h, 1, 0, 0, ., 0, \n, !, h, i, !, !, i, h, 1, 0, 0, ., 0, #, a, \n, n, i, z, e, d,  , y, e, t, ]]");
    }

    @Test
    public void test00677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00677");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln((float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll("", "hi!");
        java.lang.String str29 = strBuilder24.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher39, strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder33.replaceAll(strMatcher39, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean62 = strTokenizer61.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder33.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer61, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder24.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader66 = strBuilder65.asReader();
        boolean boolean67 = reader66.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder10.append((java.lang.Object) reader66);
        int int71 = strBuilder10.lastIndexOf('!', (int) 'h');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "!" + "'", str29, "!");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(reader66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
    }

    @Test
    public void test00678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00678");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        int int13 = strBuilder11.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.replaceAll(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("", "hi!");
        int int30 = strBuilder28.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder32.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder32.replaceFirst(strMatcher44, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.appendln(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder28.appendln(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.insert(2, (-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((float) (byte) 100);
        java.lang.String str71 = strBuilder68.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strBuilder68.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setIgnoredChar('a');
        int int75 = strTokenizer72.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer72.getIgnoredMatcher();
        int int77 = strBuilder53.lastIndexOf(strMatcher76);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test00679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00679");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int22 = strBuilder18.lastIndexOf(strMatcher20, 1);
        java.lang.String str24 = strBuilder18.rightString(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.minimizeCapacity();
        boolean boolean32 = strBuilder18.equals((java.lang.Object) strBuilder31);
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.appendln(charArray35, 104, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "!ih100.0" + "'", str24, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
    }

    @Test
    public void test00680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00680");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder19.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder7.replace(strMatcher25, "hi!3", 0, 0, 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer33.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder7.deleteFirst(strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder39.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strBuilder61.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setEmptyTokenAsNull(false);
        java.lang.String str68 = strTokenizer65.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder39.appendAll((java.util.Iterator<java.lang.String>) strTokenizer65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder71.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst(strMatcher82, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder79.replaceAll(strMatcher82, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean88 = strBuilder79.contains(strMatcher87);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder77.deleteAll(strMatcher87);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder69.append(strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder69.appendSeparator("sehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder36.append((java.lang.CharSequence) strBuilder92);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder36.appendln((-1.0f));
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder36.deleteAll(strMatcher97);
        java.lang.StringBuffer stringBuffer99 = strBuilder36.toStringBuffer();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "!ih100.0" + "'", str68, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strMatcher97);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(stringBuffer99);
        org.junit.Assert.assertEquals(stringBuffer99.toString(), "falsehi!!ihfalsehi!sehi!!-1.0\n");
    }

    @Test
    public void test00681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00681");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteCharAt(7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.insert((int) 'a', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test00682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00682");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        char[] charArray39 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a');
        char[] charArray45 = strBuilder14.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer47.reset("i");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer51.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
    }

    @Test
    public void test00683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00683");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        java.io.Writer writer12 = writer10.append('h');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[hi!]");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        int int33 = strBuilder31.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder31.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln(stringBuffer52);
        char[] charArray56 = strBuilder51.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray57 = strBuilder16.getChars(charArray56);
        int int59 = strMatcher14.isMatch(charArray57, 0);
        // The following exception was thrown during execution in test generation
        try {
            writer12.write(charArray57, (int) '4', (int) 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
    }

    @Test
    public void test00684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00684");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.setQuoteMatcher(strMatcher64);
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.reset(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer24.reset(charArray70);
        int int76 = strTokenizer75.nextIndex();
        boolean boolean77 = strTokenizer75.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst(strMatcher82, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder79.replaceAll(strMatcher82, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder79.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder79.deleteAll("");
        java.lang.String str92 = strBuilder79.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder79.append(0L);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = strTokenizer96.getTrimmerMatcher();
        int int98 = strBuilder94.indexOf(strMatcher97);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = strTokenizer75.setDelimiterMatcher(strMatcher97);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strMatcher97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer99);
    }

    @Test
    public void test00685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00685");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.setNewLineText("0.001hi !ih100.0\n\n");
        int int10 = strBuilder3.lastIndexOf("", 10);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test00686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00686");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.setNewLineText("!");
        int int34 = strBuilder29.indexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.appendln(stringBuffer46);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.replaceFirst(strMatcher48, "hi!");
        int int53 = strBuilder50.lastIndexOf("", (int) (byte) 0);
        java.lang.String str56 = strBuilder50.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll("", "hi!");
        int int73 = strBuilder71.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer82 = strBuilder81.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder50.append(stringBuffer82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder29.append(stringBuffer82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder11.appendln(stringBuffer82);
        java.lang.String str88 = strBuilder85.substring(4, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.minimizeCapacity();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "h" + "'", str56, "h");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(stringBuffer82);
        org.junit.Assert.assertEquals(stringBuffer82.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "00.00." + "'", str88, "00.00.");
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test00687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00687");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) '#', 1, '4');
        java.lang.String str17 = strBuilder14.substring((int) (byte) 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendPadding((int) (byte) 100, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        int int37 = strBuilder35.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean48 = strBuilder39.contains(strMatcher47);
        java.lang.StringBuffer stringBuffer49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder39.appendln(stringBuffer49);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder39.replaceFirst(strMatcher51, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder35.appendFixedWidthPadLeft((java.lang.Object) strBuilder53, 1, ' ');
        char[] charArray57 = strBuilder56.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean78 = strBuilder69.contains(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder67.deleteAll(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln('a');
        java.io.Writer writer84 = strBuilder81.asWriter();
        char[] charArray85 = new char[] {};
        writer84.write(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder59.appendFixedWidthPadLeft((java.lang.Object) charArray85, 104, '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder14.append(charArray85, (int) '#', 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!3" + "'", str17, "hi!3");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(writer84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[]");
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test00688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00688");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        int int32 = strBuilder30.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        java.util.stream.IntStream intStream38 = strBuilder37.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.appendln(stringBuffer50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder40.replaceFirst(strMatcher52, "hi!");
        int int55 = strBuilder37.indexOf(strMatcher52);
        int int57 = strBuilder30.indexOf(strMatcher52, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder15.replaceFirst(strMatcher52, "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = strBuilder59.substring(100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test00689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00689");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.lang.String str6 = strBuilder4.substring((int) (byte) 1);
        int int8 = strBuilder4.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.replaceAll(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.replaceAll("StrTokenizer[!ih100.0]", "i!");
        boolean boolean26 = strBuilder4.equalsIgnoreCase(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.appendNewLine();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.replace(strMatcher28, "!ih100.0", 11, 0, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "i!" + "'", str6, "i!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test00690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00690");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.deleteAll(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("hi!");
        boolean boolean49 = strBuilder23.equals(strBuilder46);
        char[] charArray50 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder21.appendln(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.setCharAt((int) (byte) 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendln('4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.insert(5, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test00691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00691");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[!ih100.0]");
        java.lang.String str2 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterString("java.io.IOException");
        int int5 = strTokenizer1.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[!ih100.0]" + "'", str2, "StrTokenizer[!ih100.0]");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test00692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00692");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.minimizeCapacity();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test00693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00693");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder1.append((double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("100.0100.0");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray32 = strBuilder29.toCharArray(105, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test00694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00694");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(stringBuffer37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder14.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = null;
        boolean boolean43 = strBuilder14.contains(strMatcher42);
        boolean boolean45 = strBuilder14.endsWith("");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test00695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00695");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.appendln("");
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder4.replaceFirst(strMatcher33, "0.001hi !ih100.0\n\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder4.insert((-1), (float) 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test00696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00696");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int22 = strBuilder18.lastIndexOf(strMatcher20, 1);
        java.lang.String str24 = strBuilder18.rightString(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.minimizeCapacity();
        boolean boolean32 = strBuilder18.equals((java.lang.Object) strBuilder31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.replace(10, (int) (short) 100, "hi!hi!97!!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "!ih100.0" + "'", str24, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test00697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00697");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean21 = strBuilder12.contains(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.append((int) (short) 0);
        java.io.Writer writer28 = writer10.append((java.lang.CharSequence) strBuilder12);
        writer10.write("100.0100.0");
        java.io.Writer writer32 = writer10.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean43 = strBuilder34.contains(strMatcher42);
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder34.appendln(stringBuffer44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder34.replaceFirst(strMatcher46, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.insert(0, (java.lang.Object) (byte) 1);
        java.lang.String str52 = strBuilder51.toString();
        int int55 = strBuilder51.indexOf(' ', (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer58 = writer32.append((java.lang.CharSequence) strBuilder51, 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(writer32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1hi!hi!" + "'", str52, "1hi!hi!");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test00698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00698");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendSeparator('.', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        int int48 = strBuilder46.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean59 = strBuilder50.contains(strMatcher58);
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendln(stringBuffer60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder50.replaceFirst(strMatcher62, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) strBuilder64, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((long) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append((double) (short) 10);
        boolean boolean74 = strBuilder13.equalsIgnoreCase(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.appendPadding(12, 'h');
        boolean boolean79 = strBuilder73.contains(' ');
        java.lang.String str81 = strBuilder73.substring(4);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "i!45210.0hhhhhhhhhhhh" + "'", str81, "i!45210.0hhhhhhhhhhhh");
    }

    @Test
    public void test00699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00699");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendPadding(3, '!');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.insert(10, (long) 72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test00700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00700");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("", (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((java.lang.Object) strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.insert(8, (-1.0d));
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer35.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher62, strMatcher76);
        int int79 = strBuilder53.indexOf(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer36.setDelimiterMatcher(strMatcher76);
        java.lang.String str81 = strTokenizer36.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer36, "sehi!!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer36.setQuoteChar('a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer85);
    }

    @Test
    public void test00701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00701");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.replaceAll(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean46 = strBuilder37.contains(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher45);
        int int48 = strBuilder22.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer6.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer1.setQuoteMatcher(strMatcher45);
        int int51 = strTokenizer1.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer1.setQuoteChar(' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test00702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00702");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer79.append('a');
        writer79.close();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test00703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00703");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) '#', 1, '4');
        int int16 = strBuilder14.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.deleteFirst(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll("", "hi!");
        int int36 = strBuilder34.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer45 = strBuilder44.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder19.append(stringBuffer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((float) (byte) 100);
        boolean boolean64 = strBuilder51.equalsIgnoreCase(strBuilder63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.insert(7, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.replaceAll(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder74.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append((float) (byte) 100);
        boolean boolean85 = strBuilder72.equalsIgnoreCase(strBuilder84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder72.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder63.append(strBuilder87);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder46.append((java.lang.CharSequence) strBuilder88);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(stringBuffer45);
        org.junit.Assert.assertEquals(stringBuffer45.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test00704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00704");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "hi!3");
        boolean boolean30 = strBuilder28.contains("!ihfalsehi!!");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test00705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00705");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendSeparator(' ', (int) (byte) 10);
        boolean boolean22 = strBuilder17.startsWith("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder24.replaceAll(strMatcher30, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean71 = strBuilder62.contains(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder50.replaceAll(strMatcher56, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean79 = strTokenizer78.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder50.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer78, "!ih100.0");
        char[] charArray84 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder50.appendln(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, ' ', ' ');
        char[] charArray93 = strBuilder24.getChars(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray93, "!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray93);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder17.appendln(charArray93, 34, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 7");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[h, i, !]");
        org.junit.Assert.assertNotNull(strTokenizer96);
    }

    @Test
    public void test00706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00706");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.append('4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.insert(35, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test00707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00707");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder15.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendPadding(52, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.delete(7, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder15.insert((int) '1', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 49");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test00708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00708");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean21 = strBuilder12.contains(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder10.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln("hi!");
        boolean boolean28 = strBuilder2.equals(strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder30.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder30.replaceFirst(strMatcher42, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder30.insert((int) (short) 1, 'a');
        boolean boolean48 = strBuilder25.equals(strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((float) (byte) 100);
        java.lang.String str63 = strBuilder60.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder60.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder25.replaceFirst(strMatcher65, "!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!a\nh", strMatcher65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = strTokenizer68.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test00709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00709");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        reader24.close();
        reader24.reset();
        long long28 = reader24.skip((long) (byte) 0);
        reader24.reset();
        reader24.close();
        reader24.reset();
        char[] charArray32 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int33 = reader24.read(charArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test00710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00710");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        java.lang.CharSequence charSequence22 = strBuilder19.subSequence(1, (int) (short) 1);
        boolean boolean24 = strBuilder19.endsWith("!ih100.0");
        char char26 = strBuilder19.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        int int39 = strBuilder19.lastIndexOf(strMatcher34);
        int int40 = strBuilder7.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll("", "hi!");
        int int57 = strBuilder55.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder65.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder55.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln(stringBuffer76);
        char[] charArray80 = strBuilder75.toCharArray((int) (byte) 1, (int) '!');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray80);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = strMatcher34.isMatch(charArray80, 105, 2, 34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + char26 + "' != '" + '!' + "'", char26 == '!');
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), ".001hi !ih100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[., 0, 0, 1, h, i,  , !, i, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strTokenizer81);
    }

    @Test
    public void test00711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00711");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendSeparator("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceAll("", "hi!");
        java.lang.String str44 = strBuilder39.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder39.replaceFirst(strMatcher48, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.replaceAll("StrTokenizer[!ih100.0]", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder27.appendln(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("i");
        java.lang.String str68 = strBuilder65.substring(4, 14);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "!" + "'", str44, "!");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "eh!0a\nStrT" + "'", str68, "eh!0a\nStrT");
    }

    @Test
    public void test00712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00712");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.close();
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        // The following exception was thrown during execution in test generation
        try {
            writer24.write(charArray28, 10, 20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 20");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
    }

    @Test
    public void test00713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00713");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("i!hi!97!!!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str11 = strTokenizer10.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer10.getQuoteMatcher();
        int int14 = strBuilder8.lastIndexOf(strMatcher12, (int) (byte) 100);
        int int16 = strBuilder8.lastIndexOf("i!hi!97!!!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder8.insert((int) '!', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 33");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test00714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00714");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        char[] charArray39 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a');
        char[] charArray45 = strBuilder14.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean54 = strTokenizer53.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer53.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer53.setQuoteMatcher(strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer60.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.replaceAll(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst(strMatcher76, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder73.replaceAll(strMatcher76, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean82 = strBuilder73.contains(strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher67, strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer61.setQuoteMatcher(strMatcher81);
        char[] charArray87 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer84.reset(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer53.reset(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer49.reset(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = strTokenizer97.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertNotNull(strTokenizer97);
        org.junit.Assert.assertNotNull(strTokenizer99);
    }

    @Test
    public void test00715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00715");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("i!hi!97!!!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str11 = strTokenizer10.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer10.getQuoteMatcher();
        int int14 = strBuilder8.lastIndexOf(strMatcher12, (int) (byte) 100);
        int int16 = strBuilder8.indexOf("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        java.lang.String str17 = strBuilder8.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean36 = strBuilder27.contains(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.deleteAll(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNewLineText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        java.util.stream.IntStream intStream52 = strBuilder51.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.minimizeCapacity();
        char[] charArray56 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher66);
        int int69 = strBuilder53.lastIndexOf(strMatcher66, (int) '#');
        int int71 = strBuilder46.lastIndexOf(strMatcher66, (-1));
        int int73 = strBuilder8.lastIndexOf(strMatcher66, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder8.insert((int) 'a', (double) 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(intStream52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test00716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00716");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder1.appendPadding((int) '.', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceAll("", "hi!");
        java.lang.String str39 = strBuilder34.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.append("");
        char[] charArray42 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, "StrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder21.insert((int) (short) 100, charArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "!" + "'", str39, "!");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[!, i, h, 1, 0, 0, ., 0]");
    }

    @Test
    public void test00717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00717");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setEmptyTokenAsNull(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.set("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!100!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test00718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00718");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", '#');
        java.lang.Object obj3 = strTokenizer2.clone();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test00719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00719");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(charArray0);
    }

    @Test
    public void test00720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00720");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.insert(3, "!ih");
        java.lang.Class<?> wildcardClass31 = strBuilder30.getClass();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test00721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00721");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setIgnoredChar('1');
        java.lang.String str28 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setQuoteMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceAll("", "hi!");
        int int47 = strBuilder45.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll(strMatcher52, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean58 = strBuilder49.contains(strMatcher57);
        java.lang.StringBuffer stringBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder49.appendln(stringBuffer59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder49.replaceFirst(strMatcher61, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder45.appendFixedWidthPadLeft((java.lang.Object) strBuilder63, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder45.reverse();
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a');
        char[] charArray76 = strBuilder45.getChars(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            int int82 = strMatcher29.isMatch(charArray70, (int) (short) 10, (int) (byte) -1, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[!, 0, ., 0, 0, 1, h, i, !]");
    }

    @Test
    public void test00722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00722");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = strTokenizer7.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.replaceAll(strMatcher13, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strBuilder20.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setEmptyTokenAsNull(false);
        java.lang.String str27 = strTokenizer24.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer24.setDelimiterMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setIgnoredChar('a');
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer33.reset(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.setQuoteMatcher(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer7.setQuoteMatcher(strMatcher52);
        java.lang.String str55 = strTokenizer54.previousToken();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "!ih100.0" + "'", str27, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test00723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00723");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean48 = strBuilder39.contains(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.replaceAll(strMatcher33, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean56 = strTokenizer55.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer55, "!ih100.0");
        char[] charArray61 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder27.appendln(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ', ' ');
        char[] charArray70 = strBuilder1.getChars(charArray61);
        java.lang.StringBuffer stringBuffer71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder1.append(stringBuffer71, (int) (byte) -1, (int) '.');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.insert((int) '#', 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[h, i, !]");
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test00724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00724");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("i!hi!97!!!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str11 = strTokenizer10.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer10.getQuoteMatcher();
        int int14 = strBuilder8.lastIndexOf(strMatcher12, (int) (byte) 100);
        int int16 = strBuilder8.indexOf("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean35 = strBuilder26.contains(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.deleteAll(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder8.append((java.lang.CharSequence) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.append(strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceAll("", "hi!");
        java.lang.String str62 = strBuilder57.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder57.replaceFirst(strMatcher66, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendSeparator('!', 1);
        char[] charArray77 = strBuilder76.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.insert(2, "0.001hi!hi!30.001hi 1");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder45.append((java.lang.CharSequence) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder45.appendFixedWidthPadLeft(17, 33, 'h');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "!" + "'", str62, "!");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "!ih100.0a#!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "!ih100.0a#!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[!, i, h, 1, 0, 0, ., 0, a, #, !]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test00725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00725");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getDelimiterMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.set("i!1");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test00726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00726");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        java.io.Reader reader19 = strBuilder4.asReader();
        int int20 = strBuilder4.size();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 9 + "'", int20 == 9);
    }

    @Test
    public void test00727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00727");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int22 = strBuilder18.lastIndexOf(strMatcher20, 1);
        java.lang.String str24 = strBuilder18.rightString(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.minimizeCapacity();
        boolean boolean32 = strBuilder18.equals((java.lang.Object) strBuilder31);
        java.lang.String str33 = strBuilder31.getNullText();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "!ih100.0" + "'", str24, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test00728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00728");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        java.util.stream.IntStream intStream5 = strBuilder4.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.insert(0, (long) '!');
        int int11 = strBuilder8.indexOf('#', (int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendSeparator('#', (int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        int int45 = strBuilder34.indexOf(strMatcher39, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder29.append(strBuilder34, (int) (byte) 1, 0);
        int int49 = strBuilder48.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendFixedWidthPadLeft(10, 3, '!');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        int int57 = strBuilder53.indexOf(strMatcher55, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder8.replaceFirst(strMatcher55, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        int int75 = strBuilder64.indexOf(strMatcher69, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder64.appendSeparator("!ih100.00", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder64.deleteCharAt((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder8.appendln(strBuilder64, 0, 33);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test00729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00729");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean32 = strBuilder23.contains(strMatcher31);
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendln(stringBuffer33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceFirst(strMatcher35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        boolean boolean55 = strBuilder50.endsWith("!ih100.0");
        char char57 = strBuilder50.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        int int63 = strBuilder50.indexOf('#', 100);
        boolean boolean64 = strBuilder38.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder50.appendSeparator('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.replaceAll(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder74.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append((float) (byte) 100);
        boolean boolean85 = strBuilder72.equalsIgnoreCase(strBuilder84);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder50.appendln(strBuilder72, 23, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + char57 + "' != '" + '!' + "'", char57 == '!');
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test00730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00730");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        java.lang.String str14 = strBuilder1.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.append(0L);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        int int20 = strBuilder16.indexOf(strMatcher19);
        char[] charArray23 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        java.util.stream.IntStream intStream29 = strBuilder28.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.deleteFirst(strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.append(charArray23, (int) (byte) 1, 17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 17");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer36);
    }

    @Test
    public void test00731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00731");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        char[] charArray14 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        char[] charArray29 = strBuilder11.getChars(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher31);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer32.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher31);
    }

    @Test
    public void test00732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00732");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        java.lang.String str17 = strBuilder16.toString();
        int int20 = strBuilder16.lastIndexOf('a', (int) (short) 1);
        boolean boolean22 = strBuilder16.endsWith("hi!");
        int int25 = strBuilder16.indexOf('a', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.insert(0, 7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder16.appendln("StrTokenizer[not tokenized yet]", 7, 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "!ih100.00" + "'", str17, "!ih100.00");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test00733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00733");
        java.io.IOException iOException1 = new java.io.IOException("hi!");
        java.lang.String str2 = iOException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.io.IOException: hi!" + "'", str2, "java.io.IOException: hi!");
    }

    @Test
    public void test00734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00734");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder19.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder7.replace(strMatcher25, "hi!3", 0, 0, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        int int48 = strBuilder46.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean71 = strBuilder62.contains(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher70);
        int int73 = strBuilder50.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder50.appendln('4');
        int int77 = strBuilder50.indexOf('#');
        int int78 = strBuilder50.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder50.appendln((long) 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.ensureCapacity((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) (byte) 10, 12, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder7.appendSeparator("!i0.", (-1));
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test00735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00735");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder21.replaceAll(strMatcher27, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strBuilder21.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder21.appendln("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean59 = strBuilder50.contains(strMatcher58);
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendln(stringBuffer60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder50.replaceFirst(strMatcher62, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((double) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder48.appendln(strBuilder64);
        boolean boolean68 = strBuilder17.equals((java.lang.Object) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder17.appendSeparator("100.0100.0", "f0alsehi!1\n      10");
        char[] charArray74 = strBuilder17.toCharArray((int) (byte) 1, 18);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "ih100.010.0-112.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "ih100.010.0-112.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[i, h, 1, 0, 0, ., 0, 1, 0, ., 0, -, 1, 1, 2, ., 0]");
    }

    @Test
    public void test00736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00736");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoredChar(' ');
        java.lang.String str23 = strTokenizer22.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher68);
        int int71 = strBuilder45.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer29.setIgnoredMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer25.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer15.setQuoteMatcher(strMatcher68);
        java.lang.String[] strArray75 = strTokenizer74.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setDelimiterChar('!');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer74.add("java.io.IOException: !ih100.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strTokenizer77);
    }

    @Test
    public void test00737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00737");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        int int23 = strBuilder21.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder34.deleteAll(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln("hi!");
        boolean boolean52 = strBuilder26.equals(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean63 = strBuilder54.contains(strMatcher62);
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder54.appendln(stringBuffer64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder54.replaceFirst(strMatcher66, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder54.insert((int) (short) 1, 'a');
        boolean boolean72 = strBuilder49.equals(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.replaceAll(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder74.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append((float) (byte) 100);
        java.lang.String str87 = strBuilder84.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strBuilder84.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder49.replaceFirst(strMatcher89, "!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer("hi!a\nh", strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder21.deleteFirst(strMatcher89);
        java.io.Reader reader94 = strBuilder93.asReader();
        java.nio.CharBuffer charBuffer95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int96 = reader94.read(charBuffer95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(reader94);
    }

    @Test
    public void test00738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00738");
        java.io.IOException iOException1 = new java.io.IOException("hi!!ih100.0#a");
    }

    @Test
    public void test00739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00739");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        char[] charArray14 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer23.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        char[] charArray29 = strBuilder11.getChars(charArray14);
        java.lang.String str30 = strBuilder11.getNewLineText();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[!, i, h]");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test00740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00740");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.setCharAt((int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        java.util.stream.IntStream intStream15 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean26 = strBuilder17.contains(strMatcher25);
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.appendln(stringBuffer27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder17.replaceFirst(strMatcher29, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert(0, (java.lang.Object) (byte) 1);
        boolean boolean35 = strBuilder14.equalsIgnoreCase(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((float) (byte) 100);
        java.lang.CharSequence charSequence50 = strBuilder47.subSequence(1, (int) (short) 1);
        boolean boolean52 = strBuilder47.endsWith("!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.replaceAll(strMatcher77, "");
        int int83 = strBuilder72.indexOf(strMatcher77, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder67.append(strBuilder72, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder67.setNullText("hi!");
        boolean boolean89 = strBuilder47.equalsIgnoreCase(strBuilder88);
        java.lang.Object[] objArray90 = new java.lang.Object[] { strBuilder47 };
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder14.appendAll(objArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder4.appendAll(objArray90);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder92.insert(72, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[!ih100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[!ih100.0]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test00741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00741");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.insert((int) '.', true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 46");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test00742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00742");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        int int14 = strBuilder11.length();
        java.util.stream.IntStream intStream15 = strBuilder11.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendln("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendSeparator('!');
        java.lang.String str20 = strBuilder19.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strBuilder32.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.setEmptyTokenAsNull(false);
        java.lang.String str39 = strTokenizer36.next();
        java.lang.String str40 = strTokenizer36.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer36.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder44.replaceAll(strMatcher50, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer36.setTrimmerMatcher(strMatcher50);
        java.util.List<java.lang.String> strList70 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder19.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList70, "!ihfalsehi!!");
        // The following exception was thrown during execution in test generation
        try {
            char char74 = strBuilder72.charAt((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(intStream15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "!ih100.0" + "'", str39, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "!ih100.0" + "'", str40, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test00743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00743");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean14 = strBuilder5.contains(strMatcher13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher13, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer1.setDelimiterMatcher(strMatcher13);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test00744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00744");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        int int3 = strBuilder1.indexOf('h');
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test00745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00745");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        int int13 = strBuilder11.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.replaceAll(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("", "hi!");
        int int30 = strBuilder28.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder32.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder32.replaceFirst(strMatcher44, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.appendln(strBuilder28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer53.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher65, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer53.setDelimiterMatcher(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder51.appendln((java.lang.Object) strTokenizer53);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer53.getDelimiterMatcher();
        java.lang.String str72 = strTokenizer53.next();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
    }

    @Test
    public void test00746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00746");
        java.io.IOException iOException1 = new java.io.IOException("falsehi!!i!#hi!\n");
    }

    @Test
    public void test00747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00747");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        int int22 = strBuilder21.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.ensureCapacity(0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.insert((int) (byte) 100, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 9 + "'", int22 == 9);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test00748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00748");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendSeparator("i", (int) (short) -1);
        java.util.stream.IntStream intStream29 = strBuilder28.codePoints();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder28.insert(100, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
    }

    @Test
    public void test00749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00749");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll('h');
        int int10 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setCharAt(0, '4');
        int int16 = strBuilder12.capacity();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(strMatcher25, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.replaceAll(strMatcher25, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean31 = strBuilder22.contains(strMatcher30);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher30, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer18.setDelimiterMatcher(strMatcher30);
        int int35 = strBuilder12.lastIndexOf(strMatcher30);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 35 + "'", int16 == 35);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 12 + "'", int35 == 12);
    }

    @Test
    public void test00750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00750");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer24.append('h');
        writer81.flush();
        writer81.write("hi!\n10");
        writer81.close();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test00751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00751");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!\n10");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test00752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00752");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.append((double) 11);
        java.lang.String str25 = strBuilder11.rightString((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder11.insert((int) 'h', true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "!ih100.0StrTokenizer[!ih100.0]11.0" + "'", str25, "!ih100.0StrTokenizer[!ih100.0]11.0");
    }

    @Test
    public void test00753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00753");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setIgnoredChar('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher38, strMatcher40);
        char[] charArray44 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer41.reset(charArray44);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer41.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer27.setDelimiterMatcher(strMatcher49);
        boolean boolean51 = strTokenizer50.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test00754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00754");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        int int45 = strBuilder18.indexOf('#');
        int int46 = strBuilder18.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder18.appendln((long) 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.ensureCapacity((int) (byte) 10);
        int int54 = strBuilder50.lastIndexOf("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test00755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00755");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!\n10");
        boolean boolean2 = strTokenizer1.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test00756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00756");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        java.lang.String str14 = strBuilder1.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.append((int) 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder1.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder26.deleteAll(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln('a');
        java.lang.String str43 = strBuilder42.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.insert(3, "!ih");
        java.io.Reader reader50 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strBuilder62.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setEmptyTokenAsNull(false);
        java.lang.String str69 = strTokenizer66.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer66.setDelimiterMatcher(strMatcher72);
        boolean boolean76 = strTokenizer66.hasPrevious();
        char[] charArray79 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher89);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer66.reset(charArray79);
        int int94 = reader50.read(charArray79);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder17.insert(6, charArray79, 8, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 6");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "!ih100.0" + "'", str69, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "fa");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "fa");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[f, a]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2 + "'", int94 == 2);
    }

    @Test
    public void test00757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00757");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder1.insert((int) (short) 10, (float) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test00758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00758");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendln((java.lang.Object) (short) 1);
        java.lang.String str41 = strBuilder39.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteAll("StrTokenizer[!ih100.0]");
        int int44 = strBuilder43.size();
        char[] charArray45 = null;
        char[] charArray46 = strBuilder43.getChars(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '#', 'a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer49.add("i!45210.0hhhhhhhhhhhh");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "falsehi!1\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "falsehi!1\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[f, a, l, s, e, h, i, !, 1, \n]");
    }

    @Test
    public void test00759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00759");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("hi!");
        boolean boolean27 = strBuilder1.equals(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder1.append(1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder(0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.append(strBuilder31, (int) (short) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test00760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00760");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        int int47 = strBuilder36.indexOf(strMatcher41, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder31.append(strBuilder36, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.setNullText("hi!");
        boolean boolean53 = strBuilder11.equalsIgnoreCase(strBuilder52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder11.insert((int) (short) -1, "!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test00761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00761");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer21.reset();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strTokenizer21.isIgnoreEmptyTokens();
        java.lang.Class<?> wildcardClass25 = strTokenizer21.getClass();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test00762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00762");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean4 = strTokenizer3.isEmptyTokenAsNull();
        boolean boolean5 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setIgnoredChar('.');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test00763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00763");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        iOException1.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        iOException8.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        java.io.IOException iOException12 = new java.io.IOException();
        java.io.IOException iOException13 = new java.io.IOException();
        iOException12.addSuppressed((java.lang.Throwable) iOException13);
        iOException9.addSuppressed((java.lang.Throwable) iOException12);
        iOException4.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.String str17 = iOException9.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "java.io.IOException" + "'", str17, "java.io.IOException");
    }

    @Test
    public void test00764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00764");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.deleteAll('!');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.insert(19, "hi!hi!97!!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 19");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test00765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00765");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) '#', 1, '4');
        int int16 = strBuilder14.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.deleteFirst(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.insert(0, (java.lang.Object) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder19.append((java.lang.CharSequence) strBuilder35, (int) (byte) 0, (int) '!');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test00766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00766");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.replaceAll(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean46 = strBuilder37.contains(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher45);
        int int48 = strBuilder22.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer6.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer1.setQuoteMatcher(strMatcher45);
        int int51 = strTokenizer50.size();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer50.set("java.io.IOException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test00767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00767");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        java.io.Writer writer12 = writer10.append('h');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strBuilder36.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setEmptyTokenAsNull(false);
        java.lang.String str43 = strTokenizer40.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean63 = strBuilder54.contains(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder52.deleteAll(strMatcher62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder44.append(strBuilder52);
        java.io.Writer writer66 = writer10.append((java.lang.CharSequence) strBuilder52);
        writer10.write("falsehi!");
        writer10.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.replaceAll(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder84.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.append((long) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.append(false);
        java.io.Writer writer90 = writer10.append((java.lang.CharSequence) strBuilder87);
        writer90.write((int) 'a');
        writer90.write("i!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "!ih100.0" + "'", str43, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(writer66);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(writer90);
    }

    @Test
    public void test00768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00768");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("1hi!hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append("\000\000\000", 3, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00769");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        char[] charArray36 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.replaceAll('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln((double) 2);
        int int44 = strBuilder41.indexOf('4', 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        java.util.stream.IntStream intStream50 = strBuilder49.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.setCharAt((int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder41.appendFixedWidthPadLeft((java.lang.Object) strBuilder49, 33, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((int) '.');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.appendln("sehi!!", (int) (short) -1, 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test00770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00770");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hi!");
        int int2 = strTokenizer1.previousIndex();
        boolean boolean3 = strTokenizer1.hasPrevious();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test00771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00771");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.appendln(stringBuffer41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder31.replaceFirst(strMatcher43, "hi!");
        int int48 = strBuilder45.lastIndexOf("", (int) (byte) 0);
        java.lang.String str51 = strBuilder45.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceAll("", "hi!");
        int int68 = strBuilder66.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder66.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer77 = strBuilder76.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder45.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder29.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder16.appendln(stringBuffer77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence83 = strBuilder16.subSequence((int) ' ', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -22");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "h" + "'", str51, "h");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test00772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00772");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((long) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean35 = strBuilder26.contains(strMatcher34);
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder26.appendln(stringBuffer36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.replaceFirst(strMatcher38, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert(0, (java.lang.Object) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.append(strBuilder43, (int) '4', 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test00773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00773");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(7, (double) 1.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        java.util.stream.IntStream intStream29 = strBuilder28.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteAll("i!");
        int int40 = strBuilder36.indexOf("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.setQuoteMatcher(strMatcher64);
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.reset(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder36.insert(12, charArray70);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder20.insert(12, charArray70, (int) ' ', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 12");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(intStream29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test00774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00774");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        java.lang.CharSequence charSequence36 = strBuilder33.subSequence(1, (int) (short) 1);
        boolean boolean38 = strBuilder33.endsWith("!ih100.0");
        char char40 = strBuilder33.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder33.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean54 = strBuilder45.contains(strMatcher53);
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.appendln(stringBuffer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder45.replaceFirst(strMatcher57, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder43.append((java.lang.CharSequence) strBuilder59);
        char[] charArray63 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray63);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer70.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, strMatcher68, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder60.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder19.replaceAll(strMatcher72, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder19.appendPadding(10, '1');
        boolean boolean82 = strBuilder80.endsWith("eh!0a\nStrT");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + char40 + "' != '" + '!' + "'", char40 == '!');
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test00775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00775");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        java.util.stream.IntStream intStream32 = strBuilder1.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder1.appendSeparator(' ', ' ');
        java.lang.Object obj36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendFixedWidthPadRight(obj36, (int) ' ', '4');
        char[] charArray42 = strBuilder39.toCharArray(16, (int) (short) 100);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "44444444444444444444");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "44444444444444444444");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]");
    }

    @Test
    public void test00776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00776");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean43 = strBuilder34.contains(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher42);
        int int45 = strBuilder19.indexOf(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer3.setIgnoredMatcher(strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer3.setTrimmerMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setDelimiterChar('4');
        java.lang.Object obj52 = strTokenizer49.clone();
        java.lang.String str53 = strTokenizer49.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test00777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00777");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int19 = strBuilder12.lastIndexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln((long) 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean61 = strBuilder52.contains(strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher46, strMatcher60);
        int int63 = strBuilder40.indexOf(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder40.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer68.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder72.replaceAll(strMatcher75, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean81 = strBuilder72.contains(strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher80, strMatcher82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer68.setDelimiterMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder65.deleteFirst(strMatcher85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder21.replaceAll(strMatcher85, "hi!!ih100.0#a\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder21.insert(78, (double) 6);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 78");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test00778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00778");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder2.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strBuilder24.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setEmptyTokenAsNull(false);
        java.lang.String str31 = strTokenizer28.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder2.appendAll((java.util.Iterator<java.lang.String>) strTokenizer28);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.deleteAll(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder32.append(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder57.appendNewLine();
        java.util.stream.IntStream intStream59 = strBuilder58.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.insert(0, (long) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder53.append((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder53.append((int) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder67.replaceAll(strMatcher70, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean76 = strBuilder67.contains(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder67.appendFixedWidthPadRight((int) '#', 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.append((-1));
        char[] charArray85 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray85);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer92.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer93.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, strMatcher90, strMatcher94);
        int int97 = strBuilder82.indexOf(strMatcher90, (int) '#');
        boolean boolean98 = strBuilder53.contains(strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher90);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "!ih100.0" + "'", str31, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(intStream59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test00779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00779");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.append(strBuilder9, 11, 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNullText("f0alsehi!1\n      10");
        java.lang.Object obj16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.insert(18, obj16);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 18");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test00780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00780");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!!ih100.0#a\n", strMatcher1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00781");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        int int14 = strBuilder8.indexOf(' ', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) (byte) 100);
        java.lang.CharSequence charSequence29 = strBuilder26.subSequence(1, (int) (short) 1);
        boolean boolean31 = strBuilder26.endsWith("!ih100.0");
        char char33 = strBuilder26.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder26.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.appendln(stringBuffer48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.replaceFirst(strMatcher50, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder36.append((java.lang.CharSequence) strBuilder52);
        char[] charArray56 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer63.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher61, strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder53.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNull();
        java.util.stream.IntStream intStream70 = strBuilder68.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder8.appendln(strBuilder68);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder8.appendln("100.0100.0", (int) (short) -1, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + char33 + "' != '" + '!' + "'", char33 == '!');
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(intStream70);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test00782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00782");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln(' ');
        boolean boolean9 = strBuilder6.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test00783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00783");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        reader24.close();
        reader24.reset();
        long long28 = reader24.skip((long) (byte) 0);
        reader24.reset();
        reader24.close();
        int int31 = reader24.read();
        java.nio.CharBuffer charBuffer32 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int33 = reader24.read(charBuffer32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 33 + "'", int31 == 33);
    }

    @Test
    public void test00784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00784");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.lang.String str54 = strBuilder39.substring(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll("1hi!hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder59.appendln(stringBuffer69);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder59.replaceFirst(strMatcher71, "hi!");
        int int76 = strBuilder73.lastIndexOf("", (int) (byte) 0);
        char[] charArray79 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer86.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer87.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, strMatcher84, strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder73.deleteFirst(strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder73.appendPadding(52, '!');
        java.util.stream.IntStream intStream94 = strBuilder93.chars();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder55.append((java.lang.CharSequence) strBuilder93, 48, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "falsehi!" + "'", str54, "falsehi!");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(intStream94);
    }

    @Test
    public void test00785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00785");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        boolean boolean12 = strBuilder9.startsWith("!ih100.0#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.setCharAt(11, 'h');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test00786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00786");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        java.lang.Object obj25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(obj25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        int int42 = strBuilder31.indexOf(strMatcher36, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder31.replaceAll("i!", "!ih100.0");
        boolean boolean46 = strBuilder24.equals(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.replaceAll('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.ensureCapacity(9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.delete(12, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test00787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00787");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.insert(12, 'f');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 12");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test00788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00788");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('!', 12);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        int int34 = strBuilder23.indexOf(strMatcher28, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder23.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder23.appendln(strBuilder38, 9, 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.append('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder15.appendFixedWidthPadLeft((java.lang.Object) strBuilder38, 10, '.');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence51 = strBuilder15.subSequence((int) (short) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test00789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00789");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        char[] charArray17 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.insert((int) (byte) 1, charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer22.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test00790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00790");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        int int13 = strBuilder11.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.replaceAll(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceAll("", "hi!");
        int int30 = strBuilder28.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder32.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder32.replaceFirst(strMatcher44, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.appendFixedWidthPadLeft((java.lang.Object) strBuilder46, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.appendln(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder28.appendln(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.insert(2, (-1L));
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList61 = strTokenizer60.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.appendAll((java.lang.Iterable<java.lang.String>) strList61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.replaceAll(strMatcher67, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder64.deleteAll("");
        java.lang.String str77 = strBuilder64.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder64.append(0L);
        char[] charArray80 = strBuilder79.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder53.appendln(charArray80, 9, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "!ih0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "!ih0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[!, i, h, 0]");
    }

    @Test
    public void test00791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00791");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendSeparator('.', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder13.delete((int) (byte) 1, (int) 'h');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strBuilder49.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst(strMatcher68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder65.replaceAll(strMatcher68, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean74 = strBuilder65.contains(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder63.deleteAll(strMatcher73);
        boolean boolean76 = strBuilder49.contains(strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer37.setQuoteMatcher(strMatcher73);
        java.lang.String str78 = strTokenizer77.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setTrimmerMatcher(strMatcher80);
        int int83 = strBuilder34.lastIndexOf(strMatcher80, (int) (short) 10);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test00792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00792");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.replaceAll(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst(strMatcher40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder37.replaceAll(strMatcher40, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean46 = strBuilder37.contains(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher31, strMatcher45);
        int int48 = strBuilder22.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer6.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer1.setQuoteMatcher(strMatcher45);
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.replaceAll(strMatcher77, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.replaceFirst(strMatcher86, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder83.replaceAll(strMatcher86, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean92 = strBuilder83.contains(strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher77, strMatcher91);
        int int94 = strBuilder68.indexOf(strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer50.setIgnoredMatcher(strMatcher91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer95.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = strTokenizer95.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strTokenizer97);
    }

    @Test
    public void test00793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00793");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '1');
    }

    @Test
    public void test00794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00794");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.setQuoteMatcher(strMatcher64);
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.reset(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer24.reset(charArray70);
        int int76 = strTokenizer75.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer75.setDelimiterChar('1');
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer75.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
    }

    @Test
    public void test00795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00795");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.replaceFirst(strMatcher19, "hi!");
        int int22 = strBuilder4.indexOf(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder4.append((double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.insert((int) '1', "falsehi!#hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 49");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test00796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00796");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        char[] charArray19 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.deleteCharAt((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence24 = strBuilder11.subSequence(4, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test00797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00797");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.reset("!ih100.0\n4\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer40.getIgnoredMatcher();
        boolean boolean44 = strTokenizer40.hasNext();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test00798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00798");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.replaceAll('#', 'a');
        boolean boolean35 = strBuilder15.equals((java.lang.Object) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.replaceFirst("hi!\n", "i!");
        // The following exception was thrown during execution in test generation
        try {
            char char40 = strBuilder38.charAt(9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 9");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test00799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00799");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendSeparator('.', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        int int48 = strBuilder46.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean59 = strBuilder50.contains(strMatcher58);
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendln(stringBuffer60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder50.replaceFirst(strMatcher62, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) strBuilder64, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((long) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append((double) (short) 10);
        boolean boolean74 = strBuilder13.equalsIgnoreCase(strBuilder73);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.insert((int) '4', "falsehi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test00800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00800");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test00801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00801");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("", (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((java.lang.Object) strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll("falsehi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln((double) 21);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test00802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00802");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!-1.0", '1');
    }

    @Test
    public void test00803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00803");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst(' ');
        java.lang.String str16 = strBuilder15.getNullText();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test00804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00804");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll("", "hi!");
        int int18 = strBuilder16.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        java.util.stream.IntStream intStream24 = strBuilder23.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean35 = strBuilder26.contains(strMatcher34);
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder26.appendln(stringBuffer36);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.replaceFirst(strMatcher38, "hi!");
        int int41 = strBuilder23.indexOf(strMatcher38);
        int int43 = strBuilder16.indexOf(strMatcher38, (int) '4');
        java.io.Reader reader44 = strBuilder16.asReader();
        char[] charArray47 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        int int62 = reader44.read(charArray47);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = strMatcher1.isMatch(charArray47, (int) '.', 8, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 46");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[!, i]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
    }

    @Test
    public void test00805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00805");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        char[] charArray36 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceAll("", "hi!");
        int int55 = strBuilder53.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        java.util.stream.IntStream intStream61 = strBuilder60.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.replaceAll(strMatcher66, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean72 = strBuilder63.contains(strMatcher71);
        java.lang.StringBuffer stringBuffer73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder63.appendln(stringBuffer73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder63.replaceFirst(strMatcher75, "hi!");
        int int78 = strBuilder60.indexOf(strMatcher75);
        int int80 = strBuilder53.indexOf(strMatcher75, (int) '4');
        java.io.Reader reader81 = strBuilder53.asReader();
        java.io.IOException iOException82 = new java.io.IOException();
        java.io.IOException iOException83 = new java.io.IOException();
        iOException82.addSuppressed((java.lang.Throwable) iOException83);
        java.io.IOException iOException85 = new java.io.IOException((java.lang.Throwable) iOException83);
        java.lang.Throwable[] throwableArray86 = iOException85.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder53.appendWithSeparators((java.lang.Object[]) throwableArray86, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder38.appendAll((java.lang.Object[]) throwableArray86);
        java.util.stream.IntStream intStream90 = strBuilder89.chars();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(reader81);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(intStream90);
    }

    @Test
    public void test00806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00806");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.delete((-1), 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test00807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00807");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append("");
        char[] charArray19 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '.');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        int int25 = strTokenizer24.previousIndex();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[!, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test00808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00808");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        boolean boolean2 = strTokenizer1.isEmptyTokenAsNull();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test00809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00809");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.appendln((float) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder4.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('#', '#');
        java.util.stream.IntStream intStream36 = strBuilder35.chars();
        boolean boolean38 = strBuilder35.startsWith("java.io.IOException: !ih100.0");
        java.util.stream.IntStream intStream39 = strBuilder35.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.insert(2, (java.lang.Object) "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) (byte) 100);
        java.lang.CharSequence charSequence58 = strBuilder55.subSequence(1, (int) (short) 1);
        int int61 = strBuilder55.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder55.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder55.appendSeparator("sehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder35.append((java.lang.CharSequence) strBuilder67, 7, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("", "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setIgnoredChar('!');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = strTokenizer73.getTrimmerMatcher();
        int int77 = strBuilder67.indexOf(strMatcher76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder16.replace(strMatcher76, "hi!\n", 35, 48, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(intStream36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test00810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00810");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("0.001hi!hi!30.001hi 1");
    }

    @Test
    public void test00811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00811");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        java.util.stream.IntStream intStream32 = strBuilder1.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder1.appendSeparator(' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "hi!3");
        int int40 = strBuilder35.lastIndexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        int int71 = strBuilder60.indexOf(strMatcher65, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder55.append(strBuilder60, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder60.append((long) (byte) 1);
        java.io.IOException iOException77 = new java.io.IOException();
        java.io.IOException iOException78 = new java.io.IOException();
        iOException77.addSuppressed((java.lang.Throwable) iOException78);
        java.lang.Throwable[] throwableArray80 = iOException78.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder60.appendAll((java.lang.Object[]) throwableArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder35.appendAll((java.lang.Object[]) throwableArray80);
        // The following exception was thrown during execution in test generation
        try {
            char char84 = strBuilder82.charAt((int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 49");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test00812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00812");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder7.replaceFirst('a', 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.insert(10, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test00813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00813");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder14.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.appendln(14);
        java.lang.String str38 = strBuilder36.leftString(72);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        java.util.stream.IntStream intStream44 = strBuilder43.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean55 = strBuilder46.contains(strMatcher54);
        java.lang.StringBuffer stringBuffer56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.appendln(stringBuffer56);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder46.replaceFirst(strMatcher58, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.insert(0, (java.lang.Object) (byte) 1);
        boolean boolean64 = strBuilder43.equalsIgnoreCase(strBuilder60);
        boolean boolean65 = strBuilder36.equalsIgnoreCase(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "!ih100.014\n" + "'", str38, "!ih100.014\n");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test00814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00814");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[hi!]");
        char[] charArray4 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = strMatcher1.isMatch(charArray4, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test00815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00815");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        iOException1.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException4.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException23 = new java.io.IOException("!ih100.0");
        java.io.IOException iOException24 = new java.io.IOException("!ih", (java.lang.Throwable) iOException23);
        iOException20.addSuppressed((java.lang.Throwable) iOException23);
        java.lang.Throwable throwable26 = null;
        // The following exception was thrown during execution in test generation
        try {
            iOException20.addSuppressed(throwable26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test00816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00816");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.append(charArray21);
        int int26 = strBuilder24.lastIndexOf("!");
        java.lang.String str27 = strBuilder24.getNewLineText();
        boolean boolean29 = strBuilder24.startsWith("!ih");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = strBuilder24.substring(17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test00817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00817");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        char[] charArray31 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '4');
        boolean boolean34 = strTokenizer33.hasNext();
        java.lang.Object obj35 = strTokenizer33.clone();
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder55.deleteAll(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln("hi!");
        boolean boolean73 = strBuilder47.equals(strBuilder70);
        char[] charArray74 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer45.reset(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer33.reset(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.replaceFirst(strMatcher87, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder84.replaceAll(strMatcher87, "");
        int int93 = strBuilder82.indexOf(strMatcher87, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher87);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder13.replaceAll(strMatcher87, "i");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence99 = strBuilder13.subSequence(18, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test00818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00818");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setTrimmerMatcher(strMatcher5);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.set("falsehi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test00819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00819");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setDelimiterString("StrTokenizer[]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer41.set("hi!a\nh");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test00820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00820");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer15.setDelimiterMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setIgnoredChar(' ');
        java.lang.String str23 = strTokenizer22.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher68);
        int int71 = strBuilder45.indexOf(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer29.setIgnoredMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer25.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer15.setQuoteMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer15.setQuoteChar('.');
        java.util.List<java.lang.String> strList77 = strTokenizer76.getTokenList();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strList77);
    }

    @Test
    public void test00821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00821");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("fals");
    }

    @Test
    public void test00822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00822");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher35, strMatcher49);
        int int52 = strBuilder26.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer10.setIgnoredMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer6.setDelimiterMatcher(strMatcher49);
        boolean boolean55 = strTokenizer54.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer54.getDelimiterMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = strTokenizer54.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMatcher56);
    }

    @Test
    public void test00823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00823");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.replaceAll(strMatcher15, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean21 = strBuilder12.contains(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.append((int) (short) 0);
        java.io.Writer writer28 = writer10.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.reverse();
        java.io.Writer writer39 = strBuilder38.asWriter();
        boolean boolean41 = strBuilder38.startsWith("!ih100.0#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(' ');
        java.io.Writer writer44 = strBuilder43.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer47 = writer28.append((java.lang.CharSequence) strBuilder43, 25, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 22");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(writer44);
    }

    @Test
    public void test00824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00824");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        java.lang.String str21 = strBuilder15.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder15.append(stringBuffer47);
        java.io.Reader reader49 = strBuilder48.asReader();
        int int50 = reader49.read();
        int int51 = reader49.read();
        int int52 = reader49.read();
        java.nio.CharBuffer charBuffer53 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int54 = reader49.read(charBuffer53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "h" + "'", str21, "h");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 104 + "'", int50 == 104);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 105 + "'", int51 == 105);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 33 + "'", int52 == 33);
    }

    @Test
    public void test00825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00825");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.replaceAll(strMatcher5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher5, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNewLine();
        java.util.stream.IntStream intStream27 = strBuilder26.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.insert(0, (long) '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNewLine();
        boolean boolean33 = strBuilder31.endsWith("!ih100.00\n");
        char[] charArray36 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, '4');
        boolean boolean39 = strTokenizer38.hasNext();
        java.lang.Object obj40 = strTokenizer38.clone();
        char[] charArray43 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean71 = strBuilder62.contains(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder60.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln("hi!");
        boolean boolean78 = strBuilder52.equals(strBuilder75);
        char[] charArray79 = strBuilder75.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer50.reset(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer38.reset(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ');
        char[] charArray87 = strBuilder31.getChars(charArray79);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = strMatcher19.isMatch(charArray79, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "33hi!hi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "33hi!hi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[3, 3, h, i, !, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "33hi!hi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "33hi!hi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[3, 3, h, i, !, h, i, !, #, h, i, !, \n]");
    }

    @Test
    public void test00826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00826");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int22 = strBuilder18.lastIndexOf(strMatcher20, 1);
        java.lang.String str24 = strBuilder18.rightString(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.minimizeCapacity();
        boolean boolean32 = strBuilder18.equals((java.lang.Object) strBuilder31);
        int int35 = strBuilder31.indexOf('a', 3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = strBuilder31.substring((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "!ih100.0" + "'", str24, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test00827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00827");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.appendFixedWidthPadRight((int) (short) 10, (int) ' ', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder11.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        boolean boolean49 = strBuilder39.endsWith("i!hi!97!!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceAll("", "hi!");
        java.lang.String str66 = strBuilder61.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.replaceFirst(strMatcher70, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder39.appendln(strBuilder61, 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder39.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder37.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.appendNewLine();
        int int79 = strBuilder77.capacity();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "!" + "'", str66, "!");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 92 + "'", int79 == 92);
    }

    @Test
    public void test00828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00828");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("", "hi!");
        int int34 = strBuilder32.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder32.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder32.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(stringBuffer53);
        char[] charArray57 = strBuilder52.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray58 = strBuilder17.getChars(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean77 = strBuilder68.contains(strMatcher76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder66.deleteAll(strMatcher76);
        java.lang.String str80 = strBuilder66.leftString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("!ih", 'a', '1');
        java.util.List<java.lang.String> strList85 = strTokenizer84.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder66.appendAll((java.lang.Iterable<java.lang.String>) strList85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder17.appendAll((java.lang.Iterable<java.lang.String>) strList85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder15.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList85, "#");
        java.lang.Class<?> wildcardClass90 = strBuilder15.getClass();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test00829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00829");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        boolean boolean25 = strTokenizer15.hasPrevious();
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer15.reset(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer15.reset("java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setIgnoreEmptyTokens(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer44.set(" ih");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
    }

    @Test
    public void test00830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00830");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.setQuoteMatcher(strMatcher64);
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.reset(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer24.reset(charArray70);
        int int76 = strTokenizer75.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.replaceAll(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strBuilder88.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer92.setDelimiterMatcher(strMatcher94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer75.setTrimmerMatcher(strMatcher94);
        java.lang.String str97 = strTokenizer75.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer99 = strTokenizer75.setIgnoredChar('1');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "#a" + "'", str97, "#a");
        org.junit.Assert.assertNotNull(strTokenizer99);
    }

    @Test
    public void test00831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00831");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) '#', 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.append((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.appendSeparator("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.setLength(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteFirst("h");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.insert(2, ".0");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test00832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00832");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.appendSeparator('!');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteCharAt(104);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test00833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00833");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('#', '#');
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.append(charArray75);
        int int79 = reader53.read(charArray75);
        long long81 = reader53.skip((long) (short) 10);
        boolean boolean82 = reader53.ready();
        java.nio.CharBuffer charBuffer83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int84 = reader53.read(charBuffer83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10L + "'", long81 == 10L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test00834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00834");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(stringBuffer2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.append((float) 8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence8 = strBuilder5.subSequence(4, (int) '!');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 33");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
    }

    @Test
    public void test00835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00835");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder4.appendln((float) (byte) 10);
        java.io.IOException iOException15 = new java.io.IOException();
        java.io.IOException iOException16 = new java.io.IOException();
        java.io.IOException iOException17 = new java.io.IOException();
        iOException16.addSuppressed((java.lang.Throwable) iOException17);
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException20 = new java.io.IOException();
        java.io.IOException iOException21 = new java.io.IOException();
        iOException20.addSuppressed((java.lang.Throwable) iOException21);
        iOException17.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        java.lang.Throwable[] throwableArray25 = iOException21.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.appendWithSeparators((java.lang.Object[]) throwableArray25, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(stringBuffer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceAll(strMatcher46, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean52 = strBuilder43.contains(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.append((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.replaceAll(strMatcher59, "hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder41.replaceAll(strMatcher59, "0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder27.replace(strMatcher59, "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!0", (int) (short) 0, 0, 18);
        boolean boolean70 = strBuilder68.contains("java.io.IOException: !ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder72.replaceAll(strMatcher75, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder72.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.setNewLineText("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder68.appendln(strBuilder82);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("0.001hi !ih100.0\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.append(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer91.setDelimiterMatcher(strMatcher92);
        java.util.List<java.lang.String> strList94 = strTokenizer91.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder89.appendAll((java.lang.Iterable<java.lang.String>) strList94);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder89.appendSeparator('.', 'a');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test00836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00836");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder15.indexOf(strMatcher38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder15.appendln("\000\000\000", (int) '!', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test00837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00837");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.01", "!ih");
    }

    @Test
    public void test00838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00838");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendPadding((int) (short) -1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNewLineText("!ih100.0#a");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("", "hi!");
        int int40 = strBuilder38.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder42.appendln(stringBuffer52);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder42.replaceFirst(strMatcher54, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder38.appendFixedWidthPadLeft((java.lang.Object) strBuilder56, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder38.reverse();
        char[] charArray63 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, 'a');
        char[] charArray69 = strBuilder38.getChars(charArray63);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder20.insert(104, charArray63, 17, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[!, 0, ., 0, 0, 1, h, i, !]");
    }

    @Test
    public void test00839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00839");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("hi!");
        boolean boolean27 = strBuilder1.equals(strBuilder24);
        char[] charArray28 = strBuilder24.toCharArray();
        boolean boolean29 = strBuilder24.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test00840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00840");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) '#', 1, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder1.append((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.appendSeparator("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.setLength(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.deleteFirst("h");
        boolean boolean24 = strBuilder1.startsWith("1hi!hi!");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test00841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00841");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        boolean boolean47 = strBuilder45.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder27.append((java.lang.CharSequence) strBuilder45);
        java.util.stream.IntStream intStream53 = strBuilder45.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder4.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.append((long) 23);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.insert(25, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 25");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(intStream53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test00842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00842");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        char[] charArray21 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer28.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher26, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder15.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder15.appendPadding(52, '!');
        java.util.stream.IntStream intStream36 = strBuilder35.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder39.deleteAll("");
        char[] charArray52 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher62);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray52);
        char[] charArray67 = strBuilder49.getChars(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher69);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder35.insert((int) 'h', charArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(intStream36);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher69);
    }

    @Test
    public void test00843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00843");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        java.util.stream.IntStream intStream13 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append('#');
        int int17 = strBuilder15.indexOf("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.append((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        int int34 = strBuilder23.indexOf(strMatcher28, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int41 = strBuilder37.lastIndexOf(strMatcher39, 1);
        int int42 = strBuilder18.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder18.append(11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append("i", 24, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 6 + "'", int42 == 6);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test00844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00844");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.appendFixedWidthPadRight((int) '#', 1, '4');
        java.lang.String str17 = strBuilder14.substring((int) (byte) 0, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendSeparator("!", "i!");
        char[] charArray24 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", strMatcher33, strMatcher35);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getIgnoredMatcher();
        int int38 = strBuilder14.lastIndexOf(strMatcher37);
        java.io.Writer writer39 = strBuilder14.asWriter();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!3" + "'", str17, "hi!3");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(writer39);
    }

    @Test
    public void test00845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00845");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.io.IOException iOException53 = new java.io.IOException();
        java.io.IOException iOException54 = new java.io.IOException();
        iOException53.addSuppressed((java.lang.Throwable) iOException54);
        java.lang.Throwable[] throwableArray56 = iOException54.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.appendFixedWidthPadRight((java.lang.Object) iOException54, 0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceAll('h', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceAll(' ', '!');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test00846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00846");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln((java.lang.Object) "hi!!ih100.0#a\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence38 = strBuilder33.subSequence(52, 18);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test00847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00847");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert((int) (byte) 10, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00848");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        int int30 = strBuilder19.indexOf(strMatcher24, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder14.append(strBuilder19, (int) (byte) 1, 0);
        int int34 = strBuilder33.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.setLength((int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert(6, (long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.setLength(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceAll("", "hi!");
        int int61 = strBuilder59.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst(strMatcher66, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.replaceAll(strMatcher66, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean72 = strBuilder63.contains(strMatcher71);
        java.lang.StringBuffer stringBuffer73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder63.appendln(stringBuffer73);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder63.replaceFirst(strMatcher75, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder59.appendFixedWidthPadLeft((java.lang.Object) strBuilder77, 1, ' ');
        char[] charArray81 = strBuilder80.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder42.appendln(charArray81);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder40.append(charArray81, 19, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "!ih100.0!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "!ih100.0!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[!, i, h, 1, 0, 0, ., 0, !]");
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test00849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00849");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        writer79.close();
        java.io.Writer writer82 = writer79.append(' ');
        writer79.write((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.replaceFirst(strMatcher87, "");
        java.util.stream.IntStream intStream90 = strBuilder89.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder89.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.replaceFirst("", "StrTokenizer[!ih100.0]");
        java.io.Writer writer97 = writer79.append((java.lang.CharSequence) strBuilder93);
        writer97.flush();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer82);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(intStream90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(writer97);
    }

    @Test
    public void test00850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00850");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        java.lang.String str20 = strTokenizer15.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        java.util.stream.IntStream intStream26 = strBuilder25.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        int int49 = strBuilder38.indexOf(strMatcher43, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder38.append(1.0d);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer53.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean75 = strBuilder66.contains(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher60, strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer54.setQuoteMatcher(strMatcher74);
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer54.getTrimmerMatcher();
        int int80 = strBuilder38.lastIndexOf(strMatcher78, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder25.deleteAll(strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer15.setQuoteMatcher(strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[!ih100.0]", strMatcher85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer15.setIgnoredMatcher(strMatcher85);
        int int88 = strTokenizer15.previousIndex();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[!ih100.0]" + "'", str20, "StrTokenizer[!ih100.0]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test00851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00851");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        boolean boolean5 = strTokenizer4.hasNext();
        java.lang.Object obj6 = strTokenizer4.clone();
        char[] charArray9 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder26.deleteAll(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln("hi!");
        boolean boolean44 = strBuilder18.equals(strBuilder41);
        char[] charArray45 = strBuilder41.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer16.reset(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer4.reset(charArray45);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer48.set("f0alsehi!1\n      10");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
    }

    @Test
    public void test00852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00852");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.String str14 = strBuilder11.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendln(false);
        char[] charArray20 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.append(charArray20, (int) '.', 102);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 102");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test00853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00853");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteAll('h');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        int int11 = strBuilder9.indexOf(strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.replaceAll(strMatcher19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher45, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean51 = strBuilder42.contains(strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.deleteAll(strMatcher50);
        boolean boolean53 = strBuilder26.contains(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer14.setQuoteMatcher(strMatcher50);
        java.lang.String str55 = strTokenizer54.previousToken();
        boolean boolean56 = strBuilder9.equals((java.lang.Object) strTokenizer54);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer54.set("!ih100.1.00");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test00854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00854");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setDelimiterString("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append((double) (byte) 10);
        int int33 = strBuilder30.length();
        java.util.stream.IntStream intStream34 = strBuilder30.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.append((-1L));
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.appendln((float) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder40.appendln(stringBuffer50);
        java.lang.String str52 = strBuilder40.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.replaceAll(strMatcher57, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceAll("", "hi!");
        int int69 = strBuilder67.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        java.util.stream.IntStream intStream75 = strBuilder74.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst(strMatcher80, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder77.replaceAll(strMatcher80, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean86 = strBuilder77.contains(strMatcher85);
        java.lang.StringBuffer stringBuffer87 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder77.appendln(stringBuffer87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder77.replaceFirst(strMatcher89, "hi!");
        int int92 = strBuilder74.indexOf(strMatcher89);
        int int94 = strBuilder67.indexOf(strMatcher89, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder40.replaceFirst(strMatcher89, "StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder38.deleteAll(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer18.setIgnoredMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrMatcher strMatcher99 = strTokenizer98.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 12 + "'", int33 == 12);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!\n" + "'", str52, "hi!\n");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strTokenizer98);
        org.junit.Assert.assertNotNull(strMatcher99);
    }

    @Test
    public void test00855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00855");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        java.nio.CharBuffer charBuffer25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int26 = reader24.read(charBuffer25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
    }

    @Test
    public void test00856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00856");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setDelimiterString("StrTokenizer[!ih100.0]");
        int int9 = strTokenizer8.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setQuoteChar('!');
        boolean boolean12 = strTokenizer11.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test00857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00857");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray0);
        int int2 = strTokenizer1.size();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test00858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00858");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.replaceAll(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceAll("", "hi!");
        int int35 = strBuilder33.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder33.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln(stringBuffer54);
        char[] charArray58 = strBuilder53.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray59 = strBuilder18.getChars(charArray58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder16.appendln(charArray59, 78, (int) '.');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 46");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
    }

    @Test
    public void test00859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00859");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setLength((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.deleteCharAt((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test00860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00860");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strBuilder37.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setEmptyTokenAsNull(false);
        java.lang.String str44 = strTokenizer41.next();
        java.lang.String str45 = strTokenizer41.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer41.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.replaceAll(strMatcher55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean70 = strBuilder61.contains(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher55, strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder49.replaceAll(strMatcher55, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer41.setTrimmerMatcher(strMatcher55);
        java.util.List<java.lang.String> strList75 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder25.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList75, "hi!#java.io.IOException              ");
        java.lang.Class<?> wildcardClass78 = strBuilder77.getClass();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "!ih100.0" + "'", str44, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "!ih100.0" + "'", str45, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test00861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00861");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean40 = strBuilder31.contains(strMatcher39);
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.appendln(stringBuffer41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder31.replaceFirst(strMatcher43, "hi!");
        int int48 = strBuilder45.lastIndexOf("", (int) (byte) 0);
        java.lang.String str51 = strBuilder45.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceAll("", "hi!");
        int int68 = strBuilder66.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder66.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder66.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer77 = strBuilder76.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder45.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder29.append(stringBuffer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder16.appendln(stringBuffer77);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder16.insert(22, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 22");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "h" + "'", str51, "h");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(stringBuffer77);
        org.junit.Assert.assertEquals(stringBuffer77.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test00862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00862");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln(stringBuffer2);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.setNullText("i");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.delete(19, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
    }

    @Test
    public void test00863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00863");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("!");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.set("StrTokenizer[hi!]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test00864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00864");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        boolean boolean3 = strTokenizer2.hasNext();
        boolean boolean4 = strTokenizer2.isIgnoreEmptyTokens();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test00865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00865");
        java.io.IOException iOException1 = new java.io.IOException("hi!\n10");
    }

    @Test
    public void test00866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00866");
        java.io.IOException iOException1 = new java.io.IOException("StrTokenizer[]");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.lang.String str3 = iOException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "java.io.IOException: StrTokenizer[]" + "'", str3, "java.io.IOException: StrTokenizer[]");
    }

    @Test
    public void test00867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00867");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        reader24.close();
        reader24.reset();
        long long28 = reader24.skip((long) (byte) 10);
        reader24.reset();
        reader24.close();
        java.nio.CharBuffer charBuffer31 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int32 = reader24.read(charBuffer31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10L + "'", long28 == 10L);
    }

    @Test
    public void test00868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00868");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst(strMatcher42, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.replaceAll(strMatcher42, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean48 = strBuilder39.contains(strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher33, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.replaceAll(strMatcher33, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean56 = strTokenizer55.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder27.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer55, "!ih100.0");
        char[] charArray61 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder27.appendln(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ', ' ');
        char[] charArray70 = strBuilder1.getChars(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[h, i, !]");
        org.junit.Assert.assertNotNull(strMatcher72);
    }

    @Test
    public void test00869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00869");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.setQuoteMatcher(strMatcher64);
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.reset(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer24.reset(charArray70);
        int int76 = strTokenizer75.nextIndex();
        int int77 = strTokenizer75.size();
        java.lang.String str78 = strTokenizer75.getContent();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "#a" + "'", str78, "#a");
    }

    @Test
    public void test00870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00870");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        java.io.Writer writer10 = strBuilder9.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.replaceAll(strMatcher20, "");
        int int26 = strBuilder15.indexOf(strMatcher20, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder15.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setLength(0);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.replaceAll(strMatcher32, "#");
        int int35 = strBuilder34.length();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder9.append(strBuilder34, 0, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test00871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00871");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("i!");
        int int16 = strBuilder12.indexOf("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer20.setQuoteMatcher(strMatcher40);
        char[] charArray46 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer43.reset(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder12.insert(12, charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder12.minimizeCapacity();
        boolean boolean56 = strBuilder55.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test00872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00872");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        char[] charArray18 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray18);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = strMatcher13.isMatch(charArray18, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
    }

    @Test
    public void test00873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00873");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(18L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        int int41 = strBuilder39.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher63);
        int int66 = strBuilder43.indexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder43.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.replaceAll(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst(strMatcher83, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder80.replaceAll(strMatcher83, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean89 = strBuilder80.contains(strMatcher88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher74, strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder43.deleteFirst(strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder91.appendSeparator('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) '4', (int) (short) 0, 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder19.append(78);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test00874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00874");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append(18L);
        int int27 = strBuilder19.lastIndexOf(' ', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.reverse();
        java.io.Writer writer38 = strBuilder37.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean49 = strBuilder40.contains(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder40.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder40.append((int) (short) 0);
        java.io.Writer writer56 = writer38.append((java.lang.CharSequence) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.appendln('a');
        boolean boolean60 = strBuilder58.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.deleteAll("");
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer84.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher85);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray75);
        char[] charArray90 = strBuilder72.getChars(charArray75);
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, strMatcher92);
        boolean boolean94 = strTokenizer93.isIgnoreEmptyTokens();
        java.util.List<java.lang.String> strList95 = strTokenizer93.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder58.appendAll((java.lang.Iterable<java.lang.String>) strList95);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList95);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(writer38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test00875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00875");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        java.lang.String str19 = strBuilder16.leftString(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll("", "hi!");
        int int36 = strBuilder34.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.appendln(stringBuffer48);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder38.replaceFirst(strMatcher50, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) strBuilder52, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder34.reverse();
        char[] charArray59 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, 'a');
        char[] charArray65 = strBuilder34.getChars(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder16.append(strBuilder34);
        int int68 = strBuilder34.lastIndexOf("i!45210.0hhhhhhhhhhhh");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!" + "'", str19, "!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test00876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00876");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder4.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder21.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strBuilder43.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(false);
        java.lang.String str50 = strTokenizer47.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder21.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean70 = strBuilder61.contains(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder59.deleteAll(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder51.append(strBuilder59);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) strBuilder72, (int) (short) 100, 'a');
        int int78 = strBuilder75.lastIndexOf("!ih100.0", 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.insert(1, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.insert(0, (float) 3);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "!ih100.0" + "'", str50, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test00877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00877");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteCharAt(72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test00878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00878");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer24.append('h');
        writer81.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.replaceFirst(strMatcher87, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder84.replaceAll(strMatcher87, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder84.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder84.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder94.append("i!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer99 = writer81.append((java.lang.CharSequence) "i!", (int) '4', 18);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 18");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test00879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00879");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator("i!", 3);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) strMatcher19, 0, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) '4');
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray27 = strBuilder24.toCharArray(45, 17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test00880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00880");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        writer24.write("hi!\n", (int) (byte) 0, 0);
        writer24.write((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            writer24.write("!ih100.01", 21, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
    }

    @Test
    public void test00881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00881");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(12);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        int int24 = strBuilder1.indexOf(strMatcher7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder1.appendln("hi!hi!", (int) '1', 34);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test00882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00882");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        java.lang.Object obj25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(obj25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        java.lang.CharSequence charSequence41 = strBuilder38.subSequence(1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean55 = strBuilder46.contains(strMatcher54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher54, strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder38.replaceFirst(strMatcher54, "i!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder24.replaceAll(strMatcher54, "ih100.011\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test00883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00883");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer4.getDelimiterMatcher();
        int int6 = strTokenizer4.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.replaceAll(strMatcher11, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(stringBuffer19);
        boolean boolean22 = strBuilder15.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean43 = strBuilder34.contains(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher28, strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder15.deleteFirst(strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer4.setQuoteMatcher(strMatcher28);
        boolean boolean47 = strTokenizer46.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test00884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00884");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        int int34 = strBuilder32.indexOf("java.io.IOException: ");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        int int65 = strBuilder54.indexOf(strMatcher59, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder49.append(strBuilder54, (int) (byte) 1, 0);
        int int69 = strBuilder68.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.setLength((int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder32.appendln((java.lang.Object) strBuilder70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!\n");
        java.lang.String str76 = strTokenizer75.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder32.append((java.lang.Object) str76);
        java.lang.String str78 = strBuilder77.toString();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 8 + "'", int69 == 8);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!!ih100.0!ih100.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\nhi!" + "'", str78, "hi!!ih100.0!ih100.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\nhi!");
    }

    @Test
    public void test00885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00885");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst(strMatcher15, "");
        java.util.stream.IntStream intStream18 = strBuilder17.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        int int41 = strBuilder30.indexOf(strMatcher35, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder30.append(1.0d);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer45.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll(strMatcher52, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean67 = strBuilder58.contains(strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher52, strMatcher66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer46.setQuoteMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer46.getTrimmerMatcher();
        int int72 = strBuilder30.lastIndexOf(strMatcher70, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder17.deleteAll(strMatcher70);
        java.util.stream.IntStream intStream74 = strBuilder73.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder12.append(strBuilder73);
        java.io.IOException iOException76 = new java.io.IOException();
        java.io.IOException iOException77 = new java.io.IOException();
        iOException76.addSuppressed((java.lang.Throwable) iOException77);
        java.io.IOException iOException79 = new java.io.IOException((java.lang.Throwable) iOException76);
        java.lang.Throwable[] throwableArray80 = iOException79.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder12.appendAll((java.lang.Object[]) throwableArray80);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(intStream18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(intStream74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test00886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00886");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((int) (byte) 10);
        char[] charArray33 = new char[] { '4', 'a' };
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        java.util.stream.IntStream intStream39 = strBuilder38.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.deleteFirst(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder27.insert(6, charArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = strMatcher3.isMatch(charArray33, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[4, a]");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test00887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00887");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.append("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('!', '#');
        boolean boolean30 = strBuilder28.contains('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder32.deleteAll("");
        char[] charArray45 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray45);
        char[] charArray60 = strBuilder42.getChars(charArray45);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher62);
        java.lang.String str64 = strTokenizer63.nextToken();
        java.lang.String str65 = strTokenizer63.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.insert(45, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 45");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#" + "'", str64, "#");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test00888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00888");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.close();
        writer24.write(12);
        java.io.Writer writer29 = writer24.append('a');
        writer29.close();
        // The following exception was thrown during execution in test generation
        try {
            writer29.write("falsehi!#hi!", 16, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(writer29);
    }

    @Test
    public void test00889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00889");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0StrTokenizer[!ih100.0]11.0", ' ');
    }

    @Test
    public void test00890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00890");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.close();
        writer24.write(12);
        java.io.Writer writer29 = writer24.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strBuilder41.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder55.deleteAll(strMatcher65);
        boolean boolean68 = strBuilder41.contains(strMatcher65);
        java.io.Writer writer69 = writer24.append((java.lang.CharSequence) strBuilder41);
        int int70 = strBuilder41.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder41.appendNewLine();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(writer69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 13 + "'", int70 == 13);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test00891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00891");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.replaceAll(strMatcher49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher49, strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder18.deleteFirst(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendSeparator('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.replaceAll(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strBuilder81.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setEmptyTokenAsNull(false);
        java.lang.String str88 = strTokenizer85.next();
        java.lang.String str89 = strTokenizer85.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer85.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer91.reset();
        java.util.List<java.lang.String> strList93 = strTokenizer91.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder66.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList93, "!ih100.00");
        char[] charArray96 = strBuilder95.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray96);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "!ih100.0" + "'", str88, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "!ih100.0" + "'", str89, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "!ih100.044!ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "!ih100.044!ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[!, i, h, 1, 0, 0, ., 0, 4, 4, !, i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher97);
    }

    @Test
    public void test00892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00892");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        char[] charArray31 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, '4');
        boolean boolean34 = strTokenizer33.hasNext();
        java.lang.Object obj35 = strTokenizer33.clone();
        char[] charArray38 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder55.deleteAll(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln("hi!");
        boolean boolean73 = strBuilder47.equals(strBuilder70);
        char[] charArray74 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer45.reset(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer33.reset(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.replaceFirst(strMatcher87, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder84.replaceAll(strMatcher87, "");
        int int93 = strBuilder82.indexOf(strMatcher87, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher87);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder13.replaceAll(strMatcher87, "i");
        org.apache.commons.lang3.text.StrMatcher strMatcher98 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("kenizer");
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder96.deleteFirst(strMatcher98);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[#, a]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strMatcher98);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test00893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00893");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.append(strBuilder7);
        java.lang.String str24 = strBuilder3.midString(1, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll("", "hi!");
        boolean boolean40 = strBuilder3.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendFixedWidthPadRight(100, (int) (short) 100, '!');
        boolean boolean45 = strBuilder44.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "i!hi!97!!!" + "'", str24, "i!hi!97!!!");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test00894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00894");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", 'h');
        int int3 = strTokenizer2.size();
        java.lang.String str4 = strTokenizer2.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.set("0!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test00895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00895");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        boolean boolean6 = strBuilder1.contains('4');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test00896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00896");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.append(true);
        java.lang.String str23 = strBuilder18.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test00897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00897");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendln((java.lang.Object) (short) 1);
        java.lang.String str41 = strBuilder39.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteAll("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.setLength((int) (byte) 0);
        int int46 = strBuilder43.capacity();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 35 + "'", int46 == 35);
    }

    @Test
    public void test00898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00898");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder4.append(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.insert(34, "!ihfalsehi!!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test00899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00899");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        java.util.stream.IntStream intStream19 = strBuilder18.chars();
        boolean boolean21 = strBuilder18.startsWith("java.io.IOException: !ih100.0");
        java.util.stream.IntStream intStream22 = strBuilder18.chars();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(2, (java.lang.Object) "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((float) (byte) 100);
        java.lang.CharSequence charSequence41 = strBuilder38.subSequence(1, (int) (short) 1);
        int int44 = strBuilder38.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder38.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder38.appendSeparator("sehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder18.append((java.lang.CharSequence) strBuilder50, 7, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.replaceAll(strMatcher61, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceAll("", "hi!");
        int int73 = strBuilder71.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder71.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst(strMatcher82, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.replaceFirst(strMatcher88, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder71.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer92 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.appendln(stringBuffer92);
        char[] charArray96 = strBuilder91.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray97 = strBuilder56.getChars(charArray96);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder18.insert((int) '.', (java.lang.Object) strBuilder56);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 46");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray97);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray97), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray97), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray97), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
    }

    @Test
    public void test00900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00900");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(strMatcher41, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder38.replaceAll(strMatcher41, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean47 = strBuilder38.contains(strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher32, strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer26.setQuoteMatcher(strMatcher46);
        char[] charArray52 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer49.reset(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder21.insert(4, charArray52, 0, 78);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 78");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strTokenizer59);
    }

    @Test
    public void test00901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00901");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceAll("", "hi!");
        java.lang.String str39 = strBuilder34.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.append("!ih100.00");
        java.io.Reader reader47 = strBuilder46.asReader();
        boolean boolean48 = reader47.ready();
        reader47.close();
        long long51 = reader47.skip((long) 100);
        char[] charArray54 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer77 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.append(stringBuffer77);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int80 = strBuilder78.indexOf(strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '4', 'h');
        int int87 = reader47.read(charArray54);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder19.insert((int) (short) 1, charArray54, (int) 'f', 33);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 102");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "!" + "'", str39, "!");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 18L + "'", long51 == 18L);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test00902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00902");
        char[] charArray3 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray3);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer10.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, strMatcher8, strMatcher12);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", strMatcher12, strMatcher14);
        boolean boolean16 = strTokenizer15.hasNext();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test00903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00903");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        int int20 = strBuilder11.indexOf("hi!", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendln(11);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendSeparator("#");
        java.lang.String str27 = strBuilder22.midString((int) '4', 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        java.util.stream.IntStream intStream33 = strBuilder32.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder32.appendln((float) (byte) 10);
        java.io.IOException iOException43 = new java.io.IOException();
        java.io.IOException iOException44 = new java.io.IOException();
        java.io.IOException iOException45 = new java.io.IOException();
        iOException44.addSuppressed((java.lang.Throwable) iOException45);
        iOException43.addSuppressed((java.lang.Throwable) iOException45);
        java.io.IOException iOException48 = new java.io.IOException();
        java.io.IOException iOException49 = new java.io.IOException();
        iOException48.addSuppressed((java.lang.Throwable) iOException49);
        iOException45.addSuppressed((java.lang.Throwable) iOException49);
        java.io.IOException iOException52 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.lang.Throwable[] throwableArray53 = iOException49.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder32.appendAll((java.lang.Object[]) throwableArray53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder22.appendln(strBuilder32, (int) (short) 0, 104);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test00904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00904");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int19 = strBuilder12.lastIndexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.delete(0, 12);
        boolean boolean25 = strBuilder21.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test00905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00905");
        char[] charArray2 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.reset("!");
        int int11 = strTokenizer8.previousIndex();
        java.lang.String str12 = strTokenizer8.next();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "!" + "'", str12, "!");
    }

    @Test
    public void test00906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00906");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("i!hi!97!!!", '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strBuilder14.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst(strMatcher23, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder28.deleteAll(strMatcher38);
        boolean boolean41 = strBuilder14.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer2.setIgnoredMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll("", "hi!");
        java.lang.String str59 = strBuilder54.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder54.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder54.replaceFirst(strMatcher63, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendSeparator('a', (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.replaceAll(strMatcher74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder71.deleteAll("");
        java.lang.String str84 = strBuilder71.midString((int) (short) 10, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder71.append(0L);
        char[] charArray87 = strBuilder86.toCharArray();
        char[] charArray88 = strBuilder69.getChars(charArray87);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = strMatcher38.isMatch(charArray87, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "!" + "'", str59, "!");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "!ih0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "!ih0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[!, i, h, 0]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "!ih100.0a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "!ih100.0a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[!, i, h, 1, 0, 0, ., 0, a]");
    }

    @Test
    public void test00907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00907");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        char[] charArray13 = strBuilder12.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.setCharAt((int) (byte) 100, 'f');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "h1.0i!######true");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "h1.0i!######true");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[h, 1, ., 0, i, !, #, #, #, #, #, #, t, r, u, e]");
    }

    @Test
    public void test00908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00908");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder18.indexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder18.appendln('4');
        int int45 = strBuilder18.indexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder18.appendPadding(1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder18.insert((int) (byte) 10, "falsehi!01111111111");
        java.util.stream.IntStream intStream52 = strBuilder18.codePoints();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(intStream52);
    }

    @Test
    public void test00909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00909");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('a', 'a');
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(stringBuffer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendln((float) 11L);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test00910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00910");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.reset("StrTokenizer[!ih100.0]");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer24.set("StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
    }

    @Test
    public void test00911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00911");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder1.append((double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((float) (byte) 100);
        java.lang.CharSequence charSequence42 = strBuilder39.subSequence(1, (int) (short) 1);
        int int45 = strBuilder39.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.appendPadding((int) (short) -1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder60.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setEmptyTokenAsNull(false);
        java.lang.String str67 = strTokenizer64.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst(strMatcher70, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer64.setDelimiterMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setIgnoredChar('a');
        java.lang.String str76 = strTokenizer75.previous();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder39.appendAll((java.util.Iterator<java.lang.String>) strTokenizer75);
        java.util.List<java.lang.String> strList78 = strTokenizer75.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder27.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList78, "0.001hi !ih100.0\n\n");
        java.lang.StringBuffer stringBuffer81 = strBuilder80.toStringBuffer();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "!ih100.0" + "'", str67, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(stringBuffer81);
        org.junit.Assert.assertEquals(stringBuffer81.toString(), "hi!-1.0!ih100.0");
    }

    @Test
    public void test00912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00912");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        java.lang.String str17 = strBuilder16.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(strMatcher20, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "!ih100.0");
        int int38 = strBuilder25.indexOf(strMatcher34, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder16.replace(strMatcher34, "!ih100.00\n", 10, 20, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "!ih100.00" + "'", str17, "!ih100.00");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test00913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00913");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll("", "hi!");
        java.lang.String str22 = strBuilder17.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean43 = strBuilder34.contains(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder32.deleteAll(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.deleteFirst(strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.replaceAll(strMatcher54, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.replaceAll(strMatcher63, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean69 = strBuilder60.contains(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher54, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer48.setQuoteMatcher(strMatcher68);
        char[] charArray74 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer71.reset(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        int int82 = strMatcher42.isMatch(charArray74, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer5.setDelimiterMatcher(strMatcher42);
        boolean boolean84 = strTokenizer83.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer83.set("kenizer");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "!" + "'", str22, "!");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test00914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00914");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.replaceAll(strMatcher8, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher8, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer2.setQuoteMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setIgnoredChar('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher38, strMatcher40);
        char[] charArray44 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer41.reset(charArray44);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer41.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer27.setDelimiterMatcher(strMatcher49);
        java.lang.Class<?> wildcardClass51 = strTokenizer27.getClass();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test00915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00915");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.replaceAll(strMatcher6, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder15.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceAll("", "hi!");
        java.lang.String str36 = strBuilder31.leftString((int) '4');
        boolean boolean37 = strBuilder19.equalsIgnoreCase(strBuilder31);
        java.lang.StringBuffer stringBuffer38 = strBuilder31.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder1.appendln(stringBuffer38, (int) '#', 105);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "!ih100.0" + "'", str36, "!ih100.0");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "!ih100.0");
    }

    @Test
    public void test00916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00916");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        int int15 = strBuilder4.indexOf(strMatcher9, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder4.replaceAll("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!");
        int int22 = strBuilder18.lastIndexOf(strMatcher20, 1);
        java.lang.String str24 = strBuilder18.rightString(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        java.util.stream.IntStream intStream30 = strBuilder29.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.minimizeCapacity();
        boolean boolean32 = strBuilder18.equals((java.lang.Object) strBuilder31);
        java.io.Writer writer33 = strBuilder31.asWriter();
        writer33.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((float) (byte) 100);
        java.lang.CharSequence charSequence49 = strBuilder46.subSequence(1, (int) (short) 1);
        int int52 = strBuilder46.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        int int70 = strBuilder59.indexOf(strMatcher64, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder59.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder59.appendln(strBuilder74, 9, 18);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder74.append('!');
        int int83 = strBuilder74.lastIndexOf(' ');
        boolean boolean84 = strBuilder46.equalsIgnoreCase(strBuilder74);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer87 = writer33.append((java.lang.CharSequence) strBuilder46, 0, 33);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 33");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "!ih100.0" + "'", str24, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(writer33);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 35 + "'", int83 == 35);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test00917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00917");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNewLineText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "hi!3");
        char[] charArray33 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray33);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder28.getChars((int) ' ', 0, charArray33, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
    }

    @Test
    public void test00918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00918");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.String str14 = strBuilder11.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.deleteAll("");
        char[] charArray32 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer41.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher42);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray32);
        char[] charArray47 = strBuilder29.getChars(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer17.setQuoteMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer17.setIgnoredChar('h');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer17.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
    }

    @Test
    public void test00919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00919");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((int) (byte) 10);
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.insert(0, charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst(strMatcher46, "");
        java.util.stream.IntStream intStream49 = strBuilder48.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder25.append((java.lang.CharSequence) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder25.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("!ih100.04\nStrTokenizer[not tokenized yet]", "!ih");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteAll("!ih100.0\n4\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(intStream49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test00920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00920");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder15.indexOf(strMatcher38);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder15.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceAll("", "hi!");
        int int60 = strBuilder58.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder15.append(strBuilder58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder15.insert(34, "hi!a\nh");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test00921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00921");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(1, (float) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceAll("", "hi!");
        int int62 = strBuilder60.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder60.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.insert(0, false);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst(strMatcher77, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder60.appendln((java.lang.Object) "!ih100.0");
        java.lang.StringBuffer stringBuffer81 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.appendln(stringBuffer81);
        char[] charArray85 = strBuilder80.toCharArray((int) (byte) 1, (int) '!');
        char[] charArray86 = strBuilder45.getChars(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder45.insert((int) (short) 0, (double) 12);
        char[] charArray90 = strBuilder45.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder36.insert(100, charArray90, 0, 72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "!ih100.00h100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[!, i, h, 1, 0, 0, ., 0, 0, h, 1, 0, 0, ., 0, \n, \n]");
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "12.0!ih100.00");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "12.0!ih100.00");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[1, 2, ., 0, !, i, h, 1, 0, 0, ., 0, 0]");
    }

    @Test
    public void test00922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00922");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNullText("java.io.IOException");
        int int26 = strBuilder23.length();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
    }

    @Test
    public void test00923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00923");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.replaceAll(strMatcher9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) (byte) 100);
        boolean boolean17 = strBuilder4.equalsIgnoreCase(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(7, (double) 1.0f);
        char[] charArray24 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher29, strMatcher33);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("hi!3", strMatcher33, strMatcher35);
        int int37 = strBuilder20.lastIndexOf(strMatcher35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder20.insert(72, (float) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test00924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00924");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException();
        iOException1.addSuppressed((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException();
        java.io.IOException iOException6 = new java.io.IOException();
        iOException5.addSuppressed((java.lang.Throwable) iOException6);
        iOException2.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException9 = new java.io.IOException("ih100.010.0i!", (java.lang.Throwable) iOException2);
        java.lang.String str10 = iOException9.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.io.IOException: ih100.010.0i!" + "'", str10, "java.io.IOException: ih100.010.0i!");
    }

    @Test
    public void test00925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00925");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst(strMatcher19, "");
        java.util.stream.IntStream intStream22 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean33 = strBuilder24.contains(strMatcher32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.appendln(stringBuffer34);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.replaceFirst(strMatcher36, "hi!");
        int int39 = strBuilder21.indexOf(strMatcher36);
        int int41 = strBuilder14.indexOf(strMatcher36, (int) '4');
        java.io.Reader reader42 = strBuilder14.asReader();
        boolean boolean43 = reader42.ready();
        reader42.reset();
        boolean boolean45 = reader42.markSupported();
        java.nio.CharBuffer charBuffer46 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int47 = reader42.read(charBuffer46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test00926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00926");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst(strMatcher18, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strBuilder35.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setDelimiterMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder23.replace(strMatcher41, "hi!3", 0, 0, 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer49.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder23.deleteFirst(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder13.replaceFirst(strMatcher51, "falsehi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst(strMatcher57, "");
        java.util.stream.IntStream intStream60 = strBuilder59.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder59.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder13.append(strBuilder59);
        char[] charArray68 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher78);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher80);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder59.insert((int) (short) -1, charArray68, 20, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(intStream60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strMatcher80);
    }

    @Test
    public void test00927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00927");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean30 = strBuilder21.contains(strMatcher29);
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder21.appendln(stringBuffer31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.replaceFirst(strMatcher33, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendln((java.lang.Object) (short) 1);
        java.lang.String str41 = strBuilder39.leftString((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.deleteAll("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.insert((int) (byte) 1, (long) (short) 0);
        int int48 = strBuilder46.indexOf("sehi!!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.delete(48, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test00928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00928");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        boolean boolean56 = strBuilder1.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher67, strMatcher69);
        boolean boolean71 = strBuilder1.contains(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendSeparator(' ', (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.insert(72, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test00929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00929");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(strMatcher39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher39, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean45 = strBuilder36.contains(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher30, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer24.setQuoteMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer15.setTrimmerMatcher(strMatcher48);
        java.lang.Object obj50 = strTokenizer15.clone();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test00930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00930");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder14.setLength((int) '4');
        java.lang.Object obj25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(obj25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        int int42 = strBuilder31.indexOf(strMatcher36, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder31.replaceAll("i!", "!ih100.0");
        boolean boolean46 = strBuilder24.equals(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.replaceAll('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.ensureCapacity(9);
        int int54 = strBuilder51.indexOf("!ih100.!ih100.00\n010.0hi!\n", (int) 'h');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test00931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00931");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        java.lang.String str27 = strTokenizer26.previous();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer29.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean71 = strBuilder62.contains(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher70);
        int int73 = strBuilder47.indexOf(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer30.setDelimiterMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer26.setIgnoredMatcher(strMatcher70);
        java.lang.String str76 = strTokenizer26.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer26.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = strTokenizer26.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "!ih100.0" + "'", str27, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher77);
    }

    @Test
    public void test00932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00932");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendFixedWidthPadLeft((java.lang.Object) 1L, 1, '#');
        int int23 = strBuilder21.lastIndexOf("#");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.insert(18, (long) 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 18");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test00933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00933");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("", (int) (byte) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!#java.io.IOException              ");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln((java.lang.Object) strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        boolean boolean55 = strBuilder50.endsWith("!ih100.0");
        char char57 = strBuilder50.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        int int70 = strBuilder50.lastIndexOf(strMatcher65);
        int int71 = strBuilder38.indexOf(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder23.appendln((java.lang.Object) int71);
        boolean boolean74 = strBuilder23.endsWith("StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + char57 + "' != '" + '!' + "'", char57 == '!');
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test00934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00934");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: hi!", '4');
    }

    @Test
    public void test00935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00935");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.setCharAt((int) (short) 10, '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.insert((int) (short) 100, "!ih100.0StrTokenizer[!ih100.0]11.0");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test00936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00936");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        boolean boolean34 = strBuilder32.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendFixedWidthPadLeft((int) '4', 1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder14.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder14.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer43, "!");
        java.lang.String str46 = strTokenizer43.toString();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer43.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "StrTokenizer[]" + "'", str46, "StrTokenizer[]");
    }

    @Test
    public void test00937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00937");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.insert((int) (short) 1, (float) 1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteAll("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendSeparator("i!", 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.replaceAll(strMatcher22, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst('#', '#');
        char[] charArray39 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.append(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder33.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer46.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean59 = strBuilder50.contains(strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher58, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer46.setDelimiterMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("", strMatcher63);
        int int65 = strBuilder43.indexOf(strMatcher63);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder12.replace(strMatcher63, "1hi!hi!", 30, 9, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
    }

    @Test
    public void test00938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00938");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        boolean boolean25 = strBuilder21.contains('#');
        char[] charArray26 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray26);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer27.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "falsehi!0a\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "falsehi!0a\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[f, a, l, s, e, h, i, !, 0, a, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test00939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00939");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.replaceFirst(strMatcher19, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.insert(0, (java.lang.Object) (byte) 1);
        boolean boolean25 = strBuilder4.equalsIgnoreCase(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.replaceAll(strMatcher30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.setNewLineText("!");
        int int42 = strBuilder37.indexOf('a', (int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst(strMatcher47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.replaceAll(strMatcher47, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean53 = strBuilder44.contains(strMatcher52);
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.appendln(stringBuffer54);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.replaceFirst(strMatcher56, "hi!");
        int int61 = strBuilder58.lastIndexOf("", (int) (byte) 0);
        java.lang.String str64 = strBuilder58.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.replaceAll(strMatcher69, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder66.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceAll("", "hi!");
        int int81 = strBuilder79.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder79.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder79.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder79.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer90 = strBuilder89.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder58.append(stringBuffer90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder37.append(stringBuffer90);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder4.appendln(stringBuffer90, (int) (short) 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "h" + "'", str64, "h");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(stringBuffer90);
        org.junit.Assert.assertEquals(stringBuffer90.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test00940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00940");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        char[] charArray39 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a');
        char[] charArray45 = strBuilder14.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strTokenizer47.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(strMatcher48);
    }

    @Test
    public void test00941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00941");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder1.append("");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.appendln("!ih100.01", (int) (byte) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test00942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00942");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.append((float) 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.appendFixedWidthPadLeft((int) ' ', (int) '4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        java.lang.String str46 = strBuilder41.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.append("!ih100.00");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer55.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder25.appendln((java.lang.Object) strBuilder47);
        java.lang.String str59 = strBuilder58.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendSeparator(".0", 12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean67 = strTokenizer66.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replaceAll(strMatcher72, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strBuilder79.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer83.setEmptyTokenAsNull(false);
        java.lang.String str86 = strTokenizer83.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.replaceFirst(strMatcher89, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer83.setDelimiterMatcher(strMatcher89);
        boolean boolean93 = strTokenizer83.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = strTokenizer83.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer66.setDelimiterMatcher(strMatcher94);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder62.appendFixedWidthPadLeft((java.lang.Object) strTokenizer66, 19, '4');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "!" + "'", str46, "!");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "!ih100.0\n!ih100.0011.04444444444444444444444444444444444444444444444444432!ih100.0\n!ih100.00hi!\n" + "'", str59, "!ih100.0\n!ih100.0011.04444444444444444444444444444444444444444444444444432!ih100.0\n!ih100.00hi!\n");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "!ih100.0" + "'", str86, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test00943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00943");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder55.replaceAll(strMatcher58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('#', '#');
        char[] charArray75 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.append(charArray75);
        int int79 = reader53.read(charArray75);
        int int80 = reader53.read();
        reader53.mark(35);
        boolean boolean83 = reader53.ready();
        long long85 = reader53.skip((long) (byte) 0);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!i");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 104 + "'", int80 == 104);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
    }

    @Test
    public void test00944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00944");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendSeparator("!ih100.0StrTokenizer[!ih100.0]11.0", 105);
        java.lang.String str8 = strBuilder6.rightString(4);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "11.0" + "'", str8, "11.0");
    }

    @Test
    public void test00945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00945");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("hi!\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder7.appendFixedWidthPadRight((int) 'a', (int) 'a', '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.append(strBuilder7);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        java.util.stream.IntStream intStream27 = strBuilder26.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.insert(0, (double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder7.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder7.reverse();
        int int34 = strBuilder33.capacity();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(intStream27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 200 + "'", int34 == 200);
    }

    @Test
    public void test00946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00946");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.setQuoteMatcher(strMatcher64);
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.reset(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer24.reset(charArray70);
        int int76 = strTokenizer75.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.replaceAll(strMatcher81, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder88.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strBuilder88.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer92.setDelimiterMatcher(strMatcher94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer75.setTrimmerMatcher(strMatcher94);
        java.lang.String str97 = strTokenizer96.next();
        java.lang.String[] strArray98 = strTokenizer96.getTokenArray();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "#" + "'", str97, "#");
        org.junit.Assert.assertNotNull(strArray98);
    }

    @Test
    public void test00947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00947");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.appendNull();
        boolean boolean56 = strBuilder1.equalsIgnoreCase(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean68 = strBuilder59.contains(strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher67, strMatcher69);
        boolean boolean71 = strBuilder1.contains(strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder1.insert(23, 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 23");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test00948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00948");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean10 = strBuilder1.contains(strMatcher9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendln(stringBuffer11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceFirst(strMatcher13, "hi!");
        int int18 = strBuilder15.lastIndexOf("", (int) (byte) 0);
        java.lang.String str21 = strBuilder15.midString(3, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceAll("", "hi!");
        int int38 = strBuilder36.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt((int) (short) 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append((long) (byte) 1);
        java.lang.StringBuffer stringBuffer47 = strBuilder46.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder15.append(stringBuffer47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder15.delete((int) (byte) 10, (int) 'a');
        char[] charArray56 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer65.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher68);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder51.getChars(200, (int) (byte) 100, charArray56, 104);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "h" + "'", str21, "h");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(stringBuffer47);
        org.junit.Assert.assertEquals(stringBuffer47.toString(), "0.001hi 1");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strMatcher68);
    }

    @Test
    public void test00949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00949");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst(strMatcher10, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.replaceAll(strMatcher10, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean16 = strBuilder7.contains(strMatcher15);
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.appendln(stringBuffer17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder7.replaceFirst(strMatcher19, "hi!");
        int int22 = strBuilder4.indexOf(strMatcher19);
        java.util.stream.IntStream intStream23 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.deleteAll(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder4.append(strBuilder50, 33, 48);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test00950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00950");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        boolean boolean13 = strBuilder1.startsWith("hi!");
        java.lang.String str14 = strBuilder1.toString();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "!ih" + "'", str14, "!ih");
    }

    @Test
    public void test00951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00951");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("!ih100.0", "!ih100.0");
        int int16 = strBuilder10.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        char[] charArray22 = strBuilder21.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            strBuilder3.getChars(3, (int) (short) 0, charArray22, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[h, i, !, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ]]");
    }

    @Test
    public void test00952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00952");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer21.reset();
        int int23 = strTokenizer21.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer21.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test00953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00953");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[!ih100.0]");
        java.lang.String str2 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterString("java.io.IOException");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[!ih100.0]" + "'", str2, "StrTokenizer[!ih100.0]");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test00954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00954");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.set("001hi 1");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test00955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00955");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        java.lang.String str19 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.replaceAll(strMatcher29, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst(strMatcher38, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll(strMatcher38, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean44 = strBuilder35.contains(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher29, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder23.replaceAll(strMatcher29, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer15.setTrimmerMatcher(strMatcher29);
        java.lang.String str49 = strTokenizer15.nextToken();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "!ih100.0" + "'", str19, "!ih100.0");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test00956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00956");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.setCharAt((int) (short) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.insert(7, (long) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder4.appendln(strBuilder33, 30, 72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test00957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00957");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.lang.String str24 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.replaceAll('.', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.replaceAll(strMatcher32, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strBuilder39.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setEmptyTokenAsNull(false);
        java.lang.String str46 = strTokenizer43.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst(strMatcher49, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer43.setDelimiterMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoredChar('a');
        char[] charArray57 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer52.reset(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer69.setQuoteMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder27.deleteCharAt(72);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 72");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "!ih100.0" + "'", str46, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test00958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00958");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        int int33 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder1.setNullText("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator(' ', '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.insert(21, (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 21");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 11 + "'", int33 == 11);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test00959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00959");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendln((long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("hi!", "StrTokenizer[not tokenized yet]");
        java.io.Writer writer25 = strBuilder24.asWriter();
        int int28 = strBuilder24.indexOf('f', (int) '#');
        boolean boolean30 = strBuilder24.endsWith("");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(writer25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test00960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00960");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.append((double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean41 = strBuilder32.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher26, strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder20.replaceAll(strMatcher26, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean49 = strTokenizer48.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer48, "!ih100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder11.appendln((java.lang.Object) "!ih100.0");
        java.io.Reader reader53 = strBuilder52.asReader();
        long long55 = reader53.skip((long) (byte) 100);
        reader53.close();
        int int57 = reader53.read();
        reader53.mark((int) (short) -1);
        reader53.close();
        java.nio.CharBuffer charBuffer61 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int62 = reader53.read(charBuffer61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(reader53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 20L + "'", long55 == 20L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test00961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00961");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoredChar(' ');
        java.lang.String str4 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("hi!\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setDelimiterString("StrTokenizer[!ih100.0]");
        java.lang.Object obj9 = strTokenizer3.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer3.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer3.reset();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test00962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00962");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendln(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.insert((int) (byte) 1, (double) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst(strMatcher17, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replaceAll(strMatcher17, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean23 = strBuilder14.contains(strMatcher22);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher22, strMatcher24);
        char[] charArray28 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer25.reset(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer25.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer25);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.replace(strMatcher35, "", (int) 'a', 19, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
    }

    @Test
    public void test00963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00963");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", '!');
    }

    @Test
    public void test00964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00964");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strBuilder19.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer23.setDelimiterMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder7.replace(strMatcher25, "hi!3", 0, 0, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        int int48 = strBuilder46.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.replaceAll(strMatcher56, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean71 = strBuilder62.contains(strMatcher70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher56, strMatcher70);
        int int73 = strBuilder50.indexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder50.appendln('4');
        int int77 = strBuilder50.indexOf('#');
        int int78 = strBuilder50.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder50.appendln((long) 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.ensureCapacity((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder7.appendFixedWidthPadRight((java.lang.Object) (byte) 10, 12, '.');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendln(10);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test00965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00965");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder15.indexOf(strMatcher38);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder15.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceAll("", "hi!");
        int int60 = strBuilder58.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder15.append(strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder68.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst('#', '#');
        char[] charArray88 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder82.append(charArray88);
        int int93 = strBuilder91.lastIndexOf("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder15.appendFixedWidthPadRight((java.lang.Object) "!", (int) (byte) 10, '4');
        int int98 = strBuilder15.lastIndexOf('1');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 12 + "'", int98 == 12);
    }

    @Test
    public void test00966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00966");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.append((long) 7);
        java.util.stream.IntStream intStream18 = strBuilder14.chars();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(intStream18);
    }

    @Test
    public void test00967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00967");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendSeparator('.', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("", "hi!");
        int int48 = strBuilder46.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst(strMatcher53, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.replaceAll(strMatcher53, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean59 = strBuilder50.contains(strMatcher58);
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.appendln(stringBuffer60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder50.replaceFirst(strMatcher62, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder46.appendFixedWidthPadLeft((java.lang.Object) strBuilder64, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((long) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append((double) (short) 10);
        boolean boolean74 = strBuilder13.equalsIgnoreCase(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.appendPadding(12, 'h');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.deleteAll('.');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder73.deleteFirst("kenizer");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test00968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00968");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst(strMatcher26, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.replaceAll(strMatcher26, "");
        int int31 = strBuilder11.lastIndexOf(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder11.replaceAll('4', '!');
        char[] charArray35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.replaceAll("falsehi!0a\n", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator('!', '4');
        int int44 = strBuilder39.indexOf("eh!0a\nStrT");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test00969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00969");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("!ih100.0", "!ih100.0");
        int int10 = strBuilder4.indexOf('a', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.replaceFirst("", "hi!3");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln((java.lang.Object) "StrTokenizer[not tokenized yet]");
        char[] charArray16 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        boolean boolean18 = strTokenizer17.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "hi!StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[h, i, !, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ]]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test00970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00970");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.append('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.deleteFirst(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator("", "!ih");
        char[] charArray16 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll(strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst('!', '.');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = strBuilder31.substring(8);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test00971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00971");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean4 = strTokenizer3.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setQuoteMatcher(strMatcher7);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.set("!ih100.014\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test00972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00972");
        java.io.IOException iOException0 = new java.io.IOException();
        java.io.IOException iOException1 = new java.io.IOException();
        iOException0.addSuppressed((java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException4 = new java.io.IOException();
        java.io.IOException iOException5 = new java.io.IOException();
        iOException4.addSuppressed((java.lang.Throwable) iOException5);
        iOException1.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException();
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException();
        java.io.IOException iOException14 = new java.io.IOException();
        iOException13.addSuppressed((java.lang.Throwable) iOException14);
        iOException10.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException14);
        iOException4.addSuppressed((java.lang.Throwable) iOException14);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray20 = iOException19.getSuppressed();
        java.lang.String str21 = iOException19.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "java.io.IOException: java.io.IOException" + "'", str21, "java.io.IOException: java.io.IOException");
    }

    @Test
    public void test00973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00973");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder23.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setEmptyTokenAsNull(false);
        java.lang.String str30 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.deleteAll(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder31.append(strBuilder39);
        java.lang.Object obj53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder31.appendFixedWidthPadLeft(obj53, (int) (byte) 1, '!');
        java.lang.String str57 = strBuilder31.getNewLineText();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "!ih100.0" + "'", str30, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test00974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00974");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("");
        java.lang.String str2 = strTokenizer1.getContent();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
    }

    @Test
    public void test00975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00975");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        java.lang.String[] strArray27 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer24.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strMatcher28);
    }

    @Test
    public void test00976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00976");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendPadding((int) (short) -1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNewLineText("!ih100.0#a");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.insert((int) (short) -1, 'f');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test00977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00977");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean4 = strTokenizer3.isEmptyTokenAsNull();
        boolean boolean5 = strTokenizer3.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setIgnoredChar('.');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = strTokenizer7.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test00978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00978");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        char[] charArray22 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceAll("", "hi!");
        int int39 = strBuilder37.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst(strMatcher44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.replaceAll(strMatcher44, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean50 = strBuilder41.contains(strMatcher49);
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder41.appendln(stringBuffer51);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder41.replaceFirst(strMatcher53, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder37.appendFixedWidthPadLeft((java.lang.Object) strBuilder55, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder37.reverse();
        char[] charArray62 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'a');
        char[] charArray68 = strBuilder37.getChars(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '!', '4');
        char[] charArray75 = strBuilder21.getChars(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[!, i, h, 1, 0, 0, ., 0, \n]");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "!ih100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[!, i, h, 1, 0, 0, ., 0, \n]");
    }

    @Test
    public void test00979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00979");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strBuilder21.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer22.reset();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test00980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00980");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln((long) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        java.lang.String str30 = strBuilder18.toString();
        boolean boolean31 = strBuilder16.equals((java.lang.Object) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder18.append((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = strBuilder33.substring(48);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!\n" + "'", str30, "hi!\n");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test00981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00981");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!", "sehi!!");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setTrimmerMatcher(strMatcher5);
        int int7 = strTokenizer6.previousIndex();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test00982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00982");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder18.replaceAll(strMatcher21, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean27 = strBuilder18.contains(strMatcher26);
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendln(stringBuffer28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.replaceFirst(strMatcher30, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.appendFixedWidthPadLeft((java.lang.Object) strBuilder32, 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder14.reverse();
        char[] charArray39 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a');
        char[] charArray45 = strBuilder14.getChars(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        boolean boolean49 = strTokenizer48.hasPrevious();
        boolean boolean50 = strTokenizer48.hasNext();
        java.lang.String str51 = strTokenizer48.previousToken();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "!0.001hi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "!0.001hi!");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[!, 0, ., 0, 0, 1, h, i, !]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test00983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00983");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("###true1");
        java.lang.String str2 = strTokenizer1.nextToken();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "###true1" + "'", str2, "###true1");
    }

    @Test
    public void test00984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00984");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setEmptyTokenAsNull(false);
        java.lang.String str18 = strTokenizer15.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst(strMatcher21, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer15.setDelimiterMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setIgnoredChar('a');
        char[] charArray29 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer24.reset(charArray29);
        java.lang.Object obj42 = strTokenizer41.clone();
        int int43 = strTokenizer41.size();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "!ih100.0" + "'", str18, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
    }

    @Test
    public void test00985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00985");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", 'a');
        int int3 = strTokenizer2.size();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test00986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00986");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer20.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer21.setQuoteMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setIgnoredChar('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.minimizeCapacity();
        boolean boolean64 = strBuilder62.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendFixedWidthPadLeft((int) '4', 1, '#');
        char[] charArray72 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strTokenizer81.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher84);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder62.deleteFirst(strMatcher84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer46.setQuoteMatcher(strMatcher84);
        int int88 = strBuilder18.lastIndexOf(strMatcher84);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder18.delete((-1), 13);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test00987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00987");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        java.lang.String str16 = strBuilder11.leftString((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder17.appendFixedWidthPadRight((int) (short) 100, (-1), '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append("!ih100.00");
        java.io.Reader reader24 = strBuilder23.asReader();
        char[] charArray27 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln((long) (short) 10);
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.append(stringBuffer50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int53 = strBuilder51.indexOf(strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher65, strMatcher67);
        char[] charArray71 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer68.reset(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer54.reset(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, "!i");
        // The following exception was thrown during execution in test generation
        try {
            int int81 = reader24.read(charArray71, 0, (int) '.');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "!" + "'", str16, "!");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(reader24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test00988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00988");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.String str14 = strBuilder11.midString((int) (byte) 10, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder11.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer15.set("!ih100.0StrTokenizer[!ih100.0]11.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
    }

    @Test
    public void test00989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00989");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        int int16 = strBuilder14.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.setCharAt((int) (short) 0, ' ');
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder14.append(stringBuffer22, 1, (int) (byte) 1);
        char[] charArray26 = strBuilder25.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('1');
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " ih100.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " ih100.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , i, h, 1, 0, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test00990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00990");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.close();
        writer24.write(12);
        java.io.Writer writer29 = writer24.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.replaceAll(strMatcher34, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strBuilder41.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder55.deleteAll(strMatcher65);
        boolean boolean68 = strBuilder41.contains(strMatcher65);
        java.io.Writer writer69 = writer24.append((java.lang.CharSequence) strBuilder41);
        // The following exception was thrown during execution in test generation
        try {
            writer24.write("1hi!hi!", 33, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(writer69);
    }

    @Test
    public void test00991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00991");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.replaceAll(strMatcher24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder30.replaceAll(strMatcher33, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean39 = strBuilder30.contains(strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher24, strMatcher38);
        int int41 = strBuilder15.indexOf(strMatcher38);
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder15.appendln(stringBuffer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder45.replaceAll(strMatcher48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceAll("", "hi!");
        int int60 = strBuilder58.indexOf("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.appendSeparator('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder15.append(strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.replaceAll(strMatcher71, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder68.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst('#', '#');
        char[] charArray88 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder82.append(charArray88);
        int int93 = strBuilder91.lastIndexOf("!");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder15.appendFixedWidthPadRight((java.lang.Object) "!", (int) (byte) 10, '4');
        java.io.Writer writer97 = strBuilder15.asWriter();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, a]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(writer97);
    }

    @Test
    public void test00992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00992");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst(strMatcher31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.replaceAll(strMatcher31, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean37 = strBuilder28.contains(strMatcher36);
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendln(stringBuffer38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder28.replaceFirst(strMatcher40, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder28.insert((int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder47.deleteAll("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.replaceAll(strMatcher62, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strBuilder69.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setEmptyTokenAsNull(false);
        java.lang.String str76 = strTokenizer73.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder47.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        java.io.Writer writer79 = writer24.append((java.lang.CharSequence) strBuilder78);
        java.io.Writer writer81 = writer24.append('h');
        writer81.flush();
        writer81.write("hi!\n10");
        writer81.write(12);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "!ih100.0" + "'", str76, "!ih100.0");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(writer79);
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test00993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00993");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        java.util.stream.IntStream intStream5 = strBuilder4.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendFixedWidthPadLeft((java.lang.Object) true, 10, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.replaceFirst("", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("i!", "!ih100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int19 = strBuilder12.lastIndexOf(strMatcher17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher27, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst(strMatcher36, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.replaceAll(strMatcher36, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean42 = strBuilder33.contains(strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher27, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder21.replaceAll(strMatcher27, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean50 = strTokenizer49.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer49, "!ih100.0");
        char[] charArray55 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder21.appendln(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.replaceAll(strMatcher64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder74.appendNull();
        boolean boolean76 = strBuilder21.equalsIgnoreCase(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst(strMatcher82, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder79.replaceAll(strMatcher82, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean88 = strBuilder79.contains(strMatcher87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.00", strMatcher87, strMatcher89);
        boolean boolean91 = strBuilder21.contains(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder12.replaceAll(strMatcher89, "00.00.");
        java.io.Reader reader94 = strBuilder93.asReader();
        // The following exception was thrown during execution in test generation
        try {
            char char96 = strBuilder93.charAt(100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(intStream5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(reader94);
    }

    @Test
    public void test00994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00994");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('a');
        java.io.Writer writer24 = strBuilder21.asWriter();
        writer24.write((int) (short) 0);
        writer24.write((int) 'a');
        writer24.flush();
        writer24.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst(strMatcher33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder40.replaceAll(strMatcher43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((float) (byte) 100);
        java.lang.CharSequence charSequence53 = strBuilder50.subSequence(1, (int) (short) 1);
        boolean boolean55 = strBuilder50.endsWith("!ih100.0");
        char char57 = strBuilder50.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.replaceAll(strMatcher65, "");
        int int70 = strBuilder50.lastIndexOf(strMatcher65);
        int int71 = strBuilder38.indexOf(strMatcher65);
        java.lang.String str72 = strBuilder38.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder38.trim();
        char[] charArray74 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.append((java.lang.Object) ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer80 = writer24.append((java.lang.CharSequence) strBuilder73, 102, 17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 17");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + char57 + "' != '" + '!' + "'", char57 == '!');
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test00995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00995");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        char[] charArray35 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.appendln(charArray35);
        int int41 = strBuilder1.indexOf('4');
        java.lang.String str42 = strBuilder1.toString();
        int int45 = strBuilder1.indexOf('h', 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder1.append(false);
        java.lang.Class<?> wildcardClass48 = strBuilder1.getClass();
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!!ih100.0#a\n" + "'", str42, "hi!!ih100.0#a\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test00996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00996");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replaceAll(strMatcher14, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean20 = strBuilder11.contains(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.deleteAll(strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln("hi!");
        boolean boolean27 = strBuilder1.equals(strBuilder24);
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        int int31 = strTokenizer30.nextIndex();
        int int32 = strTokenizer30.nextIndex();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "falsehi!#hi!\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[f, a, l, s, e, h, i, !, #, h, i, !, \n]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test00997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00997");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        boolean boolean16 = strBuilder11.endsWith("!ih100.0");
        char char18 = strBuilder11.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendSeparator("StrTokenizer[!ih100.0]", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.append("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteAll('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('!', '#');
        boolean boolean30 = strBuilder28.contains('!');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.replaceAll(strMatcher35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder32.deleteAll("");
        char[] charArray45 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray45);
        char[] charArray60 = strBuilder42.getChars(charArray45);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, strMatcher62);
        java.lang.String str64 = strTokenizer63.nextToken();
        java.lang.String str65 = strTokenizer63.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        java.util.stream.IntStream intStream67 = strBuilder28.codePoints();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '!' + "'", char18 == '!');
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "!ih");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "!ih");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[!, i, h]");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#" + "'", str64, "#");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(intStream67);
    }

    @Test
    public void test00998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00998");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceAll(strMatcher4, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) (byte) 100);
        java.lang.CharSequence charSequence14 = strBuilder11.subSequence(1, (int) (short) 1);
        int int17 = strBuilder11.lastIndexOf("!", (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendPadding((int) (short) -1, '!');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.append(7);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strBuilder35.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setEmptyTokenAsNull(false);
        java.lang.String str42 = strTokenizer39.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst(strMatcher45, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer39.setDelimiterMatcher(strMatcher45);
        boolean boolean49 = strTokenizer39.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer39.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder11.insert(22, (java.lang.Object) strMatcher50);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 22");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "!ih100.0" + "'", str42, "!ih100.0");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strMatcher50);
    }

    @Test
    public void test00999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00999");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst(strMatcher2, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.insert(0, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(strMatcher12, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll(strMatcher12, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean18 = strBuilder9.contains(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.deleteAll(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder7.append("!", (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.replaceAll(strMatcher28, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.append((float) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append((double) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendSeparator("i!");
        boolean boolean42 = strBuilder7.equals(strBuilder37);
        java.lang.String str43 = strBuilder37.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.replaceAll(strMatcher51, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst(strMatcher60, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.replaceAll(strMatcher60, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean66 = strBuilder57.contains(strMatcher65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher51, strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder45.replaceAll(strMatcher51, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean74 = strTokenizer73.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder45.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer73, "!ih100.0");
        char[] charArray79 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder45.appendln(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder37.appendln(charArray79);
        java.lang.Class<?> wildcardClass90 = strBuilder37.getClass();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test01000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test01000");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder4.replaceAll(strMatcher7, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst(strMatcher16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.replaceAll(strMatcher16, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean22 = strBuilder13.contains(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher7, strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder1.replaceAll(strMatcher7, "i!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("!ih100.0", 'a', '#');
        boolean boolean30 = strTokenizer29.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "!ih100.0");
        int int33 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder1.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendSeparator('.', 105);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer43.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.replaceAll(strMatcher50, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst(strMatcher59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replaceAll(strMatcher59, "");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        boolean boolean65 = strBuilder56.contains(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher50, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer44.setQuoteMatcher(strMatcher64);
        char[] charArray70 = new char[] { '#', 'a' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.reset(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[!ih100.0]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder40.insert((int) '!', charArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 33");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 11 + "'", int33 == 11);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher76);
    }
}

