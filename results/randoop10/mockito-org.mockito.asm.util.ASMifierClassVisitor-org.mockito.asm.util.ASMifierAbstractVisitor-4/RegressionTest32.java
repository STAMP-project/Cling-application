import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest32 {

    public static boolean debug = false;

    @Test
    public void test16001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16001");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = new org.mockito.asm.Label();
        aSMifierMethodVisitor32.visitLabel(label52);
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label52);
        java.lang.Object obj55 = label52.info;
        java.lang.Object obj56 = label52.info;
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test16002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16002");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) '#');
        long long33 = classReader24.readLong(4);
        int int35 = classReader24.readInt((int) (short) 9);
        long long37 = classReader24.readLong((int) '4');
        java.lang.String str38 = classReader24.getSuperName();
        int int40 = classReader24.getItem((int) (byte) 1);
        java.lang.String[] strArray41 = classReader24.getInterfaces();
        org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter(classReader24, (int) (short) 10);
        byte[] byteArray44 = classReader24.b;
        org.mockito.asm.ClassReader classReader45 = new org.mockito.asm.ClassReader(byteArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor47.visitAnnotation("", false);
        aSMifierMethodVisitor47.visitMaxs(12, (int) (short) 10);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        printWriter55.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        java.util.List list69 = aSMifierMethodVisitor58.getText();
        printWriter55.println((java.lang.Object) list69);
        printWriter55.print((double) 10L);
        printWriter55.print(false);
        printWriter55.println(false);
        aSMifierMethodVisitor47.print(printWriter55);
        printWriter55.println((float) (byte) 10);
        printWriter55.print(' ');
        char[] charArray86 = new char[] { 'a', ' ', '4', '4' };
        printWriter55.write(charArray86);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = classReader45.readClass((int) (short) 3, charArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 48640");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 86 + "'", int31 == 86);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 590080L + "'", long33 == 590080L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 151060480 + "'", int35 == 151060480);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 72068947506459235L + "'", long37 == 72068947506459235L);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 11 + "'", int40 == 11);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "a 44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "a 44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[a,  , 4, 4]");
    }

    @Test
    public void test16003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16003");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter16.visitAnnotation("L2113189186", true);
        int int32 = classWriter16.newMethod("L326432149", "L967033583", "L61669440", false);
        classWriter16.visitSource("L598840791", "L2113189186");
        classWriter16.visitOuterClass("L1715840275", "L1000949368", "L298663367");
        classWriter16.visitOuterClass("L61669440", "L96121905", "L139692246");
        int int45 = classWriter16.newConst((java.lang.Object) "L1321861150");
        int int50 = classWriter16.newMethod("L142696279", "L1675715472", "", false);
        byte[] byteArray51 = classWriter16.toByteArray();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ClassReader classReader54 = new org.mockito.asm.ClassReader(byteArray51, 3395, 18798);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 9 + "'", int32 == 9);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 21 + "'", int45 == 21);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 26 + "'", int50 == 26);
        org.junit.Assert.assertNotNull(byteArray51);
    }

    @Test
    public void test16004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16004");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println((-1L));
        printWriter1.write("L1563149102", 108, 0);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test16005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16005");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label16, label17, 8);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter51.print((int) '4');
        aSMifierMethodVisitor0.print(printWriter51);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitIincInsn(254, 5);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((-1107296256), (int) (short) -13570);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(2817, 182);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test16006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16006");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        java.io.PrintWriter printWriter67 = printWriter1.append('#');
        printWriter1.flush();
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.print(false);
        printWriter1.print("L1527711418");
        printWriter1.println((long) 29801);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test16007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16007");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(2, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 2817);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation(7, "L1284973471", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1852655365", 1869480192);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitParameterAnnotation(116, "L1939891096", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor38.visitLineNumber((int) (byte) 10, label48);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor38.visitAnnotation("hi!", true);
        aSMifierMethodVisitor38.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor57.visitLineNumber((int) (byte) 10, label67);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor72.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label78 = null;
        int[] intArray80 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor72.visitLookupSwitchInsn(label78, intArray80, labelArray81);
        aSMifierMethodVisitor57.visitTableSwitchInsn((int) (byte) 0, 51966, label71, labelArray81);
        org.mockito.asm.Label label84 = null;
        aSMifierMethodVisitor57.visitLabel(label84);
        org.mockito.asm.Label label86 = new org.mockito.asm.Label();
        aSMifierMethodVisitor57.visitLabel(label86);
        aSMifierMethodVisitor38.visitJumpInsn((int) (short) 10, label86);
        java.lang.String str89 = label86.toString();
        java.lang.String str90 = label86.toString();
        java.lang.String str91 = label86.toString();
        java.lang.String str92 = label86.toString();
        aSMifierMethodVisitor0.visitLabel(label86);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1]");
        org.junit.Assert.assertNotNull(labelArray81);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L1039393936" + "'", str89, "L1039393936");
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "L1039393936" + "'", str90, "L1039393936");
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "L1039393936" + "'", str91, "L1039393936");
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "L1039393936" + "'", str92, "L1039393936");
    }

    @Test
    public void test16008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16008");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
        org.mockito.asm.Label label17 = new org.mockito.asm.Label();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor18.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor18.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label38);
        aSMifierMethodVisitor18.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor42.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label62 = new org.mockito.asm.Label();
        aSMifierMethodVisitor42.visitLabel(label62);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor64.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor64.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor64.visitIincInsn(1, 0);
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor64.visitLabel(label76);
        label62.info = aSMifierMethodVisitor64;
        aSMifierMethodVisitor18.visitLineNumber(24942, label62);
        java.lang.Object obj80 = label62.info;
        aSMifierMethodVisitor0.visitLocalVariable("", "L142696279", "L139692246", label17, label62, 100);
        java.lang.Object obj83 = label17.info;
        java.lang.Object obj84 = label17.info;
        // The following exception was thrown during execution in test generation
        try {
            int int85 = label17.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test16009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16009");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierClassVisitor1.visitAnnotation("L1669980843", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor30.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor30.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor30.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor30.visitParameterAnnotation((int) '4', "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = annotationVisitor49.visitArray("");
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = annotationVisitor51.visitAnnotation("L142696279", "L799304101");
        org.mockito.asm.FieldVisitor fieldVisitor55 = aSMifierClassVisitor1.visitField((int) (short) 100, "L1344346170", "L2099222213", "L1174087069", (java.lang.Object) annotationVisitor54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor1.visitAnnotation("L1327200039", false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test16010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16010");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((-889275714));
        printWriter34.println((int) (short) 256);
        printWriter34.print((long) 1);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter42);
        java.io.PrintWriter printWriter47 = printWriter42.append('#');
        printWriter47.println((double) 51966);
        char[] charArray56 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter47.write(charArray56);
        printWriter34.print(charArray56);
        printWriter1.print(charArray56);
        printWriter1.print((float) 27);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[ , a,  , #, #, a]");
    }

    @Test
    public void test16011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16011");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitIincInsn(1, 0);
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor22.visitLabel(label34);
        label20.info = aSMifierMethodVisitor22;
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        long long63 = classReader61.readLong((int) (byte) 100);
        long long65 = classReader61.readLong((int) (byte) 10);
        java.lang.String[] strArray66 = classReader61.getInterfaces();
        int int68 = classReader61.readInt(0);
        org.mockito.asm.ClassWriter classWriter70 = new org.mockito.asm.ClassWriter(classReader61, (int) '4');
        classWriter70.visitSource("L326432149", "L1434348811");
        label20.info = classWriter70;
        int int77 = classWriter70.newNameType("L137136720", "L326432149");
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = classWriter70.visitAnnotation("L555214098", false);
        classWriter70.visitEnd();
        classWriter70.visitInnerClass("L907775506", "L1784767575", "L122837608", (int) (short) -13570);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 8532477865490146625L + "'", long63 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 72057598333118569L + "'", long65 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-889275714) + "'", int68 == (-889275714));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 11 + "'", int77 == 11);
        org.junit.Assert.assertNotNull(annotationVisitor80);
    }

    @Test
    public void test16012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16012");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((int) '4');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter21.visitEnd();
        classWriter21.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter21.visitSource("hi!", "hi!");
        byte[] byteArray43 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector46 = byteVector15.putByteArray(byteArray43, (int) (short) 10, (int) '4');
        annotationVisitor10.visit("L598840791", (java.lang.Object) byteArray43);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray43);
        byte[] byteArray49 = classReader48.b;
        // The following exception was thrown during execution in test generation
        try {
            int int51 = classReader48.readInt((int) (short) 27745);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test16013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16013");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor3 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(6, "L994489370", "L61669440", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor10.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor10.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor10.visitAnnotation("hi!", false);
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        aSMifierMethodVisitor10.visitLineNumber(10, label26);
        java.lang.String str28 = label26.toString();
        aSMifierMethodVisitor0.visitLineNumber(16778088, label26);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1641107942", 131328);
        org.junit.Assert.assertNotNull(annotationVisitor3);
        org.junit.Assert.assertNotNull(annotationVisitor24);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "L811609318" + "'", str28, "L811609318");
    }

    @Test
    public void test16014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16014");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitIincInsn((int) (short) 872, 0);
        aSMifierMethodVisitor26.visitInsn(190);
        aSMifierMethodVisitor26.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor26.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test16015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16015");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitVarInsn(86, (int) (short) 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1906590307", 26729);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor22.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor35.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor35.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor35.visitAnnotation("hi!", false);
        org.mockito.asm.Label label51 = new org.mockito.asm.Label();
        aSMifierMethodVisitor35.visitLineNumber(10, label51);
        aSMifierMethodVisitor22.visitLineNumber(1, label51);
        java.lang.Object obj54 = label51.info;
        aSMifierMethodVisitor0.visitLineNumber(16780108, label51);
        aSMifierMethodVisitor0.visitVarInsn(105, (int) ' ');
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, 21);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test16016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16016");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.Attribute[] attributeArray31 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor33.visitLineNumber((int) (byte) 10, label43);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        int[] intArray56 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label54, intArray56, labelArray57);
        aSMifierMethodVisitor33.visitTableSwitchInsn((int) (byte) 0, 51966, label47, labelArray57);
        aSMifierMethodVisitor0.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray31, (int) '4', (java.lang.Object[]) labelArray57);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), (int) '#');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "L834812042", "L2112385861", "L2101667039");
        aSMifierMethodVisitor0.visitTypeInsn(21, "L96121905");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(2817, "L897124199", "L811609318", "L1691870655");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(attributeArray31);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(labelArray57);
    }

    @Test
    public void test16017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16017");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        int int43 = classWriter1.newField("L626447588", "L1769388599", "L1646774915");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 16 + "'", int43 == 16);
    }

    @Test
    public void test16018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16018");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 151060480);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L723576843", 0);
        aSMifierMethodVisitor0.visitIntInsn(101, (int) (short) -13570);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn(4, "L841406722");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(16779859, "L435958291");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16019");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        printWriter1.write("");
        printWriter1.write("L994489370");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.FieldVisitor fieldVisitor14 = aSMifierClassVisitor8.visitField((int) 'a', "L1544572272", "L2113189186", "L1703143512", (java.lang.Object) "L1715840275");
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        int int47 = classReader43.readUnsignedShort((int) (short) 0);
        int int49 = classReader43.readUnsignedShort((int) 'a');
        java.lang.String[] strArray50 = classReader43.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor51 = aSMifierClassVisitor8.visitMethod(4, "L799304101", "hi!", "L316026808", strArray50);
        aSMifierClassVisitor8.visitInnerClass("L2036836790", "L799304101", "L779142371", 186);
        aSMifierClassVisitor8.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor8.visitAnnotation("L1931374313", true);
        aSMifierClassVisitor8.visitInnerClass("L54293417", "L894790251", "L1123612854", 20);
        org.junit.Assert.assertNotNull(fieldVisitor14);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 51966 + "'", int47 == 51966);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 25929 + "'", int49 == 25929);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test16020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16020");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list15 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMethodInsn((int) '#', "L1434348811", "L1675715472", "L2076399201");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(36, "L1536756937", false);
        java.util.List list25 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("L880088992", false);
        aSMifierMethodVisitor0.visitIincInsn(51966, 0);
        aSMifierMethodVisitor0.visitVarInsn(115, 7);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test16021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16021");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitSource("L1715840275", "L1441782014");
        aSMifierClassVisitor1.visitSource("L666971223", "L2101667039");
        aSMifierClassVisitor1.visitOuterClass("L1236963294", "L48323983", "L290335602");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierClassVisitor1.visitAnnotation("L536317741", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test16022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16022");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println(8532477865490146625L);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter35);
        printWriter35.print(0.0d);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        char[] charArray49 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter42.print(charArray49);
        printWriter35.write(charArray49);
        printWriter1.print(charArray49);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        printWriter55.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter55);
        printWriter55.print(0.0d);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter((java.io.Writer) printWriter55, true);
        printWriter62.write("L142696279");
        java.util.Locale locale65 = null;
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter68 = printWriter62.printf(locale65, "L1105153118", (java.lang.Object[]) strArray67);
        java.io.PrintWriter printWriter69 = printWriter1.format("L598840791", (java.lang.Object[]) strArray67);
        printWriter1.write("L601661571", 33, (-1161953280));
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.print((double) 32);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(printWriter69);
    }

    @Test
    public void test16023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16023");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label2, label3, label4, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(1852731252, "L1675929423", "L603952514", "L2011797087");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor10);
    }

    @Test
    public void test16024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16024");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("L454715523", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label26, intArray35, labelArray47);
        aSMifierMethodVisitor25.visitFieldInsn((int) (short) 100, "", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor55 = aSMifierClassVisitor1.visitField(5, "L1808073265", "L2112385861", "L1200350890", (java.lang.Object) aSMifierMethodVisitor25);
        aSMifierClassVisitor1.visitInnerClass("L614568462", "L1216476214", "L1808073265", 65210);
        aSMifierClassVisitor1.visitOuterClass("", "L1143644228", "L697718317");
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(fieldVisitor55);
    }

    @Test
    public void test16025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16025");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1715840275", 24942);
        aSMifierMethodVisitor0.visitMaxs(13, (int) (short) 256);
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test16026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16026");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1703143512", 0);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, 13);
        aSMifierMethodVisitor0.visitTypeInsn(22, "L365115101");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs(98, 47806);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test16027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16027");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter22 = printWriter1.append('a');
        java.util.Locale locale23 = null;
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter26.visitEnd();
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        java.util.List list60 = aSMifierMethodVisitor49.getText();
        printWriter46.println((java.lang.Object) list60);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter((java.io.Writer) printWriter46);
        boolean boolean63 = printWriter46.checkError();
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter46, true);
        java.util.Locale locale66 = null;
        org.mockito.asm.ClassWriter classWriter69 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter69.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray75);
        java.io.PrintWriter printWriter77 = printWriter46.printf(locale66, "L812886011", (java.lang.Object[]) strArray75);
        classWriter26.visit(65792, 1853060193, "L711565622", "L1190772633", "L1719622935", strArray75);
        java.io.PrintWriter printWriter79 = printWriter1.printf(locale23, "L928755548", (java.lang.Object[]) strArray75);
        boolean boolean80 = printWriter79.checkError();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test16028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16028");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor22 = aSMifierClassVisitor1.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        aSMifierClassVisitor1.visitInnerClass("L2113189186", "L326432149", "L61669440", 51966);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((int) 'a');
        printWriter29.println("");
        aSMifierClassVisitor1.print(printWriter29);
        aSMifierClassVisitor1.visitOuterClass("L994489370", "L1715840275", "L1544572272");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor1.visitAnnotation("L96121905", true);
        annotationVisitor41.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test16029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16029");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor9.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor9.visitLineNumber((int) (byte) 10, label19);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor9.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label30 = new org.mockito.asm.Label();
        aSMifierMethodVisitor9.visitLineNumber(4, label30);
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label30);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, 9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1135610391", (int) (short) 100);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test16030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16030");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        java.lang.String[] strArray18 = null;
        aSMifierClassVisitor1.visit((int) (byte) 10, 1, "", "L1434348811", "L326432149", strArray18);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "L1715840275", 5);
        java.io.PrintWriter printWriter29 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor30.visit(2, (int) (byte) 0, "", "", "", strArray39);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierClassVisitor30.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor30.visitAnnotation("hi!", false);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.print((-889275714));
        java.util.Locale locale56 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label59 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label66 = null;
        int[] intArray68 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor60.visitLookupSwitchInsn(label66, intArray68, labelArray69);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor71.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label77 = null;
        int[] intArray79 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray80 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor71.visitLookupSwitchInsn(label77, intArray79, labelArray80);
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label59, intArray68, labelArray80);
        java.io.PrintWriter printWriter83 = printWriter53.format(locale56, "hi!", (java.lang.Object[]) labelArray80);
        printWriter53.println((int) (short) 1);
        java.lang.String[] strArray87 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter88 = printWriter53.format("hi!", (java.lang.Object[]) strArray87);
        java.lang.String[] strArray90 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter91 = printWriter53.printf("", (java.lang.Object[]) strArray90);
        aSMifierClassVisitor30.visit(24942, 51966, "L1434348811", "hi!", "hi!", strArray90);
        org.mockito.asm.MethodVisitor methodVisitor93 = aSMifierClassVisitor1.visitMethod((int) (short) 0, "", "L316026808", "L1105153118", strArray90);
        org.mockito.asm.AnnotationVisitor annotationVisitor96 = aSMifierClassVisitor1.visitAnnotation("L575352164", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1]");
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[1]");
        org.junit.Assert.assertNotNull(labelArray80);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertNotNull(methodVisitor93);
        org.junit.Assert.assertNotNull(annotationVisitor96);
    }

    @Test
    public void test16031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16031");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        java.io.PrintWriter printWriter94 = printWriter1.append((java.lang.CharSequence) "L994489370", 5, (int) (byte) 10);
        printWriter94.write("L1413777471");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter94);
    }

    @Test
    public void test16032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16032");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotation("L2112385861", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor40.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        aSMifierMethodVisitor40.visitLabel(label60);
        java.lang.String str62 = label60.toString();
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label60);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L954744343", (int) (short) 27745);
        org.mockito.asm.Attribute attribute67 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L1248878460" + "'", str62, "L1248878460");
    }

    @Test
    public void test16033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16033");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list14 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor16.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor16.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLabel(label36);
        aSMifierMethodVisitor0.visitLineNumber(24942, label36);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test16034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16034");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray54 = classReader53.b;
        org.mockito.asm.ByteVector byteVector57 = byteVector26.putByteArray(byteArray54, 0, 5);
        org.mockito.asm.ByteVector byteVector59 = byteVector26.putUTF8("L666971223");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putInt(4);
        org.mockito.asm.ByteVector byteVector63 = byteVector59.putUTF8("L1297264300");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("L1432518723");
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("L175145913");
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putShort(73);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
    }

    @Test
    public void test16035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16035");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label63);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(67, 57174305);
        aSMifierMethodVisitor0.visitFieldInsn(1, "L1523832889", "L628367935", "L1906590307");
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
    }

    @Test
    public void test16036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16036");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putInt(11);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putShort(1751720195);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("L1840029106");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test16037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16037");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print((float) (-1L));
        printWriter1.print((double) 316);
        printWriter1.println((float) 15);
        java.io.PrintWriter printWriter31 = printWriter1.append((java.lang.CharSequence) "L1764179183", 0, 1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println(false);
        printWriter1.print((float) 13);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test16038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16038");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "L1749641217", false);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 15);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, 2305);
        aSMifierMethodVisitor0.visitMaxs(29, (int) (short) 24940);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test16039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16039");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println(false);
        java.io.PrintWriter printWriter25 = printWriter1.append((java.lang.CharSequence) "L1669980843");
        java.lang.Object obj26 = null;
        printWriter25.println(obj26);
        printWriter25.print('a');
        printWriter25.println(16779859);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter25);
    }

    @Test
    public void test16040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16040");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println(false);
        printWriter1.print(1853030400);
        printWriter1.flush();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test16041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16041");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label16, label17, 8);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test16042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16042");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        printWriter21.print(0.0d);
        printWriter21.print(9);
        printWriter21.println('4');
        aSMifierMethodVisitor0.print(printWriter21);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((-889275714));
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        java.io.PrintWriter printWriter63 = printWriter33.format(locale36, "hi!", (java.lang.Object[]) labelArray60);
        printWriter33.println((int) (short) 1);
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter68 = printWriter33.format("hi!", (java.lang.Object[]) strArray67);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter33);
        boolean boolean70 = printWriter33.checkError();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter33);
        org.mockito.asm.ClassWriter classWriter73 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter73.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = classWriter73.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor85 = classWriter73.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter73.visitEnd();
        classWriter73.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter73.visitSource("hi!", "hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitMaxs(190, 34);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(fieldVisitor85);
    }

    @Test
    public void test16043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16043");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, 320);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L477731576");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (short) 256, "L1428793912", "L1681567348", "L353293957");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test16044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16044");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor19.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list31 = aSMifierMethodVisitor19.text;
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter35.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter35.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter60 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor61.visit(2, (int) (byte) 0, "", "", "", strArray70);
        classWriter35.visit((int) 'a', (int) '#', "", "", "hi!", strArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor74.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label80 = null;
        int[] intArray82 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor74.visitLookupSwitchInsn(label80, intArray82, labelArray83);
        aSMifierMethodVisitor19.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray70, (int) (short) 100, (java.lang.Object[]) labelArray83);
        classWriter1.visit((int) 'a', (int) (short) 30313, "hi!", "hi!", "", strArray70);
        int int91 = classWriter1.newMethod("", "L1434348811", "hi!", true);
        classWriter1.visitInnerClass("L834812042", "L96121905", "L2113189186", 1634628694);
        classWriter1.visitSource("L1962374298", "L215000262");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1]");
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 8 + "'", int91 == 8);
    }

    @Test
    public void test16045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16045");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitCode();
        aSMifierMethodVisitor26.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor55.visitLabel(label61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor64.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor64.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor64.visitLineNumber((int) (byte) 10, label74);
        aSMifierMethodVisitor64.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor64.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label85 = new org.mockito.asm.Label();
        aSMifierMethodVisitor64.visitLineNumber(4, label85);
        aSMifierMethodVisitor55.visitLineNumber((int) (short) 10, label85);
        aSMifierMethodVisitor26.visitLabel(label85);
        aSMifierMethodVisitor26.visitIincInsn(34, 28);
        aSMifierMethodVisitor26.visitIincInsn(145, 118);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test16046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16046");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println('#');
        printWriter6.println((long) 118);
        printWriter6.println((int) (short) 4);
        printWriter6.println(' ');
        printWriter6.println();
        java.io.PrintWriter printWriter17 = printWriter6.append('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor18.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '4', "hi!", true);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor42 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter39);
        printWriter39.print(0.0d);
        printWriter39.print(9);
        printWriter39.println('4');
        aSMifierMethodVisitor18.print(printWriter39);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter((java.io.Writer) printWriter39, false);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor56 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter53);
        printWriter53.print(0.0d);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter53, true);
        printWriter60.write("L142696279");
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter((java.io.Writer) printWriter60);
        printWriter60.print((double) 48640);
        printWriter39.print((java.lang.Object) printWriter60);
        printWriter17.println((java.lang.Object) printWriter60);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter17);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test16047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16047");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierClassVisitor1.visitAnnotation("L666971223", true);
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter28 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter28.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = classWriter28.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor40 = classWriter28.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray41 = classWriter28.toByteArray();
        org.mockito.asm.ByteVector byteVector44 = byteVector24.putByteArray(byteArray41, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader45 = new org.mockito.asm.ClassReader(byteArray41);
        long long47 = classReader45.readLong((int) (byte) 100);
        long long49 = classReader45.readLong((int) (byte) 10);
        short short51 = classReader45.readShort(1);
        java.lang.String[] strArray52 = classReader45.getInterfaces();
        java.lang.String[] strArray53 = classReader45.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor54 = aSMifierClassVisitor1.visitMethod(115, "L1216017066", "L1504370299", "L659269359", strArray53);
        methodVisitor54.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 8532477865490146625L + "'", long47 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 72057598333118569L + "'", long49 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short51 + "' != '" + (short) -326 + "'", short51 == (short) -326);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodVisitor54);
    }

    @Test
    public void test16048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16048");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitOuterClass("hi!", "", "");
        java.lang.Object obj80 = null;
        org.mockito.asm.FieldVisitor fieldVisitor81 = classWriter1.visitField(5, "hi!", "", "L1669980843", obj80);
        classWriter1.visitInnerClass("L1669980843", "L2036836790", "L555214098", 118);
        classWriter1.visitInnerClass("L749622499", "L904580930", "L1808073265", 0);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertNotNull(fieldVisitor81);
    }

    @Test
    public void test16049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16049");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        int int36 = classWriter20.newNameType("hi!", "");
        byte[] byteArray37 = classWriter20.toByteArray();
        org.mockito.asm.ClassReader classReader38 = new org.mockito.asm.ClassReader(byteArray37);
        int int40 = classReader38.readUnsignedShort(118);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 118);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "L1644755393", "L978789454", "L644390938");
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMethodInsn(0, "L20866424", "L658171529", "L1970926136");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn(5);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 10, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 12, 0, 2, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 7, 0, 0, 0, 2, 0, 1, 0, 8, 0, 0, 0, 0, 0, 9, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 29801 + "'", int40 == 29801);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test16050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16050");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor18.visitLineNumber((int) (byte) 10, label28);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        aSMifierMethodVisitor18.visitTableSwitchInsn((int) (byte) 0, 51966, label32, labelArray42);
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor18.visitLabel(label45);
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label47);
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor50.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor50.visitAnnotation("hi!", false);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLineNumber(10, label66);
        aSMifierMethodVisitor0.visitTryCatchBlock(label47, label49, label66, "L1434348811");
        aSMifierMethodVisitor0.visitIntInsn(100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn(1, 2817);
        aSMifierMethodVisitor0.visitVarInsn(25, (int) '#');
        aSMifierMethodVisitor0.visitFieldInsn(3, "L1770505064", "L978789454", "L814836869");
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(1869509492, "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor84);
    }

    @Test
    public void test16051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16051");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (short) 30313);
        aSMifierMethodVisitor0.visitMaxs(118, 4);
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(1952542324, "L767192737", "L2041189408", "L1483711204");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16052");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor0.visitInsn(8);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor13.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor13.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor13.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor13.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        aSMifierMethodVisitor13.visitLabel(label33);
        aSMifierMethodVisitor0.visitLineNumber(57174305, label33);
        aSMifierMethodVisitor0.visitTypeInsn(7, "");
        aSMifierMethodVisitor0.visitFieldInsn(0, "L1578022509", "L1644755393", "L1393780661");
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor0.visitParameterAnnotation(118, "L1892091981", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitAnnotation("L1523832889", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(26729, "L883364809", "L407895089", "L1327104886");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor50);
    }

    @Test
    public void test16053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16053");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitVarInsn(136, 50331648);
        aSMifierMethodVisitor0.visitCode();
    }

    @Test
    public void test16054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16054");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter18 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter18.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter18.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter18.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray31 = classWriter18.toByteArray();
        org.mockito.asm.ByteVector byteVector34 = byteVector14.putByteArray(byteArray31, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader35 = new org.mockito.asm.ClassReader(byteArray31);
        int int36 = classReader35.header;
        short short38 = classReader35.readShort(1);
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter(classReader35, (int) (byte) 1);
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField(16, "L1715840275", "", "L1691870655", (java.lang.Object) (byte) 1);
        org.mockito.asm.ClassWriter classWriter47 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter47.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = classWriter47.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter47.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter47.visitEnd();
        classWriter47.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter47.visitSource("hi!", "hi!");
        classWriter47.visitSource("", "");
        byte[] byteArray72 = classWriter47.toByteArray();
        classWriter47.visitEnd();
        int int77 = classWriter47.newField("L858787082", "L406814154", "L188937864");
        org.mockito.asm.FieldVisitor fieldVisitor78 = aSMifierClassVisitor1.visitField(257, "L104358438", "L704540978", "L571926043", (java.lang.Object) "L406814154");
        org.mockito.asm.Attribute attribute79 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor78.visitAttribute(attribute79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 118 + "'", int36 == 118);
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) -326 + "'", short38 == (short) -326);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 1, 0, 8, 0, 0, 0, 0, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 16 + "'", int77 == 16);
        org.junit.Assert.assertNotNull(fieldVisitor78);
    }

    @Test
    public void test16055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16055");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "L117232912", false);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((int) 'a');
        printWriter39.println("");
        printWriter39.print((float) 590080L);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter39, true);
        printWriter47.println('a');
        java.io.PrintWriter printWriter51 = printWriter47.append((java.lang.CharSequence) "hi!");
        printWriter51.print((float) 23);
        printWriter51.print(97);
        aSMifierMethodVisitor0.print(printWriter51);
        aSMifierMethodVisitor0.visitIincInsn(872, (int) (short) -16896);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test16056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16056");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        printWriter1.println((long) 5);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor36.visitCode();
        aSMifierMethodVisitor36.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor36.visitAnnotation("hi!", false);
        aSMifierMethodVisitor36.visitMethodInsn(1, "L142696279", "L994489370", "L326432149");
        printWriter1.println((java.lang.Object) "L142696279");
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        java.util.List list70 = aSMifierMethodVisitor59.getText();
        printWriter56.println((java.lang.Object) list70);
        printWriter56.print((double) 10L);
        printWriter56.println(false);
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter("hi!");
        printWriter77.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor80 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter77);
        printWriter77.print(0.0d);
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter("hi!");
        char[] charArray91 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter84.print(charArray91);
        printWriter77.write(charArray91);
        printWriter56.print(charArray91);
        printWriter1.write(charArray91);
        printWriter1.flush();
        java.io.PrintWriter printWriter98 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter1.println();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[#, a,  , a,  , #]");
    }

    @Test
    public void test16057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16057");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor14.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor20.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor20.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor20.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        aSMifierMethodVisitor20.visitLabel(label40);
        aSMifierMethodVisitor20.visitCode();
        annotationVisitor14.visit("hi!", (java.lang.Object) aSMifierMethodVisitor20);
        annotationVisitor14.visitEnum("L677539272", "L1459078187", "L449907315");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test16058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16058");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs((int) (short) -13570, (int) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotation("L459227517", false);
        java.util.List list43 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitInsn(105);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(list43);
    }

    @Test
    public void test16059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16059");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs((int) (short) -13570, (int) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotation("L459227517", false);
        java.util.List list43 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitFieldInsn(0, "L697359787", "L1907652559", "L783935767");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(list43);
    }

    @Test
    public void test16060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16060");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = classWriter1.visitAnnotation("hi!", true);
        classWriter1.visitEnd();
        classWriter1.visitSource("L61669440", "L666971223");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter1.visitAnnotation("L2113189186", false);
        classWriter1.visitInnerClass("L1363288052", "L1957730982", "L1962766465", 48640);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((-889275714));
        java.util.Locale locale38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label41 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label48 = null;
        int[] intArray50 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray51 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor42.visitLookupSwitchInsn(label48, intArray50, labelArray51);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label59 = null;
        int[] intArray61 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor53.visitLookupSwitchInsn(label59, intArray61, labelArray62);
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label41, intArray50, labelArray62);
        java.io.PrintWriter printWriter65 = printWriter35.format(locale38, "hi!", (java.lang.Object[]) labelArray62);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        char[] charArray74 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter67.print(charArray74);
        printWriter65.print(charArray74);
        printWriter65.print(true);
        printWriter65.println('#');
        java.io.PrintWriter printWriter82 = printWriter65.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor83 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter82);
        java.io.PrintWriter printWriter85 = new java.io.PrintWriter((java.io.Writer) printWriter82, false);
        printWriter82.write(1);
        org.mockito.asm.FieldVisitor fieldVisitor88 = classWriter1.visitField(134, "", "L381544623", "L160085342", (java.lang.Object) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = fieldVisitor88.visitAnnotation("L694288669", false);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[1]");
        org.junit.Assert.assertNotNull(labelArray51);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(fieldVisitor88);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test16061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16061");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readInt(0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, (int) '4');
        classWriter33.visitOuterClass("L2113189186", "hi!", "L1669980843");
        byte[] byteArray38 = classWriter33.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor43.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor43.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor43.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor43.visitFieldInsn(6, "L326432149", "L1434348811", "");
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter33.visitField((int) (byte) 0, "L601661571", "L454715523", "L601661571", (java.lang.Object) "L326432149");
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = classWriter33.visitAnnotation("L1691870655", true);
        int int70 = classWriter33.newUTF8("");
        classWriter33.visitInnerClass("L583709824", "L392705655", "L173547556", 100);
        byte[] byteArray76 = classWriter33.toByteArray();
        int int81 = classWriter33.newMethod("L265757830", "L895464062", "L814836869", true);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-889275714) + "'", int31 == (-889275714));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 14, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 11, 76, 50, 49, 49, 51, 49, 56, 57, 49, 56, 54, 7, 0, 9, 1, 0, 11, 76, 49, 54, 54, 57, 57, 56, 48, 56, 52, 51, 12, 0, 2, 0, 11, 1, 0, 15, 69, 110, 99, 108, 111, 115, 105, 110, 103, 77, 101, 116, 104, 111, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 13, 0, 0, 0, 4, 0, 10, 0, 12]");
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 31 + "'", int81 == 31);
    }

    @Test
    public void test16062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16062");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter8.write("L142696279");
        printWriter8.print(false);
        java.io.PrintWriter printWriter14 = printWriter8.append('a');
        printWriter14.println((int) (short) 25196);
        printWriter14.println('4');
        java.util.Locale locale19 = null;
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter28 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter28.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = classWriter28.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor40 = classWriter28.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray41 = classWriter28.toByteArray();
        org.mockito.asm.ByteVector byteVector44 = byteVector24.putByteArray(byteArray41, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader45 = new org.mockito.asm.ClassReader(byteArray41);
        long long47 = classReader45.readLong((int) (byte) 100);
        long long49 = classReader45.readLong((int) (byte) 10);
        java.lang.String[] strArray50 = classReader45.getInterfaces();
        int int52 = classReader45.readByte((int) '#');
        long long54 = classReader45.readLong(4);
        int int56 = classReader45.readInt((int) (short) 9);
        long long58 = classReader45.readLong((int) '4');
        java.lang.String[] strArray59 = classReader45.getInterfaces();
        org.mockito.asm.ClassWriter classWriter61 = new org.mockito.asm.ClassWriter(classReader45, (int) (short) 0);
        org.mockito.asm.ClassWriter classWriter63 = new org.mockito.asm.ClassWriter(classReader45, 1);
        java.io.PrintWriter printWriter69 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor70.visit(2, (int) (byte) 0, "", "", "", strArray79);
        classWriter63.visit(36, (-1), "L381544623", "", "L1170048200", strArray79);
        java.io.PrintWriter printWriter82 = printWriter14.format(locale19, "L317871603", (java.lang.Object[]) strArray79);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor40);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 8532477865490146625L + "'", long47 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 72057598333118569L + "'", long49 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 86 + "'", int52 == 86);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 590080L + "'", long54 == 590080L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 151060480 + "'", int56 == 151060480);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 72068947506459235L + "'", long58 == 72068947506459235L);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(printWriter82);
    }

    @Test
    public void test16063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16063");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor32.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor45.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor45.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor45.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor45.visitAnnotation("hi!", false);
        org.mockito.asm.Label label61 = new org.mockito.asm.Label();
        aSMifierMethodVisitor45.visitLineNumber(10, label61);
        aSMifierMethodVisitor32.visitLineNumber(1, label61);
        org.mockito.asm.Label label64 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "L1434348811", "L326432149", label61, label64, 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor69);
    }

    @Test
    public void test16064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16064");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter18 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter18.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter18.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter18.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label16.info = classWriter18;
        java.lang.Object obj32 = label16.info;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray55 = classWriter42.toByteArray();
        org.mockito.asm.ByteVector byteVector58 = byteVector38.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray55);
        long long61 = classReader59.readLong((int) (byte) 100);
        int int63 = classReader59.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray64 = classReader59.getInterfaces();
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter(classReader59, 2);
        int int68 = classWriter66.newUTF8("");
        label34.info = classWriter66;
        org.mockito.asm.ClassWriter classWriter71 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter71.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = classWriter71.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor83 = classWriter71.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter71.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor90 = classWriter71.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        fieldVisitor90.visitEnd();
        label34.info = fieldVisitor90;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label33, label34, "L55453359");
        aSMifierMethodVisitor0.visitIincInsn(321, 2305);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 8532477865490146625L + "'", long61 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 51966 + "'", int63 == 51966);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor83);
        org.junit.Assert.assertNotNull(fieldVisitor90);
    }

    @Test
    public void test16065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16065");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println();
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter3.flush();
        java.io.PrintWriter printWriter6 = printWriter3.append((java.lang.CharSequence) "L1297264300");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test16066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16066");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(100, 0);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, 28526);
        aSMifierMethodVisitor0.visitVarInsn(182, 1769171298);
    }

    @Test
    public void test16067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16067");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIntInsn(0, 57174305);
        aSMifierMethodVisitor0.visitMaxs(100, 136);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "L1165266040", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = annotationVisitor40.visitAnnotation("L1137045083", "L450808918");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test16068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16068");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label9);
        aSMifierMethodVisitor0.visitMaxs(3, 0);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) (short) 22113);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 22113);
        aSMifierMethodVisitor0.visitIincInsn(8, 25);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1703143512", (int) (byte) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor26.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor26.visitLineNumber((int) (byte) 10, label36);
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) (byte) 0, 51966, label40, labelArray50);
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor26.visitLabel(label53);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor58.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor58.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor71.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor71.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor71.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor71.visitAnnotation("hi!", false);
        org.mockito.asm.Label label87 = new org.mockito.asm.Label();
        aSMifierMethodVisitor71.visitLineNumber(10, label87);
        aSMifierMethodVisitor58.visitLineNumber(1, label87);
        org.mockito.asm.Label label90 = new org.mockito.asm.Label();
        aSMifierMethodVisitor26.visitLocalVariable("hi!", "L1434348811", "L326432149", label87, label90, 9);
        label90.info = 'a';
        aSMifierMethodVisitor0.visitLineNumber(65210, label90);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(1763771136, "L1931374313");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor85);
    }

    @Test
    public void test16069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16069");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter75.println(10);
        printWriter75.println(100);
        printWriter75.println(true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor82 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter75);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor83 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter75);
        java.io.PrintWriter printWriter85 = new java.io.PrintWriter((java.io.Writer) printWriter75, true);
        printWriter85.print((double) 7809650168297619712L);
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test16070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16070");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation(5, "L1434348811", true);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -326, (int) (short) -326);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L459227517", (int) (short) 256);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L614568462", (int) (short) -13570);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor0.visitAnnotation("L1250170942", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        int[] intArray56 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label54, intArray56, labelArray57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label47, intArray56, labelArray68);
        aSMifierMethodVisitor46.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list76 = aSMifierMethodVisitor46.text;
        aSMifierMethodVisitor46.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor46.visitCode();
        java.util.List list81 = aSMifierMethodVisitor46.text;
        aSMifierMethodVisitor46.visitMaxs((int) (byte) 1, 7);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor46.visitAnnotation("L1105153118", false);
        annotationVisitor87.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = annotationVisitor87.visitAnnotation("L1775421725", "L1691870655");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L1775421725");
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(annotationVisitor87);
        org.junit.Assert.assertNotNull(annotationVisitor91);
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test16071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16071");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        int int40 = classReader36.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray41 = classReader36.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor4.visitMethod(0, "hi!", "L994489370", "hi!", strArray41);
        aSMifierClassVisitor4.visitOuterClass("L1749641217", "L1216476214", "L666971223");
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitInnerClass("L2101667039", "L96121905", "", 20);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierClassVisitor4.visitAnnotation("L1009311081", false);
        aSMifierClassVisitor4.visitInnerClass("L2095066844", "L78149900", "L277120252", (int) (short) 13);
        aSMifierClassVisitor4.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 51966 + "'", int40 == 51966);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
    }

    @Test
    public void test16072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16072");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((long) 28526);
        printWriter31.print((double) 17);
        java.io.PrintWriter printWriter37 = printWriter31.append('4');
        printWriter37.print(' ');
        printWriter37.print(true);
        printWriter37.print((float) 1952542324);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter37);
    }

    @Test
    public void test16073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16073");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.flush();
        printWriter1.println('#');
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((-889275714));
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label16, intArray25, labelArray37);
        java.io.PrintWriter printWriter40 = printWriter10.format(locale13, "hi!", (java.lang.Object[]) labelArray37);
        printWriter40.print((int) '4');
        java.io.PrintWriter printWriter44 = printWriter40.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        printWriter46.print(0.0d);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        char[] charArray60 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter53.print(charArray60);
        printWriter46.write(charArray60);
        printWriter44.println(charArray60);
        printWriter1.print(charArray60);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor65.visitOuterClass("L614568462", "L316026808", "L1962374298");
        aSMifierClassVisitor65.visitOuterClass("L389484434", "L429585682", "L1461066057");
        java.util.List list74 = aSMifierClassVisitor65.text;
        aSMifierClassVisitor65.visitSource("L194658678", "L895891472");
        java.util.List list78 = aSMifierClassVisitor65.text;
        aSMifierClassVisitor65.visitSource("L519300220", "L1150302951");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(list78);
    }

    @Test
    public void test16074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16074");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putByte((int) (short) 256);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(24942);
        byte[] byteArray29 = null;
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByteArray(byteArray29, 57174305, (int) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putLong((long) (short) 29793);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt(1699311222);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
    }

    @Test
    public void test16075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16075");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L454715523");
        java.util.Locale locale2 = null;
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter5);
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierClassVisitor8.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter23.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = classWriter23.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter23.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray36 = classWriter23.toByteArray();
        org.mockito.asm.ByteVector byteVector39 = byteVector19.putByteArray(byteArray36, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray36);
        long long42 = classReader40.readLong((int) (byte) 100);
        int int44 = classReader40.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray45 = classReader40.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor46 = aSMifierClassVisitor8.visitMethod(0, "hi!", "L994489370", "hi!", strArray45);
        java.io.PrintWriter printWriter47 = printWriter1.format(locale2, "L1715840275", (java.lang.Object[]) strArray45);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter((java.io.Writer) printWriter47, true);
        printWriter49.println((int) (short) 256);
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter59 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter59.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = classWriter59.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor71 = classWriter59.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray72 = classWriter59.toByteArray();
        org.mockito.asm.ByteVector byteVector75 = byteVector55.putByteArray(byteArray72, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72);
        long long78 = classReader76.readLong((int) (byte) 100);
        long long80 = classReader76.readLong((int) (byte) 10);
        java.lang.String[] strArray81 = classReader76.getInterfaces();
        int int83 = classReader76.readByte((int) (short) 10);
        byte[] byteArray84 = classReader76.b;
        byte[] byteArray85 = classReader76.b;
        printWriter49.print((java.lang.Object) classReader76);
        // The following exception was thrown during execution in test generation
        try {
            printWriter49.write("L1570018250", 8451, 136);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 8587");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 8532477865490146625L + "'", long42 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 51966 + "'", int44 == 51966);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodVisitor46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(fieldVisitor71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 8532477865490146625L + "'", long78 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 72057598333118569L + "'", long80 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test16076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16076");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs(9, (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation(134, "L1619590163", true);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test16077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16077");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println("hi!");
        printWriter1.close();
        java.io.PrintWriter printWriter6 = printWriter1.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label9 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label16 = null;
        int[] intArray18 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray19 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor10.visitLookupSwitchInsn(label16, intArray18, labelArray19);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label27 = null;
        int[] intArray29 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray30 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor21.visitLookupSwitchInsn(label27, intArray29, labelArray30);
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label9, intArray18, labelArray30);
        aSMifierMethodVisitor8.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list38 = aSMifierMethodVisitor8.text;
        aSMifierMethodVisitor8.visitMaxs((-1), (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor8.visitParameterAnnotation((-889275714), "", false);
        aSMifierMethodVisitor8.visitIntInsn(2, 2817);
        aSMifierMethodVisitor8.visitFieldInsn(23, "L407895089", "L1853824624", "L823983574");
        printWriter6.print((java.lang.Object) 23);
        printWriter6.println(721152L);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[1]");
        org.junit.Assert.assertNotNull(labelArray19);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1]");
        org.junit.Assert.assertNotNull(labelArray30);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test16078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16078");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("", "", "L142696279");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((int) 'a');
        printWriter29.println("");
        printWriter29.print((float) 590080L);
        java.lang.Object[] objArray37 = null;
        java.io.PrintWriter printWriter38 = printWriter29.printf("hi!", objArray37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L994489370", "L142696279", "L326432149", (java.lang.Object) printWriter29);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter29, false);
        printWriter29.print(' ');
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(fieldVisitor39);
    }

    @Test
    public void test16079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16079");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.print(false);
        printWriter1.println(true);
        java.io.PrintWriter printWriter37 = printWriter1.append('#');
        printWriter37.print((long) 25929);
        printWriter37.write("L1853824624");
        org.mockito.asm.ByteVector byteVector43 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("L1715840275");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putLong((long) (short) -13570);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("L799304101");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putUTF8("L2101667039");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("L1444913603");
        printWriter37.print((java.lang.Object) byteVector61);
        java.io.PrintWriter printWriter64 = printWriter37.append(' ');
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test16080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16080");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(4, "L994489370", "", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor17.visitLineNumber((int) (byte) 10, label27);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor17.visitTableSwitchInsn((int) (byte) 0, 51966, label31, labelArray41);
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor17.visitLabel(label44);
        org.mockito.asm.Label label46 = new org.mockito.asm.Label();
        aSMifierMethodVisitor17.visitLabel(label46);
        aSMifierMethodVisitor0.visitJumpInsn(100, label46);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.print((int) 'a');
        printWriter50.println("");
        printWriter50.print((float) 590080L);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter50, true);
        label46.info = printWriter50;
        java.lang.String str60 = label46.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int61 = label46.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L1645920304" + "'", str60, "L1645920304");
    }

    @Test
    public void test16081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16081");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor16.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor16.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLabel(label36);
        aSMifierMethodVisitor16.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor40.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        aSMifierMethodVisitor40.visitLabel(label60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor62.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor62.visitIincInsn(1, 0);
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor62.visitLabel(label74);
        label60.info = aSMifierMethodVisitor62;
        aSMifierMethodVisitor16.visitLineNumber(24942, label60);
        aSMifierMethodVisitor0.visitJumpInsn(6, label60);
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitIincInsn(3, (int) (byte) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor0.visitAnnotation("L1340859678", true);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertNotNull(annotationVisitor87);
    }

    @Test
    public void test16082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16082");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor34.visitAnnotation("", true);
        aSMifierClassVisitor34.visitEnd();
        aSMifierClassVisitor34.visitInnerClass("L779142371", "L137136720", "L1837291041", (int) (byte) -1);
        aSMifierClassVisitor34.visitSource("L1528647597", "L1097906296");
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter58 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter58.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = classWriter58.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor70 = classWriter58.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray71 = classWriter58.toByteArray();
        org.mockito.asm.ByteVector byteVector74 = byteVector54.putByteArray(byteArray71, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader75 = new org.mockito.asm.ClassReader(byteArray71);
        long long77 = classReader75.readLong((int) (byte) 100);
        int int79 = classReader75.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray80 = classReader75.getInterfaces();
        org.mockito.asm.ClassWriter classWriter82 = new org.mockito.asm.ClassWriter(classReader75, 2);
        int int84 = classReader75.readUnsignedShort((int) ' ');
        java.lang.String[] strArray85 = classReader75.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor86 = aSMifierClassVisitor34.visitMethod((int) (short) -17730, "L1837291041", "L1281777590", "L2106184417", strArray85);
        methodVisitor86.visitFieldInsn(100, "L444329373", "", "L1749641217");
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = methodVisitor86.visitAnnotation("L1728108157", false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 8532477865490146625L + "'", long77 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 51966 + "'", int79 == 51966);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 24942 + "'", int84 == 24942);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(methodVisitor86);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test16083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16083");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '#');
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter61 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter61.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = classWriter61.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor73 = classWriter61.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray74 = classWriter61.toByteArray();
        org.mockito.asm.ByteVector byteVector77 = byteVector57.putByteArray(byteArray74, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader78 = new org.mockito.asm.ClassReader(byteArray74);
        long long80 = classReader78.readLong((int) (byte) 100);
        long long82 = classReader78.readLong((int) (byte) 10);
        java.lang.String[] strArray83 = classReader78.getInterfaces();
        int int85 = classReader78.readInt(0);
        int int86 = classReader78.header;
        java.lang.String[] strArray87 = classReader78.getInterfaces();
        int int89 = classReader78.readByte(4);
        byte[] byteArray90 = classReader78.b;
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray90);
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierMethodVisitor0.visitAnnotation("L344842840", true);
        aSMifierMethodVisitor0.visitFieldInsn(37, "L2038596437", "L929094301", "L328077442");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 8532477865490146625L + "'", long80 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 72057598333118569L + "'", long82 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-889275714) + "'", int85 == (-889275714));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 118 + "'", int86 == 118);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test16084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16084");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((-1), 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("L1441782014", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor29.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor29.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor29.visitIincInsn(1, 0);
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor29.visitLabel(label41);
        aSMifierMethodVisitor29.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor29.visitAnnotationDefault();
        aSMifierMethodVisitor29.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor29.visitAnnotation("L2099222213", false);
        org.mockito.asm.Label label52 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter60 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter60.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = classWriter60.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor72 = classWriter60.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray73 = classWriter60.toByteArray();
        org.mockito.asm.ByteVector byteVector76 = byteVector56.putByteArray(byteArray73, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader77 = new org.mockito.asm.ClassReader(byteArray73);
        long long79 = classReader77.readLong((int) (byte) 100);
        int int81 = classReader77.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray82 = classReader77.getInterfaces();
        org.mockito.asm.ClassWriter classWriter84 = new org.mockito.asm.ClassWriter(classReader77, 2);
        int int86 = classWriter84.newUTF8("");
        label52.info = classWriter84;
        aSMifierMethodVisitor29.visitJumpInsn(2, label52);
        aSMifierMethodVisitor0.visitLabel(label52);
        aSMifierMethodVisitor0.visitMaxs(7, 145);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(fieldVisitor72);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 8532477865490146625L + "'", long79 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 51966 + "'", int81 == 51966);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test16085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16085");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitInsn(10);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 0, "L1703143512", "hi!", "L799304101");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 256, 12);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor11.visitLabel(label17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor20.visitLineNumber((int) (byte) 10, label30);
        aSMifierMethodVisitor20.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor20.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label41 = new org.mockito.asm.Label();
        aSMifierMethodVisitor20.visitLineNumber(4, label41);
        aSMifierMethodVisitor11.visitLineNumber((int) (short) 10, label41);
        aSMifierMethodVisitor11.visitMaxs((int) (short) 100, 9);
        aSMifierMethodVisitor11.visitEnd();
        aSMifierMethodVisitor11.visitIincInsn(151060480, 48640);
        aSMifierMethodVisitor11.visitMaxs(15, 14);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor55.visitAnnotation("", false);
        aSMifierMethodVisitor55.visitMethodInsn(6, "L994489370", "L61669440", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor65.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor65.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor65.visitAnnotation("hi!", false);
        org.mockito.asm.Label label81 = new org.mockito.asm.Label();
        aSMifierMethodVisitor65.visitLineNumber(10, label81);
        java.lang.String str83 = label81.toString();
        aSMifierMethodVisitor55.visitLineNumber(16778088, label81);
        aSMifierMethodVisitor11.visitJumpInsn(25, label81);
        aSMifierMethodVisitor0.visitLabel(label81);
        aSMifierMethodVisitor0.visitFieldInsn(36, "L2007869149", "L1769388599", "L429585682");
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor79);
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L2066538719" + "'", str83, "L2066538719");
    }

    @Test
    public void test16086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16086");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println(false);
        java.io.PrintWriter printWriter23 = printWriter1.append(' ');
        printWriter23.write("L641049979");
        printWriter23.println((double) (byte) 100);
        boolean boolean28 = printWriter23.checkError();
        printWriter23.flush();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test16087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16087");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        int int44 = classWriter1.newMethod("hi!", "L326432149", "hi!", false);
        java.lang.String[] strArray50 = null;
        classWriter1.visit((int) (short) 1, 25, "", "L142696279", "hi!", strArray50);
        int int55 = classWriter1.newField("L555214098", "L237245406", "L614568462");
        classWriter1.visitEnd();
        int int58 = classWriter1.newClass("L860265463");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 13 + "'", int44 == 13);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 21 + "'", int55 == 21);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 23 + "'", int58 == 23);
    }

    @Test
    public void test16088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16088");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = annotationVisitor16.visitAnnotation("L1706222126", "L1508718123");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label29 = null;
        int[] intArray31 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor23.visitLookupSwitchInsn(label29, intArray31, labelArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor21.visitLookupSwitchInsn(label22, intArray31, labelArray43);
        java.lang.Object obj46 = null;
        aSMifierMethodVisitor21.visitLdcInsn(obj46);
        aSMifierMethodVisitor21.visitVarInsn(2, 256);
        aSMifierMethodVisitor21.visitMultiANewArrayInsn("L344842840", 28526);
        org.mockito.asm.ClassWriter classWriter55 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter55.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = classWriter55.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor67 = classWriter55.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter55.visitEnd();
        classWriter55.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter55.visitSource("hi!", "hi!");
        classWriter55.visitSource("", "");
        byte[] byteArray80 = classWriter55.toByteArray();
        aSMifierMethodVisitor21.visitLdcInsn((java.lang.Object) byteArray80);
        annotationVisitor19.visit("L98547873", (java.lang.Object) byteArray80);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor67);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 1, 0, 8, 0, 0, 0, 0, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test16089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16089");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L97937772");
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter("hi!");
        printWriter4.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor7.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label13 = null;
        int[] intArray15 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray16 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitLookupSwitchInsn(label13, intArray15, labelArray16);
        java.util.List list18 = aSMifierMethodVisitor7.getText();
        printWriter4.println((java.lang.Object) list18);
        printWriter4.print((double) 10L);
        printWriter4.print('4');
        printWriter4.print("");
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        long long53 = classReader51.readLong((int) (byte) 100);
        int int55 = classReader51.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray56 = classReader51.getInterfaces();
        java.io.PrintWriter printWriter57 = printWriter4.printf("", (java.lang.Object[]) strArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor59.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor59.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray74 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor76 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor76.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label82 = null;
        int[] intArray84 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray85 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor76.visitLookupSwitchInsn(label82, intArray84, labelArray85);
        aSMifierMethodVisitor59.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray74, (int) 'a', (java.lang.Object[]) labelArray85);
        java.io.PrintWriter printWriter88 = printWriter57.format("hi!", (java.lang.Object[]) attributeArray74);
        java.io.PrintWriter printWriter89 = printWriter1.printf("L1749641217", (java.lang.Object[]) attributeArray74);
        printWriter1.print((double) (short) 1);
        printWriter1.write("L459227517", 1634628694, 1986622313);
        printWriter1.write(320);
        printWriter1.print((double) 7958832928307566177L);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[1]");
        org.junit.Assert.assertNotNull(labelArray16);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 8532477865490146625L + "'", long53 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 51966 + "'", int55 == 51966);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(attributeArray74);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[1]");
        org.junit.Assert.assertNotNull(labelArray85);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test16090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16090");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label33);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("L326432149", false);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L2101667039");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(28270, (int) (short) 22113);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 28270");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test16091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16091");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) (short) 0);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        printWriter7.print((-889275714));
        java.util.Locale locale10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label20 = null;
        int[] intArray22 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray23 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor14.visitLookupSwitchInsn(label20, intArray22, labelArray23);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label31 = null;
        int[] intArray33 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray34 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label31, intArray33, labelArray34);
        aSMifierMethodVisitor12.visitLookupSwitchInsn(label13, intArray22, labelArray34);
        java.io.PrintWriter printWriter37 = printWriter7.format(locale10, "hi!", (java.lang.Object[]) labelArray34);
        printWriter7.println((int) (short) 1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter42 = printWriter7.format("hi!", (java.lang.Object[]) strArray41);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter45 = printWriter7.printf("", (java.lang.Object[]) strArray44);
        org.mockito.asm.MethodVisitor methodVisitor46 = classWriter1.visitMethod(8, "", "L1715840275", "L1715840275", strArray44);
        classWriter1.visitOuterClass("L1694926691", "L316026808", "L1544572272");
        int int54 = classWriter1.newField("L1620871785", "L1200350890", "L389484434");
        classWriter1.visitSource("L97937772", "L437863088");
        classWriter1.visitInnerClass("L1962766465", "L237245406", "L133250491", 257);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1]");
        org.junit.Assert.assertNotNull(labelArray23);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1]");
        org.junit.Assert.assertNotNull(labelArray34);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(methodVisitor46);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 326 + "'", int54 == 326);
    }

    @Test
    public void test16092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16092");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((int) 'a');
        printWriter33.println("");
        printWriter33.print((float) 590080L);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter33, true);
        printWriter41.println('a');
        java.io.PrintWriter printWriter45 = printWriter41.append((java.lang.CharSequence) "hi!");
        printWriter1.println((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter45);
    }

    @Test
    public void test16093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16093");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitSource("L666971223", "L326432149");
        aSMifierClassVisitor1.visitSource("L801849928", "L1000949368");
        aSMifierClassVisitor1.visitInnerClass("L1764179183", "L2113189186", "L237245406", 115);
        aSMifierClassVisitor1.visitSource("L1394728425", "L237245406");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierClassVisitor1.visitAnnotation("L188937864", false);
        aSMifierClassVisitor1.visitSource("L1029736927", "L172059849");
        aSMifierClassVisitor1.visitSource("L1319996471", "L661313578");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test16094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16094");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        aSMifierMethodVisitor0.visitTypeInsn(14, "L326432149");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotation("L575352164", true);
        aSMifierMethodVisitor0.visitTypeInsn(142, "L246301320");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test16095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16095");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print((float) (-3819410108757049344L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print('4');
        printWriter1.println(' ');
        printWriter1.print(false);
        printWriter1.print('#');
    }

    @Test
    public void test16096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16096");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(1986622313, (int) (short) 1);
        java.util.List list21 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, 86);
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        org.mockito.asm.ByteVector byteVector48 = byteVector28.putByteArray(byteArray45, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader49 = new org.mockito.asm.ClassReader(byteArray45);
        long long51 = classReader49.readLong((int) (byte) 100);
        int int53 = classReader49.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray54 = classReader49.getInterfaces();
        org.mockito.asm.ClassWriter classWriter56 = new org.mockito.asm.ClassWriter(classReader49, 2);
        int int61 = classWriter56.newMethod("L1669980843", "L666971223", "", false);
        classWriter56.visitInnerClass("L96121905", "L1441782014", "", (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = classWriter56.visitAnnotation("L1853824624", true);
        int int71 = classWriter56.newClass("L1284973471");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classWriter56);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1978431276", (int) (short) 872);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) 25929, "L914596724", "L459227517", "L955027613");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 8532477865490146625L + "'", long51 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 51966 + "'", int53 == 51966);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 13 + "'", int61 == 13);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 20 + "'", int71 == 20);
    }

    @Test
    public void test16097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16097");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitFieldInsn(0, "L459227517", "L1592299270", "L1592299270");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "L61669440", "L2072201856", "L575352164");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIntInsn(123, 2817);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
    }

    @Test
    public void test16098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16098");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor13.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor13.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor28.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor28.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray43 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor45.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label51 = null;
        int[] intArray53 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label51, intArray53, labelArray54);
        aSMifierMethodVisitor28.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray43, (int) 'a', (java.lang.Object[]) labelArray54);
        aSMifierMethodVisitor13.visitTableSwitchInsn(8, (int) (byte) 1, label27, labelArray54);
        aSMifierMethodVisitor13.visitMaxs(3, 51966);
        aSMifierMethodVisitor13.visitIincInsn((-889275714), 9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor65.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor65.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor65.visitAnnotation("hi!", false);
        org.mockito.asm.Label label81 = new org.mockito.asm.Label();
        aSMifierMethodVisitor65.visitLineNumber(10, label81);
        aSMifierMethodVisitor13.visitLineNumber(4, label81);
        aSMifierMethodVisitor0.visitLabel(label81);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Attribute attribute87 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(attributeArray43);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1]");
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test16099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16099");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.util.Locale locale8 = null;
        org.mockito.asm.ClassWriter classWriter11 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter11.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter39.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter39.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter64 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor65.visit(2, (int) (byte) 0, "", "", "", strArray74);
        classWriter39.visit((int) 'a', (int) '#', "", "", "hi!", strArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label84 = null;
        int[] intArray86 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor78.visitLookupSwitchInsn(label84, intArray86, labelArray87);
        aSMifierMethodVisitor23.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray74, (int) (short) 100, (java.lang.Object[]) labelArray87);
        classWriter11.visit(7, (-889275714), "", "hi!", "hi!", strArray74);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale8, "hi!", (java.lang.Object[]) strArray74);
        printWriter91.print('a');
        printWriter91.print(0.0f);
        printWriter91.close();
        printWriter91.print((long) 1769171298);
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test16100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16100");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter36 = printWriter1.append('#');
        boolean boolean37 = printWriter1.checkError();
        printWriter1.println();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test16101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16101");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        aSMifierClassVisitor1.visitInnerClass("L61669440", "hi!", "L2113189186", 10);
        aSMifierClassVisitor1.visitSource("L1669980843", "L666971223");
        java.util.List list32 = aSMifierClassVisitor1.text;
        aSMifierClassVisitor1.visitSource("L834812042", "");
        aSMifierClassVisitor1.visitSource("L1363288052", "L121647365");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor1.visitAnnotation("L394842588", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierClassVisitor1.visitAnnotation("L1963899562", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor44);
    }

    @Test
    public void test16102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16102");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = annotationVisitor14.visitAnnotation("L2112385861", "L139692246");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label27 = null;
        int[] intArray29 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray30 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor21.visitLookupSwitchInsn(label27, intArray29, labelArray30);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label20, intArray29, labelArray41);
        aSMifierMethodVisitor19.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list49 = aSMifierMethodVisitor19.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor19.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor19.visitParameterAnnotation(30313, "L575352164", false);
        annotationVisitor17.visit("L1694926691", (java.lang.Object) aSMifierMethodVisitor19);
        aSMifierMethodVisitor19.visitMaxs(104, 254);
        aSMifierMethodVisitor19.visitInsn(11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor61.visitLineNumber((int) (byte) 10, label71);
        aSMifierMethodVisitor61.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor61.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label82 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(4, label82);
        aSMifierMethodVisitor19.visitLabel(label82);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1]");
        org.junit.Assert.assertNotNull(labelArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test16103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16103");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.io.PrintWriter printWriter21 = printWriter1.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        printWriter1.print((java.lang.Object) (byte) 1);
        printWriter1.print(true);
        printWriter1.print((java.lang.Object) 1);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
    }

    @Test
    public void test16104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16104");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitSource("", "hi!");
        int int16 = classWriter1.newConst((java.lang.Object) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        classWriter1.visit((int) ' ', 9, "", "", "", strArray73);
        int int91 = classWriter1.newUTF8("");
        classWriter1.visitSource("", "L326432149");
        classWriter1.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test16105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16105");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(2, (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "L1694926691");
        aSMifierMethodVisitor0.visitVarInsn(115, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1985557894", 48640);
        aSMifierMethodVisitor0.visitMaxs(210, 65792);
        java.lang.Object obj30 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj30);
    }

    @Test
    public void test16106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16106");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray33 = null;
        org.mockito.asm.MethodVisitor methodVisitor34 = aSMifierClassVisitor28.visitMethod((-1), "", "hi!", "", strArray33);
        org.mockito.asm.FieldVisitor fieldVisitor35 = aSMifierClassVisitor1.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor44 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        java.io.PrintWriter printWriter46 = printWriter41.append('#');
        printWriter46.println((double) 51966);
        char[] charArray55 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter46.write(charArray55);
        java.util.Locale locale57 = null;
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter66.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = classWriter66.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor78 = classWriter66.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray79 = classWriter66.toByteArray();
        org.mockito.asm.ByteVector byteVector82 = byteVector62.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader83 = new org.mockito.asm.ClassReader(byteArray79);
        long long85 = classReader83.readLong((int) (byte) 100);
        int int87 = classReader83.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray88 = classReader83.getInterfaces();
        java.io.PrintWriter printWriter89 = printWriter46.format(locale57, "L1434348811", (java.lang.Object[]) strArray88);
        org.mockito.asm.MethodVisitor methodVisitor90 = aSMifierClassVisitor1.visitMethod(590080, "L142696279", "L1441782014", "L96121905", strArray88);
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = aSMifierClassVisitor1.visitAnnotation("L1009311081", false);
        annotationVisitor93.visitEnd();
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 8532477865490146625L + "'", long85 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 51966 + "'", int87 == 51966);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(methodVisitor90);
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test16107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16107");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitMethodInsn(19, "L799304101", "L96121905", "L834812042");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        aSMifierMethodVisitor21.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor37.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor37.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor37.visitLocalVariable("hi!", "hi!", "hi!", label52, label53, 1);
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        aSMifierMethodVisitor37.visitLineNumber(8, label57);
        aSMifierMethodVisitor21.visitLineNumber(118, label57);
        aSMifierMethodVisitor0.visitLineNumber(0, label57);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test16108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16108");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 2534374302089219L);
        aSMifierMethodVisitor0.visitMethodInsn(2, "L1297264300", "L1808073265", "L237245406");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(1970431233);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1970431233");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16109");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 151060480);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L723576843", 0);
        aSMifierMethodVisitor0.visitIntInsn(101, (int) (short) -13570);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn(4, "L841406722");
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((int) 'a');
        printWriter25.println("");
        java.io.PrintWriter printWriter30 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter30);
        aSMifierClassVisitor31.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierClassVisitor31.visitAnnotation("", false);
        printWriter25.print((java.lang.Object) false);
        printWriter25.println(316);
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter51 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter51.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = classWriter51.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor63 = classWriter51.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray64 = classWriter51.toByteArray();
        org.mockito.asm.ByteVector byteVector67 = byteVector47.putByteArray(byteArray64, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader68 = new org.mockito.asm.ClassReader(byteArray64);
        long long70 = classReader68.readLong((int) (byte) 100);
        long long72 = classReader68.readLong((int) (byte) 10);
        java.lang.String[] strArray73 = classReader68.getInterfaces();
        int int75 = classReader68.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter77 = new org.mockito.asm.ClassWriter(classReader68, 0);
        int int79 = classReader68.readByte((int) (short) 0);
        java.lang.String[] strArray80 = classReader68.getInterfaces();
        java.io.PrintWriter printWriter81 = printWriter25.format("L1368033619", (java.lang.Object[]) strArray80);
        java.io.PrintWriter printWriter83 = printWriter81.append('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor84 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter81);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter81);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 8532477865490146625L + "'", long70 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 72057598333118569L + "'", long72 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 202 + "'", int79 == 202);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test16110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16110");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor19.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list31 = aSMifierMethodVisitor19.text;
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter35.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter35.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter60 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor61.visit(2, (int) (byte) 0, "", "", "", strArray70);
        classWriter35.visit((int) 'a', (int) '#', "", "", "hi!", strArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor74.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label80 = null;
        int[] intArray82 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor74.visitLookupSwitchInsn(label80, intArray82, labelArray83);
        aSMifierMethodVisitor19.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray70, (int) (short) 100, (java.lang.Object[]) labelArray83);
        classWriter1.visit((int) 'a', (int) (short) 30313, "hi!", "hi!", "", strArray70);
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = classWriter1.visitAnnotation("L756219730", false);
        byte[] byteArray90 = classWriter1.toByteArray();
        int int92 = classWriter1.newClass("L1609763582");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1]");
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertNotNull(annotationVisitor89);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 12, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 7, 0, 1, 1, 0, 10, 76, 55, 53, 54, 50, 49, 57, 55, 51, 48, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 118, 105, 0, 4, 0, 5, 0, 3, 0, 4, 0, 5, 0, 5, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 2, 0, 9, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 0, 0, 11, 0, 0, 0, 10, 0, 2, 0, 2, 0, 0, 0, 6, 0, 0]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 13 + "'", int92 == 13);
    }

    @Test
    public void test16111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16111");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierClassVisitor1.visitAnnotation("L1669980843", false);
        aSMifierClassVisitor1.visitSource("L1628873907", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierClassVisitor1.visitAnnotation("L911973346", false);
        org.mockito.asm.FieldVisitor fieldVisitor37 = aSMifierClassVisitor1.visitField(66, "L267810866", "L514140742", "L371187565", (java.lang.Object) 24940);
        aSMifierClassVisitor1.visitInnerClass("L1754345445", "L939264968", "L1189356974", 27765);
        org.mockito.asm.Attribute attribute43 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitAttribute(attribute43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(fieldVisitor37);
    }

    @Test
    public void test16112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16112");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        java.lang.Object obj42 = new java.lang.Object();
        aSMifierMethodVisitor0.visitLdcInsn(obj42);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotation("", false);
        java.lang.Object obj48 = null;
        annotationVisitor46.visit("", obj48);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test16113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16113");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitVarInsn(136, 50331648);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor19.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor19.visitInsn(8);
        aSMifierMethodVisitor19.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = new org.mockito.asm.Label();
        aSMifierMethodVisitor32.visitLabel(label52);
        aSMifierMethodVisitor19.visitLineNumber(57174305, label52);
        java.lang.String str55 = label52.toString();
        aSMifierMethodVisitor0.visitLineNumber((-1107296256), label52);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L359461801" + "'", str55, "L359461801");
    }

    @Test
    public void test16114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16114");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray49 = classReader48.b;
        byte[] byteArray50 = classReader48.b;
        int int51 = classReader48.header;
        byte[] byteArray52 = classReader48.b;
        int int53 = classReader48.getAccess();
        int int54 = classReader48.header;
        long long56 = classReader48.readLong((int) (short) 256);
        byte[] byteArray57 = classReader48.b;
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 203 + "'", int51 == 203);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 203 + "'", int54 == 203);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 6597069767168L + "'", long56 == 6597069767168L);
        org.junit.Assert.assertNotNull(byteArray57);
    }

    @Test
    public void test16115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16115");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter1 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor2.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor2.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) (short) -17730, 28526);
        aSMifierMethodVisitor0.visitFieldInsn(4, "L128274680", "L663459894", "L46183018");
    }

    @Test
    public void test16116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16116");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitIincInsn((int) (short) 872, 0);
        aSMifierMethodVisitor26.visitInsn(0);
        aSMifierMethodVisitor26.visitMethodInsn(12, "L1829941255", "L911973346", "L298663367");
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor26.visitAnnotation("L61669440", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor26.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor26.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test16117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16117");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.println(false);
        printWriter1.print(true);
        printWriter1.println("L384579388");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor25.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor25.visitInsn(8);
        aSMifierMethodVisitor25.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor38.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor38.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label58 = new org.mockito.asm.Label();
        aSMifierMethodVisitor38.visitLabel(label58);
        aSMifierMethodVisitor25.visitLineNumber(57174305, label58);
        aSMifierMethodVisitor25.visitTypeInsn(7, "");
        printWriter1.println((java.lang.Object) "");
        printWriter1.print((double) 117);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test16118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16118");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor22.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray37 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor22.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray37, (int) 'a', (java.lang.Object[]) labelArray48);
        aSMifierMethodVisitor22.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor54.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor54.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor54.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label74 = new org.mockito.asm.Label();
        aSMifierMethodVisitor54.visitLabel(label74);
        aSMifierMethodVisitor22.visitLineNumber((int) '#', label74);
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label74);
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor0.visitAnnotation("L61669440", false);
        aSMifierMethodVisitor0.visitMaxs(28, 2);
        aSMifierMethodVisitor0.visitMaxs(0, (int) (short) 26995);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(1869509376, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(attributeArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor80);
    }

    @Test
    public void test16119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16119");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        classWriter1.visitInnerClass("hi!", "", "", 3);
        classWriter1.visitSource("L994489370", "L1669980843");
        org.mockito.asm.FieldVisitor fieldVisitor18 = classWriter1.visitField(28526, "L298663367", "L326432149", "L1715840275", (java.lang.Object) "L994489370");
        int int20 = classWriter1.newUTF8("L174478886");
        int int24 = classWriter1.newField("", "L1216476214", "L1764179183");
        java.io.PrintWriter printWriter29 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor30.visit(2, (int) (byte) 0, "", "", "", strArray39);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierClassVisitor30.visitAnnotation("", false);
        aSMifierClassVisitor30.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor53.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor53.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor53.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list69 = aSMifierMethodVisitor53.text;
        org.mockito.asm.FieldVisitor fieldVisitor70 = aSMifierClassVisitor30.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor53);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor53.visitAnnotationDefault();
        aSMifierMethodVisitor53.visitInsn((int) (short) 1);
        java.util.List list74 = aSMifierMethodVisitor53.getText();
        aSMifierMethodVisitor53.visitTypeInsn((int) '#', "L1216476214");
        aSMifierMethodVisitor53.visitEnd();
        aSMifierMethodVisitor53.visitVarInsn(118, 16779859);
        org.mockito.asm.Label label82 = null;
        aSMifierMethodVisitor53.visitLabel(label82);
        aSMifierMethodVisitor53.visitMaxs(4, 1699311222);
        aSMifierMethodVisitor53.visitIntInsn(7, 37);
        org.mockito.asm.FieldVisitor fieldVisitor90 = classWriter1.visitField(0, "", "L767394981", "L78149900", (java.lang.Object) 7);
        org.junit.Assert.assertNotNull(fieldVisitor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 14 + "'", int24 == 14);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(fieldVisitor70);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(fieldVisitor90);
    }

    @Test
    public void test16120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16120");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray30 = classWriter17.toByteArray();
        org.mockito.asm.ByteVector byteVector33 = byteVector13.putByteArray(byteArray30, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray30);
        long long36 = classReader34.readLong((int) (byte) 100);
        long long38 = classReader34.readLong((int) (byte) 10);
        java.lang.String[] strArray39 = classReader34.getInterfaces();
        aSMifierClassVisitor4.visit((int) (byte) 1, (-1), "", "hi!", "", strArray39);
        aSMifierClassVisitor4.visitOuterClass("L1434348811", "L326432149", "L994489370");
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor4.visitAnnotation("L1418438756", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor54.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor54.visitAnnotationDefault();
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor54.visitLabel(label68);
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor54.visitAnnotationDefault();
        aSMifierMethodVisitor54.visitIntInsn((int) (short) 9, 118);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor54.visitAnnotation("L1556230913", true);
        aSMifierMethodVisitor54.visitIincInsn((int) (short) 24942, 2817);
        aSMifierMethodVisitor54.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor54.visitAnnotationDefault();
        org.mockito.asm.FieldVisitor fieldVisitor82 = aSMifierClassVisitor4.visitField((int) (short) 29782, "L1788074348", "L967033583", "L1775421725", (java.lang.Object) annotationVisitor81);
        org.mockito.asm.Attribute attribute83 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor82.visitAttribute(attribute83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 8532477865490146625L + "'", long36 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 72057598333118569L + "'", long38 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertNotNull(fieldVisitor82);
    }

    @Test
    public void test16121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16121");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        fieldVisitor24.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = fieldVisitor24.visitAnnotation("L1035698796", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = fieldVisitor24.visitAnnotation("L562171266", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = fieldVisitor24.visitAnnotation("L972180261", false);
        java.io.PrintWriter printWriter36 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor37 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter36);
        aSMifierClassVisitor37.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor37.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter52.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter52.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor60 = aSMifierClassVisitor37.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter52);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = classWriter52.visitAnnotation("L2113189186", true);
        int int68 = classWriter52.newMethod("L326432149", "L967033583", "L61669440", false);
        int int73 = classWriter52.newMethod("L96121905", "L555214098", "L1669980843", true);
        classWriter52.visitEnd();
        annotationVisitor34.visit("L1316565713", (java.lang.Object) classWriter52);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 9 + "'", int68 == 9);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 15 + "'", int73 == 15);
    }

    @Test
    public void test16122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16122");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitSource("L1284973471", "L1297264300");
        int int76 = classWriter1.newClass("L704540978");
        int int80 = classWriter1.newField("L2093444817", "L1528647597", "L1159220244");
        classWriter1.visitOuterClass("L78149900", "L603155286", "L555326328");
        byte[] byteArray85 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader86 = new org.mockito.asm.ClassReader(byteArray85);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ClassReader classReader89 = new org.mockito.asm.ClassReader(byteArray85, 1937006958, (int) (short) 25924);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 11 + "'", int76 == 11);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 17 + "'", int80 == 17);
        org.junit.Assert.assertNotNull(byteArray85);
    }

    @Test
    public void test16123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16123");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitInsn(10);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 0, "L1703143512", "hi!", "L799304101");
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 0, "L139692246", "L1669980843", "L1749641217");
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLineNumber((-21316096), label14);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation(26, "L1044771521", true);
        aSMifierMethodVisitor0.visitMaxs(16778088, 115);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test16124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16124");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        boolean boolean23 = printWriter19.checkError();
        printWriter19.write("L666971223");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        printWriter19.close();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test16125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16125");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1363288052", "L1461066057", "L136332369");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 24942, "L1486003347", false);
        java.util.List list27 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L991881784", (int) (short) 256);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(list27);
    }

    @Test
    public void test16126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16126");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor27.visitEnum("L761335155", "", "L1450497477");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test16127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16127");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), 17);
        java.util.List list22 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 4, (int) (short) 22113);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        aSMifierMethodVisitor26.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list56 = aSMifierMethodVisitor26.text;
        aSMifierMethodVisitor26.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor26.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor26.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor26.visitTypeInsn(118, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor26.visitVarInsn((int) '#', (int) (short) -326);
        aSMifierMethodVisitor26.visitMultiANewArrayInsn("", 51966);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 51966);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L152506051", 186);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test16128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16128");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.Attribute[] attributeArray31 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor33.visitLineNumber((int) (byte) 10, label43);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        int[] intArray56 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label54, intArray56, labelArray57);
        aSMifierMethodVisitor33.visitTableSwitchInsn((int) (byte) 0, 51966, label47, labelArray57);
        aSMifierMethodVisitor0.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray31, (int) '4', (java.lang.Object[]) labelArray57);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor64.visitEnum("L2031442260", "L1632084907", "L1985557894");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(attributeArray31);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test16129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16129");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L365115101");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("hi!");
        printWriter3.print((int) 'a');
        printWriter3.println("");
        java.io.PrintWriter printWriter8 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        aSMifierClassVisitor9.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierClassVisitor9.visitAnnotation("", false);
        printWriter3.print((java.lang.Object) false);
        printWriter3.print((double) 10.0f);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter((java.io.Writer) printWriter3);
        printWriter21.print((long) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        boolean boolean25 = printWriter21.checkError();
        java.io.PrintWriter printWriter27 = printWriter21.append((java.lang.CharSequence) "L2113189186");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        java.io.PrintWriter printWriter34 = printWriter29.append('#');
        printWriter34.println((double) 51966);
        char[] charArray43 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter34.write(charArray43);
        printWriter27.print(charArray43);
        printWriter1.print(charArray43);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , a,  , #, #, a]");
    }

    @Test
    public void test16130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16130");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor10.visitAnnotation("L326432149", false);
        aSMifierClassVisitor10.visitSource("L406965428", "L1482294079");
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierClassVisitor10.visitAnnotation("L137501116", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor10.visitAnnotation("L1968448721", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierClassVisitor10.visitAnnotation("L406965428", false);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test16131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16131");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitSource("", "hi!");
        int int16 = classWriter1.newConst((java.lang.Object) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        classWriter1.visit((int) ' ', 9, "", "", "", strArray73);
        byte[] byteArray90 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader91 = new org.mockito.asm.ClassReader(byteArray90);
        org.mockito.asm.ClassReader classReader92 = new org.mockito.asm.ClassReader(byteArray90);
        int int94 = classReader92.readUnsignedShort((int) ' ');
        int int95 = classReader92.header;
        java.lang.String str96 = classReader92.getSuperName();
        java.lang.String str97 = classReader92.getClassName();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[-54, -2, -70, -66, 0, 0, 0, 32, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 8, 0, 1, 7, 0, 1, 7, 0, 2, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 25, 82, 117, 110, 116, 105, 109, 101, 86, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 9, 0, 4, 0, 4, 0, 3, 0, 5, 0, 4, 0, 4, 0, 0, 0, 0, 0, 5, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 2, 0, 1, 0, 8, 0, 0, 0, 0, 0, 9, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 26983 + "'", int94 == 26983);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 134 + "'", int95 == 134);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
    }

    @Test
    public void test16132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16132");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitSource("L799304101", "L326432149");
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitSource("L614568462", "L337574950");
        aSMifierClassVisitor10.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor10.visitAnnotation("L389484434", true);
        aSMifierClassVisitor10.visitOuterClass("L1866436761", "L1808073265", "L704540978");
        java.util.List list27 = aSMifierClassVisitor10.getText();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(list27);
    }

    @Test
    public void test16133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16133");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "L61669440", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("");
        org.mockito.asm.ByteVector byteVector33 = byteVector29.putByte((-1));
        org.mockito.asm.ByteVector byteVector35 = byteVector29.putLong((long) 6);
        org.mockito.asm.ByteVector byteVector37 = byteVector29.putShort(0);
        org.mockito.asm.ByteVector byteVector39 = byteVector29.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putInt(2305);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("L1482294079");
        org.mockito.asm.ByteVector byteVector45 = byteVector41.putByte((int) ' ');
        annotationVisitor20.visit("L1977427665", (java.lang.Object) byteVector41);
        org.mockito.asm.ByteVector byteVector48 = byteVector41.putLong(7958820893801644044L);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putInt((int) (short) 25196);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
    }

    @Test
    public void test16134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16134");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitSource("L799304101", "L326432149");
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitSource("L614568462", "L337574950");
        aSMifierClassVisitor10.visitInnerClass("L139692246", "L978789454", "L598840791", 3);
        aSMifierClassVisitor10.visitEnd();
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label29.info = classWriter31;
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = classWriter31.visitAnnotation("", true);
        java.lang.Object obj52 = null;
        org.mockito.asm.FieldVisitor fieldVisitor53 = classWriter31.visitField(3, "L406814154", "L1556230913", "L61669440", obj52);
        org.mockito.asm.FieldVisitor fieldVisitor54 = aSMifierClassVisitor10.visitField(111, "L1123989782", "L723576843", "L939261813", (java.lang.Object) fieldVisitor53);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = fieldVisitor53.visitAnnotation("L967033583", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = fieldVisitor53.visitAnnotation("L2095066844", false);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor53);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test16135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16135");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        boolean boolean18 = printWriter1.checkError();
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        classWriter20.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter20.visitSource("hi!", "hi!");
        byte[] byteArray42 = classWriter20.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor47.visitLabel(label53);
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor47.visitLineNumber((int) '4', label56);
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter20.visitField((-1), "hi!", "", "", (java.lang.Object) label56);
        int int63 = classWriter20.newMethod("hi!", "L326432149", "hi!", false);
        classWriter20.visitEnd();
        printWriter1.println((java.lang.Object) classWriter20);
        byte[] byteArray66 = classWriter20.toByteArray();
        classWriter20.visitOuterClass("L359461801", "L196981898", "L1492849950");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 13 + "'", int63 == 13);
        org.junit.Assert.assertNotNull(byteArray66);
    }

    @Test
    public void test16136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16136");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor0.visitAnnotation("L454715523", true);
        aSMifierMethodVisitor0.visitMethodInsn(11, "L326432149", "L142696279", "L96121905");
        aSMifierMethodVisitor0.visitMaxs(1536, 25929);
        aSMifierMethodVisitor0.visitMethodInsn(0, "L1302512668", "L1736155405", "L200276635");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test16137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16137");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L237245406", 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(9, "L836986691", false);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 4, "L752233668", "", "L1749641217");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor32.visitAnnotation("", false);
        aSMifierMethodVisitor32.visitMethodInsn(6, "L994489370", "L61669440", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor42.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor42.visitAnnotation("hi!", false);
        org.mockito.asm.Label label58 = new org.mockito.asm.Label();
        aSMifierMethodVisitor42.visitLineNumber(10, label58);
        java.lang.String str60 = label58.toString();
        aSMifierMethodVisitor32.visitLineNumber(16778088, label58);
        aSMifierMethodVisitor0.visitLabel(label58);
        java.lang.Object obj63 = label58.info;
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((int) 'a');
        printWriter65.println("");
        printWriter65.print((float) 590080L);
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter65, true);
        printWriter65.print((float) (short) 30313);
        printWriter65.println((long) (short) 1);
        printWriter65.print('a');
        printWriter65.write("L1847055122");
        printWriter65.flush();
        label58.info = printWriter65;
        java.lang.Object obj84 = label58.info;
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor56);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L478057394" + "'", str60, "L478057394");
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test16138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16138");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter32.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = fieldVisitor38.visitAnnotation("hi!", true);
        fieldVisitor38.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = fieldVisitor38.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitParameterAnnotation(30313, "L61669440", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitCode();
        aSMifierMethodVisitor51.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor51.visitEnd();
        aSMifierMethodVisitor51.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label61 = new org.mockito.asm.Label();
        aSMifierMethodVisitor51.visitJumpInsn(25, label61);
        java.lang.Object obj63 = label61.info;
        java.lang.String str64 = label61.toString();
        java.lang.String str65 = label61.toString();
        aSMifierMethodVisitor0.visitLabel(label61);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L399637105", "L337574950", "L836986691");
        aSMifierMethodVisitor0.visitTypeInsn(22, "L1536756937");
        aSMifierMethodVisitor0.visitIincInsn(0, 1869509376);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1190818895", 329);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNull(obj63);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L108160733" + "'", str64, "L108160733");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L108160733" + "'", str65, "L108160733");
    }

    @Test
    public void test16139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16139");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray33 = null;
        org.mockito.asm.MethodVisitor methodVisitor34 = aSMifierClassVisitor28.visitMethod((-1), "", "hi!", "", strArray33);
        org.mockito.asm.FieldVisitor fieldVisitor35 = aSMifierClassVisitor1.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        aSMifierClassVisitor1.visitInnerClass("L799304101", "L1853824624", "L801849928", 1);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor35);
    }

    @Test
    public void test16140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16140");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        aSMifierMethodVisitor0.visitInsn(0);
        java.util.List list31 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitLineNumber((int) (byte) 10, label42);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor32.visitAnnotation("hi!", true);
        aSMifierMethodVisitor32.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor51.visitLineNumber((int) (byte) 10, label61);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label72 = null;
        int[] intArray74 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor66.visitLookupSwitchInsn(label72, intArray74, labelArray75);
        aSMifierMethodVisitor51.visitTableSwitchInsn((int) (byte) 0, 51966, label65, labelArray75);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor51.visitLabel(label78);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor51.visitLabel(label80);
        aSMifierMethodVisitor32.visitJumpInsn((int) (short) 10, label80);
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitVarInsn(10, (int) (short) 10);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (short) 9);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Attribute attribute91 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1]");
        org.junit.Assert.assertNotNull(labelArray75);
    }

    @Test
    public void test16141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16141");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((int) '4');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter21.visitEnd();
        classWriter21.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter21.visitSource("hi!", "hi!");
        byte[] byteArray43 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector46 = byteVector15.putByteArray(byteArray43, (int) (short) 10, (int) '4');
        annotationVisitor10.visit("L598840791", (java.lang.Object) byteArray43);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray43);
        byte[] byteArray49 = classReader48.b;
        int int50 = classReader48.getAccess();
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter(classReader48, 18);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter52.visitAnnotation("L607677620", false);
        int int57 = classWriter52.newClass("L2102371386");
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 13 + "'", int57 == 13);
    }

    @Test
    public void test16142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16142");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        classWriter1.visitSource("L575352164", "L1544572272");
        classWriter1.visitOuterClass("L2072201856", "L237245406", "hi!");
        int int56 = classWriter1.newClass("L1000949368");
        classWriter1.visitInnerClass("L1271688136", "L799304101", "L2072201856", (int) (short) 256);
        byte[] byteArray62 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader63 = new org.mockito.asm.ClassReader(byteArray62);
        org.mockito.asm.ClassReader classReader64 = new org.mockito.asm.ClassReader(byteArray62);
        org.mockito.asm.ClassReader classReader65 = new org.mockito.asm.ClassReader(byteArray62);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = classReader65.readByte(3395);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3395");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 21 + "'", int56 == 21);
        org.junit.Assert.assertNotNull(byteArray62);
    }

    @Test
    public void test16143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16143");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        int int40 = classReader36.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray41 = classReader36.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor4.visitMethod(0, "hi!", "L994489370", "hi!", strArray41);
        aSMifierClassVisitor4.visitSource("L2113189186", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor4.visitAnnotation("L1788074348", true);
        java.util.List list49 = aSMifierClassVisitor4.getText();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 51966 + "'", int40 == 51966);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(list49);
    }

    @Test
    public void test16144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16144");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 9);
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        java.lang.Object obj36 = label35.info;
        aSMifierMethodVisitor0.visitLineNumber(20, label35);
        aSMifierMethodVisitor0.visitIincInsn(15, 3);
        aSMifierMethodVisitor0.visitMethodInsn(24, "", "L326432149", "L1005725320");
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("L1669980843");
        printWriter47.print((long) 16779859);
        printWriter47.flush();
        aSMifierMethodVisitor0.print(printWriter47);
        aSMifierMethodVisitor0.visitVarInsn(4, 16779859);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test16145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16145");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.println("hi!");
        printWriter5.close();
        printWriter5.println((int) (byte) 0);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter5);
        printWriter5.print(17);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print((-889275714));
        java.util.Locale locale18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label28 = null;
        int[] intArray30 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray31 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label28, intArray30, labelArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label21, intArray30, labelArray42);
        java.io.PrintWriter printWriter45 = printWriter15.format(locale18, "hi!", (java.lang.Object[]) labelArray42);
        printWriter15.println(7);
        printWriter15.write("L834812042");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((-889275714));
        printWriter52.println((int) (short) 256);
        printWriter52.print((long) 1);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        printWriter60.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.io.PrintWriter printWriter65 = printWriter60.append('#');
        printWriter65.println((double) 51966);
        char[] charArray74 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter65.write(charArray74);
        printWriter52.print(charArray74);
        printWriter15.print(charArray74);
        printWriter5.println(charArray74);
        printWriter1.print(charArray74);
        printWriter1.print("L757823548");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1]");
        org.junit.Assert.assertNotNull(labelArray31);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[ , a,  , #, #, a]");
    }

    @Test
    public void test16146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16146");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1085773562");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.print((double) 11);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        char[] charArray14 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter7.print(charArray14);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter7);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierClassVisitor16.visitAnnotation("L1555790481", false);
        org.mockito.asm.ClassWriter classWriter25 = new org.mockito.asm.ClassWriter((-889275714));
        int int27 = classWriter25.newClass("");
        classWriter25.visitInnerClass("L1853824624", "L1230702653", "L97937772", 256);
        org.mockito.asm.FieldVisitor fieldVisitor33 = aSMifierClassVisitor16.visitField(100, "L575352164", "L1297264300", "L838424803", (java.lang.Object) "L1853824624");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((int) 'a');
        printWriter39.println("");
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        aSMifierClassVisitor45.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierClassVisitor45.visitAnnotation("", false);
        printWriter39.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter39);
        java.io.PrintWriter printWriter57 = printWriter39.append(' ');
        java.io.PrintWriter printWriter59 = printWriter39.append(' ');
        org.mockito.asm.ClassWriter classWriter62 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter62.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = classWriter62.visitAnnotation("hi!", false);
        classWriter62.visitOuterClass("hi!", "", "hi!");
        classWriter62.visitEnd();
        java.lang.String[] strArray83 = new java.lang.String[] { "L61669440", "L666971223", "L1434348811", "L1715840275" };
        classWriter62.visit(3, (int) (short) 10, "L1441782014", "L326432149", "hi!", strArray83);
        java.io.PrintWriter printWriter85 = printWriter39.printf("L601661571", (java.lang.Object[]) strArray83);
        org.mockito.asm.MethodVisitor methodVisitor86 = aSMifierClassVisitor16.visitMethod(0, "", "L1619590163", "L1556230913", strArray83);
        java.io.PrintWriter printWriter87 = printWriter1.format("L990238104", (java.lang.Object[]) strArray83);
        printWriter87.write("L435958291");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(methodVisitor86);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test16147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16147");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.print(0.0f);
        printWriter1.print((double) 57174305);
        printWriter1.print(3);
        printWriter1.flush();
        java.io.PrintWriter printWriter45 = printWriter1.append('4');
        printWriter1.print((float) 1853030435);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(printWriter45);
    }

    @Test
    public void test16148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16148");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        java.io.PrintWriter printWriter13 = printWriter9.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitInsn(10);
        org.mockito.asm.Attribute[] attributeArray20 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        aSMifierMethodVisitor15.visitFrame((int) '#', (int) (short) 0, (java.lang.Object[]) attributeArray20, 2, (java.lang.Object[]) labelArray86);
        java.io.PrintWriter printWriter90 = printWriter9.format("hi!", (java.lang.Object[]) attributeArray20);
        java.io.PrintWriter printWriter92 = printWriter9.append('4');
        printWriter92.print((double) (byte) 1);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(attributeArray20);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test16149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16149");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.print((float) ' ');
        printWriter6.println('4');
        java.io.PrintWriter printWriter12 = printWriter6.append(' ');
        printWriter12.print(0.0f);
        printWriter12.print('#');
        printWriter12.write(105);
        printWriter12.println((long) 14);
        printWriter12.println('#');
        printWriter12.println((-91551935198396416L));
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter12);
    }

    @Test
    public void test16150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16150");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L601661571");
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitTypeInsn(100, "L666971223");
        java.util.List list40 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn(101, "L1068138842", "L992490396", "L671595473");
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(list40);
    }

    @Test
    public void test16151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16151");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.print((float) ' ');
        printWriter6.println('4');
        java.io.PrintWriter printWriter12 = printWriter6.append(' ');
        printWriter6.println("L1689719368");
        printWriter6.println((double) 1970431233);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter12);
    }

    @Test
    public void test16152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16152");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        printWriter1.println((float) 115);
        java.io.PrintWriter printWriter22 = printWriter1.append('#');
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter22);
    }

    @Test
    public void test16153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16153");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list15 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor18.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor18.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label38);
        java.lang.Object obj40 = label38.info;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        aSMifierMethodVisitor41.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label56 = null;
        int[] intArray62 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor63.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor63.visitLineNumber((int) (byte) 10, label73);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label84 = null;
        int[] intArray86 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor78.visitLookupSwitchInsn(label84, intArray86, labelArray87);
        aSMifierMethodVisitor63.visitTableSwitchInsn((int) (byte) 0, 51966, label77, labelArray87);
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label56, intArray62, labelArray87);
        aSMifierMethodVisitor0.visitTableSwitchInsn(13, (-1), label38, labelArray87);
        java.lang.Object obj92 = label38.info;
        java.lang.Object obj93 = label38.info;
        java.lang.Object obj94 = label38.info;
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test16154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16154");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        printWriter31.print(false);
        printWriter31.write(50331648);
        java.util.Locale locale40 = null;
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("L1808073265");
        printWriter43.print((double) 186);
        java.util.Locale locale46 = null;
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter55 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter55.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = classWriter55.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor67 = classWriter55.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray68 = classWriter55.toByteArray();
        org.mockito.asm.ByteVector byteVector71 = byteVector51.putByteArray(byteArray68, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader72 = new org.mockito.asm.ClassReader(byteArray68);
        long long74 = classReader72.readLong((int) (byte) 100);
        long long76 = classReader72.readLong((int) (byte) 10);
        java.lang.String[] strArray77 = classReader72.getInterfaces();
        int int79 = classReader72.readByte((int) '#');
        long long81 = classReader72.readLong(4);
        int int82 = classReader72.header;
        byte[] byteArray83 = classReader72.b;
        java.lang.String[] strArray84 = classReader72.getInterfaces();
        java.io.PrintWriter printWriter85 = printWriter43.printf(locale46, "L1103251756", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter31.printf(locale40, "L1083567291", (java.lang.Object[]) strArray84);
        printWriter86.print(false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor67);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 8532477865490146625L + "'", long74 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 72057598333118569L + "'", long76 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 86 + "'", int79 == 86);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 590080L + "'", long81 == 590080L);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 118 + "'", int82 == 118);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test16155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16155");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor0.visitInsn(8);
        aSMifierMethodVisitor0.visitIntInsn(118, 2817);
        aSMifierMethodVisitor0.visitVarInsn(0, 202);
    }

    @Test
    public void test16156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16156");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        char[] charArray17 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter10.print(charArray17);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor19 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        aSMifierClassVisitor19.visitEnd();
        aSMifierClassVisitor19.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor19.visitAnnotation("L326432149", false);
        java.io.PrintWriter printWriter30 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter30);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor31.visit(2, (int) (byte) 0, "", "", "", strArray40);
        aSMifierClassVisitor19.visit(12, (int) (short) 0, "L1555790481", "L2101667039", "L137501116", strArray40);
        aSMifierClassVisitor19.visitSource("L1434348811", "L666971223");
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter58 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter58.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = classWriter58.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor70 = classWriter58.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray71 = classWriter58.toByteArray();
        org.mockito.asm.ByteVector byteVector74 = byteVector54.putByteArray(byteArray71, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader75 = new org.mockito.asm.ClassReader(byteArray71);
        long long77 = classReader75.readLong((int) (byte) 100);
        long long79 = classReader75.readLong((int) (byte) 10);
        java.lang.String[] strArray80 = classReader75.getInterfaces();
        int int82 = classReader75.readByte((int) '#');
        long long84 = classReader75.readLong(4);
        java.lang.String[] strArray85 = classReader75.getInterfaces();
        int int87 = classReader75.getItem(0);
        java.lang.String[] strArray88 = classReader75.getInterfaces();
        aSMifierClassVisitor19.visit(86, (-1161953280), "L290335602", "L540616366", "L1556845882", strArray88);
        java.io.PrintWriter printWriter90 = printWriter1.format("L1432518723", (java.lang.Object[]) strArray88);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor91 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter93 = printWriter1.append(' ');
        printWriter93.println(false);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 8532477865490146625L + "'", long77 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 72057598333118569L + "'", long79 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 86 + "'", int82 == 86);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 590080L + "'", long84 == 590080L);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test16157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16157");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor6 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierMethodVisitor0.visitAnnotation("L1208814105", true);
        org.junit.Assert.assertNotNull(annotationVisitor6);
        org.junit.Assert.assertNotNull(annotationVisitor9);
    }

    @Test
    public void test16158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16158");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter16.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = classWriter16.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor28 = classWriter16.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray29 = classWriter16.toByteArray();
        org.mockito.asm.ByteVector byteVector32 = byteVector12.putByteArray(byteArray29, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader33 = new org.mockito.asm.ClassReader(byteArray29);
        long long35 = classReader33.readLong((int) (byte) 100);
        long long37 = classReader33.readLong((int) (byte) 10);
        java.lang.String[] strArray38 = classReader33.getInterfaces();
        int int40 = classReader33.readInt(0);
        byte[] byteArray41 = classReader33.b;
        java.lang.String[] strArray42 = classReader33.getInterfaces();
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter51 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter51.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = classWriter51.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor63 = classWriter51.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray64 = classWriter51.toByteArray();
        org.mockito.asm.ByteVector byteVector67 = byteVector47.putByteArray(byteArray64, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader68 = new org.mockito.asm.ClassReader(byteArray64);
        long long70 = classReader68.readLong((int) (byte) 100);
        int int72 = classReader68.readInt(8);
        java.lang.String[] strArray73 = classReader68.getInterfaces();
        aSMifierMethodVisitor0.visitFrame(872, (int) (short) 10, (java.lang.Object[]) strArray42, (-1), (java.lang.Object[]) strArray73);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(1986622313, 210);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1986622313");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 8532477865490146625L + "'", long35 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 72057598333118569L + "'", long37 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-889275714) + "'", int40 == (-889275714));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 8532477865490146625L + "'", long70 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 590080 + "'", int72 == 590080);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(annotationVisitor75);
    }

    @Test
    public void test16159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16159");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("L544338606", false);
        aSMifierMethodVisitor0.visitIntInsn(15, 872);
        aSMifierMethodVisitor0.visitMaxs(16842765, 26983);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test16160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16160");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        aSMifierClassVisitor1.visitInnerClass("L61669440", "hi!", "L2113189186", 10);
        aSMifierClassVisitor1.visitSource("L1669980843", "L666971223");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor1.visitAnnotation("L139692246", false);
        org.mockito.asm.Attribute attribute35 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitAttribute(attribute35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test16161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16161");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.lang.Object[] objArray9 = null;
        java.io.PrintWriter printWriter10 = printWriter1.printf("hi!", objArray9);
        printWriter10.println('a');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor15.visitLineNumber((int) (byte) 10, label25);
        aSMifierMethodVisitor15.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor15.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor15.visitIincInsn((int) (byte) -1, (-1107296256));
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((-889275714));
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label63 = null;
        int[] intArray65 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label63, intArray65, labelArray66);
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label45, intArray54, labelArray66);
        java.io.PrintWriter printWriter69 = printWriter39.format(locale42, "hi!", (java.lang.Object[]) labelArray66);
        aSMifierMethodVisitor15.visitLdcInsn((java.lang.Object) labelArray66);
        java.io.PrintWriter printWriter71 = printWriter10.format("L61669440", (java.lang.Object[]) labelArray66);
        printWriter10.write(12);
        java.io.PrintWriter printWriter75 = printWriter10.append((java.lang.CharSequence) "L1077931653");
        printWriter10.close();
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1]");
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test16162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16162");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitFieldInsn(0, "L459227517", "L1592299270", "L1592299270");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("L1847055122", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(30313, 65792);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 30313");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test16163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16163");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(17);
        int int3 = classWriter1.newClass("L1555790481");
        classWriter1.visitEnd();
        int int9 = classWriter1.newMethod("L1085773562", "L365115101", "L1837291041", false);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label24 = null;
        int[] intArray26 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label24, intArray26, labelArray27);
        java.util.List list29 = aSMifierMethodVisitor18.getText();
        printWriter15.println((java.lang.Object) list29);
        printWriter15.print((double) 10L);
        printWriter15.print(false);
        java.io.PrintWriter printWriter35 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter35);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor36.visit(2, (int) (byte) 0, "", "", "", strArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor36.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor36.visitAnnotation("hi!", false);
        printWriter15.println((java.lang.Object) aSMifierClassVisitor36);
        aSMifierClassVisitor36.visitOuterClass("L237245406", "L1703143512", "L1669980843");
        aSMifierClassVisitor36.visitSource("L454715523", "L1556230913");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierClassVisitor36.visitAnnotation("L365115101", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter1.visitField((-1107296256), "L799304101", "L48323983", "L614568462", (java.lang.Object) true);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = fieldVisitor64.visitAnnotation("L1784767575", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = fieldVisitor64.visitAnnotation("L727045371", true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1]");
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor70);
    }

    @Test
    public void test16164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16164");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("L285151538");
        printWriter16.println(7523580949267742721L);
        aSMifierMethodVisitor0.print(printWriter16);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor20.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor20.visitParameterAnnotation(590080, "", false);
        aSMifierMethodVisitor20.visitIincInsn((int) (short) 9, (int) (short) -1);
        aSMifierMethodVisitor20.visitMethodInsn(27, "L1692480988", "", "L1715840275");
        aSMifierMethodVisitor20.visitMethodInsn(0, "L648105835", "L1869964633", "L1264545153");
        printWriter16.println((java.lang.Object) aSMifierMethodVisitor20);
        aSMifierMethodVisitor20.visitIincInsn((int) (short) 25929, 10);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test16165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16165");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(0, 7);
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "L1805444800", "L1717481013", "L420329685");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "L640235807", "L1123989782", "L1957730982");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(1951818092);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1951818092");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test16166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16166");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor55.visitAnnotation("L943959020", false);
        aSMifierClassVisitor55.visitOuterClass("L139692246", "L943959020", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor67.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor67.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor67.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor67.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor67.visitIntInsn(26, 326);
        aSMifierMethodVisitor67.visitIincInsn((int) 'a', 0);
        org.mockito.asm.FieldVisitor fieldVisitor90 = aSMifierClassVisitor55.visitField(32768, "L714880249", "L1062074562", "L2075420132", (java.lang.Object) aSMifierMethodVisitor67);
        aSMifierMethodVisitor67.visitIincInsn(145, 1869509376);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor90);
    }

    @Test
    public void test16167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16167");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(4, "L994489370", "", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor17.visitLineNumber((int) (byte) 10, label27);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor17.visitTableSwitchInsn((int) (byte) 0, 51966, label31, labelArray41);
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor17.visitLabel(label44);
        org.mockito.asm.Label label46 = new org.mockito.asm.Label();
        aSMifierMethodVisitor17.visitLabel(label46);
        aSMifierMethodVisitor0.visitJumpInsn(100, label46);
        java.lang.String str49 = label46.toString();
        java.io.PrintWriter printWriter50 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter50);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor51.visit(2, (int) (byte) 0, "", "", "", strArray60);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierClassVisitor51.visitAnnotation("", false);
        aSMifierClassVisitor51.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor51.visitOuterClass("", "", "L142696279");
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter("hi!");
        printWriter79.print((int) 'a');
        printWriter79.println("");
        printWriter79.print((float) 590080L);
        java.lang.Object[] objArray87 = null;
        java.io.PrintWriter printWriter88 = printWriter79.printf("hi!", objArray87);
        org.mockito.asm.FieldVisitor fieldVisitor89 = aSMifierClassVisitor51.visitField((int) (byte) 1, "L994489370", "L142696279", "L326432149", (java.lang.Object) printWriter79);
        label46.info = aSMifierClassVisitor51;
        aSMifierClassVisitor51.visitOuterClass("L1368033619", "L1336700540", "L514140742");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L1983235178" + "'", str49, "L1983235178");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(fieldVisitor89);
    }

    @Test
    public void test16168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16168");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 1, 10);
        java.util.List list39 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test16169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16169");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor13.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor13.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor13.visitAnnotation("hi!", false);
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        aSMifierMethodVisitor13.visitLineNumber(10, label29);
        aSMifierMethodVisitor0.visitLineNumber(1, label29);
        aSMifierMethodVisitor0.visitInsn((int) (byte) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotation("L1165266040", false);
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitInsn((int) (short) 20);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test16170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16170");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        aSMifierClassVisitor22.visitOuterClass("L237245406", "L1703143512", "L1669980843");
        aSMifierClassVisitor22.visitSource("L454715523", "L1556230913");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor22.visitAnnotation("L365115101", true);
        java.util.List list50 = aSMifierClassVisitor22.getText();
        aSMifierClassVisitor22.visitOuterClass("L897124199", "L2020972680", "L2101667039");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierClassVisitor22.visitAnnotation("L1175345445", false);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test16171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16171");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        byte[] byteArray39 = classWriter1.toByteArray();
        int int41 = classWriter1.newUTF8("L61669440");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter1.visitAnnotation("L801849928", false);
        classWriter1.visitInnerClass("L1669980843", "L1749641217", "L1434348811", (int) (short) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = classWriter1.visitAnnotation("L858787082", true);
        int int56 = classWriter1.newField("L2099222213", "L285151538", "L1960608380");
        classWriter1.visitInnerClass("L1467378836", "L1327200039", "L697610249", (int) (short) 27745);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 13 + "'", int41 == 13);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 26 + "'", int56 == 26);
    }

    @Test
    public void test16172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16172");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter25 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter25);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor26.visit(2, (int) (byte) 0, "", "", "", strArray35);
        org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter43.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter43.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor55 = classWriter43.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter43.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter43.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter68 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter68);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor69.visit(2, (int) (byte) 0, "", "", "", strArray78);
        classWriter43.visit((int) 'a', (int) '#', "", "", "hi!", strArray78);
        aSMifierClassVisitor26.visit((int) (short) 10, (int) (short) 30313, "", "L1669980843", "L1669980843", strArray78);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L1669980843");
        aSMifierMethodVisitor0.visitFieldInsn(0, "L1715840275", "L142696279", "L459227517");
        aSMifierMethodVisitor0.visitInsn(12);
        aSMifierMethodVisitor0.visitInsn(104);
        aSMifierMethodVisitor0.visitIntInsn(5, 57174305);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test16173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16173");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.Writer) printWriter9);
        java.util.Locale locale13 = null;
        java.io.PrintWriter printWriter15 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter23.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter23.visitEnd();
        org.mockito.asm.ClassWriter classWriter37 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter37.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = classWriter37.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor49 = classWriter37.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter37.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter37.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter62 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor63.visit(2, (int) (byte) 0, "", "", "", strArray72);
        classWriter37.visit((int) 'a', (int) '#', "", "", "hi!", strArray72);
        classWriter23.visit(100, 100, "L326432149", "L1434348811", "", strArray72);
        aSMifierClassVisitor16.visit(590080, 256, "L994489370", "L237245406", "L1749641217", strArray72);
        java.io.PrintWriter printWriter77 = printWriter12.format(locale13, "L2036836790", (java.lang.Object[]) strArray72);
        printWriter12.println();
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.Writer) printWriter12);
        printWriter12.println((float) 210);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(fieldVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test16174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16174");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter67 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter67.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = classWriter67.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor79 = classWriter67.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray80 = classWriter67.toByteArray();
        org.mockito.asm.ByteVector byteVector83 = byteVector63.putByteArray(byteArray80, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader84 = new org.mockito.asm.ClassReader(byteArray80);
        long long86 = classReader84.readLong((int) (byte) 100);
        long long88 = classReader84.readLong((int) (byte) 10);
        org.mockito.asm.ClassWriter classWriter90 = new org.mockito.asm.ClassWriter(classReader84, (int) (short) 30313);
        org.mockito.asm.FieldVisitor fieldVisitor91 = aSMifierClassVisitor55.visitField(13, "L1284973471", "L1592299270", "L994489370", (java.lang.Object) classWriter90);
        aSMifierClassVisitor55.visitSource("L1632084907", "L555140717");
        org.mockito.asm.Attribute attribute95 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor55.visitAttribute(attribute95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(fieldVisitor79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 8532477865490146625L + "'", long86 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 72057598333118569L + "'", long88 == 72057598333118569L);
        org.junit.Assert.assertNotNull(fieldVisitor91);
    }

    @Test
    public void test16175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16175");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) '#');
        long long33 = classReader24.readLong(4);
        int int35 = classReader24.readInt((int) (short) 9);
        long long37 = classReader24.readLong((int) '4');
        java.lang.String str38 = classReader24.getSuperName();
        int int40 = classReader24.getItem((int) (byte) 1);
        java.lang.String[] strArray41 = classReader24.getInterfaces();
        org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter(classReader24, (int) (short) 10);
        int int44 = classReader24.header;
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("L1930290201");
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        printWriter49.print((-889275714));
        java.util.Locale locale52 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label62 = null;
        int[] intArray64 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray65 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label62, intArray64, labelArray65);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor67.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label73 = null;
        int[] intArray75 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor67.visitLookupSwitchInsn(label73, intArray75, labelArray76);
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label55, intArray64, labelArray76);
        java.io.PrintWriter printWriter79 = printWriter49.format(locale52, "hi!", (java.lang.Object[]) labelArray76);
        java.io.PrintWriter printWriter81 = new java.io.PrintWriter("hi!");
        char[] charArray88 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter81.print(charArray88);
        printWriter79.print(charArray88);
        printWriter47.print(charArray88);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = classReader24.readClass((int) (byte) 1, charArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 65210");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 86 + "'", int31 == 86);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 590080L + "'", long33 == 590080L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 151060480 + "'", int35 == 151060480);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 72068947506459235L + "'", long37 == 72068947506459235L);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 11 + "'", int40 == 11);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 118 + "'", int44 == 118);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1]");
        org.junit.Assert.assertNotNull(labelArray65);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1]");
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[#, a,  , a,  , #]");
    }

    @Test
    public void test16176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16176");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor7.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor7.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor7.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray22 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label30 = null;
        int[] intArray32 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label30, intArray32, labelArray33);
        aSMifierMethodVisitor7.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray22, (int) 'a', (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor7.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor39.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor39.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor39.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label59 = new org.mockito.asm.Label();
        aSMifierMethodVisitor39.visitLabel(label59);
        aSMifierMethodVisitor7.visitLineNumber((int) '#', label59);
        java.lang.Object obj62 = label59.info;
        aSMifierMethodVisitor0.visitLineNumber(0, label59);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotation("L1558544675", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 8451, "L709116955", false);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(attributeArray22);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1]");
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test16177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16177");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((double) 1);
        printWriter19.println();
        java.lang.Object obj23 = null;
        printWriter19.print(obj23);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test16178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16178");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print(true);
        java.util.Locale locale45 = null;
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        char[] charArray55 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter48.print(charArray55);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        aSMifierClassVisitor57.visitEnd();
        aSMifierClassVisitor57.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor57.visitAnnotation("L326432149", false);
        java.io.PrintWriter printWriter68 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter68);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor69.visit(2, (int) (byte) 0, "", "", "", strArray78);
        aSMifierClassVisitor57.visit(12, (int) (short) 0, "L1555790481", "L2101667039", "L137501116", strArray78);
        java.io.PrintWriter printWriter81 = printWriter31.printf(locale45, "L1284973471", (java.lang.Object[]) strArray78);
        printWriter81.write(32);
        java.lang.CharSequence charSequence84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter87 = printWriter81.append(charSequence84, 324, 1231976041);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 1231976041");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test16179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16179");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L365115101");
        printWriter1.close();
        printWriter1.write("L353293957");
        printWriter1.write((int) (short) 13);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print((int) 'a');
        printWriter9.println("");
        printWriter9.print((float) 590080L);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter9, true);
        printWriter17.println('a');
        java.io.PrintWriter printWriter21 = printWriter17.append((java.lang.CharSequence) "hi!");
        printWriter21.flush();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.Writer) printWriter21, true);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter43.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter43.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor55 = classWriter43.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray56 = classWriter43.toByteArray();
        org.mockito.asm.ByteVector byteVector59 = byteVector39.putByteArray(byteArray56, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader60 = new org.mockito.asm.ClassReader(byteArray56);
        long long62 = classReader60.readLong((int) (byte) 100);
        long long64 = classReader60.readLong((int) (byte) 10);
        java.lang.String[] strArray65 = classReader60.getInterfaces();
        aSMifierClassVisitor30.visit((int) (byte) 1, (-1), "", "hi!", "", strArray65);
        java.io.PrintWriter printWriter67 = printWriter21.printf("L1003926609", (java.lang.Object[]) strArray65);
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector78 = byteVector74.putShort((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter80 = new org.mockito.asm.ClassWriter((int) 'a');
        byte[] byteArray81 = classWriter80.toByteArray();
        org.mockito.asm.ByteVector byteVector84 = byteVector78.putByteArray(byteArray81, 7, 0);
        org.mockito.asm.ClassReader classReader85 = new org.mockito.asm.ClassReader(byteArray81);
        java.lang.String[] strArray86 = classReader85.getInterfaces();
        java.io.PrintWriter printWriter87 = printWriter21.format("L1421508585", (java.lang.Object[]) strArray86);
        java.io.PrintWriter printWriter88 = printWriter1.format("L1703143512", (java.lang.Object[]) strArray86);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 8532477865490146625L + "'", long62 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 72057598333118569L + "'", long64 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(printWriter88);
    }

    @Test
    public void test16180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16180");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitMaxs(24942, 8);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 30313, 321);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 28275, (int) (short) 3);
    }

    @Test
    public void test16181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16181");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotation("L2099222213", false);
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        int int52 = classReader48.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        org.mockito.asm.ClassWriter classWriter55 = new org.mockito.asm.ClassWriter(classReader48, 2);
        int int57 = classWriter55.newUTF8("");
        label23.info = classWriter55;
        aSMifierMethodVisitor0.visitJumpInsn(2, label23);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list61 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitAnnotation("L394842588", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = annotationVisitor64.visitArray("");
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 51966 + "'", int52 == 51966);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test16182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16182");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int42 = classWriter1.newField("L1284973471", "L1284973471", "L1216476214");
        classWriter1.visitOuterClass("L1105153118", "L1544572272", "");
        classWriter1.visitSource("L1931374313", "L544338606");
        byte[] byteArray50 = classWriter1.toByteArray();
        int int54 = classWriter1.newField("L265725697", "L1281777590", "L1644755393");
        classWriter1.visitEnd();
        classWriter1.visitEnd();
        classWriter1.visitSource("L1376319144", "L1691870655");
        classWriter1.visitSource("L1059170436", "L101161246");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 11 + "'", int42 == 11);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 29 + "'", int54 == 29);
    }

    @Test
    public void test16183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16183");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(6, 6);
        aSMifierMethodVisitor0.visitVarInsn(0, 11);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(9, 6);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation(57174305, "L912991706", true);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test16184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16184");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        int int10 = classWriter1.newNameType("L1669980843", "");
        int int12 = classWriter1.newUTF8("L804028497");
        java.io.PrintWriter printWriter13 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor14.visit(2, (int) (byte) 0, "", "", "", strArray23);
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter31.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter31.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter56 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter56);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor57.visit(2, (int) (byte) 0, "", "", "", strArray66);
        classWriter31.visit((int) 'a', (int) '#', "", "", "hi!", strArray66);
        aSMifierClassVisitor14.visit((int) (short) 10, (int) (short) 30313, "", "L1669980843", "L1669980843", strArray66);
        org.mockito.asm.ClassWriter classWriter75 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor81 = classWriter75.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = fieldVisitor81.visitAnnotation("hi!", true);
        fieldVisitor81.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor14.visitField((int) (byte) -1, "L2113189186", "L1715840275", "", (java.lang.Object) fieldVisitor81);
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierClassVisitor14.visitAnnotation("L601661571", true);
        java.lang.String[] strArray94 = null;
        org.mockito.asm.MethodVisitor methodVisitor95 = aSMifierClassVisitor14.visitMethod(6, "L1722902851", "L139692246", "L555214098", strArray94);
        org.mockito.asm.AnnotationVisitor annotationVisitor96 = methodVisitor95.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor98 = annotationVisitor96.visitArray("L371352799");
        // The following exception was thrown during execution in test generation
        try {
            int int99 = classWriter1.newConst((java.lang.Object) annotationVisitor96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.util.ASMifierAnnotationVisitor@270ea683");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(fieldVisitor81);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(fieldVisitor86);
        org.junit.Assert.assertNotNull(annotationVisitor89);
        org.junit.Assert.assertNotNull(methodVisitor95);
        org.junit.Assert.assertNotNull(annotationVisitor96);
        org.junit.Assert.assertNotNull(annotationVisitor98);
    }

    @Test
    public void test16185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16185");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        printWriter1.write("");
        printWriter1.print("L464564430");
        printWriter1.print("L189751204");
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.util.Locale locale12 = null;
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray34 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector37 = byteVector17.putByteArray(byteArray34, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader38 = new org.mockito.asm.ClassReader(byteArray34);
        long long40 = classReader38.readLong((int) (byte) 100);
        int int42 = classReader38.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray43 = classReader38.getInterfaces();
        org.mockito.asm.ClassWriter classWriter45 = new org.mockito.asm.ClassWriter(classReader38, 2);
        int int47 = classReader38.readUnsignedShort((int) ' ');
        java.lang.String[] strArray48 = classReader38.getInterfaces();
        int int50 = classReader38.readUnsignedShort(86);
        java.lang.String[] strArray51 = classReader38.getInterfaces();
        java.io.PrintWriter printWriter52 = printWriter1.printf(locale12, "L1459078187", (java.lang.Object[]) strArray51);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor53 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter52);
        org.mockito.asm.ClassWriter classWriter59 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter59.visitInnerClass("L298663367", "L1715840275", "L614568462", 18);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = classWriter59.visitAnnotation("L337574950", true);
        classWriter59.visitInnerClass("L1526989973", "L783935767", "L1230702653", 115);
        classWriter59.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor74 = aSMifierClassVisitor53.visitField((int) (short) 872, "L1694926691", "L543552110", "L1115200203", (java.lang.Object) classWriter59);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 8532477865490146625L + "'", long40 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 51966 + "'", int42 == 51966);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 24942 + "'", int47 == 24942);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 28526 + "'", int50 == 28526);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor74);
    }

    @Test
    public void test16186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16186");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.util.Locale locale8 = null;
        org.mockito.asm.ClassWriter classWriter11 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter11.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter39.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter39.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter64 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor65.visit(2, (int) (byte) 0, "", "", "", strArray74);
        classWriter39.visit((int) 'a', (int) '#', "", "", "hi!", strArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label84 = null;
        int[] intArray86 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor78.visitLookupSwitchInsn(label84, intArray86, labelArray87);
        aSMifierMethodVisitor23.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray74, (int) (short) 100, (java.lang.Object[]) labelArray87);
        classWriter11.visit(7, (-889275714), "", "hi!", "hi!", strArray74);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale8, "hi!", (java.lang.Object[]) strArray74);
        java.io.PrintWriter printWriter92 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println(100.0f);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write("L1397245077", (int) (short) 29556, 115);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 29671");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test16187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16187");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter16.visitAnnotation("L2113189186", true);
        java.lang.Object obj32 = null;
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter16.visitField((int) (short) 30313, "L2113189186", "L1434348811", "L61669440", obj32);
        classWriter16.visitSource("L1749641217", "L1544572272");
        classWriter16.visitEnd();
        classWriter16.visitEnd();
        classWriter16.visitEnd();
        classWriter16.visitOuterClass("L418048490", "L1115200203", "L2016248295");
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
    }

    @Test
    public void test16188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16188");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        classWriter1.visitInnerClass("hi!", "", "", 3);
        classWriter1.visitSource("L994489370", "L1669980843");
        int int15 = classWriter1.newNameType("L326432149", "");
        int int19 = classWriter1.newField("L834812042", "L1749641217", "L1105153118");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = classWriter1.visitAnnotation("L61669440", true);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor28.visit(2, (int) (byte) 0, "", "", "", strArray37);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("", "", "L142696279");
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((int) 'a');
        printWriter56.println("");
        printWriter56.print((float) 590080L);
        java.lang.Object[] objArray64 = null;
        java.io.PrintWriter printWriter65 = printWriter56.printf("hi!", objArray64);
        org.mockito.asm.FieldVisitor fieldVisitor66 = aSMifierClassVisitor28.visitField((int) (byte) 1, "L994489370", "L142696279", "L326432149", (java.lang.Object) printWriter56);
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter56, false);
        org.mockito.asm.FieldVisitor fieldVisitor69 = classWriter1.visitField(0, "L1556845882", "L1003926609", "L1418438756", (java.lang.Object) false);
        fieldVisitor69.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = fieldVisitor69.visitAnnotation("L1200350890", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = annotationVisitor73.visitAnnotation("L1481204211", "L1111733530");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7 + "'", int15 == 7);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 13 + "'", int19 == 13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(fieldVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test16189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16189");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        boolean boolean19 = printWriter1.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor20.visitSource("L978789454", "");
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter30 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter30.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = classWriter30.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter30.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label28.info = classWriter30;
        int int46 = classWriter30.newNameType("", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter30.visitAnnotation("L142696279", true);
        org.mockito.asm.FieldVisitor fieldVisitor50 = aSMifierClassVisitor20.visitField(321, "L967033583", "L1271688136", "L389484434", (java.lang.Object) true);
        aSMifierClassVisitor20.visitOuterClass("L346465901", "L1359835451", "L823983574");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor50);
    }

    @Test
    public void test16190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16190");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("L454715523", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label26, intArray35, labelArray47);
        aSMifierMethodVisitor25.visitFieldInsn((int) (short) 100, "", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor55 = aSMifierClassVisitor1.visitField(5, "L1808073265", "L2112385861", "L1200350890", (java.lang.Object) aSMifierMethodVisitor25);
        aSMifierClassVisitor1.visitInnerClass("hi!", "L1284973471", "L598840791", 872);
        aSMifierClassVisitor1.visitOuterClass("L128274680", "L1128685344", "L291968553");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierClassVisitor1.visitAnnotation("L1705566046", false);
        annotationVisitor67.visitEnum("L1190772633", "L122837608", "L1264545153");
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test16191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16191");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((int) '4');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter21.visitEnd();
        classWriter21.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter21.visitSource("hi!", "hi!");
        byte[] byteArray43 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector46 = byteVector15.putByteArray(byteArray43, (int) (short) 10, (int) '4');
        annotationVisitor10.visit("L598840791", (java.lang.Object) byteArray43);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray43);
        byte[] byteArray49 = classReader48.b;
        int int50 = classReader48.getAccess();
        short short52 = classReader48.readShort(100);
        int int54 = classReader48.readInt((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            int int56 = classReader48.getItem(1702035712);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1702035712");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + short52 + "' != '" + (short) 27745 + "'", short52 == (short) 27745);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1970431233 + "'", int54 == 1970431233);
    }

    @Test
    public void test16192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16192");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "L454715523", false);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotation("L2113189186", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitParameterAnnotation(332, "L1619590163", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(65539, 57174305);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test16193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16193");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L459227517");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println((double) 1L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor5 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println((long) 1634628694);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((-889275714));
        java.util.Locale locale15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        int[] intArray38 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label36, intArray38, labelArray39);
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label18, intArray27, labelArray39);
        java.io.PrintWriter printWriter42 = printWriter12.format(locale15, "hi!", (java.lang.Object[]) labelArray39);
        printWriter12.println((int) (short) 1);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter47 = printWriter12.format("hi!", (java.lang.Object[]) strArray46);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter12);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter12);
        aSMifierClassVisitor49.visitSource("", "L598840791");
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter64.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = classWriter64.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter64.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray77 = classWriter64.toByteArray();
        org.mockito.asm.ByteVector byteVector80 = byteVector60.putByteArray(byteArray77, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader81 = new org.mockito.asm.ClassReader(byteArray77);
        long long83 = classReader81.readLong((int) (byte) 100);
        long long85 = classReader81.readLong((int) (byte) 10);
        short short87 = classReader81.readShort((int) (short) 100);
        long long89 = classReader81.readLong((int) (short) 0);
        java.lang.String str90 = classReader81.getSuperName();
        java.lang.String[] strArray91 = classReader81.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor92 = aSMifierClassVisitor49.visitMethod((int) (short) 29782, "L1271688136", "L55453359", "L267150651", strArray91);
        java.io.PrintWriter printWriter93 = printWriter1.format("L1004430080", (java.lang.Object[]) strArray91);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1]");
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 8532477865490146625L + "'", long83 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 72057598333118569L + "'", long85 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short87 + "' != '" + (short) 30313 + "'", short87 == (short) 30313);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + (-3819410108757049344L) + "'", long89 == (-3819410108757049344L));
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(methodVisitor92);
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test16194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16194");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        classWriter1.visitInnerClass("hi!", "", "", 3);
        classWriter1.visitSource("L994489370", "L1669980843");
        int int15 = classWriter1.newNameType("L326432149", "");
        int int19 = classWriter1.newField("L834812042", "L1749641217", "L1105153118");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = classWriter1.visitAnnotation("L61669440", true);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor28.visit(2, (int) (byte) 0, "", "", "", strArray37);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("", "", "L142696279");
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((int) 'a');
        printWriter56.println("");
        printWriter56.print((float) 590080L);
        java.lang.Object[] objArray64 = null;
        java.io.PrintWriter printWriter65 = printWriter56.printf("hi!", objArray64);
        org.mockito.asm.FieldVisitor fieldVisitor66 = aSMifierClassVisitor28.visitField((int) (byte) 1, "L994489370", "L142696279", "L326432149", (java.lang.Object) printWriter56);
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter56, false);
        org.mockito.asm.FieldVisitor fieldVisitor69 = classWriter1.visitField(0, "L1556845882", "L1003926609", "L1418438756", (java.lang.Object) false);
        int int72 = classWriter1.newNameType("L607677620", "L1000949368");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7 + "'", int15 == 7);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 13 + "'", int19 == 13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(fieldVisitor69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 21 + "'", int72 == 21);
    }

    @Test
    public void test16195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16195");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, (int) (short) 257);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Attribute attribute52 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test16196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16196");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor1.visitAnnotation("", false);
        java.util.List list14 = aSMifierClassVisitor1.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        java.util.List list30 = aSMifierMethodVisitor19.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor19.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor19.visitAnnotation("", false);
        aSMifierMethodVisitor19.visitMethodInsn(4, "L2113189186", "L1434348811", "L799304101");
        java.io.PrintWriter printWriter46 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor47 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        aSMifierClassVisitor47.visitSource("", "hi!");
        aSMifierMethodVisitor19.visitLdcInsn((java.lang.Object) aSMifierClassVisitor47);
        aSMifierMethodVisitor19.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor19.visitParameterAnnotation(151060480, "L943959020", false);
        org.mockito.asm.FieldVisitor fieldVisitor57 = aSMifierClassVisitor1.visitField(1937006958, "L598840791", "L142696279", "L917803051", (java.lang.Object) aSMifierMethodVisitor19);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = fieldVisitor57.visitAnnotation("L1695791093", false);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test16197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16197");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor7.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor7.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor7.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray22 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label30 = null;
        int[] intArray32 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label30, intArray32, labelArray33);
        aSMifierMethodVisitor7.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray22, (int) 'a', (java.lang.Object[]) labelArray33);
        aSMifierMethodVisitor7.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor39.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor39.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor39.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label59 = new org.mockito.asm.Label();
        aSMifierMethodVisitor39.visitLabel(label59);
        aSMifierMethodVisitor7.visitLineNumber((int) '#', label59);
        java.lang.Object obj62 = label59.info;
        aSMifierMethodVisitor0.visitLineNumber(0, label59);
        aSMifierMethodVisitor0.visitFieldInsn(140, "L392867075", "L1544572272", "L2069736809");
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(attributeArray22);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1]");
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test16198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16198");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn(86, (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L454715523", 1986622313);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitLabel(label29);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test16199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16199");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.lang.Class<?> wildcardClass22 = aSMifierClassVisitor21.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test16200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16200");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(2, (int) (short) -1);
        aSMifierMethodVisitor0.visitVarInsn(86, 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 0, "L326432149", "L1083567291", "L644390938");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1111364207", (int) (short) 100);
        org.mockito.asm.Attribute attribute30 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test16201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16201");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = printWriter31.append('a');
        java.io.PrintWriter printWriter60 = printWriter31.append((java.lang.CharSequence) "L601661571", (int) (short) 0, (int) (byte) 1);
        printWriter31.flush();
        // The following exception was thrown during execution in test generation
        try {
            printWriter31.write("", 114, 1853060193);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 8306");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter60);
    }

    @Test
    public void test16202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16202");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        int int52 = classReader48.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        java.io.PrintWriter printWriter54 = printWriter1.printf("", (java.lang.Object[]) strArray53);
        printWriter54.println(false);
        printWriter54.println("L1461066057");
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter54, false);
        printWriter54.println((float) 66);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter54);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 51966 + "'", int52 == 51966);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test16203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16203");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1434348811", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L142696279", (-889275714));
        aSMifierMethodVisitor0.visitTypeInsn(118, "L1931374313");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1461066057", 118);
        aSMifierMethodVisitor0.visitMaxs(324, 29);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test16204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16204");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label33);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("L326432149", false);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L2101667039");
        aSMifierMethodVisitor0.visitVarInsn(29, (int) (short) 26729);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test16205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16205");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        java.lang.Object obj48 = label47.info;
        java.lang.String str49 = label47.toString();
        aSMifierMethodVisitor0.visitJumpInsn(15, label47);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitParameterAnnotation(151060480, "L298663367", true);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "L261648562", "L1434348811", "L1533650022");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNull(obj48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L1639893059" + "'", str49, "L1639893059");
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test16206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16206");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor35.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor35.visitLineNumber((int) (byte) 10, label45);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor35.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label56 = new org.mockito.asm.Label();
        aSMifierMethodVisitor35.visitLineNumber(4, label56);
        java.lang.String str58 = label56.toString();
        aSMifierMethodVisitor0.visitLineNumber(19, label56);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = label56.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L628198661" + "'", str58, "L628198661");
    }

    @Test
    public void test16207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16207");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = annotationVisitor13.visitArray("L1216476214");
        annotationVisitor13.visit("L61669440", (java.lang.Object) (-3819410108757049344L));
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = annotationVisitor13.visitAnnotation("L231657813", "L799304101");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = annotationVisitor21.visitAnnotation("L1770505064", "L804028497");
        annotationVisitor24.visitEnum("L490367469", "L674352908", "L1459806507");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test16208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16208");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        org.mockito.asm.ClassReader classReader47 = new org.mockito.asm.ClassReader(byteArray45);
        int int49 = classReader47.readInt(0);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-889275714) + "'", int49 == (-889275714));
    }

    @Test
    public void test16209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16209");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitFieldInsn(10, "L1829941255", "L1853824624", "L575352164");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, 51966);
        aSMifierMethodVisitor0.visitMethodInsn(36, "L437863088", "L173547556", "L1359835451");
        aSMifierMethodVisitor0.visitMaxs(1853060193, (int) (short) 0);
        org.mockito.asm.Attribute attribute36 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16210");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        printWriter31.print((int) (byte) 100);
        printWriter31.println(false);
        printWriter31.println((float) 7298486125984967010L);
        printWriter31.write(15);
        java.io.PrintWriter printWriter64 = printWriter31.append((java.lang.CharSequence) "L575352164");
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter68 = printWriter31.append((java.lang.CharSequence) "L1165266040", 524298, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -524287");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test16211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16211");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation(86, "L1395614519", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test16212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16212");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label2, label3, label4, "");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(19, (int) (short) 4);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor11.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label31 = new org.mockito.asm.Label();
        aSMifierMethodVisitor11.visitLabel(label31);
        aSMifierMethodVisitor11.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor35.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor35.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor35.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label55 = new org.mockito.asm.Label();
        aSMifierMethodVisitor35.visitLabel(label55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor57.visitIincInsn(1, 0);
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor57.visitLabel(label69);
        label55.info = aSMifierMethodVisitor57;
        aSMifierMethodVisitor11.visitLineNumber(24942, label55);
        aSMifierMethodVisitor0.visitLabel(label55);
        aSMifierMethodVisitor0.visitIincInsn(31, 2305);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test16213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16213");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation(86, "L799304101", true);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter29.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = classWriter29.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor41 = classWriter29.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray42 = classWriter29.toByteArray();
        org.mockito.asm.ByteVector byteVector45 = byteVector25.putByteArray(byteArray42, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader46 = new org.mockito.asm.ClassReader(byteArray42);
        long long48 = classReader46.readLong((int) (byte) 100);
        long long50 = classReader46.readLong((int) (byte) 10);
        java.lang.String[] strArray51 = classReader46.getInterfaces();
        int int53 = classReader46.readByte((int) '#');
        long long55 = classReader46.readLong(4);
        int int57 = classReader46.readInt((int) (short) 9);
        long long59 = classReader46.readLong((int) '4');
        java.lang.String str60 = classReader46.getSuperName();
        java.lang.String str61 = classReader46.getSuperName();
        int int63 = classReader46.readUnsignedShort(0);
        annotationVisitor20.visit("L1083567291", (java.lang.Object) classReader46);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = classReader46.readUnsignedShort((-889275714));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -889275714");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 8532477865490146625L + "'", long48 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 72057598333118569L + "'", long50 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 86 + "'", int53 == 86);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 590080L + "'", long55 == 590080L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 151060480 + "'", int57 == 151060480);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 72068947506459235L + "'", long59 == 72068947506459235L);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 51966 + "'", int63 == 51966);
    }

    @Test
    public void test16214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16214");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        printWriter13.println(0.0d);
        printWriter13.print(false);
        aSMifierClassVisitor1.print(printWriter13);
        java.io.PrintWriter printWriter23 = printWriter13.append((java.lang.CharSequence) "L298663367");
        printWriter13.flush();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor25.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor25.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor25.visitParameterAnnotation((int) (short) 100, "L836986691", true);
        printWriter13.print((java.lang.Object) aSMifierMethodVisitor25);
        java.io.PrintWriter printWriter44 = printWriter13.append((java.lang.CharSequence) "");
        printWriter13.print(26729);
        printWriter13.print(' ');
        boolean boolean49 = printWriter13.checkError();
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test16215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16215");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter75.println((double) 100);
        printWriter75.print(10L);
        printWriter75.println((long) 116);
        printWriter75.println("L1398906509");
        java.lang.Object[] objArray85 = null;
        java.io.PrintWriter printWriter86 = printWriter75.format("L464564430", objArray85);
        printWriter75.print(true);
        java.lang.Object obj89 = null;
        printWriter75.println(obj89);
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test16216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16216");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitVarInsn((int) 'a', 0);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((int) 'a');
        printWriter43.println("");
        printWriter43.print((float) 590080L);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter((java.io.Writer) printWriter43, true);
        printWriter51.println('a');
        printWriter51.print(9);
        java.io.PrintWriter printWriter57 = printWriter51.append('#');
        printWriter57.print(true);
        aSMifierMethodVisitor0.print(printWriter57);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor61.visitEnd();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test16217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16217");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter25 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter25);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor26.visit(2, (int) (byte) 0, "", "", "", strArray35);
        org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter43.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter43.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor55 = classWriter43.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter43.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter43.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter68 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter68);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor69.visit(2, (int) (byte) 0, "", "", "", strArray78);
        classWriter43.visit((int) 'a', (int) '#', "", "", "hi!", strArray78);
        aSMifierClassVisitor26.visit((int) (short) 10, (int) (short) 30313, "", "L1669980843", "L1669980843", strArray78);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L1669980843");
        aSMifierMethodVisitor0.visitFieldInsn(0, "L1715840275", "L142696279", "L459227517");
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierMethodVisitor0.visitParameterAnnotation(97, "L1023978678", true);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test16218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16218");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        printWriter1.print("L1434348811");
        java.io.PrintWriter printWriter13 = printWriter1.append((java.lang.CharSequence) "L1544572272");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        printWriter13.println((float) 6);
        boolean boolean17 = printWriter13.checkError();
        java.io.PrintWriter printWriter19 = printWriter13.append('a');
        printWriter13.print((float) 69);
        printWriter13.print(186);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(printWriter19);
    }

    @Test
    public void test16219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16219");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter25 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter25);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor26.visit(2, (int) (byte) 0, "", "", "", strArray35);
        org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter43.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter43.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor55 = classWriter43.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter43.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter43.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter68 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter68);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor69.visit(2, (int) (byte) 0, "", "", "", strArray78);
        classWriter43.visit((int) 'a', (int) '#', "", "", "hi!", strArray78);
        aSMifierClassVisitor26.visit((int) (short) 10, (int) (short) 30313, "", "L1669980843", "L1669980843", strArray78);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L1669980843");
        aSMifierMethodVisitor0.visitFieldInsn(0, "L1715840275", "L142696279", "L459227517");
        aSMifierMethodVisitor0.visitInsn(12);
        aSMifierMethodVisitor0.visitVarInsn(182, 6);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L407895089", (int) (short) 24940);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test16220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16220");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor30.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor30.visitLineNumber((int) (byte) 10, label40);
        aSMifierMethodVisitor30.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor30.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label51 = new org.mockito.asm.Label();
        aSMifierMethodVisitor30.visitLineNumber(4, label51);
        aSMifierMethodVisitor0.visitLabel(label51);
        aSMifierMethodVisitor0.visitIincInsn(2817, 29801);
        aSMifierMethodVisitor0.visitVarInsn(152, 0);
        aSMifierMethodVisitor0.visitVarInsn(24, 254);
        aSMifierMethodVisitor0.visitIincInsn(1937006958, 0);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test16221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16221");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label9);
        aSMifierMethodVisitor0.visitMaxs(3, 0);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) (short) 22113);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 22113);
        aSMifierMethodVisitor0.visitIincInsn(8, 25);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor23.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor36.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor36.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor36.visitAnnotation("hi!", false);
        org.mockito.asm.Label label52 = new org.mockito.asm.Label();
        aSMifierMethodVisitor36.visitLineNumber(10, label52);
        aSMifierMethodVisitor23.visitLineNumber(1, label52);
        java.lang.Object obj55 = label52.info;
        aSMifierMethodVisitor0.visitLabel(label52);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (short) 26913, (int) (short) 1280);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test16222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16222");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor16.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor16.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLabel(label36);
        aSMifierMethodVisitor16.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor40.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        aSMifierMethodVisitor40.visitLabel(label60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor62.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor62.visitIincInsn(1, 0);
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor62.visitLabel(label74);
        label60.info = aSMifierMethodVisitor62;
        aSMifierMethodVisitor16.visitLineNumber(24942, label60);
        aSMifierMethodVisitor0.visitJumpInsn(6, label60);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L514140742", 105);
        aSMifierMethodVisitor0.visitMaxs(1634497893, 1651270977);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test16223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16223");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        int int28 = classReader24.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readUnsignedShort(17);
        short short33 = classReader24.readShort((int) ' ');
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((int) 'a');
        printWriter35.println("");
        printWriter35.flush();
        java.io.PrintWriter printWriter42 = printWriter35.append((java.lang.CharSequence) "L61669440");
        printWriter42.print((long) 1970431233);
        printWriter42.print((float) 28526);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor47 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter42);
        aSMifierClassVisitor47.visitSource("L128274680", "L169779857");
        org.mockito.asm.Attribute[] attributeArray51 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        // The following exception was thrown during execution in test generation
        try {
            classReader24.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor47, attributeArray51, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 51966 + "'", int28 == 51966);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 26913 + "'", int31 == 26913);
        org.junit.Assert.assertTrue("'" + short33 + "' != '" + (short) 24942 + "'", short33 == (short) 24942);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(attributeArray51);
    }

    @Test
    public void test16224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16224");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println("hi!");
        printWriter1.close();
        java.io.PrintWriter printWriter6 = printWriter1.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        printWriter6.close();
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((int) 'a');
        printWriter10.println("");
        java.io.PrintWriter printWriter15 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        aSMifierClassVisitor16.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor16.visitAnnotation("", false);
        printWriter10.print((java.lang.Object) false);
        printWriter10.print((double) 10.0f);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        printWriter28.print((long) 1);
        printWriter28.print('#');
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label43 = null;
        int[] intArray45 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray46 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor37.visitLookupSwitchInsn(label43, intArray45, labelArray46);
        java.util.List list48 = aSMifierMethodVisitor37.getText();
        printWriter34.println((java.lang.Object) list48);
        printWriter34.print((double) 10L);
        printWriter34.println(false);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        printWriter55.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter55);
        printWriter55.print(0.0d);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter("hi!");
        char[] charArray69 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter62.print(charArray69);
        printWriter55.write(charArray69);
        printWriter34.print(charArray69);
        printWriter28.print(charArray69);
        printWriter6.print(charArray69);
        printWriter6.print('a');
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter((java.io.Writer) printWriter6);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter((java.io.Writer) printWriter6);
        printWriter6.println((int) (byte) 0);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1]");
        org.junit.Assert.assertNotNull(labelArray46);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, a,  , a,  , #]");
    }

    @Test
    public void test16225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16225");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("L978789454", false);
        annotationVisitor16.visitEnd();
        annotationVisitor16.visitEnd();
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test16226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16226");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray30 = classWriter17.toByteArray();
        org.mockito.asm.ByteVector byteVector33 = byteVector13.putByteArray(byteArray30, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray30);
        long long36 = classReader34.readLong((int) (byte) 100);
        long long38 = classReader34.readLong((int) (byte) 10);
        java.lang.String[] strArray39 = classReader34.getInterfaces();
        aSMifierClassVisitor4.visit((int) (byte) 1, (-1), "", "hi!", "", strArray39);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor46 = aSMifierClassVisitor4.visitMethod((int) (short) 0, "L459227517", "L1715840275", "L96121905", strArray45);
        aSMifierClassVisitor4.visitSource("L575352164", "L1284973471");
        aSMifierClassVisitor4.visitSource("L663459894", "L117134386");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 8532477865490146625L + "'", long36 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 72057598333118569L + "'", long38 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodVisitor46);
    }

    @Test
    public void test16227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16227");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLineNumber(10, label16);
        aSMifierMethodVisitor0.visitTypeInsn(12, "");
        aSMifierMethodVisitor0.visitTypeInsn(104, "L2026303857");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -326, "L1105153118", false);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test16228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16228");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        classWriter1.visitOuterClass("hi!", "", "hi!");
        classWriter1.visitEnd();
        classWriter1.visitOuterClass("L1135610391", "L1646758677", "");
        classWriter1.visitEnd();
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((-889275714));
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        int[] intArray38 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label36, intArray38, labelArray39);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label29, intArray38, labelArray50);
        java.io.PrintWriter printWriter53 = printWriter23.format(locale26, "hi!", (java.lang.Object[]) labelArray50);
        printWriter23.print(false);
        printWriter23.println(true);
        printWriter23.print((float) (short) 0);
        printWriter23.print("L61669440");
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter70 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter70.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = classWriter70.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor82 = classWriter70.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray83 = classWriter70.toByteArray();
        org.mockito.asm.ByteVector byteVector86 = byteVector66.putByteArray(byteArray83, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader87 = new org.mockito.asm.ClassReader(byteArray83);
        org.mockito.asm.ClassReader classReader90 = new org.mockito.asm.ClassReader(byteArray83, 0, (-1107296256));
        java.lang.String[] strArray91 = classReader90.getInterfaces();
        java.lang.String[] strArray92 = classReader90.getInterfaces();
        java.io.PrintWriter printWriter93 = printWriter23.format("L519300220", (java.lang.Object[]) strArray92);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor94 = classWriter1.visitMethod((int) (byte) 10, "L1285739482", "L2102371386", "L1296855558", strArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1]");
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(fieldVisitor82);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test16229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16229");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.lang.Object[] objArray9 = null;
        java.io.PrintWriter printWriter10 = printWriter1.printf("hi!", objArray9);
        printWriter10.println('a');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        boolean boolean14 = printWriter13.checkError();
        printWriter13.print((double) 118);
        printWriter13.print((int) (short) 25970);
        printWriter13.write("L1764179183");
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((int) 'a');
        printWriter22.println("");
        printWriter22.print((float) 590080L);
        printWriter22.write(1);
        printWriter22.print(2534374302089219L);
        boolean boolean33 = printWriter22.checkError();
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((-889275714));
        printWriter35.println((int) (short) 256);
        printWriter35.print((long) 1);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        java.io.PrintWriter printWriter48 = printWriter43.append('#');
        printWriter48.println((double) 51966);
        char[] charArray57 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter48.write(charArray57);
        printWriter35.print(charArray57);
        printWriter22.print(charArray57);
        // The following exception was thrown during execution in test generation
        try {
            printWriter13.write(charArray57, 98, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[ , a,  , #, #, a]");
    }

    @Test
    public void test16230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16230");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println(7);
        printWriter1.write("L834812042");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print((double) (-1107296256));
        printWriter1.print(6224375411464273929L);
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor48 = classWriter42.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = classWriter42.visitAnnotation("", true);
        classWriter42.visitOuterClass("hi!", "", "");
        int int58 = classWriter42.newNameType("L454715523", "L2036836790");
        printWriter1.print((java.lang.Object) int58);
        printWriter1.write(218169344);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(fieldVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 8 + "'", int58 == 8);
    }

    @Test
    public void test16231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16231");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray30 = classWriter17.toByteArray();
        org.mockito.asm.ByteVector byteVector33 = byteVector13.putByteArray(byteArray30, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray30);
        long long36 = classReader34.readLong((int) (byte) 100);
        long long38 = classReader34.readLong((int) (byte) 10);
        java.lang.String[] strArray39 = classReader34.getInterfaces();
        aSMifierClassVisitor4.visit((int) (byte) 1, (-1), "", "hi!", "", strArray39);
        aSMifierClassVisitor4.visitOuterClass("L1434348811", "L326432149", "L994489370");
        aSMifierClassVisitor4.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor4.visitAnnotation("L2113189186", true);
        java.util.List list49 = aSMifierClassVisitor4.getText();
        aSMifierClassVisitor4.visitOuterClass("L1216476214", "L137501116", "L1962766465");
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        int[] intArray70 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label68, intArray70, labelArray71);
        java.util.List list73 = aSMifierMethodVisitor62.getText();
        printWriter59.println((java.lang.Object) list73);
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter((java.io.Writer) printWriter59);
        boolean boolean76 = printWriter59.checkError();
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor4.visitField(140, "L532245627", "L1624260612", "L1864262327", (java.lang.Object) printWriter59);
        java.io.PrintWriter printWriter79 = printWriter59.append('4');
        printWriter79.println(1970431233);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 8532477865490146625L + "'", long36 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 72057598333118569L + "'", long38 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(printWriter79);
    }

    @Test
    public void test16232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16232");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("hi!", "");
        org.mockito.asm.ClassWriter classWriter10 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter10.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = classWriter10.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor16.visitArray("hi!");
        org.mockito.asm.FieldVisitor fieldVisitor19 = aSMifierClassVisitor1.visitField(3, "hi!", "hi!", "hi!", (java.lang.Object) annotationVisitor16);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor1.visitAnnotation("L1853824624", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierClassVisitor1.visitAnnotation("L939261813", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor30.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor30.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor30.visitAnnotationDefault();
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor30.visitLabel(label44);
        java.lang.Object obj46 = null;
        aSMifierMethodVisitor30.visitLdcInsn(obj46);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor30.visitAnnotation("L1669980843", false);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((-889275714));
        printWriter52.print(0.0d);
        aSMifierMethodVisitor30.print(printWriter52);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor30.visitParameterAnnotation(1, "L1853824624", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor30.visitParameterAnnotation(22, "L666971223", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = annotationVisitor65.visitArray("L964051540");
        org.mockito.asm.FieldVisitor fieldVisitor68 = aSMifierClassVisitor1.visitField(111, "L656574101", "L503616188", "L1491461890", (java.lang.Object) annotationVisitor67);
        aSMifierClassVisitor1.visitInnerClass("L1164464418", "L425688116", "L2136361019", (int) (short) 4);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor68);
    }

    @Test
    public void test16233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16233");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        java.util.Locale locale17 = null;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        int int47 = classReader43.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray48 = classReader43.getInterfaces();
        java.io.PrintWriter printWriter49 = printWriter6.format(locale17, "L1434348811", (java.lang.Object[]) strArray48);
        printWriter6.print(18);
        printWriter6.close();
        boolean boolean53 = printWriter6.checkError();
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 51966 + "'", int47 == 51966);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test16234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16234");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L174478886", 33);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "L1340859678", false);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "L432974808", "L1506491873", "L2080166350");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test16235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16235");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        printWriter31.write("L2113189186");
        printWriter31.print((double) 16);
        java.io.PrintWriter printWriter62 = printWriter31.append((java.lang.CharSequence) "L1230702653", 2, (int) (short) 10);
        printWriter31.flush();
        printWriter31.print("hi!");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter62);
    }

    @Test
    public void test16236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16236");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        short short30 = classReader24.readShort((int) (short) 100);
        java.lang.String str31 = classReader24.getSuperName();
        int int32 = classReader24.header;
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter(classReader24, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter34.visitAnnotation("", true);
        classWriter34.visitSource("L943959020", "L337574950");
        int int42 = classWriter34.newUTF8("L1103251756");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitCode();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor47.visitTryCatchBlock(label49, label50, label51, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor47.visitAnnotationDefault();
        aSMifierMethodVisitor47.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor47.visitParameterAnnotation(26, "L1556845882", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor47.visitAnnotation("L2114156461", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = annotationVisitor62.visitAnnotation("L1700715189", "L465488266");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter34.visitField(28275, "L878211700", "L70782547", "L2026162020", (java.lang.Object) annotationVisitor62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.util.ASMifierAnnotationVisitor@3625988a");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short30 + "' != '" + (short) 30313 + "'", short30 == (short) 30313);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 118 + "'", int32 == 118);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor65);
    }

    @Test
    public void test16237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16237");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotation("L1808073265", true);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -17730, 339);
        aSMifierMethodVisitor0.visitFieldInsn(123, "L1960331274", "L1570018250", "L480584989");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test16238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16238");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter16.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = classWriter16.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor28 = classWriter16.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter16.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter41 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor42 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor42.visit(2, (int) (byte) 0, "", "", "", strArray51);
        classWriter16.visit((int) 'a', (int) '#', "", "", "hi!", strArray51);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor0.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray51, (int) (short) 100, (java.lang.Object[]) labelArray64);
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label70, label71, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (byte) -1, (int) (short) 9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor28);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
    }

    @Test
    public void test16239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16239");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray30 = classWriter17.toByteArray();
        org.mockito.asm.ByteVector byteVector33 = byteVector13.putByteArray(byteArray30, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray30);
        long long36 = classReader34.readLong((int) (byte) 100);
        long long38 = classReader34.readLong((int) (byte) 10);
        java.lang.String[] strArray39 = classReader34.getInterfaces();
        aSMifierClassVisitor4.visit((int) (byte) 1, (-1), "", "hi!", "", strArray39);
        aSMifierClassVisitor4.visitSource("L78149900", "L888698528");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 8532477865490146625L + "'", long36 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 72057598333118569L + "'", long38 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray39);
    }

    @Test
    public void test16240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16240");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        aSMifierMethodVisitor0.visitTypeInsn(8, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "hi!", false);
        annotationVisitor22.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = annotationVisitor22.visitAnnotation("L904580930", "");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test16241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16241");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter16.visitAnnotation("L2113189186", true);
        java.lang.Object obj32 = null;
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter16.visitField((int) (short) 30313, "L2113189186", "L1434348811", "L61669440", obj32);
        classWriter16.visitSource("L1749641217", "L1544572272");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter16.visitAnnotation("L2113189186", true);
        classWriter16.visitInnerClass("L2112385861", "L967033583", "L97937772", (int) (short) 9);
        int int49 = classWriter16.newMethod("", "L1216476214", "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = classWriter16.visitAnnotation("L1394342338", true);
        int int57 = classWriter16.newMethod("L532245627", "L1103687773", "L490367469", true);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 15 + "'", int49 == 15);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 22 + "'", int57 == 22);
    }

    @Test
    public void test16242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16242");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L994489370");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor41.visitOuterClass("L337574950", "L659269359", "L1592299270");
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter57 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter57.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = classWriter57.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor69 = classWriter57.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray70 = classWriter57.toByteArray();
        org.mockito.asm.ByteVector byteVector73 = byteVector53.putByteArray(byteArray70, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader74 = new org.mockito.asm.ClassReader(byteArray70);
        long long76 = classReader74.readLong((int) (byte) 100);
        long long78 = classReader74.readLong((int) (byte) 10);
        short short80 = classReader74.readShort(1);
        java.lang.String[] strArray81 = classReader74.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor41.visitMethod(114, "L407895089", "L139888629", "L231657813", strArray81);
        org.mockito.asm.AnnotationVisitor annotationVisitor86 = methodVisitor82.visitParameterAnnotation(37, "L1628955470", true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor69);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 8532477865490146625L + "'", long76 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 72057598333118569L + "'", long78 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short80 + "' != '" + (short) -326 + "'", short80 == (short) -326);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(methodVisitor82);
        org.junit.Assert.assertNotNull(annotationVisitor86);
    }

    @Test
    public void test16243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16243");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.lang.Object obj37 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj37);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((int) 'a');
        printWriter40.println("");
        printWriter40.print((float) 590080L);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter40, true);
        printWriter48.println('a');
        printWriter48.print(9);
        printWriter48.print((double) 2817);
        printWriter48.print((double) 590080L);
        printWriter48.println(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        printWriter48.println(true);
        printWriter48.println(32);
        aSMifierMethodVisitor0.print(printWriter48);
        java.util.List list65 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "L1910908242", true);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(annotationVisitor69);
    }

    @Test
    public void test16244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16244");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation(1702035712, "L173547556", false);
        aSMifierMethodVisitor0.visitIntInsn(53, 28526);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test16245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16245");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter75.println((double) 100);
        printWriter75.print(10L);
        printWriter75.println((long) 116);
        printWriter75.println("L4743655");
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test16246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16246");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.Attribute[] attributeArray31 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor33.visitLineNumber((int) (byte) 10, label43);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        int[] intArray56 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label54, intArray56, labelArray57);
        aSMifierMethodVisitor33.visitTableSwitchInsn((int) (byte) 0, 51966, label47, labelArray57);
        aSMifierMethodVisitor0.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray31, (int) '4', (java.lang.Object[]) labelArray57);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), (int) '#');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(7, (int) ' ');
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor0.visitParameterAnnotation(9, "L290335602", true);
        aSMifierMethodVisitor0.visitFieldInsn(11, "L1150302951", "L1761736395", "L723576843");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(0, 47806);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(attributeArray31);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(annotationVisitor71);
    }

    @Test
    public void test16247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16247");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        printWriter9.print(9);
        printWriter9.print((double) 2817);
        printWriter9.print((double) 590080L);
        printWriter9.write("L1669980843", 86, (int) (short) -1);
        printWriter9.println((-1107296256));
        printWriter9.println(true);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((int) 'a');
        printWriter27.println("");
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((-889275714));
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        java.io.PrintWriter printWriter63 = printWriter33.format(locale36, "hi!", (java.lang.Object[]) labelArray60);
        printWriter63.print((int) '4');
        java.io.PrintWriter printWriter67 = printWriter63.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        printWriter69.print(0.0d);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter("hi!");
        char[] charArray83 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter76.print(charArray83);
        printWriter69.write(charArray83);
        printWriter67.println(charArray83);
        printWriter27.print(charArray83);
        printWriter9.print(charArray83);
        printWriter9.write((int) (short) -326);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, a,  , a,  , #]");
    }

    @Test
    public void test16248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16248");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        byte[] byteArray72 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader73 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72, (int) (byte) 0, 0);
        org.mockito.asm.ClassWriter classWriter78 = new org.mockito.asm.ClassWriter(classReader76, 110);
        int int79 = classReader76.getAccess();
        // The following exception was thrown during execution in test generation
        try {
            int int81 = classReader76.readByte(329);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 329");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 15, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 12, 0, 1, 0, 1, 3, 0, 0, 0, 97, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 9, 0, 0, 0, 2, 0, 3, 0, 10, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 9, 0, 0, 0, 2, 0, 4, 0, 11, 0, 0, 0, 0, 0, 10, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 10, 0, 0, 0, 2, 0, 1, 0, 12, 0, 0, 0, 2, 0, 1, 0, 13, 0, 0, 0, 0, 0, 14, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 35 + "'", int79 == 35);
    }

    @Test
    public void test16249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16249");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L406814154", true);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 28275, "L1459649577", true);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test16250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16250");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        printWriter1.println((int) (short) 9);
        printWriter1.print((long) (-1));
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter1.println();
        printWriter1.print((long) 65792);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test16251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16251");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitCode();
        aSMifierMethodVisitor26.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor55.visitLabel(label61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor64.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor64.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor64.visitLineNumber((int) (byte) 10, label74);
        aSMifierMethodVisitor64.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor64.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label85 = new org.mockito.asm.Label();
        aSMifierMethodVisitor64.visitLineNumber(4, label85);
        aSMifierMethodVisitor55.visitLineNumber((int) (short) 10, label85);
        aSMifierMethodVisitor26.visitLabel(label85);
        aSMifierMethodVisitor26.visitIincInsn(34, 28);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor26.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test16252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16252");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMethodInsn(0, "L298663367", "L96121905", "");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L2101667039", (int) (byte) 0);
        aSMifierMethodVisitor0.visitTypeInsn(115, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor44.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor44.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor44.visitLineNumber((int) (byte) 10, label54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor44.visitAnnotation("hi!", true);
        aSMifierMethodVisitor44.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor63.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor63.visitLineNumber((int) (byte) 10, label73);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label84 = null;
        int[] intArray86 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor78.visitLookupSwitchInsn(label84, intArray86, labelArray87);
        aSMifierMethodVisitor63.visitTableSwitchInsn((int) (byte) 0, 51966, label77, labelArray87);
        org.mockito.asm.Label label90 = null;
        aSMifierMethodVisitor63.visitLabel(label90);
        org.mockito.asm.Label label92 = new org.mockito.asm.Label();
        aSMifierMethodVisitor63.visitLabel(label92);
        aSMifierMethodVisitor44.visitJumpInsn((int) (short) 10, label92);
        java.lang.String str95 = label92.toString();
        org.mockito.asm.Label label96 = null;
        aSMifierMethodVisitor0.visitLocalVariable("L344842840", "L1123989782", "L1067926277", label92, label96, (-1107296256));
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1]");
        org.junit.Assert.assertNotNull(labelArray87);
// flaky:         org.junit.Assert.assertEquals("'" + str95 + "' != '" + "L1987413897" + "'", str95, "L1987413897");
    }

    @Test
    public void test16253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16253");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        java.lang.Object[] objArray40 = null;
        java.io.PrintWriter printWriter41 = printWriter31.printf("L1065942246", objArray40);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        java.util.List list57 = aSMifierMethodVisitor46.getText();
        printWriter43.println((java.lang.Object) list57);
        printWriter43.write((-889275714));
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.Writer) printWriter43);
        printWriter43.println((double) (-91551935198396416L));
        printWriter43.println("L1669980843");
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor70.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label76 = null;
        int[] intArray78 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor70.visitLookupSwitchInsn(label76, intArray78, labelArray79);
        java.util.List list81 = aSMifierMethodVisitor70.getText();
        printWriter67.println((java.lang.Object) list81);
        printWriter67.print((double) 10L);
        printWriter67.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor87 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        printWriter67.println((float) 590080L);
        printWriter67.print((float) 4);
        printWriter67.println();
        char[] charArray95 = new char[] { '#', '4' };
        printWriter67.println(charArray95);
        printWriter43.println(charArray95);
        printWriter31.write(charArray95);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(list57);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1]");
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertNotNull(charArray95);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray95), "#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray95), "#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray95), "[#, 4]");
    }

    @Test
    public void test16254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16254");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label15 = null;
        int[] intArray21 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLineNumber((int) (byte) 10, label32);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label43 = null;
        int[] intArray45 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray46 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor37.visitLookupSwitchInsn(label43, intArray45, labelArray46);
        aSMifierMethodVisitor22.visitTableSwitchInsn((int) (byte) 0, 51966, label36, labelArray46);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label15, intArray21, labelArray46);
        aSMifierMethodVisitor0.visitMaxs(29, (-1161953280));
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1805888593", 1536);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        printWriter57.print((-889275714));
        java.util.Locale locale60 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor64.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label70 = null;
        int[] intArray72 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray73 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor64.visitLookupSwitchInsn(label70, intArray72, labelArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor75.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label81 = null;
        int[] intArray83 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray84 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor75.visitLookupSwitchInsn(label81, intArray83, labelArray84);
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label63, intArray72, labelArray84);
        java.io.PrintWriter printWriter87 = printWriter57.format(locale60, "hi!", (java.lang.Object[]) labelArray84);
        java.lang.Object[] objArray89 = null;
        java.io.PrintWriter printWriter90 = printWriter57.printf("", objArray89);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor91 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter90);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor91);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1]");
        org.junit.Assert.assertNotNull(labelArray46);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1]");
        org.junit.Assert.assertNotNull(labelArray73);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1]");
        org.junit.Assert.assertNotNull(labelArray84);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test16255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16255");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation(151060480, "hi!", false);
        aSMifierMethodVisitor0.visitVarInsn(1, 324);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLabel(label22);
        aSMifierMethodVisitor0.visitTypeInsn(190, "L674352908");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, 1869509492);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test16256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16256");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        org.mockito.asm.ClassReader classReader47 = new org.mockito.asm.ClassReader(byteArray45);
        byte[] byteArray48 = classReader47.b;
        byte[] byteArray49 = classReader47.b;
        short short51 = classReader47.readShort(115);
        org.mockito.asm.ClassWriter classWriter53 = new org.mockito.asm.ClassWriter(classReader47, 6);
        int int56 = classWriter53.newNameType("L70131839", "L432974808");
        classWriter53.visitOuterClass("L1892091981", "L1394342338", "L422154835");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + short51 + "' != '" + (short) 28526 + "'", short51 == (short) 28526);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 11 + "'", int56 == 11);
    }

    @Test
    public void test16257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16257");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 4, "L1651106531", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = annotationVisitor60.visitAnnotation("L1285969608", "L674352908");
        annotationVisitor60.visit("L1407330455", (java.lang.Object) "L121647365");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test16258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16258");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor18.visitLineNumber((int) (byte) 10, label28);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        aSMifierMethodVisitor18.visitTableSwitchInsn((int) (byte) 0, 51966, label32, labelArray42);
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor18.visitLabel(label45);
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label47);
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor50.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor50.visitAnnotation("hi!", false);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLineNumber(10, label66);
        aSMifierMethodVisitor0.visitTryCatchBlock(label47, label49, label66, "L1434348811");
        aSMifierMethodVisitor0.visitIntInsn(100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((-889275714), 7);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor0.visitParameterAnnotation(1853060193, "L96121905", false);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(annotationVisitor81);
    }

    @Test
    public void test16259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16259");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.util.Locale locale23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        aSMifierMethodVisitor25.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label40 = null;
        int[] intArray46 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor47.visitLineNumber((int) (byte) 10, label57);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        int[] intArray70 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label68, intArray70, labelArray71);
        aSMifierMethodVisitor47.visitTableSwitchInsn((int) (byte) 0, 51966, label61, labelArray71);
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label40, intArray46, labelArray71);
        java.io.PrintWriter printWriter75 = printWriter1.printf(locale23, "L1669980843", (java.lang.Object[]) labelArray71);
        printWriter75.println("L994489370");
        java.util.Locale locale78 = null;
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter81 = printWriter75.printf(locale78, "L459227517", (java.lang.Object[]) strArray80);
        char[] charArray86 = new char[] { ' ', 'a', '#', '#' };
        printWriter75.println(charArray86);
        printWriter75.print((float) 7020114995832686931L);
        printWriter75.write("L1103251756", 65210, (int) (byte) 0);
        printWriter75.println("L1541482702");
        printWriter75.print("L1247828331");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), " a##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), " a##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[ , a, #, #]");
    }

    @Test
    public void test16260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16260");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label63);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (byte) 0);
        java.util.List list69 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn(25, (int) (byte) -1);
        aSMifierMethodVisitor0.visitIincInsn(590080, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L2041941526", 1951818092);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
        org.junit.Assert.assertNotNull(list69);
    }

    @Test
    public void test16261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16261");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor19.visitLineNumber((int) (byte) 10, label29);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor19.visitTableSwitchInsn((int) (byte) 0, 51966, label33, labelArray43);
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor19.visitLabel(label46);
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        aSMifierMethodVisitor19.visitLabel(label48);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label48);
        java.io.PrintWriter printWriter51 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor52 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        aSMifierClassVisitor52.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor52.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, 0);
        aSMifierMethodVisitor0.visitMethodInsn(18, "L169779857", "L106018564", "L117134386");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test16262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16262");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        fieldVisitor24.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = fieldVisitor24.visitAnnotation("L1035698796", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = fieldVisitor24.visitAnnotation("L562171266", true);
        org.mockito.asm.Attribute attribute32 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor24.visitAttribute(attribute32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test16263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16263");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitIincInsn(2, 10);
        aSMifierMethodVisitor0.visitMaxs(0, 33619981);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test16264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16264");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor28.visit(2, (int) (byte) 0, "", "", "", strArray37);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "L1434348811");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (short) -326, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, 28526);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1133749595", 210);
        org.mockito.asm.Attribute attribute62 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test16265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16265");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray34 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector37 = byteVector17.putByteArray(byteArray34, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader38 = new org.mockito.asm.ClassReader(byteArray34);
        long long40 = classReader38.readLong((int) (byte) 100);
        long long42 = classReader38.readLong((int) (byte) 10);
        java.lang.String[] strArray43 = classReader38.getInterfaces();
        int int45 = classReader38.readByte((int) '#');
        long long47 = classReader38.readLong(4);
        int int48 = classReader38.header;
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader38, (int) (byte) 0);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classWriter50);
        aSMifierMethodVisitor0.visitMaxs(1, 25929);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(28);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1720168318", (-889275714));
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor0.visitParameterAnnotation(51966, "L1749641217", false);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 8532477865490146625L + "'", long40 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 72057598333118569L + "'", long42 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 86 + "'", int45 == 86);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 590080L + "'", long47 == 590080L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 118 + "'", int48 == 118);
        org.junit.Assert.assertNotNull(annotationVisitor65);
    }

    @Test
    public void test16266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16266");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        printWriter9.print(9);
        java.io.PrintWriter printWriter15 = printWriter9.append('#');
        java.io.PrintWriter printWriter17 = printWriter15.append((java.lang.CharSequence) "L309204558");
        printWriter17.write("L1620871785");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter17);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter17);
        org.mockito.asm.ClassWriter classWriter27 = new org.mockito.asm.ClassWriter(100);
        classWriter27.visitInnerClass("L836986691", "L2076399201", "L614568462", 65210);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        long long63 = classReader61.readLong((int) (byte) 100);
        long long65 = classReader61.readLong((int) (byte) 10);
        int int67 = classReader61.readUnsignedShort(0);
        int int69 = classReader61.readUnsignedShort(3);
        long long71 = classReader61.readLong(8);
        byte[] byteArray72 = classReader61.b;
        org.mockito.asm.ClassWriter classWriter74 = new org.mockito.asm.ClassWriter(classReader61, (int) (short) -326);
        byte[] byteArray75 = classReader61.b;
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray75);
        int int78 = classReader76.readByte((int) (byte) 100);
        java.lang.String[] strArray79 = classReader76.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor80 = classWriter27.visitMethod(25, "L1644755393", "L78149900", "L845352536", strArray79);
        org.mockito.asm.MethodVisitor methodVisitor81 = aSMifierClassVisitor21.visitMethod(28, "L142696279", "L1890580259", "L56171884", strArray79);
        aSMifierClassVisitor21.visitOuterClass("L1620871785", "L217177050", "L845352536");
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(printWriter17);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 8532477865490146625L + "'", long63 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 72057598333118569L + "'", long65 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 51966 + "'", int67 == 51966);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 48640 + "'", int69 == 48640);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 2534374302089219L + "'", long71 == 2534374302089219L);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 118 + "'", int78 == 118);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(methodVisitor80);
        org.junit.Assert.assertNotNull(methodVisitor81);
    }

    @Test
    public void test16267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16267");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray30 = classWriter17.toByteArray();
        org.mockito.asm.ByteVector byteVector33 = byteVector13.putByteArray(byteArray30, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray30);
        long long36 = classReader34.readLong((int) (byte) 100);
        long long38 = classReader34.readLong((int) (byte) 10);
        java.lang.String[] strArray39 = classReader34.getInterfaces();
        aSMifierClassVisitor4.visit((int) (byte) 1, (-1), "", "hi!", "", strArray39);
        aSMifierClassVisitor4.visitOuterClass("L1434348811", "L326432149", "L994489370");
        aSMifierClassVisitor4.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor4.visitAnnotation("L2113189186", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierClassVisitor4.visitAnnotation("L598840791", false);
        aSMifierClassVisitor4.visitOuterClass("L1684292261", "L1509083155", "L704540978");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 8532477865490146625L + "'", long36 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 72057598333118569L + "'", long38 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test16268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16268");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), 17);
        java.util.List list22 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 1);
        aSMifierMethodVisitor0.visitVarInsn(0, 24);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitParameterAnnotation(57174305, "L1459078187", true);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test16269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16269");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor19.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list31 = aSMifierMethodVisitor19.text;
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter35.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter35.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter60 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor61.visit(2, (int) (byte) 0, "", "", "", strArray70);
        classWriter35.visit((int) 'a', (int) '#', "", "", "hi!", strArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor74.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label80 = null;
        int[] intArray82 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor74.visitLookupSwitchInsn(label80, intArray82, labelArray83);
        aSMifierMethodVisitor19.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray70, (int) (short) 100, (java.lang.Object[]) labelArray83);
        classWriter1.visit((int) 'a', (int) (short) 30313, "hi!", "hi!", "", strArray70);
        int int88 = classWriter1.newUTF8("L2113189186");
        classWriter1.visitOuterClass("L2113189186", "L1715840275", "L1284973471");
        org.mockito.asm.Attribute attribute93 = null;
        // The following exception was thrown during execution in test generation
        try {
            classWriter1.visitAttribute(attribute93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1]");
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 6 + "'", int88 == 6);
    }

    @Test
    public void test16270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16270");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        short short30 = classReader24.readShort((int) (short) 100);
        java.lang.String str31 = classReader24.getSuperName();
        int int32 = classReader24.header;
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter(classReader24, 0);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        java.util.List list50 = aSMifierMethodVisitor39.getText();
        printWriter36.println((java.lang.Object) list50);
        printWriter36.print((double) 10L);
        printWriter36.print(false);
        printWriter36.println(false);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter36);
        printWriter58.println((int) (byte) -1);
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter69 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter69.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = classWriter69.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor81 = classWriter69.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray82 = classWriter69.toByteArray();
        org.mockito.asm.ByteVector byteVector85 = byteVector65.putByteArray(byteArray82, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader86 = new org.mockito.asm.ClassReader(byteArray82);
        long long88 = classReader86.readLong((int) (byte) 100);
        long long90 = classReader86.readLong((int) (byte) 10);
        java.lang.String[] strArray91 = classReader86.getInterfaces();
        int int93 = classReader86.readInt(0);
        byte[] byteArray94 = classReader86.b;
        java.lang.String[] strArray95 = classReader86.getInterfaces();
        java.io.PrintWriter printWriter96 = printWriter58.format("L801849928", (java.lang.Object[]) strArray95);
        printWriter58.println((long) 1699311222);
        int int99 = classWriter34.newConst((java.lang.Object) 1699311222);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short30 + "' != '" + (short) 30313 + "'", short30 == (short) 30313);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 118 + "'", int32 == 118);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(fieldVisitor81);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 8532477865490146625L + "'", long88 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 72057598333118569L + "'", long90 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-889275714) + "'", int93 == (-889275714));
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(printWriter96);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 9 + "'", int99 == 9);
    }

    @Test
    public void test16271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16271");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj25);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L757645454", false);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test16272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16272");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label2, label3, label4, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor12.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor10.visitLdcInsn((java.lang.Object) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor25.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor25.visitLineNumber((int) (byte) 10, label35);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        aSMifierMethodVisitor25.visitTableSwitchInsn((int) (byte) 0, 51966, label39, labelArray49);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor25.visitLabel(label52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor57.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor70.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor70.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor70.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor70.visitAnnotation("hi!", false);
        org.mockito.asm.Label label86 = new org.mockito.asm.Label();
        aSMifierMethodVisitor70.visitLineNumber(10, label86);
        aSMifierMethodVisitor57.visitLineNumber(1, label86);
        org.mockito.asm.Label label89 = new org.mockito.asm.Label();
        aSMifierMethodVisitor25.visitLocalVariable("hi!", "L1434348811", "L326432149", label86, label89, 9);
        aSMifierMethodVisitor10.visitJumpInsn((int) (short) 1, label89);
        java.lang.String str93 = label89.toString();
        java.lang.String str94 = label89.toString();
        java.lang.String str95 = label89.toString();
        aSMifierMethodVisitor0.visitJumpInsn(7, label89);
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor84);
// flaky:         org.junit.Assert.assertEquals("'" + str93 + "' != '" + "L143420361" + "'", str93, "L143420361");
// flaky:         org.junit.Assert.assertEquals("'" + str94 + "' != '" + "L143420361" + "'", str94, "L143420361");
// flaky:         org.junit.Assert.assertEquals("'" + str95 + "' != '" + "L143420361" + "'", str95, "L143420361");
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test16273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16273");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor19.visitLineNumber((int) (byte) 10, label29);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor19.visitTableSwitchInsn((int) (byte) 0, 51966, label33, labelArray43);
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor19.visitLabel(label46);
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        aSMifierMethodVisitor19.visitLabel(label48);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label48);
        java.io.PrintWriter printWriter51 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor52 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        aSMifierClassVisitor52.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor52.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitParameterAnnotation(1, "L298663367", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(1853118049);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1853118049");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test16274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16274");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L454715523");
        java.util.Locale locale2 = null;
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter5);
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierClassVisitor8.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter23.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = classWriter23.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter23.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray36 = classWriter23.toByteArray();
        org.mockito.asm.ByteVector byteVector39 = byteVector19.putByteArray(byteArray36, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray36);
        long long42 = classReader40.readLong((int) (byte) 100);
        int int44 = classReader40.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray45 = classReader40.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor46 = aSMifierClassVisitor8.visitMethod(0, "hi!", "L994489370", "hi!", strArray45);
        java.io.PrintWriter printWriter47 = printWriter1.format(locale2, "L1715840275", (java.lang.Object[]) strArray45);
        printWriter1.print((float) ' ');
        printWriter1.println(true);
        printWriter1.print((long) 223337);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 8532477865490146625L + "'", long42 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 51966 + "'", int44 == 51966);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodVisitor46);
        org.junit.Assert.assertNotNull(printWriter47);
    }

    @Test
    public void test16275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16275");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter16.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = classWriter16.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor28 = classWriter16.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter16.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter41 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor42 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor42.visit(2, (int) (byte) 0, "", "", "", strArray51);
        classWriter16.visit((int) 'a', (int) '#', "", "", "hi!", strArray51);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor0.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray51, (int) (short) 100, (java.lang.Object[]) labelArray64);
        org.mockito.asm.ByteVector byteVector68 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector74 = byteVector70.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putUTF8("");
        org.mockito.asm.ByteVector byteVector78 = byteVector74.putByte(6);
        org.mockito.asm.ByteVector byteVector80 = byteVector74.putUTF8("L601661571");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L601661571");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(1869509492, "L142696279", "L1840320186", "L371765247");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor28);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
    }

    @Test
    public void test16276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16276");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter77 = printWriter75.append((java.lang.CharSequence) "L801849928");
        printWriter77.println('4');
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test16277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16277");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        java.util.List list47 = aSMifierMethodVisitor24.text;
        aSMifierMethodVisitor24.visitIntInsn((int) '#', (int) (byte) 1);
        aSMifierMethodVisitor24.visitTypeInsn(30, "");
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("L926821323", (int) '4');
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test16278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16278");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        int int52 = classReader48.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        java.io.PrintWriter printWriter54 = printWriter1.printf("", (java.lang.Object[]) strArray53);
        printWriter54.print("L61669440");
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter54, false);
        printWriter54.println("L967033583");
        printWriter54.write(12);
        printWriter54.write("L1230702653");
        printWriter54.println("L619486509");
        printWriter54.write("L1714647436");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 51966 + "'", int52 == 51966);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test16279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16279");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor0.visitInsn(8);
        aSMifierMethodVisitor0.visitIntInsn(118, 2817);
        aSMifierMethodVisitor0.visitFieldInsn(5, "L2080075526", "L841406722", "L1067926277");
        aSMifierMethodVisitor0.visitTypeInsn(0, "L2036836790");
    }

    @Test
    public void test16280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16280");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.flush();
        printWriter1.print((float) 13);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter14 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter14);
        aSMifierClassVisitor15.visitSource("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label29 = null;
        int[] intArray31 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor23.visitLookupSwitchInsn(label29, intArray31, labelArray32);
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor15.visitField(1, "", "hi!", "", (java.lang.Object) label29);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("L365115101");
        printWriter40.print((float) 2305);
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter51 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter51.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = classWriter51.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor63 = classWriter51.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray64 = classWriter51.toByteArray();
        org.mockito.asm.ByteVector byteVector67 = byteVector47.putByteArray(byteArray64, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader68 = new org.mockito.asm.ClassReader(byteArray64);
        short short70 = classReader68.readShort(8);
        short short72 = classReader68.readShort((int) (byte) 10);
        int int74 = classReader68.readInt(4);
        int int75 = classReader68.header;
        java.lang.String str76 = classReader68.getSuperName();
        java.lang.String[] strArray77 = classReader68.getInterfaces();
        java.io.PrintWriter printWriter78 = printWriter40.printf("L1971845046", (java.lang.Object[]) strArray77);
        org.mockito.asm.MethodVisitor methodVisitor79 = aSMifierClassVisitor15.visitMethod(86, "L1458772522", "L1551451605", "L2059466789", strArray77);
        org.mockito.asm.MethodVisitor methodVisitor80 = aSMifierClassVisitor9.visitMethod((int) (short) -16896, "hi!", "L194658678", "L815733228", strArray77);
        aSMifierClassVisitor9.visitInnerClass("L1728108157", "L1135610391", "L674352908", 2817);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertTrue("'" + short70 + "' != '" + (short) 9 + "'", short70 == (short) 9);
        org.junit.Assert.assertTrue("'" + short72 + "' != '" + (short) 256 + "'", short72 == (short) 256);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 118 + "'", int75 == 118);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(methodVisitor79);
        org.junit.Assert.assertNotNull(methodVisitor80);
    }

    @Test
    public void test16281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16281");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "L454715523", false);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1855806886", (int) (short) 9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test16282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16282");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        printWriter9.print(9);
        printWriter9.print((double) 2817);
        printWriter9.print((double) 590080L);
        printWriter9.write("L1669980843", 86, (int) (short) -1);
        java.io.PrintWriter printWriter23 = printWriter9.append((java.lang.CharSequence) "L1829941255");
        printWriter23.print("L583709824");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter23);
        aSMifierClassVisitor26.visitOuterClass("L1518460396", "", "L1485879534");
        org.junit.Assert.assertNotNull(printWriter23);
    }

    @Test
    public void test16283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16283");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitSource("L1669980843", "L1669980843");
        aSMifierClassVisitor1.visitSource("L2113189186", "");
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter24.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter24.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor36 = classWriter24.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray37 = classWriter24.toByteArray();
        org.mockito.asm.ByteVector byteVector40 = byteVector20.putByteArray(byteArray37, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader41 = new org.mockito.asm.ClassReader(byteArray37);
        long long43 = classReader41.readLong((int) (byte) 100);
        long long45 = classReader41.readLong((int) (byte) 10);
        java.lang.String[] strArray46 = classReader41.getInterfaces();
        int int48 = classReader41.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader41, 0);
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter(classReader41, (int) (short) 1);
        classWriter52.visitSource("L1669980843", "L1669980843");
        int int57 = classWriter52.newUTF8("L459227517");
        org.mockito.asm.FieldVisitor fieldVisitor58 = aSMifierClassVisitor1.visitField(57174305, "L237245406", "L1216476214", "L298663367", (java.lang.Object) "L459227517");
        aSMifierClassVisitor1.visitInnerClass("L326432149", "L598840791", "", (int) (short) -326);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "L237245406", 65210);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor73.visitCode();
        aSMifierMethodVisitor73.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor73.visitAnnotation("hi!", false);
        aSMifierMethodVisitor73.visitMethodInsn(1, "L142696279", "L994489370", "L326432149");
        org.mockito.asm.FieldVisitor fieldVisitor91 = aSMifierClassVisitor1.visitField((-1161953280), "L139692246", "L994489370", "", (java.lang.Object) aSMifierMethodVisitor73);
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierClassVisitor1.visitAnnotation("L659269359", true);
        annotationVisitor94.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor98 = annotationVisitor94.visitAnnotation("L1579492813", "L96121905");
        annotationVisitor94.visitEnd();
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(fieldVisitor36);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 8532477865490146625L + "'", long43 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 72057598333118569L + "'", long45 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor85);
        org.junit.Assert.assertNotNull(fieldVisitor91);
        org.junit.Assert.assertNotNull(annotationVisitor94);
        org.junit.Assert.assertNotNull(annotationVisitor98);
    }

    @Test
    public void test16284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16284");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        boolean boolean19 = printWriter1.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor20.visitSource("L978789454", "");
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter30 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter30.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = classWriter30.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter30.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label28.info = classWriter30;
        int int46 = classWriter30.newNameType("", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter30.visitAnnotation("L142696279", true);
        org.mockito.asm.FieldVisitor fieldVisitor50 = aSMifierClassVisitor20.visitField(321, "L967033583", "L1271688136", "L389484434", (java.lang.Object) true);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = fieldVisitor50.visitAnnotation("L1250170942", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = fieldVisitor50.visitAnnotation("L1135610391", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = annotationVisitor56.visitAnnotation("L851196964", "");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test16285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16285");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(0, 151060480);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMethodInsn(21, "L939261813", "L1764179183", "L459227517");
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "L1722902851", "L1579098349", "L1775421725");
        java.util.List list32 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test16286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16286");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        java.io.PrintWriter printWriter67 = printWriter1.append('#');
        java.io.PrintWriter printWriter69 = printWriter1.append('a');
        java.io.PrintWriter printWriter71 = printWriter69.append('4');
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test16287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16287");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label24.info = classWriter26;
        java.lang.Object obj40 = label24.info;
        aSMifierMethodVisitor0.visitLabel(label24);
        aSMifierMethodVisitor0.visitIntInsn(0, (int) (short) 3);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor45.visitAnnotation("", false);
        aSMifierMethodVisitor45.visitMethodInsn(6, "L994489370", "L61669440", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor55.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor55.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor55.visitAnnotation("hi!", false);
        org.mockito.asm.Label label71 = new org.mockito.asm.Label();
        aSMifierMethodVisitor55.visitLineNumber(10, label71);
        java.lang.String str73 = label71.toString();
        aSMifierMethodVisitor45.visitLineNumber(16778088, label71);
        aSMifierMethodVisitor45.visitFieldInsn(114, "L1444913603", "L121647365", "L281240074");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L121647365");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L2049077574", 1702035712);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor69);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L2001826349" + "'", str73, "L2001826349");
    }

    @Test
    public void test16288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16288");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("L544338606", false);
        aSMifierMethodVisitor0.visitIntInsn(15, 872);
        aSMifierMethodVisitor0.visitIincInsn(29801, 1986622313);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation(131328, "L1123612854", false);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test16289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16289");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        aSMifierClassVisitor22.visitSource("L994489370", "L666971223");
        aSMifierClassVisitor22.visitOuterClass("L1691870655", "L1845262982", "L994489370");
        org.mockito.asm.FieldVisitor fieldVisitor52 = aSMifierClassVisitor22.visitField((int) (byte) 100, "L1230702653", "L1216476214", "L834812042", (java.lang.Object) "L2113189186");
        aSMifierClassVisitor22.visitSource("L2018459260", "L298663367");
        aSMifierClassVisitor22.visitSource("L1734603415", "L1858624456");
        java.util.List list59 = aSMifierClassVisitor22.getText();
        org.mockito.asm.Attribute attribute60 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor22.visitAttribute(attribute60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(list59);
    }

    @Test
    public void test16290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16290");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitInsn((int) (short) 1);
        java.util.List list45 = aSMifierMethodVisitor24.getText();
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("L2072201856", 22);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor24.visitAnnotationDefault();
        org.mockito.asm.Attribute attribute50 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitAttribute(attribute50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test16291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16291");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        java.io.PrintWriter printWriter89 = printWriter1.format(locale20, "hi!", (java.lang.Object[]) labelArray86);
        printWriter1.print((int) (byte) 1);
        printWriter1.close();
        printWriter1.print('4');
        java.io.PrintWriter printWriter96 = printWriter1.append((java.lang.CharSequence) "L1230702653");
        printWriter96.close();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test16292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16292");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        boolean boolean23 = printWriter19.checkError();
        java.io.PrintWriter printWriter25 = printWriter19.append((java.lang.CharSequence) "L2113189186");
        printWriter25.flush();
        printWriter25.print(false);
        java.io.PrintWriter printWriter30 = printWriter25.append('a');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter30);
    }

    @Test
    public void test16293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16293");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        java.util.List list24 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1691870655", 24942);
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter29.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter29.visitAnnotation("", true);
        byte[] byteArray39 = classWriter29.toByteArray();
        int int43 = classWriter29.newField("L1482294079", "L1555790481", "L389484434");
        classWriter29.visitOuterClass("L575352164", "L575352164", "L344842840");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L575352164");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor0.visitAnnotation("L1142561338", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitAnnotation("L2099222213", true);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 13, (int) (short) 1);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 6, 1, 0, 0, 3, 0, 0, 0, 0, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 25, 82, 117, 110, 116, 105, 109, 101, 86, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 0, 1, 0, 2, 0, 3, 0, 0, 0, 2, 0, 2, 0, 4, 0, 0, 0, 2, 0, 1, 0, 0, 0, 1, 0, 5, 0, 0, 0, 6, 0, 1, 0, 1, 0, 0]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 11 + "'", int43 == 11);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test16294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16294");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter67 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter67.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = classWriter67.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor79 = classWriter67.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray80 = classWriter67.toByteArray();
        org.mockito.asm.ByteVector byteVector83 = byteVector63.putByteArray(byteArray80, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader84 = new org.mockito.asm.ClassReader(byteArray80);
        long long86 = classReader84.readLong((int) (byte) 100);
        long long88 = classReader84.readLong((int) (byte) 10);
        org.mockito.asm.ClassWriter classWriter90 = new org.mockito.asm.ClassWriter(classReader84, (int) (short) 30313);
        org.mockito.asm.FieldVisitor fieldVisitor91 = aSMifierClassVisitor55.visitField(13, "L1284973471", "L1592299270", "L994489370", (java.lang.Object) classWriter90);
        aSMifierClassVisitor55.visitSource("L1632084907", "L555140717");
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = aSMifierClassVisitor55.visitAnnotation("L586649022", false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(fieldVisitor79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 8532477865490146625L + "'", long86 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 72057598333118569L + "'", long88 == 72057598333118569L);
        org.junit.Assert.assertNotNull(fieldVisitor91);
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test16295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16295");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter1.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = classWriter1.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter1.visitField(590080, "hi!", "L1434348811", "hi!", (java.lang.Object) 1L);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print('4');
        printWriter24.print("");
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        int int75 = classReader71.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        java.io.PrintWriter printWriter77 = printWriter24.printf("", (java.lang.Object[]) strArray76);
        classWriter1.visit(1, 86, "hi!", "L142696279", "L2113189186", strArray76);
        classWriter1.visitInnerClass("L943959020", "L1691870655", "L1441782014", 51966);
        classWriter1.visitOuterClass("L1228713414", "L834812042", "L1271688136");
        classWriter1.visitInnerClass("L2095066844", "L419263736", "L888698528", (int) ' ');
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 51966 + "'", int75 == 51966);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test16296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16296");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.flush();
        printWriter1.print((float) 13);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println((double) 123);
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor14.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray29 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor14.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray29, (int) 'a', (java.lang.Object[]) labelArray40);
        java.io.PrintWriter printWriter43 = printWriter1.format(locale12, "", (java.lang.Object[]) attributeArray29);
        printWriter1.print((float) 110);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(attributeArray29);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test16297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16297");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray33 = null;
        org.mockito.asm.MethodVisitor methodVisitor34 = aSMifierClassVisitor28.visitMethod((-1), "", "hi!", "", strArray33);
        org.mockito.asm.FieldVisitor fieldVisitor35 = aSMifierClassVisitor1.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        aSMifierClassVisitor1.visitInnerClass("L1669980843", "L142696279", "", (int) (byte) 100);
        aSMifierClassVisitor1.visitSource("L326432149", "L1715840275");
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter55 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter55.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = classWriter55.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor67 = classWriter55.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray68 = classWriter55.toByteArray();
        org.mockito.asm.ByteVector byteVector71 = byteVector51.putByteArray(byteArray68, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader72 = new org.mockito.asm.ClassReader(byteArray68);
        long long74 = classReader72.readLong((int) (byte) 100);
        long long76 = classReader72.readLong((int) (byte) 10);
        short short78 = classReader72.readShort(1);
        int int80 = classReader72.readUnsignedShort(0);
        java.lang.String[] strArray81 = classReader72.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor1.visitMethod((int) (short) 872, "L96121905", "L61669440", "L1853824624", strArray81);
        aSMifierClassVisitor1.visitOuterClass("L762652875", "L1608560463", "L917265559");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor67);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 8532477865490146625L + "'", long74 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 72057598333118569L + "'", long76 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short78 + "' != '" + (short) -326 + "'", short78 == (short) -326);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 51966 + "'", int80 == 51966);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(methodVisitor82);
    }

    @Test
    public void test16298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16298");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((-889275714));
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label29 = null;
        int[] intArray31 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor23.visitLookupSwitchInsn(label29, intArray31, labelArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor21.visitLookupSwitchInsn(label22, intArray31, labelArray43);
        java.io.PrintWriter printWriter46 = printWriter16.format(locale19, "hi!", (java.lang.Object[]) labelArray43);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        char[] charArray55 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter48.print(charArray55);
        printWriter46.print(charArray55);
        printWriter46.print(true);
        aSMifierMethodVisitor0.print(printWriter46);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1009311081", 16778088);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitAnnotation("L285151538", true);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.ByteVector byteVector69 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector75 = byteVector73.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putUTF8("L1715840275");
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putLong((long) (short) -13570);
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putUTF8("L799304101");
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putUTF8("L1085773562");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L1085773562");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test16299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16299");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 105);
        aSMifierMethodVisitor0.visitIincInsn(324, 28276);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(1769171298, "L1206354579");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test16300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16300");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        java.lang.String[] strArray18 = null;
        aSMifierClassVisitor1.visit((int) (byte) 10, 1, "", "L1434348811", "L326432149", strArray18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor1.visitAnnotation("L967033583", false);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        long long53 = classReader51.readLong((int) (byte) 100);
        long long55 = classReader51.readLong((int) (byte) 10);
        java.lang.String[] strArray56 = classReader51.getInterfaces();
        int int58 = classReader51.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter60 = new org.mockito.asm.ClassWriter(classReader51, 0);
        org.mockito.asm.ClassWriter classWriter62 = new org.mockito.asm.ClassWriter(classReader51, (int) (short) 9);
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter(classReader51, (int) 'a');
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter(classReader51, 13);
        java.lang.String[] strArray67 = classReader51.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor68 = aSMifierClassVisitor1.visitMethod(1634628694, "L1853312656", "L1004430080", "L407895089", strArray67);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 8532477865490146625L + "'", long53 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 72057598333118569L + "'", long55 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(methodVisitor68);
    }

    @Test
    public void test16301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16301");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        java.util.List list23 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs(16779859, 13);
        aSMifierMethodVisitor0.visitIincInsn(29801, 1986622313);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor30.visitLabel(label36);
        aSMifierMethodVisitor30.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor42.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor42.visitAnnotation("hi!", false);
        org.mockito.asm.Label label58 = new org.mockito.asm.Label();
        aSMifierMethodVisitor42.visitLineNumber(10, label58);
        java.lang.String str60 = label58.toString();
        aSMifierMethodVisitor30.visitLineNumber(9, label58);
        aSMifierMethodVisitor0.visitLabel(label58);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = label58.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(annotationVisitor56);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "L315339389" + "'", str60, "L315339389");
    }

    @Test
    public void test16302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16302");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) (short) 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor4 = classWriter1.visitAnnotation("L454715523", false);
        classWriter1.visitOuterClass("", "L1691870655", "L1216476214");
        org.mockito.asm.ClassWriter classWriter14 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter14.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = classWriter14.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter14.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter14.visitEnd();
        classWriter14.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = classWriter14.visitAnnotation("L422154835", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter1.visitField(57174305, "L1421508585", "L1855853747", "L914596724", (java.lang.Object) "L422154835");
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter38);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierClassVisitor41.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter56 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter56.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = classWriter56.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter56.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray69 = classWriter56.toByteArray();
        org.mockito.asm.ByteVector byteVector72 = byteVector52.putByteArray(byteArray69, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader73 = new org.mockito.asm.ClassReader(byteArray69);
        long long75 = classReader73.readLong((int) (byte) 100);
        int int77 = classReader73.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray78 = classReader73.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor79 = aSMifierClassVisitor41.visitMethod(0, "hi!", "L994489370", "hi!", strArray78);
        aSMifierClassVisitor41.visitOuterClass("L1749641217", "L1216476214", "L666971223");
        aSMifierClassVisitor41.visitEnd();
        aSMifierClassVisitor41.visitInnerClass("L2101667039", "L96121905", "", 20);
        org.mockito.asm.FieldVisitor fieldVisitor90 = classWriter1.visitField(256, "L1359835451", "L389484434", "L1533650022", (java.lang.Object) 20);
        java.lang.Object obj95 = null;
        org.mockito.asm.FieldVisitor fieldVisitor96 = classWriter1.visitField((int) (short) 256, "L1609763582", "L1164464418", "L1511180153", obj95);
        org.junit.Assert.assertNotNull(annotationVisitor4);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 8532477865490146625L + "'", long75 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 51966 + "'", int77 == 51966);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(methodVisitor79);
        org.junit.Assert.assertNotNull(fieldVisitor90);
        org.junit.Assert.assertNotNull(fieldVisitor96);
    }

    @Test
    public void test16303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16303");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        java.util.Locale locale17 = null;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        int int47 = classReader43.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray48 = classReader43.getInterfaces();
        java.io.PrintWriter printWriter49 = printWriter6.format(locale17, "L1434348811", (java.lang.Object[]) strArray48);
        printWriter6.print(18);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.Writer) printWriter6);
        printWriter6.print((int) ' ');
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 51966 + "'", int47 == 51966);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter49);
    }

    @Test
    public void test16304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16304");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray47);
        int int49 = classReader48.getAccess();
        int int51 = classReader48.readByte(53);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 114 + "'", int51 == 114);
    }

    @Test
    public void test16305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16305");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor30.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor30.visitLineNumber((int) (byte) 10, label40);
        aSMifierMethodVisitor30.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor30.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label51 = new org.mockito.asm.Label();
        aSMifierMethodVisitor30.visitLineNumber(4, label51);
        aSMifierMethodVisitor0.visitLabel(label51);
        aSMifierMethodVisitor0.visitIincInsn(2817, 29801);
        aSMifierMethodVisitor0.visitVarInsn(152, 0);
        aSMifierMethodVisitor0.visitMethodInsn(12, "L1159776602", "L1780639023", "L1435857495");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test16306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16306");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        aSMifierMethodVisitor0.visitEnd();
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.print(0.0d);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter51, false);
        aSMifierMethodVisitor0.print(printWriter51);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L1284973471");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitAnnotation("L659269359", false);
        aSMifierMethodVisitor0.visitMethodInsn(36, "L1163352429", "L1576898305", "L1688081168");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(65539, "L4743655", "L939264968", "L1771132954");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test16307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16307");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(2, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 2817);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn(24942, (int) 'a');
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 25);
        aSMifierMethodVisitor0.visitMaxs(0, 50331648);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test16308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16308");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitInsn(7);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1669980843", 65539);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
    }

    @Test
    public void test16309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16309");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "L801849928");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test16310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16310");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        org.mockito.asm.ClassWriter classWriter8 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter8.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = classWriter8.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter8.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter8.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter8.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter33 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor34.visit(2, (int) (byte) 0, "", "", "", strArray43);
        classWriter8.visit((int) 'a', (int) '#', "", "", "hi!", strArray43);
        aSMifierClassVisitor1.visit((int) (byte) -1, 1, "hi!", "hi!", "hi!", strArray43);
        aSMifierClassVisitor1.visitSource("hi!", "");
        java.lang.String[] strArray54 = null;
        org.mockito.asm.MethodVisitor methodVisitor55 = aSMifierClassVisitor1.visitMethod((int) (short) 4, "L1003926609", "L1421508585", "L1829941255", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor1.visitAnnotation("L812886011", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test16311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16311");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.write((int) (short) 30313);
        printWriter1.flush();
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter73.println('#');
        printWriter73.println("L1869964633");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test16312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16312");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn(86, (int) 'a');
        aSMifierMethodVisitor0.visitMaxs(123, 29793);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (short) 872, 190);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 872");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test16313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16313");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray6 = null;
        org.mockito.asm.MethodVisitor methodVisitor7 = aSMifierClassVisitor1.visitMethod((-1), "", "hi!", "", strArray6);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierClassVisitor1.visitAnnotation("L601661571", true);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((int) 'a');
        printWriter16.println("");
        printWriter16.flush();
        java.io.PrintWriter printWriter23 = printWriter16.append((java.lang.CharSequence) "L61669440");
        printWriter16.write("L2113189186");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter16, true);
        org.mockito.asm.FieldVisitor fieldVisitor28 = aSMifierClassVisitor1.visitField(2817, "L1017243937", "L267810866", "L659269359", (java.lang.Object) printWriter16);
        aSMifierClassVisitor1.visitInnerClass("L111016143", "", "L1906590307", 51966);
        aSMifierClassVisitor1.visitInnerClass("L1957730982", "L615340472", "L371352799", 0);
        java.util.List list39 = aSMifierClassVisitor1.text;
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor44 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        java.io.PrintWriter printWriter46 = printWriter41.append('#');
        printWriter46.println((double) 51966);
        char[] charArray55 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter46.write(charArray55);
        org.mockito.asm.Attribute[] attributeArray58 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter59 = printWriter46.format("L142696279", (java.lang.Object[]) attributeArray58);
        java.io.PrintWriter printWriter61 = printWriter46.append((java.lang.CharSequence) "L994489370");
        org.mockito.asm.ClassWriter classWriter63 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter63.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = classWriter63.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = classWriter63.visitAnnotation("hi!", true);
        int int74 = classWriter63.newClass("L799304101");
        printWriter46.println((java.lang.Object) classWriter63);
        printWriter46.println((float) 32);
        java.io.PrintWriter printWriter79 = printWriter46.append((java.lang.CharSequence) "L421530542");
        aSMifierClassVisitor1.print(printWriter46);
        org.junit.Assert.assertNotNull(methodVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(fieldVisitor28);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(attributeArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 4 + "'", int74 == 4);
        org.junit.Assert.assertNotNull(printWriter79);
    }

    @Test
    public void test16314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16314");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L454715523");
        java.util.Locale locale2 = null;
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter5);
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierClassVisitor8.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter23.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = classWriter23.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter23.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray36 = classWriter23.toByteArray();
        org.mockito.asm.ByteVector byteVector39 = byteVector19.putByteArray(byteArray36, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray36);
        long long42 = classReader40.readLong((int) (byte) 100);
        int int44 = classReader40.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray45 = classReader40.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor46 = aSMifierClassVisitor8.visitMethod(0, "hi!", "L994489370", "hi!", strArray45);
        java.io.PrintWriter printWriter47 = printWriter1.format(locale2, "L1715840275", (java.lang.Object[]) strArray45);
        printWriter1.print((float) ' ');
        printWriter1.flush();
        java.lang.Class<?> wildcardClass51 = printWriter1.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 8532477865490146625L + "'", long42 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 51966 + "'", int44 == 51966);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodVisitor46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test16315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16315");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn(97, "L612817", "L1866436761", "L437477135");
        org.mockito.asm.Attribute attribute19 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test16316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16316");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor10.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor10.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putByte(2);
        annotationVisitor22.visit("", (java.lang.Object) byteVector25);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector34 = byteVector25.putByte(3);
        org.mockito.asm.ByteVector byteVector36 = byteVector25.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader63 = new org.mockito.asm.ClassReader(byteArray57);
        byte[] byteArray64 = classReader63.b;
        org.mockito.asm.ByteVector byteVector67 = byteVector36.putByteArray(byteArray64, 0, 5);
        org.mockito.asm.ByteVector byteVector70 = byteVector5.putByteArray(byteArray64, (int) '#', 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putShort(0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putInt(151060480);
        org.mockito.asm.ByteVector byteVector76 = byteVector72.putInt(2817);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putByte((int) (short) 10);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
    }

    @Test
    public void test16317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16317");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("L1957643563", false);
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test16318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16318");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        printWriter1.println((long) 5);
        printWriter1.write("hi!", 14, (-1161953280));
        printWriter1.flush();
        printWriter1.print((float) 202);
        printWriter1.println();
        printWriter1.println((long) 339);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test16319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16319");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs(24940, (int) '#');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(33, 108);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test16320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16320");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor22 = aSMifierClassVisitor1.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        aSMifierClassVisitor1.visitInnerClass("L2113189186", "L326432149", "L61669440", 51966);
        org.mockito.asm.FieldVisitor fieldVisitor33 = aSMifierClassVisitor1.visitField((int) (short) 100, "L139692246", "hi!", "L598840791", (java.lang.Object) 16777217);
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter45 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter45.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = classWriter45.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter45.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray58 = classWriter45.toByteArray();
        org.mockito.asm.ByteVector byteVector61 = byteVector41.putByteArray(byteArray58, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray58);
        long long64 = classReader62.readLong((int) (byte) 100);
        int int66 = classReader62.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray67 = classReader62.getInterfaces();
        org.mockito.asm.ClassWriter classWriter69 = new org.mockito.asm.ClassWriter(classReader62, 2);
        int int71 = classReader62.readUnsignedShort((int) ' ');
        java.lang.String[] strArray72 = classReader62.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor73 = aSMifierClassVisitor1.visitMethod(25929, "L978789454", "L1694926691", "L1845262982", strArray72);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = methodVisitor73.visitParameterAnnotation(872, "L1297264300", true);
        methodVisitor73.visitTypeInsn(86, "L1628873907");
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = methodVisitor73.visitAnnotation("L709116955", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 8532477865490146625L + "'", long64 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 51966 + "'", int66 == 51966);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 24942 + "'", int71 == 24942);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(methodVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test16321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16321");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitSource("L799304101", "L326432149");
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitSource("L614568462", "L337574950");
        aSMifierClassVisitor10.visitInnerClass("L139692246", "L978789454", "L598840791", 3);
        aSMifierClassVisitor10.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierClassVisitor10.visitAnnotation("L407895089", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = annotationVisitor27.visitAnnotation("L1659408532", "L2131834600");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test16322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16322");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        java.io.PrintWriter printWriter64 = printWriter37.format("L1669980843", (java.lang.Object[]) labelArray61);
        printWriter37.println((float) (-1107296256));
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter((java.io.Writer) printWriter37);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test16323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16323");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter17.visitEnd();
        classWriter17.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter17.visitSource("hi!", "hi!");
        classWriter17.visitSource("", "");
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter64.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = classWriter64.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter64.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray77 = classWriter64.toByteArray();
        org.mockito.asm.ByteVector byteVector80 = byteVector60.putByteArray(byteArray77, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader81 = new org.mockito.asm.ClassReader(byteArray77);
        long long83 = classReader81.readLong((int) (byte) 100);
        long long85 = classReader81.readLong((int) (byte) 10);
        java.lang.String[] strArray86 = classReader81.getInterfaces();
        aSMifierClassVisitor51.visit((int) (byte) 1, (-1), "", "hi!", "", strArray86);
        classWriter17.visit(10, 202, "L601661571", "L1669980843", "L1669980843", strArray86);
        org.mockito.asm.MethodVisitor methodVisitor89 = aSMifierClassVisitor1.visitMethod(1986622313, "", "L142696279", "L659269359", strArray86);
        methodVisitor89.visitMaxs(320, 1);
        methodVisitor89.visitMultiANewArrayInsn("L779142371", (int) (short) 1);
        methodVisitor89.visitTypeInsn((int) (short) 2, "L2063102727");
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 8532477865490146625L + "'", long83 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 72057598333118569L + "'", long85 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(methodVisitor89);
    }

    @Test
    public void test16324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16324");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor50.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor50.visitAnnotation("hi!", false);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLineNumber(10, label66);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 9, label66);
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "L454715523", "L2113189186", "L1715840275");
        aSMifierMethodVisitor0.visitFieldInsn(0, "L2101667039", "L1669980843", "");
        aSMifierMethodVisitor0.visitVarInsn(123, (int) (short) 9);
        aSMifierMethodVisitor0.visitTypeInsn(32, "L459227517");
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor0.visitParameterAnnotation(186, "L1605751355", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierMethodVisitor0.visitAnnotation("L1428686501", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = annotationVisitor91.visitAnnotation("L1344346170", "L917265559");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(annotationVisitor91);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test16325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16325");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1669980843");
        printWriter1.flush();
        printWriter1.print((double) (short) 25196);
        printWriter1.print(0.0f);
        printWriter1.print((float) 22113);
        printWriter1.println(' ');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor11.visitInnerClass("L1848839374", "L1573179142", "L2131714111", (int) (short) 9);
    }

    @Test
    public void test16326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16326");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        classWriter1.visitSource("L575352164", "L1544572272");
        classWriter1.visitOuterClass("L2072201856", "L237245406", "hi!");
        int int56 = classWriter1.newClass("L1000949368");
        classWriter1.visitOuterClass("L237245406", "L1555790481", "L1398906509");
        classWriter1.visitOuterClass("L671595473", "L205337362", "L1134785242");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 21 + "'", int56 == 21);
    }

    @Test
    public void test16327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16327");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.lang.Object[] objArray9 = null;
        java.io.PrintWriter printWriter10 = printWriter1.printf("hi!", objArray9);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        org.mockito.asm.ClassWriter classWriter14 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter14.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter14.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter14.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter14.visitField(590080, "hi!", "L1434348811", "hi!", (java.lang.Object) 1L);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        java.util.List list51 = aSMifierMethodVisitor40.getText();
        printWriter37.println((java.lang.Object) list51);
        printWriter37.print((double) 10L);
        printWriter37.print('4');
        printWriter37.print("");
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter67 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter67.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = classWriter67.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor79 = classWriter67.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray80 = classWriter67.toByteArray();
        org.mockito.asm.ByteVector byteVector83 = byteVector63.putByteArray(byteArray80, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader84 = new org.mockito.asm.ClassReader(byteArray80);
        long long86 = classReader84.readLong((int) (byte) 100);
        int int88 = classReader84.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray89 = classReader84.getInterfaces();
        java.io.PrintWriter printWriter90 = printWriter37.printf("", (java.lang.Object[]) strArray89);
        classWriter14.visit(1, 86, "hi!", "L142696279", "L2113189186", strArray89);
        java.io.PrintWriter printWriter92 = printWriter10.printf("L454715523", (java.lang.Object[]) strArray89);
        java.io.PrintWriter printWriter94 = printWriter10.append((java.lang.CharSequence) "L1105153118");
        printWriter94.flush();
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(fieldVisitor79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 8532477865490146625L + "'", long86 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 51966 + "'", int88 == 51966);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(printWriter94);
    }

    @Test
    public void test16328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16328");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println((double) 25929);
        java.util.Locale locale24 = null;
        java.lang.Object[] objArray26 = null;
        java.io.PrintWriter printWriter27 = printWriter1.printf(locale24, "L96121905", objArray26);
        java.lang.Object[] objArray29 = null;
        java.io.PrintWriter printWriter30 = printWriter27.printf("L704540978", objArray29);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter30);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertNotNull(printWriter30);
    }

    @Test
    public void test16329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16329");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray33 = null;
        org.mockito.asm.MethodVisitor methodVisitor34 = aSMifierClassVisitor28.visitMethod((-1), "", "hi!", "", strArray33);
        org.mockito.asm.FieldVisitor fieldVisitor35 = aSMifierClassVisitor1.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        aSMifierClassVisitor1.visitOuterClass("L1434348811", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitOuterClass("L1845262982", "L1829941255", "L598840791");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test16330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16330");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitIincInsn(1, 0);
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor22.visitLabel(label34);
        label20.info = aSMifierMethodVisitor22;
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        long long63 = classReader61.readLong((int) (byte) 100);
        long long65 = classReader61.readLong((int) (byte) 10);
        java.lang.String[] strArray66 = classReader61.getInterfaces();
        int int68 = classReader61.readInt(0);
        org.mockito.asm.ClassWriter classWriter70 = new org.mockito.asm.ClassWriter(classReader61, (int) '4');
        classWriter70.visitSource("L326432149", "L1434348811");
        label20.info = classWriter70;
        int int77 = classWriter70.newNameType("L137136720", "L326432149");
        org.mockito.asm.Attribute attribute78 = null;
        // The following exception was thrown during execution in test generation
        try {
            classWriter70.visitAttribute(attribute78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 8532477865490146625L + "'", long63 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 72057598333118569L + "'", long65 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-889275714) + "'", int68 == (-889275714));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 11 + "'", int77 == 11);
    }

    @Test
    public void test16331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16331");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("", "", "L142696279");
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((int) 'a');
        printWriter25.println("");
        printWriter25.flush();
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("L1289682213");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("");
        org.mockito.asm.ByteVector byteVector50 = byteVector46.putByte(6);
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter((int) 'a');
        byte[] byteArray53 = classWriter52.toByteArray();
        org.mockito.asm.ByteVector byteVector56 = byteVector50.putByteArray(byteArray53, 5, (int) (byte) 0);
        org.mockito.asm.ClassReader classReader57 = new org.mockito.asm.ClassReader(byteArray53);
        org.mockito.asm.ClassReader classReader58 = new org.mockito.asm.ClassReader(byteArray53);
        int int60 = classReader58.readUnsignedShort((int) (byte) 1);
        java.lang.String[] strArray61 = classReader58.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor62 = aSMifierClassVisitor34.visitMethod(30313, "L1000949368", "L1619590163", "L1722902851", strArray61);
        java.io.PrintWriter printWriter63 = printWriter25.printf("L1003926609", (java.lang.Object[]) strArray61);
        aSMifierClassVisitor1.print(printWriter63);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 65210 + "'", int60 == 65210);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(methodVisitor62);
        org.junit.Assert.assertNotNull(printWriter63);
    }

    @Test
    public void test16332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16332");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        aSMifierClassVisitor1.visitOuterClass("L1441782014", "L1555790481", "L1281777590");
        aSMifierClassVisitor1.visitInnerClass("L1482294079", "L1479479862", "L139692246", (int) (short) 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor1.visitAnnotation("L1703143512", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test16333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16333");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor16.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor35.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor35.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray50 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor35.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray50, (int) 'a', (java.lang.Object[]) labelArray61);
        aSMifierMethodVisitor16.visitTableSwitchInsn(3, 2, label34, labelArray61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor66.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor66.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor66.visitAnnotation("hi!", false);
        org.mockito.asm.Label label82 = new org.mockito.asm.Label();
        aSMifierMethodVisitor66.visitLineNumber(10, label82);
        aSMifierMethodVisitor16.visitJumpInsn((int) (short) 9, label82);
        aSMifierMethodVisitor0.visitJumpInsn(9, label82);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) '#', 16);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1715840275", 14);
        org.mockito.asm.AnnotationVisitor annotationVisitor96 = aSMifierMethodVisitor0.visitParameterAnnotation(1699311222, "L1206354579", false);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(attributeArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(annotationVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor96);
    }

    @Test
    public void test16334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16334");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.print(false);
        printWriter1.println(true);
        printWriter1.print((float) (short) 0);
        printWriter1.print("L61669440");
        org.mockito.asm.ClassWriter classWriter41 = new org.mockito.asm.ClassWriter((int) '4');
        int int46 = classWriter41.newMethod("hi!", "L326432149", "hi!", true);
        int int51 = classWriter41.newMethod("L142696279", "L1434348811", "L1441782014", true);
        printWriter1.print((java.lang.Object) classWriter41);
        classWriter41.visitInnerClass("L575352164", "L1479479862", "L384579388", 6);
        classWriter41.visitSource("L555214098", "L127379530");
        int int63 = classWriter41.newNameType("L1675681385", "L721189988");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 11 + "'", int51 == 11);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 20 + "'", int63 == 20);
    }

    @Test
    public void test16335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16335");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.print(false);
        printWriter1.println(true);
        printWriter1.print((float) (short) 0);
        printWriter1.print("L61669440");
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter48 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter48.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = classWriter48.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor60 = classWriter48.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray61 = classWriter48.toByteArray();
        org.mockito.asm.ByteVector byteVector64 = byteVector44.putByteArray(byteArray61, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader65 = new org.mockito.asm.ClassReader(byteArray61);
        org.mockito.asm.ClassReader classReader68 = new org.mockito.asm.ClassReader(byteArray61, 0, (-1107296256));
        java.lang.String[] strArray69 = classReader68.getInterfaces();
        java.lang.String[] strArray70 = classReader68.getInterfaces();
        java.io.PrintWriter printWriter71 = printWriter1.format("L519300220", (java.lang.Object[]) strArray70);
        printWriter71.print(17);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor74 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter71);
        printWriter71.print((double) 13);
        printWriter71.flush();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test16336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16336");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        printWriter1.print((float) 25929);
        printWriter1.println();
        printWriter1.println("L1532047758");
        printWriter1.println((float) 16779859);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test16337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16337");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter68);
        boolean boolean70 = printWriter69.checkError();
        java.io.PrintWriter printWriter72 = printWriter69.append((java.lang.CharSequence) "L1837753836");
        java.util.Locale locale73 = null;
        java.lang.Object[] objArray75 = null;
        java.io.PrintWriter printWriter76 = printWriter72.printf(locale73, "L1111733530", objArray75);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter76);
    }

    @Test
    public void test16338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16338");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        classWriter1.visitEnd();
        int int23 = classWriter1.newClass("L326432149");
        int int25 = classWriter1.newUTF8("L459227517");
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter32);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter48 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter48.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = classWriter48.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor60 = classWriter48.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray61 = classWriter48.toByteArray();
        org.mockito.asm.ByteVector byteVector64 = byteVector44.putByteArray(byteArray61, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader65 = new org.mockito.asm.ClassReader(byteArray61);
        long long67 = classReader65.readLong((int) (byte) 100);
        long long69 = classReader65.readLong((int) (byte) 10);
        java.lang.String[] strArray70 = classReader65.getInterfaces();
        aSMifierClassVisitor35.visit((int) (byte) 1, (-1), "", "hi!", "", strArray70);
        classWriter1.visit(0, (int) (byte) 10, "L994489370", "hi!", "L1216476214", strArray70);
        byte[] byteArray73 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader74 = new org.mockito.asm.ClassReader(byteArray73);
        int int75 = classReader74.getAccess();
        java.lang.String str76 = classReader74.getSuperName();
        byte[] byteArray77 = classReader74.b;
        java.lang.String str78 = classReader74.getSuperName();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 6 + "'", int23 == 6);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 8532477865490146625L + "'", long67 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 72057598333118569L + "'", long69 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L1216476214" + "'", str76, "L1216476214");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L1216476214" + "'", str78, "L1216476214");
    }

    @Test
    public void test16339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16339");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        aSMifierClassVisitor1.visitOuterClass("L1441782014", "L1555790481", "L1281777590");
        aSMifierClassVisitor1.visitInnerClass("L1829941255", "L267810866", "L371352799", 10);
        aSMifierClassVisitor1.visitInnerClass("L1968646166", "L1236963294", "L603155286", 47806);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor1.visitAnnotation("L491653916", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test16340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16340");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter24.visitOuterClass("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = classWriter24.visitAnnotation("", true);
        classWriter24.visitOuterClass("L142696279", "", "hi!");
        byte[] byteArray36 = classWriter24.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classWriter24);
        aSMifierMethodVisitor0.visitMaxs(203, 19);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 9, 152);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(50331648, 123);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 10, 1, 0, 3, 104, 105, 33, 7, 0, 1, 1, 0, 0, 12, 0, 3, 0, 3, 1, 0, 10, 76, 49, 52, 50, 54, 57, 54, 50, 55, 57, 7, 0, 5, 12, 0, 3, 0, 1, 1, 0, 15, 69, 110, 99, 108, 111, 115, 105, 110, 103, 77, 101, 116, 104, 111, 100, 1, 0, 25, 82, 117, 110, 116, 105, 109, 101, 86, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 8, 0, 0, 0, 4, 0, 6, 0, 7, 0, 9, 0, 0, 0, 6, 0, 1, 0, 3, 0, 0]");
    }

    @Test
    public void test16341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16341");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor32.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor45.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor45.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor45.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor45.visitAnnotation("hi!", false);
        org.mockito.asm.Label label61 = new org.mockito.asm.Label();
        aSMifierMethodVisitor45.visitLineNumber(10, label61);
        aSMifierMethodVisitor32.visitLineNumber(1, label61);
        org.mockito.asm.Label label64 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "L1434348811", "L326432149", label61, label64, 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.ByteVector byteVector70 = new org.mockito.asm.ByteVector(57174305);
        annotationVisitor67.visit("L96121905", (java.lang.Object) 57174305);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = annotationVisitor67.visitArray("L978789454");
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = annotationVisitor67.visitAnnotation("L1853824624", "L256017232");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test16342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16342");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter1.print((float) (short) 30313);
        printWriter1.println((long) (short) 1);
        printWriter1.print('4');
        printWriter1.print((float) 100L);
        printWriter1.println((float) (-1161953280));
        printWriter1.println(100L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor22.visitSource("L1375118326", "L836986691");
        aSMifierClassVisitor22.visitInnerClass("L229091502", "L1421842718", "L812886011", 15);
        aSMifierClassVisitor22.visitOuterClass("L1333437317", "L1555790481", "L188937864");
    }

    @Test
    public void test16343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16343");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print((float) (-3819410108757049344L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print((int) 'a');
        printWriter15.println("");
        java.io.PrintWriter printWriter20 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter20);
        aSMifierClassVisitor21.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierClassVisitor21.visitAnnotation("", false);
        printWriter15.print((java.lang.Object) false);
        printWriter15.print((double) 10.0f);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter15);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter15);
        printWriter34.print((double) (byte) 0);
        printWriter34.flush();
        org.mockito.asm.FieldVisitor fieldVisitor38 = aSMifierClassVisitor9.visitField(65210, "L1890580259", "L977002934", "L1123989782", (java.lang.Object) printWriter34);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = fieldVisitor38.visitAnnotation("L937217698", false);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test16344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16344");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        printWriter1.println(true);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter45 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter45.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = classWriter45.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter45.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray58 = classWriter45.toByteArray();
        org.mockito.asm.ByteVector byteVector61 = byteVector41.putByteArray(byteArray58, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray58);
        long long64 = classReader62.readLong((int) (byte) 100);
        int int66 = classReader62.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray67 = classReader62.getInterfaces();
        org.mockito.asm.ClassWriter classWriter69 = new org.mockito.asm.ClassWriter(classReader62, 2);
        int int71 = classReader62.readUnsignedShort((int) ' ');
        java.lang.String[] strArray72 = classReader62.getInterfaces();
        java.io.PrintWriter printWriter73 = printWriter1.printf("L365115101", (java.lang.Object[]) strArray72);
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter((java.io.Writer) printWriter73, false);
        printWriter75.print('a');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 8532477865490146625L + "'", long64 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 51966 + "'", int66 == 51966);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 24942 + "'", int71 == 24942);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test16345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16345");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        printWriter9.print(9);
        java.io.PrintWriter printWriter15 = printWriter9.append('#');
        printWriter15.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        java.io.PrintWriter printWriter23 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter23);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor24.visit(2, (int) (byte) 0, "", "", "", strArray33);
        org.mockito.asm.ClassWriter classWriter41 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter41.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = classWriter41.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor53 = classWriter41.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter41.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor60 = classWriter41.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter66 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor67 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter66);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor67.visit(2, (int) (byte) 0, "", "", "", strArray76);
        classWriter41.visit((int) 'a', (int) '#', "", "", "hi!", strArray76);
        aSMifierClassVisitor24.visit((int) (short) 10, (int) (short) 30313, "", "L1669980843", "L1669980843", strArray76);
        aSMifierClassVisitor17.visit((-889275714), 1751720195, "L1115200203", "L200699152", "L519300220", strArray76);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor53);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(strArray76);
    }

    @Test
    public void test16346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16346");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) '4', "", "L326432149", "L326432149");
        org.mockito.asm.ClassWriter classWriter56 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter56.visitInnerClass("L298663367", "L1715840275", "L614568462", 18);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = classWriter56.visitAnnotation("L337574950", true);
        classWriter56.visitInnerClass("L1526989973", "L783935767", "L1230702653", 115);
        classWriter56.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = classWriter56.visitAnnotation("L888698528", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test16347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16347");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter1.printf("", (java.lang.Object[]) strArray38);
        printWriter39.print((long) 2);
        java.io.PrintWriter printWriter43 = printWriter39.append('#');
        java.util.Locale locale44 = null;
        java.lang.Object[] objArray46 = null;
        java.io.PrintWriter printWriter47 = printWriter43.printf(locale44, "L752233668", objArray46);
        printWriter47.print((double) 10L);
        java.io.PrintWriter printWriter51 = printWriter47.append((java.lang.CharSequence) "L393540440");
        printWriter51.print(27745);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter((java.io.Writer) printWriter51, false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test16348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16348");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter32.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = fieldVisitor38.visitAnnotation("hi!", true);
        fieldVisitor38.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = fieldVisitor38.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitParameterAnnotation(30313, "L61669440", false);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((int) 'a');
        printWriter52.println("");
        java.io.PrintWriter printWriter57 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter57);
        aSMifierClassVisitor58.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierClassVisitor58.visitAnnotation("", false);
        printWriter52.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter52);
        java.io.PrintWriter printWriter70 = printWriter52.append(' ');
        java.io.PrintWriter printWriter72 = printWriter52.append(' ');
        printWriter72.write("L967033583");
        aSMifierMethodVisitor0.print(printWriter72);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(330, (int) (short) -326);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 330");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test16349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16349");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((-1), 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("L1441782014", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L1924143761", false);
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(18798);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 18798");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test16350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16350");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        byte[] byteArray39 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray39);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((int) 'a');
        printWriter42.println("");
        printWriter42.print((float) 590080L);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.Writer) printWriter42, true);
        printWriter42.print((float) (short) 30313);
        java.util.Locale locale53 = null;
        java.lang.Object[] objArray55 = null;
        java.io.PrintWriter printWriter56 = printWriter42.printf(locale53, "", objArray55);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter42);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter57);
        classReader40.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor58, (int) '#');
        java.lang.String str61 = classReader40.getClassName();
        java.lang.String str62 = classReader40.getSuperName();
        int int63 = classReader40.getAccess();
        java.lang.String[] strArray64 = classReader40.getInterfaces();
        int int66 = classReader40.readByte((int) (short) 13);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 35 + "'", int63 == 35);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
    }

    @Test
    public void test16351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16351");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        int int44 = classWriter1.newMethod("hi!", "L326432149", "hi!", false);
        classWriter1.visitEnd();
        int int47 = classWriter1.newUTF8("L1150302951");
        int int50 = classWriter1.newNameType("L1241925862", "L699807857");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 13 + "'", int44 == 13);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 14 + "'", int47 == 14);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 17 + "'", int50 == 17);
    }

    @Test
    public void test16352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16352");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) (byte) 1);
        classWriter1.visitInnerClass("", "hi!", "", (int) (byte) 10);
        classWriter1.visitInnerClass("L1434348811", "L1434348811", "L1434348811", 151060480);
        classWriter1.visitOuterClass("hi!", "L142696279", "");
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label31 = null;
        int[] intArray33 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray34 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label31, intArray33, labelArray34);
        java.util.List list36 = aSMifierMethodVisitor25.getText();
        printWriter22.println((java.lang.Object) list36);
        printWriter22.print((double) 10L);
        printWriter22.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor42 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor42.visitInnerClass("L1434348811", "", "L142696279", 24942);
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter60 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter60.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = classWriter60.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor72 = classWriter60.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray73 = classWriter60.toByteArray();
        org.mockito.asm.ByteVector byteVector76 = byteVector56.putByteArray(byteArray73, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader77 = new org.mockito.asm.ClassReader(byteArray73);
        long long79 = classReader77.readLong((int) (byte) 100);
        long long81 = classReader77.readLong((int) (byte) 10);
        short short83 = classReader77.readShort(1);
        int int85 = classReader77.readUnsignedShort(0);
        java.lang.String[] strArray86 = classReader77.getInterfaces();
        aSMifierClassVisitor42.visit(590080, (int) (short) 1, "L326432149", "L967033583", "L943959020", strArray86);
        classWriter1.visit(30313, 332, "", "L215000262", "L1541482702", strArray86);
        org.mockito.asm.Attribute attribute89 = null;
        // The following exception was thrown during execution in test generation
        try {
            classWriter1.visitAttribute(attribute89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1]");
        org.junit.Assert.assertNotNull(labelArray34);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(fieldVisitor72);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 8532477865490146625L + "'", long79 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 72057598333118569L + "'", long81 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short83 + "' != '" + (short) -326 + "'", short83 == (short) -326);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 51966 + "'", int85 == 51966);
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test16353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16353");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        java.util.List list52 = aSMifierMethodVisitor41.getText();
        printWriter38.println((java.lang.Object) list52);
        printWriter38.print((double) 10L);
        printWriter38.print(false);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierClassVisitor59.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierClassVisitor59.visitAnnotation("hi!", false);
        printWriter38.println((java.lang.Object) aSMifierClassVisitor59);
        char[] charArray79 = new char[] { 'a', '#' };
        printWriter38.println(charArray79);
        printWriter31.print(charArray79);
        printWriter31.print("L1805888593");
        printWriter31.print((double) 22);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a, #]");
    }

    @Test
    public void test16354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16354");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter36.print(true);
        printWriter36.write("hi!");
        printWriter36.println((int) (short) 27745);
        printWriter36.println("L1397245077");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test16355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16355");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label15 = null;
        int[] intArray21 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLineNumber((int) (byte) 10, label32);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label43 = null;
        int[] intArray45 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray46 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor37.visitLookupSwitchInsn(label43, intArray45, labelArray46);
        aSMifierMethodVisitor22.visitTableSwitchInsn((int) (byte) 0, 51966, label36, labelArray46);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label15, intArray21, labelArray46);
        aSMifierMethodVisitor0.visitMaxs(0, 9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor53.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor53.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor53.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = annotationVisitor66.visitArray("L834812042");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L834812042");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitParameterAnnotation(21, "L1199538687", false);
        aSMifierMethodVisitor0.visitMaxs(31, 114);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1296855558", 105);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1]");
        org.junit.Assert.assertNotNull(labelArray46);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test16356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16356");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        java.util.Locale locale17 = null;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        int int47 = classReader43.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray48 = classReader43.getInterfaces();
        java.io.PrintWriter printWriter49 = printWriter6.format(locale17, "L1434348811", (java.lang.Object[]) strArray48);
        boolean boolean50 = printWriter6.checkError();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor51.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor51.visitMultiANewArrayInsn("", (int) (short) 100);
        printWriter6.println((java.lang.Object) "");
        printWriter6.println(false);
        java.io.PrintWriter printWriter71 = printWriter6.append('#');
        printWriter6.write((int) (short) 25970);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 51966 + "'", int47 == 51966);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test16357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16357");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitCode();
        aSMifierMethodVisitor26.visitFieldInsn(100, "L1749641217", "", "L137501116");
        aSMifierMethodVisitor26.visitFieldInsn(0, "L858787082", "", "L1228713414");
        aSMifierMethodVisitor26.visitIntInsn(136, 17);
        aSMifierMethodVisitor26.visitTypeInsn(25, "L836986691");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor26.visitAnnotation("L1441782014", true);
        aSMifierMethodVisitor26.visitMultiANewArrayInsn("L261648562", (int) (short) 20);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test16358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16358");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.print(0.0d);
        printWriter31.print((float) (byte) 10);
        printWriter31.close();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test16359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16359");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("hi!", true);
        aSMifierClassVisitor1.visitOuterClass("L2113189186", "L1441782014", "L96121905");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor29.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor29.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor29.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector48 = byteVector44.putShort((int) '4');
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter50.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = classWriter50.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter50.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter50.visitEnd();
        classWriter50.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter50.visitSource("hi!", "hi!");
        byte[] byteArray72 = classWriter50.toByteArray();
        org.mockito.asm.ByteVector byteVector75 = byteVector44.putByteArray(byteArray72, (int) (short) 10, (int) '4');
        annotationVisitor39.visit("L598840791", (java.lang.Object) byteArray72);
        org.mockito.asm.ClassReader classReader77 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ClassWriter classWriter79 = new org.mockito.asm.ClassWriter(classReader77, 0);
        byte[] byteArray80 = classReader77.b;
        java.lang.String[] strArray81 = classReader77.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor1.visitMethod(25, "L801849928", "L939261813", "L483311603", strArray81);
        // The following exception was thrown during execution in test generation
        try {
            methodVisitor82.visitFieldInsn(254, "L172059849", "L215000262", "L579642374");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(methodVisitor82);
    }

    @Test
    public void test16360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16360");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("L265725697", true);
        aSMifierMethodVisitor0.visitInsn(35);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test16361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16361");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        aSMifierClassVisitor1.visitSource("L994489370", "");
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.println((int) (short) 1);
        java.lang.String[] strArray55 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter56 = printWriter21.format("hi!", (java.lang.Object[]) strArray55);
        java.lang.String[] strArray58 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter59 = printWriter21.printf("", (java.lang.Object[]) strArray58);
        org.mockito.asm.MethodVisitor methodVisitor60 = aSMifierClassVisitor1.visitMethod(17, "L1434348811", "L1000949368", "L1691870655", strArray58);
        aSMifierClassVisitor1.visitSource("L2112385861", "L1808073265");
        aSMifierClassVisitor1.visitInnerClass("L1363288052", "L1770505064", "L823983574", 1634628694);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("hi!");
        printWriter74.println("hi!");
        printWriter74.close();
        printWriter74.println((int) (byte) 0);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor80 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        org.mockito.asm.FieldVisitor fieldVisitor81 = aSMifierClassVisitor1.visitField((int) (short) 0, "L1931374313", "L544338606", "L1601831013", (java.lang.Object) printWriter74);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = fieldVisitor81.visitAnnotation("L1660256717", true);
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(methodVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor81);
        org.junit.Assert.assertNotNull(annotationVisitor84);
    }

    @Test
    public void test16362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16362");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs((-889275714), (int) 'a');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 257);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor10);
    }

    @Test
    public void test16363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16363");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitSource("", "hi!");
        int int16 = classWriter1.newConst((java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = classWriter1.visitAnnotation("L994489370", true);
        classWriter1.visitInnerClass("", "L142696279", "hi!", 7);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("L1703143512", "hi!", "L454715523", 51966);
        classWriter1.visitInnerClass("L237245406", "L459227517", "L779142371", (int) '4');
        classWriter1.visitSource("L1813264043", "L1675913995");
        byte[] byteArray39 = classWriter1.toByteArray();
        byte[] byteArray40 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray40, 0, (int) (short) 22113);
        org.mockito.asm.ClassWriter classWriter45 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter45.visitSource("", "");
        classWriter45.visitInnerClass("hi!", "", "", 3);
        classWriter45.visitSource("L994489370", "L1669980843");
        int int59 = classWriter45.newNameType("L326432149", "");
        int int63 = classWriter45.newField("L834812042", "L1749641217", "L1105153118");
        classWriter45.visitInnerClass("L1544572272", "L801849928", "L911973346", 3);
        int int70 = classWriter45.newClass("L454715523");
        classWriter45.visitOuterClass("L61669440", "L666971223", "L555214098");
        int int76 = classWriter45.newClass("L598840791");
        classWriter45.visitInnerClass("L1930290201", "L1544572272", "L1853824624", 16777217);
        int int86 = classWriter45.newMethod("L246301320", "L1438609464", "L1604470030", true);
        int int88 = classWriter45.newUTF8("L1837291041");
        // The following exception was thrown during execution in test generation
        try {
            classReader43.accept((org.mockito.asm.ClassVisitor) classWriter45, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 7 + "'", int59 == 7);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 13 + "'", int63 == 13);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 20 + "'", int70 == 20);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 27 + "'", int76 == 27);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 36 + "'", int86 == 36);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 37 + "'", int88 == 37);
    }

    @Test
    public void test16364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16364");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L967033583", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test16365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16365");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L939261813");
        printWriter1.write("L136336566");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter("hi!");
        printWriter6.print((int) 'a');
        printWriter6.println("");
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor12.visitAnnotation("", false);
        printWriter6.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        java.io.PrintWriter printWriter24 = printWriter6.append(' ');
        java.io.PrintWriter printWriter26 = printWriter6.append(' ');
        printWriter26.write(24942);
        printWriter26.print(false);
        java.lang.String[] strArray32 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter33 = printWriter26.format("L1518460396", (java.lang.Object[]) strArray32);
        java.io.PrintWriter printWriter34 = printWriter1.printf("L1805888593", (java.lang.Object[]) strArray32);
        printWriter34.println((double) (short) 28275);
        printWriter34.print((double) (short) 29782);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter34);
    }

    @Test
    public void test16366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16366");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor17.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor17.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor17.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label37 = new org.mockito.asm.Label();
        aSMifierMethodVisitor17.visitLabel(label37);
        aSMifierMethodVisitor17.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor41.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor41.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor41.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor41.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label61 = new org.mockito.asm.Label();
        aSMifierMethodVisitor41.visitLabel(label61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor63.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor63.visitIincInsn(1, 0);
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor63.visitLabel(label75);
        label61.info = aSMifierMethodVisitor63;
        aSMifierMethodVisitor17.visitLineNumber(24942, label61);
        aSMifierMethodVisitor0.visitJumpInsn(8, label61);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierMethodVisitor0.visitAnnotation("L549535308", false);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test16367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16367");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L994489370");
        boolean boolean39 = printWriter31.checkError();
        printWriter31.write((-21316096));
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test16368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16368");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 9, 118);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("L1556230913", true);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 20, "L619486509");
        aSMifierMethodVisitor0.visitMaxs((int) (short) -13570, 27749);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test16369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16369");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        printWriter1.flush();
        printWriter1.write(3);
        java.io.PrintWriter printWriter95 = printWriter1.append((java.lang.CharSequence) "L1526656810");
        printWriter1.write("L841406722");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter95);
    }

    @Test
    public void test16370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16370");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label2, label3, label4, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor7.visitEnum("", "hi!", "hi!");
        annotationVisitor7.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
    }

    @Test
    public void test16371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16371");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray48 = classWriter35.toByteArray();
        org.mockito.asm.ByteVector byteVector51 = byteVector31.putByteArray(byteArray48, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray48);
        short short54 = classReader52.readShort(8);
        short short56 = classReader52.readShort((int) (byte) 10);
        byte[] byteArray57 = classReader52.b;
        byte[] byteArray58 = classReader52.b;
        org.mockito.asm.FieldVisitor fieldVisitor59 = aSMifierClassVisitor1.visitField(0, "L1434348811", "L799304101", "L1715840275", (java.lang.Object) byteArray58);
        org.mockito.asm.ClassReader classReader60 = new org.mockito.asm.ClassReader(byteArray58);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray58);
        int int63 = classReader61.readByte(136);
        byte[] byteArray64 = classReader61.b;
        java.lang.String[] strArray65 = classReader61.getInterfaces();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertTrue("'" + short54 + "' != '" + (short) 9 + "'", short54 == (short) 9);
        org.junit.Assert.assertTrue("'" + short56 + "' != '" + (short) 256 + "'", short56 == (short) 256);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test16372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16372");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        java.util.List list9 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor0.visitIincInsn(190, (int) (byte) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor16.visitAnnotation("", false);
        aSMifierMethodVisitor16.visitMethodInsn(6, "L994489370", "L61669440", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor26.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor26.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor41.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor41.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray56 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        aSMifierMethodVisitor41.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray56, (int) 'a', (java.lang.Object[]) labelArray67);
        aSMifierMethodVisitor26.visitTableSwitchInsn(8, (int) (byte) 1, label40, labelArray67);
        aSMifierMethodVisitor26.visitMaxs(3, 51966);
        aSMifierMethodVisitor26.visitIincInsn((-889275714), 9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor78.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor78.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor78.visitAnnotation("hi!", false);
        org.mockito.asm.Label label94 = new org.mockito.asm.Label();
        aSMifierMethodVisitor78.visitLineNumber(10, label94);
        aSMifierMethodVisitor26.visitLineNumber(4, label94);
        aSMifierMethodVisitor16.visitLineNumber((int) (short) 872, label94);
        aSMifierMethodVisitor0.visitLabel(label94);
        org.mockito.asm.AnnotationVisitor annotationVisitor99 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(attributeArray56);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(annotationVisitor92);
        org.junit.Assert.assertNotNull(annotationVisitor99);
    }

    @Test
    public void test16373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16373");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        printWriter9.print(9);
        printWriter9.print((double) 2817);
        printWriter9.print((double) 590080L);
        printWriter9.println(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        aSMifierClassVisitor20.visitEnd();
    }

    @Test
    public void test16374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16374");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter1 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor2.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor2.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor15.visitLineNumber((int) (byte) 10, label25);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor15.visitAnnotation("hi!", true);
        aSMifierMethodVisitor15.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor34.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor34.visitLineNumber((int) (byte) 10, label44);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        aSMifierMethodVisitor34.visitTableSwitchInsn((int) (byte) 0, 51966, label48, labelArray58);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor34.visitLabel(label61);
        org.mockito.asm.Label label63 = new org.mockito.asm.Label();
        aSMifierMethodVisitor34.visitLabel(label63);
        aSMifierMethodVisitor15.visitJumpInsn((int) (short) 10, label63);
        java.lang.String str66 = label63.toString();
        java.lang.String str67 = label63.toString();
        aSMifierMethodVisitor0.visitLabel(label63);
        org.mockito.asm.Attribute attribute69 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "L187201217" + "'", str66, "L187201217");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L187201217" + "'", str67, "L187201217");
    }

    @Test
    public void test16375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16375");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitEnd();
        aSMifierMethodVisitor24.visitTypeInsn(0, "L2106184417");
        aSMifierMethodVisitor24.visitMaxs(14, 1869480192);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor24.visitParameterAnnotation((int) (short) 24940, "L1887971966", true);
        annotationVisitor53.visitEnum("L2006578159", "L1706222126", "L1222191132");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test16376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16376");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor29.visitCode();
        aSMifierMethodVisitor29.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor29.visitEnd();
        aSMifierMethodVisitor29.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        aSMifierMethodVisitor29.visitJumpInsn(25, label39);
        java.lang.Object obj41 = label39.info;
        java.lang.String str42 = label39.toString();
        aSMifierMethodVisitor19.visitLineNumber(22, label39);
        aSMifierMethodVisitor0.visitLabel(label39);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((int) 'a');
        printWriter46.println("");
        printWriter46.print((float) 590080L);
        printWriter46.write(1);
        printWriter46.print(2534374302089219L);
        printWriter46.print(6224375411464273929L);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter46, false);
        printWriter60.println("L97937772");
        boolean boolean63 = printWriter60.checkError();
        printWriter60.println();
        label39.info = printWriter60;
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNull(obj41);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1315310504" + "'", str42, "L1315310504");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test16377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16377");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1719622935");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("hi!");
        printWriter3.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor6 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        printWriter3.print(0.0d);
        printWriter3.println();
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("hi!");
        printWriter11.print((int) 'a');
        printWriter11.println("");
        printWriter11.print((float) 590080L);
        java.lang.Object[] objArray19 = null;
        java.io.PrintWriter printWriter20 = printWriter11.printf("hi!", objArray19);
        printWriter20.println('a');
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter20);
        printWriter23.print(false);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((-889275714));
        printWriter27.println((int) (short) 256);
        printWriter27.print((long) 1);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter35);
        java.io.PrintWriter printWriter40 = printWriter35.append('#');
        printWriter40.println((double) 51966);
        char[] charArray49 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter40.write(charArray49);
        printWriter27.print(charArray49);
        printWriter23.println(charArray49);
        printWriter3.println(charArray49);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write(charArray49, 210, 111);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , a,  , #, #, a]");
    }

    @Test
    public void test16378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16378");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        java.io.PrintWriter printWriter13 = printWriter9.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitInsn(10);
        org.mockito.asm.Attribute[] attributeArray20 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        aSMifierMethodVisitor15.visitFrame((int) '#', (int) (short) 0, (java.lang.Object[]) attributeArray20, 2, (java.lang.Object[]) labelArray86);
        java.io.PrintWriter printWriter90 = printWriter9.format("hi!", (java.lang.Object[]) attributeArray20);
        printWriter9.write((int) (short) 100);
        printWriter9.print(true);
        printWriter9.print(282574710861678L);
        printWriter9.print((double) 18798);
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(attributeArray20);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test16379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16379");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((-1), 24942);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn(30313, 20);
        aSMifierMethodVisitor0.visitMaxs(1751720195, 27765);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation(16777217, "L98547873", false);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test16380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16380");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitSource("", "hi!");
        int int16 = classWriter1.newConst((java.lang.Object) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        classWriter1.visit((int) ' ', 9, "", "", "", strArray73);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = classWriter1.visitAnnotation("L277120252", true);
        classWriter1.visitOuterClass("L2075420132", "L674352908", "L1544572272");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test16381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16381");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        printWriter9.print(9);
        printWriter9.print(118);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print((int) 'a');
        printWriter17.println("");
        printWriter17.print((float) 590080L);
        printWriter17.write(1);
        printWriter17.print(2534374302089219L);
        printWriter17.print(6224375411464273929L);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((-889275714));
        printWriter31.print(0.0d);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        char[] charArray46 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter39.print(charArray46);
        printWriter31.write(charArray46);
        printWriter17.println(charArray46);
        printWriter9.println(charArray46);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        char[] charArray64 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter57.print(charArray64);
        printWriter57.write("");
        printWriter57.println((double) (short) 100);
        printWriter57.println(false);
        java.io.PrintWriter printWriter73 = printWriter57.append((java.lang.CharSequence) "");
        org.mockito.asm.FieldVisitor fieldVisitor74 = aSMifierClassVisitor51.visitField(6, "L446800432", "L1579135760", "L955027613", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = fieldVisitor74.visitAnnotation("L1605751355", false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(fieldVisitor74);
        org.junit.Assert.assertNotNull(annotationVisitor77);
    }

    @Test
    public void test16382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16382");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        printWriter31.print((double) 7);
        printWriter31.println(6224375411464273929L);
        java.io.PrintWriter printWriter60 = printWriter31.append((java.lang.CharSequence) "L1127838997");
        org.mockito.asm.ByteVector byteVector63 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter69 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter69.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = classWriter69.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor81 = classWriter69.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray82 = classWriter69.toByteArray();
        org.mockito.asm.ByteVector byteVector85 = byteVector65.putByteArray(byteArray82, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader86 = new org.mockito.asm.ClassReader(byteArray82);
        long long88 = classReader86.readLong((int) (byte) 100);
        long long90 = classReader86.readLong((int) (byte) 10);
        short short92 = classReader86.readShort(1);
        java.lang.String[] strArray93 = classReader86.getInterfaces();
        java.lang.String[] strArray94 = classReader86.getInterfaces();
        java.io.PrintWriter printWriter95 = printWriter60.printf("L1432518723", (java.lang.Object[]) strArray94);
        printWriter95.print(true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(fieldVisitor81);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 8532477865490146625L + "'", long88 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 72057598333118569L + "'", long90 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short92 + "' != '" + (short) -326 + "'", short92 == (short) -326);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(printWriter95);
    }

    @Test
    public void test16383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16383");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter1 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor2.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor2.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn(86, "L169779857");
    }

    @Test
    public void test16384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16384");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor34.visitEnd();
        aSMifierClassVisitor34.visitInnerClass("L2113189186", "L326432149", "", (int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter53 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter53.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = classWriter53.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter53.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray66 = classWriter53.toByteArray();
        org.mockito.asm.ByteVector byteVector69 = byteVector49.putByteArray(byteArray66, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray66);
        long long72 = classReader70.readLong((int) (byte) 100);
        long long74 = classReader70.readLong((int) (byte) 10);
        int int75 = classReader70.header;
        int int76 = classReader70.header;
        java.lang.String[] strArray77 = classReader70.getInterfaces();
        aSMifierClassVisitor34.visit(10, 22113, "L1722902851", "L939261813", "", strArray77);
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierClassVisitor34.visitAnnotation("L1843076310", true);
        aSMifierClassVisitor34.visitSource("L2134601525", "L1000949368");
        aSMifierClassVisitor34.visitInnerClass("L1459078187", "L2007869149", "L929094301", 1869898100);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 8532477865490146625L + "'", long72 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 72057598333118569L + "'", long74 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 118 + "'", int75 == 118);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 118 + "'", int76 == 118);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(annotationVisitor81);
    }

    @Test
    public void test16385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16385");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        printWriter1.print("L1434348811");
        java.io.PrintWriter printWriter13 = printWriter1.append((java.lang.CharSequence) "L1544572272");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        printWriter13.println((float) 6);
        printWriter13.flush();
        printWriter13.print(false);
        printWriter13.println("L99697447");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter13);
    }

    @Test
    public void test16386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16386");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        int int50 = classWriter1.newField("L1434348811", "L1694926691", "L407895089");
        int int52 = classWriter1.newUTF8("L2099222213");
        org.mockito.asm.ByteVector byteVector59 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter65 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter65.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = classWriter65.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor77 = classWriter65.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray78 = classWriter65.toByteArray();
        org.mockito.asm.ByteVector byteVector81 = byteVector61.putByteArray(byteArray78, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader82 = new org.mockito.asm.ClassReader(byteArray78);
        long long84 = classReader82.readLong((int) (byte) 100);
        int int86 = classReader82.readUnsignedShort((int) (short) 0);
        int int88 = classReader82.readUnsignedShort((int) 'a');
        java.lang.String[] strArray89 = classReader82.getInterfaces();
        classWriter1.visit(2, 101, "L697610249", "L1170048200", "L2061883402", strArray89);
        int int93 = classWriter1.newNameType("L330163999", "L1141916607");
        int int95 = classWriter1.newUTF8("");
        byte[] byteArray96 = classWriter1.toByteArray();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 19 + "'", int50 == 19);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 20 + "'", int52 == 20);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 8532477865490146625L + "'", long84 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 51966 + "'", int86 == 51966);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 25929 + "'", int88 == 25929);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 28 + "'", int93 == 28);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertNotNull(byteArray96);
    }

    @Test
    public void test16387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16387");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray33 = null;
        org.mockito.asm.MethodVisitor methodVisitor34 = aSMifierClassVisitor28.visitMethod((-1), "", "hi!", "", strArray33);
        org.mockito.asm.FieldVisitor fieldVisitor35 = aSMifierClassVisitor1.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        aSMifierClassVisitor1.visitInnerClass("L1669980843", "L142696279", "", (int) (byte) 100);
        aSMifierClassVisitor1.visitSource("L326432149", "L1715840275");
        aSMifierClassVisitor1.visitSource("L1749641217", "L61669440");
        aSMifierClassVisitor1.visitSource("L1085773562", "L704540978");
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor1.visitAnnotation("L351643771", false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test16388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16388");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (short) 30313);
        aSMifierMethodVisitor0.visitMaxs(118, 4);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor19.visitLineNumber((int) (byte) 10, label29);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor19.visitAnnotation("hi!", true);
        aSMifierMethodVisitor19.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor38.visitLineNumber((int) (byte) 10, label48);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label59 = null;
        int[] intArray61 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor53.visitLookupSwitchInsn(label59, intArray61, labelArray62);
        aSMifierMethodVisitor38.visitTableSwitchInsn((int) (byte) 0, 51966, label52, labelArray62);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor38.visitLabel(label65);
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        aSMifierMethodVisitor38.visitLabel(label67);
        aSMifierMethodVisitor19.visitJumpInsn((int) (short) 10, label67);
        java.lang.String str70 = label67.toString();
        aSMifierMethodVisitor0.visitLineNumber(320, label67);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 27745, "L1526656810", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(1951818092, "L1359835451", "L1111263690", "L397071903");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1]");
        org.junit.Assert.assertNotNull(labelArray62);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L874195432" + "'", str70, "L874195432");
        org.junit.Assert.assertNotNull(annotationVisitor75);
    }

    @Test
    public void test16389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16389");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        classWriter1.visitInnerClass("hi!", "", "", 3);
        classWriter1.visitSource("L994489370", "L1669980843");
        classWriter1.visitInnerClass("L326432149", "L326432149", "L1544572272", 100);
        classWriter1.visitOuterClass("L1715840275", "L1715840275", "L799304101");
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter40.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter40.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter40.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter40.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter40.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter65 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor66.visit(2, (int) (byte) 0, "", "", "", strArray75);
        classWriter40.visit((int) 'a', (int) '#', "", "", "hi!", strArray75);
        aSMifierClassVisitor28.visit((int) 'a', (int) (short) 100, "L666971223", "L142696279", "L1434348811", strArray75);
        classWriter1.visit(134, 24, "", "L601058011", "L384579388", strArray75);
        classWriter1.visitInnerClass("", "L666971223", "", 2);
        int int86 = classWriter1.newClass("L749622499");
        classWriter1.visitSource("L852338205", "L1720888652");
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = classWriter1.visitAnnotation("L34197324", false);
        classWriter1.visitEnd();
        int int97 = classWriter1.newField("L1800049467", "L312071672", "L407895089");
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 19 + "'", int86 == 19);
        org.junit.Assert.assertNotNull(annotationVisitor92);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 27 + "'", int97 == 27);
    }

    @Test
    public void test16390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16390");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        aSMifierClassVisitor1.visitInnerClass("L61669440", "hi!", "L2113189186", 10);
        aSMifierClassVisitor1.visitSource("L1669980843", "L666971223");
        java.util.List list32 = aSMifierClassVisitor1.text;
        aSMifierClassVisitor1.visitSource("L834812042", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor40.visitAnnotationDefault();
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor40.visitLabel(label54);
        aSMifierMethodVisitor40.visitTypeInsn(8, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor40.visitParameterAnnotation(25929, "hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor63 = aSMifierClassVisitor1.visitField(57174305, "L1105153118", "L2099222213", "L407895089", (java.lang.Object) 25929);
        aSMifierClassVisitor1.visitSource("L77953979", "L2018459260");
        aSMifierClassVisitor1.visitSource("L2109987209", "L1556845882");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(fieldVisitor63);
    }

    @Test
    public void test16391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16391");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor34.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor34.visitLineNumber((int) (byte) 10, label44);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        aSMifierMethodVisitor34.visitTableSwitchInsn((int) (byte) 0, 51966, label48, labelArray58);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor34.visitLabel(label61);
        org.mockito.asm.Label label63 = new org.mockito.asm.Label();
        aSMifierMethodVisitor34.visitLabel(label63);
        aSMifierMethodVisitor0.visitLineNumber(590080, label63);
        java.util.List list66 = aSMifierMethodVisitor0.getText();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (byte) -1, "L337085009", "L70782547", "L1962067231");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(list66);
    }

    @Test
    public void test16392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16392");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println((float) 590080L);
        printWriter1.print((float) 4);
        java.io.PrintWriter printWriter27 = printWriter1.append('#');
        printWriter27.close();
        printWriter27.print(true);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter27, false);
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        classWriter34.visitInnerClass("hi!", "", "", 3);
        classWriter34.visitSource("L994489370", "L1669980843");
        classWriter34.visitInnerClass("L326432149", "L326432149", "L1544572272", 100);
        int int53 = classWriter34.newNameType("L1003926609", "L1479479862");
        int int56 = classWriter34.newNameType("L1962067231", "");
        int int61 = classWriter34.newMethod("L1808073265", "L1305827832", "L119989099", false);
        int int66 = classWriter34.newMethod("L25251448", "L2026162020", "L127379530", false);
        printWriter27.println((java.lang.Object) false);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter27);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 11 + "'", int53 == 11);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 13 + "'", int56 == 13);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 19 + "'", int61 == 19);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 25 + "'", int66 == 25);
    }

    @Test
    public void test16393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16393");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        org.mockito.asm.ClassReader classReader25 = new org.mockito.asm.ClassReader(byteArray20);
        org.mockito.asm.ClassReader classReader26 = new org.mockito.asm.ClassReader(byteArray20);
        org.mockito.asm.ClassReader classReader27 = new org.mockito.asm.ClassReader(byteArray20);
        int int28 = classReader27.header;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("L459227517");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.println((double) 1L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.println((long) 1634628694);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((int) 'a');
        printWriter41.println("");
        printWriter41.flush();
        printWriter41.println("L1694926691");
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label59 = null;
        int[] intArray61 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor53.visitLookupSwitchInsn(label59, intArray61, labelArray62);
        java.util.List list64 = aSMifierMethodVisitor53.getText();
        printWriter50.println((java.lang.Object) list64);
        printWriter50.print((double) 10L);
        printWriter50.print(false);
        java.io.PrintWriter printWriter70 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor71 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter70);
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor71.visit(2, (int) (byte) 0, "", "", "", strArray80);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierClassVisitor71.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierClassVisitor71.visitAnnotation("hi!", false);
        printWriter50.println((java.lang.Object) aSMifierClassVisitor71);
        char[] charArray91 = new char[] { 'a', '#' };
        printWriter50.println(charArray91);
        printWriter41.println(charArray91);
        printWriter31.write(charArray91);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str95 = classReader27.readClass((int) (short) 2305, charArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2305");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 118 + "'", int28 == 118);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(annotationVisitor87);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[a, #]");
    }

    @Test
    public void test16394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16394");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        java.util.List list30 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(12, 0);
        aSMifierMethodVisitor0.visitIincInsn(111, 16777217);
        aSMifierMethodVisitor0.visitMaxs(16777217, 67);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test16395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16395");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn(2, (-1));
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (short) 256, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 256");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test16396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16396");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), 9);
        aSMifierMethodVisitor0.visitIincInsn(100, 6);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1847415535", 31);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
    }

    @Test
    public void test16397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16397");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor21.visitInnerClass("L1434348811", "", "L142696279", 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierClassVisitor21.visitAnnotation("L464564430", false);
        aSMifierClassVisitor21.visitEnd();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.print((int) 'a');
        printWriter36.println("");
        java.io.PrintWriter printWriter41 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor42 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        aSMifierClassVisitor42.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierClassVisitor42.visitAnnotation("", false);
        printWriter36.print((java.lang.Object) false);
        printWriter36.print((double) 10.0f);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter36);
        printWriter54.print((long) 1);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter54);
        boolean boolean58 = printWriter54.checkError();
        java.io.PrintWriter printWriter60 = printWriter54.append((java.lang.CharSequence) "L2113189186");
        printWriter60.flush();
        printWriter60.print((-1.0f));
        printWriter60.println(10.0f);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        printWriter67.print(0.0d);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("hi!");
        char[] charArray81 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter74.print(charArray81);
        printWriter67.write(charArray81);
        printWriter60.print(charArray81);
        org.mockito.asm.FieldVisitor fieldVisitor85 = aSMifierClassVisitor21.visitField(23, "L166496538", "L967033583", "L911973346", (java.lang.Object) printWriter60);
        aSMifierClassVisitor21.visitInnerClass("", "L1043754947", "L972180261", 7);
        aSMifierClassVisitor21.visitEnd();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor85);
    }

    @Test
    public void test16398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16398");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray48 = classWriter35.toByteArray();
        org.mockito.asm.ByteVector byteVector51 = byteVector31.putByteArray(byteArray48, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray48);
        short short54 = classReader52.readShort(8);
        short short56 = classReader52.readShort((int) (byte) 10);
        byte[] byteArray57 = classReader52.b;
        byte[] byteArray58 = classReader52.b;
        org.mockito.asm.FieldVisitor fieldVisitor59 = aSMifierClassVisitor1.visitField(0, "L1434348811", "L799304101", "L1715840275", (java.lang.Object) byteArray58);
        org.mockito.asm.ClassReader classReader60 = new org.mockito.asm.ClassReader(byteArray58);
        org.mockito.asm.ClassWriter classWriter62 = new org.mockito.asm.ClassWriter(classReader60, 2305);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertTrue("'" + short54 + "' != '" + (short) 9 + "'", short54 == (short) 9);
        org.junit.Assert.assertTrue("'" + short56 + "' != '" + (short) 256 + "'", short56 == (short) 256);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor59);
    }

    @Test
    public void test16399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16399");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        aSMifierMethodVisitor0.visitVarInsn(12, 3);
        aSMifierMethodVisitor0.visitTypeInsn(12, "L648105835");
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray52 = classWriter39.toByteArray();
        org.mockito.asm.ByteVector byteVector55 = byteVector35.putByteArray(byteArray52, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader56 = new org.mockito.asm.ClassReader(byteArray52);
        long long58 = classReader56.readLong((int) (byte) 100);
        long long60 = classReader56.readLong((int) (byte) 10);
        java.lang.String[] strArray61 = classReader56.getInterfaces();
        int int63 = classReader56.readByte((int) '#');
        long long65 = classReader56.readLong(4);
        int int67 = classReader56.readInt((int) (short) 9);
        long long69 = classReader56.readLong((int) '4');
        java.lang.String str70 = classReader56.getSuperName();
        java.lang.String str71 = classReader56.getSuperName();
        int int73 = classReader56.readUnsignedShort(0);
        org.mockito.asm.ClassWriter classWriter75 = new org.mockito.asm.ClassWriter(classReader56, 47806);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classReader56);
        java.lang.String[] strArray77 = classReader56.getInterfaces();
        // The following exception was thrown during execution in test generation
        try {
            long long79 = classReader56.readLong(262144);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 8532477865490146625L + "'", long58 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 72057598333118569L + "'", long60 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 86 + "'", int63 == 86);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 590080L + "'", long65 == 590080L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 151060480 + "'", int67 == 151060480);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 72068947506459235L + "'", long69 == 72068947506459235L);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 51966 + "'", int73 == 51966);
        org.junit.Assert.assertNotNull(strArray77);
    }

    @Test
    public void test16400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16400");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs(24940, (int) '#');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitLineNumber(67, label18);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test16401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16401");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println("hi!");
        printWriter1.close();
        printWriter1.println((double) 3);
        java.util.Locale locale7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label15 = null;
        int[] intArray17 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label15, intArray17, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf(locale7, "L1749641217", (java.lang.Object[]) labelArray18);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter20);
        aSMifierClassVisitor21.visitOuterClass("L698099150", "L1271562021", "L749622499");
        aSMifierClassVisitor21.visitInnerClass("L169779857", "L1627212431", "L424221623", 110);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[1]");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
    }

    @Test
    public void test16402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16402");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter26.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter39.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter39.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter64 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor65.visit(2, (int) (byte) 0, "", "", "", strArray74);
        classWriter39.visit((int) 'a', (int) '#', "", "", "hi!", strArray74);
        classWriter26.visit(7, (int) (byte) 0, "hi!", "", "", strArray74);
        org.mockito.asm.Attribute[] attributeArray79 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor19.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray74, (int) (short) 0, (java.lang.Object[]) attributeArray79);
        org.mockito.asm.MethodVisitor methodVisitor81 = aSMifierClassVisitor1.visitMethod(2, "hi!", "hi!", "", strArray74);
        aSMifierClassVisitor1.visitSource("L1567576268", "L258697792");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(attributeArray79);
        org.junit.Assert.assertNotNull(methodVisitor81);
    }

    @Test
    public void test16403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16403");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        java.lang.Object obj42 = new java.lang.Object();
        aSMifierMethodVisitor0.visitLdcInsn(obj42);
        java.util.List list44 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn(202, 15);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 9, "L2036836790", "L2112385861", "L96121905");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor0.visitParameterAnnotation(1634628694, "L838424803", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(25929, "L1659408532");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test16404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16404");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        printWriter19.print(0);
        java.io.PrintWriter printWriter25 = printWriter19.append((java.lang.CharSequence) "L289288072");
        org.mockito.asm.ClassWriter classWriter28 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor34 = classWriter28.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter28.visitEnd();
        int int37 = classWriter28.newClass("");
        byte[] byteArray38 = classWriter28.toByteArray();
        org.mockito.asm.ClassReader classReader39 = new org.mockito.asm.ClassReader(byteArray38);
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray38);
        int int42 = classReader40.readInt(27);
        java.lang.String[] strArray43 = classReader40.getInterfaces();
        java.io.PrintWriter printWriter44 = printWriter19.format("L1605751355", (java.lang.Object[]) strArray43);
        printWriter19.println((float) 590080);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.println("hi!");
        printWriter48.close();
        printWriter48.println((double) 3);
        java.util.Locale locale54 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label62 = null;
        int[] intArray64 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray65 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label62, intArray64, labelArray65);
        java.io.PrintWriter printWriter67 = printWriter48.printf(locale54, "L1749641217", (java.lang.Object[]) labelArray65);
        printWriter67.print(true);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        printWriter71.print((-889275714));
        printWriter71.print(0.0d);
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter((java.io.Writer) printWriter71, false);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter("hi!");
        char[] charArray86 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter79.print(charArray86);
        printWriter71.write(charArray86);
        printWriter67.write(charArray86);
        printWriter19.write(charArray86);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 6, 1, 0, 0, 3, 0, 0, 0, 0, 7, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 2, 0, 5, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1937006958 + "'", int42 == 1937006958);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1]");
        org.junit.Assert.assertNotNull(labelArray65);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, a,  , a,  , #]");
    }

    @Test
    public void test16405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16405");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("hi!");
        printWriter19.print((int) 'a');
        printWriter19.println("");
        printWriter19.print((float) 590080L);
        java.lang.Object[] objArray27 = null;
        java.io.PrintWriter printWriter28 = printWriter19.printf("hi!", objArray27);
        printWriter28.println('a');
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter28);
        printWriter31.print(false);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((-889275714));
        printWriter35.println((int) (short) 256);
        printWriter35.print((long) 1);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        java.io.PrintWriter printWriter48 = printWriter43.append('#');
        printWriter48.println((double) 51966);
        char[] charArray57 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter48.write(charArray57);
        printWriter35.print(charArray57);
        printWriter31.println(charArray57);
        printWriter17.println(charArray57);
        printWriter17.print(' ');
        printWriter17.write((int) (short) 26913);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[ , a,  , #, #, a]");
    }

    @Test
    public void test16406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16406");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L994489370");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor41.visitOuterClass("L337574950", "L659269359", "L1592299270");
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter57 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter57.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = classWriter57.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor69 = classWriter57.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray70 = classWriter57.toByteArray();
        org.mockito.asm.ByteVector byteVector73 = byteVector53.putByteArray(byteArray70, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader74 = new org.mockito.asm.ClassReader(byteArray70);
        long long76 = classReader74.readLong((int) (byte) 100);
        long long78 = classReader74.readLong((int) (byte) 10);
        short short80 = classReader74.readShort(1);
        java.lang.String[] strArray81 = classReader74.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor41.visitMethod(114, "L407895089", "L139888629", "L231657813", strArray81);
        aSMifierClassVisitor41.visitSource("L992490396", "L371765247");
        aSMifierClassVisitor41.visitEnd();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor69);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 8532477865490146625L + "'", long76 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 72057598333118569L + "'", long78 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short80 + "' != '" + (short) -326 + "'", short80 == (short) -326);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(methodVisitor82);
    }

    @Test
    public void test16407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16407");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        printWriter21.flush();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test16408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16408");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list15 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor16.visitLineNumber((int) (byte) 10, label26);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor16.visitTableSwitchInsn((int) (byte) 0, 51966, label30, labelArray40);
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor16.visitLabel(label43);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor48.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor61.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor61.visitAnnotation("hi!", false);
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(10, label77);
        aSMifierMethodVisitor48.visitLineNumber(1, label77);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLocalVariable("hi!", "L1434348811", "L326432149", label77, label80, 9);
        java.lang.String str83 = label80.toString();
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L994489370", 47806);
        aSMifierMethodVisitor0.visitVarInsn(20, 326);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1893447210", 1702035712);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor75);
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L1419027181" + "'", str83, "L1419027181");
    }

    @Test
    public void test16409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16409");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        boolean boolean19 = printWriter1.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor20.visitSource("L978789454", "");
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter30 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter30.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = classWriter30.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter30.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label28.info = classWriter30;
        int int46 = classWriter30.newNameType("", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter30.visitAnnotation("L142696279", true);
        org.mockito.asm.FieldVisitor fieldVisitor50 = aSMifierClassVisitor20.visitField(321, "L967033583", "L1271688136", "L389484434", (java.lang.Object) true);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = fieldVisitor50.visitAnnotation("L392705655", false);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test16410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16410");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println(false);
        java.io.PrintWriter printWriter25 = printWriter1.append((java.lang.CharSequence) "L1669980843");
        printWriter1.println();
        java.util.Locale locale27 = null;
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter36.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = classWriter36.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor48 = classWriter36.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray49 = classWriter36.toByteArray();
        org.mockito.asm.ByteVector byteVector52 = byteVector32.putByteArray(byteArray49, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray49);
        long long55 = classReader53.readLong((int) (byte) 100);
        long long57 = classReader53.readLong((int) (byte) 10);
        java.lang.String[] strArray58 = classReader53.getInterfaces();
        int int60 = classReader53.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter62 = new org.mockito.asm.ClassWriter(classReader53, 0);
        int int64 = classReader53.readByte((int) (short) 0);
        java.lang.String[] strArray65 = classReader53.getInterfaces();
        java.io.PrintWriter printWriter66 = printWriter1.printf(locale27, "L1432518723", (java.lang.Object[]) strArray65);
        printWriter66.println((double) 2378745028181819648L);
        printWriter66.print("L2095066844");
        boolean boolean71 = printWriter66.checkError();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 8532477865490146625L + "'", long55 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 72057598333118569L + "'", long57 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 202 + "'", int64 == 202);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test16411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16411");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor50.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor50.visitAnnotation("hi!", false);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLineNumber(10, label66);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 9, label66);
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "L454715523", "L2113189186", "L1715840275");
        aSMifierMethodVisitor0.visitFieldInsn(0, "L2101667039", "L1669980843", "");
        aSMifierMethodVisitor0.visitVarInsn(123, (int) (short) 9);
        aSMifierMethodVisitor0.visitTypeInsn(32, "L459227517");
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor0.visitParameterAnnotation(186, "L1605751355", true);
        aSMifierMethodVisitor0.visitFieldInsn(136, "L1605751355", "L993028827", "L1951373725");
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor88);
    }

    @Test
    public void test16412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16412");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        byte[] byteArray39 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray39);
        org.mockito.asm.ClassReader classReader41 = new org.mockito.asm.ClassReader(byteArray39);
        org.mockito.asm.ClassReader classReader42 = new org.mockito.asm.ClassReader(byteArray39);
        // The following exception was thrown during execution in test generation
        try {
            long long44 = classReader42.readLong(334);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test16413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16413");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs((-889275714), (int) 'a');
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 257);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) -17730, "L201269794", "L1784767575", "L466505566");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test16414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16414");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println(false);
        java.io.PrintWriter printWriter25 = printWriter1.append('#');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter25);
    }

    @Test
    public void test16415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16415");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        printWriter31.print((double) 7);
        java.util.Locale locale57 = null;
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter66.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = classWriter66.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor78 = classWriter66.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray79 = classWriter66.toByteArray();
        org.mockito.asm.ByteVector byteVector82 = byteVector62.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader83 = new org.mockito.asm.ClassReader(byteArray79);
        org.mockito.asm.ClassReader classReader86 = new org.mockito.asm.ClassReader(byteArray79, 0, (-1107296256));
        java.lang.String[] strArray87 = classReader86.getInterfaces();
        java.io.PrintWriter printWriter88 = printWriter31.printf(locale57, "L1544572272", (java.lang.Object[]) strArray87);
        printWriter88.print(false);
        printWriter88.println('#');
        java.io.PrintWriter printWriter94 = new java.io.PrintWriter((java.io.Writer) printWriter88, true);
        printWriter94.print(true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(printWriter88);
    }

    @Test
    public void test16416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16416");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((int) '4');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter21.visitEnd();
        classWriter21.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter21.visitSource("hi!", "hi!");
        byte[] byteArray43 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector46 = byteVector15.putByteArray(byteArray43, (int) (short) 10, (int) '4');
        annotationVisitor10.visit("L598840791", (java.lang.Object) byteArray43);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray43);
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader48, 0);
        byte[] byteArray51 = classReader48.b;
        int int53 = classReader48.readUnsignedShort(14);
        java.lang.String[] strArray54 = classReader48.getInterfaces();
        int int56 = classReader48.readInt((int) (short) 0);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-889275714) + "'", int56 == (-889275714));
    }

    @Test
    public void test16417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16417");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putByte((int) (short) 256);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(24942);
        byte[] byteArray29 = null;
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByteArray(byteArray29, 57174305, (int) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putInt(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector28.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector28.putLong((long) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector28.putShort((int) (short) 1);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
    }

    @Test
    public void test16418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16418");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (short) 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation(25, "L1669980843", false);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.println();
        aSMifierMethodVisitor0.print(printWriter35);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotation("L1829941255", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, 142);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test16419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16419");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L994489370");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        printWriter40.close();
        printWriter40.print((double) 590080L);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        char[] charArray53 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter46.print(charArray53);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        aSMifierClassVisitor55.visitEnd();
        aSMifierClassVisitor55.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor55.visitAnnotation("L326432149", false);
        java.io.PrintWriter printWriter66 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor67 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter66);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor67.visit(2, (int) (byte) 0, "", "", "", strArray76);
        aSMifierClassVisitor55.visit(12, (int) (short) 0, "L1555790481", "L2101667039", "L137501116", strArray76);
        java.io.PrintWriter printWriter79 = printWriter40.format("", (java.lang.Object[]) strArray76);
        printWriter79.print("L544338606");
        printWriter79.println((float) 29);
        printWriter79.print(339);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter79);
    }

    @Test
    public void test16420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16420");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitOuterClass("hi!", "", "");
        classWriter1.visitEnd();
        classWriter1.visitSource("L723576843", "L1644755393");
        classWriter1.visitSource("L527197175", "L117232912");
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = classWriter1.visitAnnotation("L1127838997", true);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertNotNull(annotationVisitor85);
    }

    @Test
    public void test16421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16421");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitMethodInsn(4, "", "hi!", "");
        aSMifierMethodVisitor0.visitIntInsn(3, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L454715523", (int) (short) 256);
        aSMifierMethodVisitor0.visitIincInsn(26913, (int) (short) 22113);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor0.visitParameterAnnotation(11, "L189751204", false);
        java.util.List list45 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 257, "L1056201301", false);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test16422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16422");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitIincInsn(1, 0);
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor22.visitLabel(label34);
        label20.info = aSMifierMethodVisitor22;
        aSMifierMethodVisitor22.visitIincInsn(24940, 182);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test16423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16423");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter16.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = classWriter16.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor28 = classWriter16.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray29 = classWriter16.toByteArray();
        org.mockito.asm.ByteVector byteVector32 = byteVector12.putByteArray(byteArray29, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader33 = new org.mockito.asm.ClassReader(byteArray29);
        long long35 = classReader33.readLong((int) (byte) 100);
        long long37 = classReader33.readLong((int) (byte) 10);
        java.lang.String[] strArray38 = classReader33.getInterfaces();
        int int40 = classReader33.readInt(0);
        byte[] byteArray41 = classReader33.b;
        java.lang.String[] strArray42 = classReader33.getInterfaces();
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter51 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter51.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = classWriter51.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor63 = classWriter51.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray64 = classWriter51.toByteArray();
        org.mockito.asm.ByteVector byteVector67 = byteVector47.putByteArray(byteArray64, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader68 = new org.mockito.asm.ClassReader(byteArray64);
        long long70 = classReader68.readLong((int) (byte) 100);
        int int72 = classReader68.readInt(8);
        java.lang.String[] strArray73 = classReader68.getInterfaces();
        aSMifierMethodVisitor0.visitFrame(872, (int) (short) 10, (java.lang.Object[]) strArray42, (-1), (java.lang.Object[]) strArray73);
        aSMifierMethodVisitor0.visitTypeInsn(6, "L1761736395");
        aSMifierMethodVisitor0.visitMethodInsn(21, "L4743655", "L231657813", "L836986691");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(257, "L2081043702", "L1450497477", "L50663034");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 8532477865490146625L + "'", long35 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 72057598333118569L + "'", long37 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-889275714) + "'", int40 == (-889275714));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 8532477865490146625L + "'", long70 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 590080 + "'", int72 == 590080);
        org.junit.Assert.assertNotNull(strArray73);
    }

    @Test
    public void test16424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16424");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        printWriter21.print((double) (short) 30313);
        printWriter21.print((long) 10);
        printWriter21.print(true);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        java.io.PrintWriter printWriter67 = printWriter21.append((java.lang.CharSequence) "L1532047758");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter((java.io.Writer) printWriter67, false);
        printWriter67.flush();
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter67, false);
        printWriter73.print(721152L);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test16425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16425");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierClassVisitor1.visitAnnotation("L666971223", true);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor25 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierClassVisitor25.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter40.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter40.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter40.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray53 = classWriter40.toByteArray();
        org.mockito.asm.ByteVector byteVector56 = byteVector36.putByteArray(byteArray53, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader57 = new org.mockito.asm.ClassReader(byteArray53);
        long long59 = classReader57.readLong((int) (byte) 100);
        int int61 = classReader57.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray62 = classReader57.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor63 = aSMifierClassVisitor25.visitMethod(0, "hi!", "L994489370", "hi!", strArray62);
        org.mockito.asm.MethodVisitor methodVisitor64 = aSMifierClassVisitor1.visitMethod(3, "L1544572272", "L1749641217", "L1441782014", strArray62);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("L1788074348");
        org.mockito.asm.FieldVisitor fieldVisitor71 = aSMifierClassVisitor1.visitField(10, "L1647649528", "L1105153118", "L661313578", (java.lang.Object) "L1788074348");
        aSMifierClassVisitor1.visitSource("L1528647597", "L1957730982");
        aSMifierClassVisitor1.visitInnerClass("L1137045083", "L1216017066", "L1355584678", 37);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 8532477865490146625L + "'", long59 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 51966 + "'", int61 == 51966);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(methodVisitor63);
        org.junit.Assert.assertNotNull(methodVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor71);
    }

    @Test
    public void test16426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16426");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L648105835", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(48640, "L1344346170", "L450861567", "L1138164648");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test16427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16427");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        printWriter6.print('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor19 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor19.visitInnerClass("L1368033619", "L1247828331", "L406965428", (int) (short) 26995);
        aSMifierClassVisitor19.visitSource("L1688081168", "L428948816");
        aSMifierClassVisitor19.visitInnerClass("L1587024737", "L290252914", "L2006578159", 0);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
    }

    @Test
    public void test16428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16428");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(100, 0);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, 28526);
        aSMifierMethodVisitor0.visitMaxs(1869480192, 115);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 24940, "L1450497477", false);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test16429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16429");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.print(0.0f);
        printWriter1.print((double) 57174305);
        printWriter1.print(0.0d);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter50.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = classWriter50.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter50.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray63 = classWriter50.toByteArray();
        org.mockito.asm.ByteVector byteVector66 = byteVector46.putByteArray(byteArray63, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader67 = new org.mockito.asm.ClassReader(byteArray63);
        long long69 = classReader67.readLong((int) (byte) 100);
        long long71 = classReader67.readLong((int) (byte) 10);
        byte[] byteArray72 = classReader67.b;
        org.mockito.asm.ClassWriter classWriter74 = new org.mockito.asm.ClassWriter(classReader67, 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = classWriter74.visitAnnotation("hi!", true);
        printWriter1.println((java.lang.Object) annotationVisitor77);
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = annotationVisitor77.visitArray("L1285969608");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 8532477865490146625L + "'", long69 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 72057598333118569L + "'", long71 == 72057598333118569L);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor80);
    }

    @Test
    public void test16430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16430");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1715840275", 24942);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "L967033583");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor40.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        aSMifierMethodVisitor40.visitLabel(label60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor62.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor62.visitIincInsn(1, 0);
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor62.visitLabel(label74);
        label60.info = aSMifierMethodVisitor62;
        aSMifierMethodVisitor0.visitLabel(label60);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 24942, "L1320473481", false);
        aSMifierMethodVisitor0.visitVarInsn(118, (int) (short) 26995);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1296855558", 262144);
        org.mockito.asm.Attribute attribute89 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test16431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16431");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotation("L2112385861", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation(872, "L365115101", false);
        aSMifierMethodVisitor0.visitIincInsn(590080, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotation("L779142371", false);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitAnnotation("L1174087069", false);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor50);
    }

    @Test
    public void test16432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16432");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println((float) 17);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        printWriter7.print((-889275714));
        printWriter7.write("");
        printWriter7.write("L994489370");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter7);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        org.mockito.asm.ByteVector byteVector31 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter37 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter37.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = classWriter37.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor49 = classWriter37.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray50 = classWriter37.toByteArray();
        org.mockito.asm.ByteVector byteVector53 = byteVector33.putByteArray(byteArray50, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader54 = new org.mockito.asm.ClassReader(byteArray50);
        long long56 = classReader54.readLong((int) (byte) 100);
        long long58 = classReader54.readLong((int) (byte) 10);
        java.lang.String[] strArray59 = classReader54.getInterfaces();
        aSMifierClassVisitor24.visit((int) (byte) 1, (-1), "", "hi!", "", strArray59);
        java.lang.String[] strArray65 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor66 = aSMifierClassVisitor24.visitMethod((int) (short) 0, "L459227517", "L1715840275", "L96121905", strArray65);
        aSMifierClassVisitor14.visit((int) (short) 100, 2, "L326432149", "L1434348811", "hi!", strArray65);
        aSMifierClassVisitor14.visitInnerClass("L821985585", "L555214098", "L575352164", 202);
        aSMifierClassVisitor14.visitEnd();
        org.mockito.asm.ClassWriter classWriter79 = new org.mockito.asm.ClassWriter((int) '4');
        int int84 = classWriter79.newMethod("hi!", "L326432149", "hi!", true);
        int int89 = classWriter79.newMethod("L1289682213", "L1853824624", "L1479479862", true);
        org.mockito.asm.FieldVisitor fieldVisitor90 = aSMifierClassVisitor14.visitField(316, "L97937772", "L326432149", "L290335602", (java.lang.Object) "L1479479862");
        aSMifierClassVisitor14.visitInnerClass("L852338205", "L290807645", "L189751204", 14);
        printWriter1.print((java.lang.Object) aSMifierClassVisitor14);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(fieldVisitor49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 8532477865490146625L + "'", long56 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 72057598333118569L + "'", long58 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(methodVisitor66);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 5 + "'", int84 == 5);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 11 + "'", int89 == 11);
        org.junit.Assert.assertNotNull(fieldVisitor90);
    }

    @Test
    public void test16433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16433");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list15 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs(2817, 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor19.visitAnnotationDefault();
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor19.visitLabel(label33);
        java.lang.Object obj35 = null;
        aSMifierMethodVisitor19.visitLdcInsn(obj35);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor19.visitAnnotation("L1669980843", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor41.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor41.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray56 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        aSMifierMethodVisitor41.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray56, (int) 'a', (java.lang.Object[]) labelArray67);
        aSMifierMethodVisitor41.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor73.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor73.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor73.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor73.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label93 = new org.mockito.asm.Label();
        aSMifierMethodVisitor73.visitLabel(label93);
        aSMifierMethodVisitor41.visitLineNumber((int) '#', label93);
        aSMifierMethodVisitor19.visitJumpInsn(0, label93);
        aSMifierMethodVisitor19.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor19);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(attributeArray56);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(annotationVisitor85);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test16434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16434");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitInsn((int) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitCode();
        aSMifierMethodVisitor46.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor46.visitEnd();
        aSMifierMethodVisitor46.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label56 = new org.mockito.asm.Label();
        aSMifierMethodVisitor46.visitJumpInsn(25, label56);
        aSMifierMethodVisitor24.visitJumpInsn(0, label56);
        aSMifierMethodVisitor24.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test16435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16435");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        char[] charArray42 = new char[] { 'a', '#' };
        printWriter1.println(charArray42);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.Writer) printWriter45);
        printWriter46.println(51966);
        java.util.Locale locale49 = null;
        java.io.PrintWriter printWriter51 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor52 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        aSMifierClassVisitor52.visitSource("", "hi!");
        java.io.PrintWriter printWriter61 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor62 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter61);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor62.visit(2, (int) (byte) 0, "", "", "", strArray71);
        aSMifierClassVisitor52.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray71);
        java.io.PrintWriter printWriter74 = printWriter46.format(locale49, "L1700715189", (java.lang.Object[]) strArray71);
        printWriter46.print('#');
        printWriter46.println(false);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, #]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(printWriter74);
    }

    @Test
    public void test16436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16436");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println(false);
        printWriter1.println();
        printWriter1.close();
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.io.PrintWriter printWriter32 = printWriter27.append('#');
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((-889275714));
        printWriter34.println((int) (short) 256);
        printWriter34.print((long) 1);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter42);
        java.io.PrintWriter printWriter47 = printWriter42.append('#');
        printWriter47.println((double) 51966);
        char[] charArray56 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter47.write(charArray56);
        printWriter34.print(charArray56);
        printWriter32.write(charArray56);
        printWriter1.write(charArray56);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter("hi!");
        char[] charArray69 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter62.print(charArray69);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor71 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        aSMifierClassVisitor71.visitOuterClass("", "L1434348811", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierClassVisitor71.visitAnnotation("L1669980843", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = annotationVisitor78.visitArray("L454715523");
        printWriter1.print((java.lang.Object) annotationVisitor80);
        printWriter1.print((double) 100);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor80);
    }

    @Test
    public void test16437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16437");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println(7);
        printWriter1.write("L834812042");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((int) 'a');
        printWriter42.println("");
        java.io.PrintWriter printWriter47 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        aSMifierClassVisitor48.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierClassVisitor48.visitAnnotation("", false);
        printWriter42.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter42);
        java.io.PrintWriter printWriter60 = printWriter42.append(' ');
        java.io.PrintWriter printWriter62 = printWriter42.append(' ');
        printWriter62.write(24942);
        printWriter62.print(false);
        java.lang.String[] strArray68 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter69 = printWriter62.format("L1518460396", (java.lang.Object[]) strArray68);
        org.mockito.asm.MethodVisitor methodVisitor70 = aSMifierClassVisitor36.visitMethod(0, "L2026303857", "L1284973471", "L1716111915", strArray68);
        java.lang.Object obj75 = null;
        org.mockito.asm.FieldVisitor fieldVisitor76 = aSMifierClassVisitor36.visitField(100, "L543552110", "L1544572272", "L265725697", obj75);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = fieldVisitor76.visitAnnotation("L351643771", true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(methodVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test16438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16438");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(2, (int) (short) -1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 1, 3);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotation("L990238104", true);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test16439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16439");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor3 = aSMifierMethodVisitor0.visitAnnotation("L1434348811", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor5.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor5.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor5.visitLineNumber((int) (byte) 10, label15);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor5.visitAnnotation("hi!", true);
        aSMifierMethodVisitor5.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor24.visitLineNumber((int) (byte) 10, label34);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor24.visitTableSwitchInsn((int) (byte) 0, 51966, label38, labelArray48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor24.visitLabel(label51);
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        aSMifierMethodVisitor24.visitLabel(label53);
        aSMifierMethodVisitor5.visitJumpInsn((int) (short) 10, label53);
        java.lang.String str56 = label53.toString();
        java.lang.String str57 = label53.toString();
        java.lang.String str58 = label53.toString();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn(26729, label53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 26729");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor3);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L899878738" + "'", str56, "L899878738");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L899878738" + "'", str57, "L899878738");
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "L899878738" + "'", str58, "L899878738");
    }

    @Test
    public void test16440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16440");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.Attribute[] attributeArray31 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor33.visitLineNumber((int) (byte) 10, label43);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        int[] intArray56 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label54, intArray56, labelArray57);
        aSMifierMethodVisitor33.visitTableSwitchInsn((int) (byte) 0, 51966, label47, labelArray57);
        aSMifierMethodVisitor0.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray31, (int) '4', (java.lang.Object[]) labelArray57);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitTypeInsn(111, "L142696279");
        aSMifierMethodVisitor0.visitMaxs(186, 104);
        java.util.List list70 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(attributeArray31);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(list70);
    }

    @Test
    public void test16441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16441");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor26.visitLabel(label32);
        aSMifierMethodVisitor26.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor26.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor21.visitField(8, "L994489370", "L1703143512", "L1434348811", (java.lang.Object) aSMifierMethodVisitor26);
        aSMifierClassVisitor21.visitEnd();
        aSMifierClassVisitor21.visitEnd();
        java.util.List list46 = aSMifierClassVisitor21.text;
        aSMifierClassVisitor21.visitSource("L964051540", "L852338205");
        java.util.List list50 = aSMifierClassVisitor21.text;
        aSMifierClassVisitor21.visitSource("L1368033619", "L1890580259");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierClassVisitor21.visitAnnotation("", false);
        aSMifierClassVisitor21.visitInnerClass("L2146012452", "hi!", "L2036836790", 28526);
        aSMifierClassVisitor21.visitInnerClass("L1736155405", "L911946641", "L127379530", 50331648);
        aSMifierClassVisitor21.visitSource("L70131839", "L2050688086");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertNotNull(annotationVisitor56);
    }

    @Test
    public void test16442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16442");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotation("L2112385861", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation(872, "L365115101", false);
        aSMifierMethodVisitor0.visitIincInsn(17, 31);
        aSMifierMethodVisitor0.visitFieldInsn(123, "L549435366", "L2139297745", "L671595473");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor0.visitAnnotation("L1043754947", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitAnnotation("L1521763917", false);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test16443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16443");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotation("L2099222213", false);
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        int int52 = classReader48.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        org.mockito.asm.ClassWriter classWriter55 = new org.mockito.asm.ClassWriter(classReader48, 2);
        int int57 = classWriter55.newUTF8("");
        label23.info = classWriter55;
        aSMifierMethodVisitor0.visitJumpInsn(2, label23);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list61 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitAnnotation("L394842588", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor0.visitParameterAnnotation(17, "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L721189988", 16);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L530824197", 31);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 51966 + "'", int52 == 51966);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test16444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16444");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitVarInsn(5, 0);
        aSMifierMethodVisitor0.visitMaxs(100, 13);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1829941255", 590080);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLineNumber((int) (byte) 10, label32);
        aSMifierMethodVisitor22.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor22.visitEnd();
        java.util.List list38 = aSMifierMethodVisitor22.getText();
        aSMifierMethodVisitor22.visitIincInsn(18, 3);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor22.visitAnnotation("L1694926691", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitCode();
        aSMifierMethodVisitor47.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor47.visitTypeInsn(8, "");
        aSMifierMethodVisitor47.visitEnd();
        java.util.List list61 = aSMifierMethodVisitor47.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor63.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor63.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor63.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor63.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label83 = new org.mockito.asm.Label();
        aSMifierMethodVisitor63.visitLabel(label83);
        aSMifierMethodVisitor47.visitLineNumber(24942, label83);
        java.lang.String str86 = label83.toString();
        java.lang.Object obj87 = label83.info;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 0, label83);
        org.mockito.asm.Attribute attribute89 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor82);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "L848203289" + "'", str86, "L848203289");
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test16445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16445");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        org.mockito.asm.ClassWriter classWriter8 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor14 = classWriter8.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter8.visitEnd();
        org.mockito.asm.ClassWriter classWriter22 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter22.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = classWriter22.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor34 = classWriter22.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter22.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor41 = classWriter22.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter47 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor48.visit(2, (int) (byte) 0, "", "", "", strArray57);
        classWriter22.visit((int) 'a', (int) '#', "", "", "hi!", strArray57);
        classWriter8.visit(100, 100, "L326432149", "L1434348811", "", strArray57);
        aSMifierClassVisitor1.visit(590080, 256, "L994489370", "L237245406", "L1749641217", strArray57);
        aSMifierClassVisitor1.visitSource("L326432149", "L1601831013");
        aSMifierClassVisitor1.visitInnerClass("L909438963", "L836986691", "L1962067231", 27745);
        org.junit.Assert.assertNotNull(fieldVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(strArray57);
    }

    @Test
    public void test16446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16446");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor16.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor29.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor29.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor29.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor29.visitAnnotation("hi!", false);
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        aSMifierMethodVisitor29.visitLineNumber(10, label45);
        aSMifierMethodVisitor16.visitLineNumber(1, label45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor48.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor48.visitLocalVariable("hi!", "hi!", "hi!", label63, label64, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor68.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor68.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor68.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor68.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor68.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label88 = new org.mockito.asm.Label();
        aSMifierMethodVisitor68.visitLabel(label88);
        java.lang.String str90 = label88.toString();
        aSMifierMethodVisitor48.visitJumpInsn(5, label88);
        java.lang.Object obj92 = label88.info;
        label45.info = label88;
        aSMifierMethodVisitor0.visitJumpInsn(136, label88);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((-889275714), "L294838978", "L804028497", "L809514489");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor87);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "L407478746" + "'", str90, "L407478746");
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test16447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16447");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        java.lang.String[] strArray18 = null;
        aSMifierClassVisitor1.visit((int) (byte) 10, 1, "", "L1434348811", "L326432149", strArray18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor1.visitAnnotation("L967033583", false);
        org.mockito.asm.Attribute attribute23 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitAttribute(attribute23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test16448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16448");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        java.io.PrintWriter printWriter60 = printWriter58.append((java.lang.CharSequence) "L1407330455");
        printWriter60.write(66);
        java.io.PrintWriter printWriter64 = printWriter60.append((java.lang.CharSequence) "L543552110");
        printWriter64.flush();
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter((java.io.Writer) printWriter64, false);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test16449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16449");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label63);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(67, 57174305);
        aSMifierMethodVisitor0.visitIincInsn(0, 169);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L555326328", 1853118049);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
    }

    @Test
    public void test16450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16450");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        printWriter1.print(0.0d);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        boolean boolean8 = printWriter1.checkError();
        printWriter1.print((double) 115);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((-889275714));
        java.util.Locale locale15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        int[] intArray38 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label36, intArray38, labelArray39);
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label18, intArray27, labelArray39);
        java.io.PrintWriter printWriter42 = printWriter12.format(locale15, "hi!", (java.lang.Object[]) labelArray39);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        printWriter44.print((-889275714));
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        int[] intArray70 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label68, intArray70, labelArray71);
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label50, intArray59, labelArray71);
        java.io.PrintWriter printWriter74 = printWriter44.format(locale47, "hi!", (java.lang.Object[]) labelArray71);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter("hi!");
        char[] charArray83 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter76.print(charArray83);
        printWriter74.print(charArray83);
        printWriter12.println(charArray83);
        printWriter1.println(charArray83);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        java.io.PrintWriter printWriter91 = printWriter1.append((java.lang.CharSequence) "L1453527686");
        printWriter91.println((double) 1937006958);
        printWriter91.println(true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1]");
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test16451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16451");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println("hi!");
        printWriter1.close();
        printWriter1.println((double) 3);
        java.util.Locale locale7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label15 = null;
        int[] intArray17 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label15, intArray17, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf(locale7, "L1749641217", (java.lang.Object[]) labelArray18);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter20, false);
        printWriter20.print((float) 0L);
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putShort((int) '4');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter34.visitEnd();
        classWriter34.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter34.visitSource("hi!", "hi!");
        byte[] byteArray56 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector59 = byteVector28.putByteArray(byteArray56, (int) (short) 10, (int) '4');
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putShort((int) (short) 100);
        printWriter20.print((java.lang.Object) byteVector61);
        printWriter20.println(false);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[1]");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
    }

    @Test
    public void test16452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16452");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        boolean boolean34 = printWriter31.checkError();
        printWriter31.print("L1105153118");
        printWriter31.close();
        printWriter31.println();
        printWriter31.println("L1398906509");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test16453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16453");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putByte(6);
        org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter((int) 'a');
        byte[] byteArray14 = classWriter13.toByteArray();
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putByteArray(byteArray14, 5, (int) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putByte(2);
        annotationVisitor30.visit("", (java.lang.Object) byteVector33);
        org.mockito.asm.ByteVector byteVector40 = byteVector33.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector42 = byteVector33.putByte(3);
        org.mockito.asm.ByteVector byteVector44 = byteVector33.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter52.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = classWriter52.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter52.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray65 = classWriter52.toByteArray();
        org.mockito.asm.ByteVector byteVector68 = byteVector48.putByteArray(byteArray65, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader69 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray65);
        byte[] byteArray72 = classReader71.b;
        org.mockito.asm.ByteVector byteVector75 = byteVector44.putByteArray(byteArray72, 0, 5);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ByteVector byteVector79 = byteVector17.putByteArray(byteArray72, 25, (int) (short) 0);
        org.mockito.asm.ClassReader classReader80 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ClassWriter classWriter82 = new org.mockito.asm.ClassWriter(classReader80, 872);
        short short84 = classReader80.readShort(6);
        int int85 = classReader80.getAccess();
        java.lang.String[] strArray86 = classReader80.getInterfaces();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertTrue("'" + short84 + "' != '" + (short) 0 + "'", short84 == (short) 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test16454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16454");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label24.info = classWriter26;
        java.lang.Object obj40 = label24.info;
        aSMifierMethodVisitor0.visitLabel(label24);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitParameterAnnotation(320, "L407895089", false);
        aSMifierMethodVisitor0.visitMaxs(0, 8);
        aSMifierMethodVisitor0.visitIincInsn(34, 5);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(1699311222);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1699311222");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test16455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16455");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        java.io.PrintWriter printWriter64 = printWriter37.format("L1669980843", (java.lang.Object[]) labelArray61);
        printWriter37.print((long) 18);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter70 = printWriter37.append((java.lang.CharSequence) "L1247828331", 24942, 234);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 234");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test16456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16456");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label16, label17, 8);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter51.print((int) '4');
        aSMifierMethodVisitor0.print(printWriter51);
        printWriter51.println((long) 1986622313);
        printWriter51.println((double) 110);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter51);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test16457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16457");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1434348811", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("L1281777590", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitParameterAnnotation(31, "L1483711204", true);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test16458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16458");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter22 = printWriter1.append('a');
        printWriter22.close();
        printWriter22.write("L1845262982");
        java.io.PrintWriter printWriter27 = printWriter22.append(' ');
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.Writer) printWriter22, false);
        printWriter22.close();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter27);
    }

    @Test
    public void test16459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16459");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitSource("L799304101", "L326432149");
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitSource("L614568462", "L337574950");
        aSMifierClassVisitor10.visitInnerClass("L139692246", "L978789454", "L598840791", 3);
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitInnerClass("L1868987694", "L2018459260", "L519300220", (-1107296256));
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
    }

    @Test
    public void test16460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16460");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitParameterAnnotation(4, "L365115101", true);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, 14);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(22, 29556);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test16461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16461");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label16, label17, 8);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter51.print((int) '4');
        aSMifierMethodVisitor0.print(printWriter51);
        printWriter51.print((double) 14);
        printWriter51.println(' ');
        printWriter51.println(590080);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test16462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16462");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter22 = printWriter1.append('a');
        java.util.Locale locale23 = null;
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter26.visitEnd();
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        java.util.List list60 = aSMifierMethodVisitor49.getText();
        printWriter46.println((java.lang.Object) list60);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter((java.io.Writer) printWriter46);
        boolean boolean63 = printWriter46.checkError();
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter46, true);
        java.util.Locale locale66 = null;
        org.mockito.asm.ClassWriter classWriter69 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter69.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray75);
        java.io.PrintWriter printWriter77 = printWriter46.printf(locale66, "L812886011", (java.lang.Object[]) strArray75);
        classWriter26.visit(65792, 1853060193, "L711565622", "L1190772633", "L1719622935", strArray75);
        java.io.PrintWriter printWriter79 = printWriter1.printf(locale23, "L928755548", (java.lang.Object[]) strArray75);
        java.io.PrintWriter printWriter81 = printWriter1.append((java.lang.CharSequence) "L768432089");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test16463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16463");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((-889275714));
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor29.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label35 = null;
        int[] intArray37 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray38 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor29.visitLookupSwitchInsn(label35, intArray37, labelArray38);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label28, intArray37, labelArray49);
        java.io.PrintWriter printWriter52 = printWriter22.format(locale25, "hi!", (java.lang.Object[]) labelArray49);
        printWriter52.print((int) '4');
        java.io.PrintWriter printWriter56 = printWriter52.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter52);
        printWriter52.println('#');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter52);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor0.visitAnnotation("L1461066057", false);
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1]");
        org.junit.Assert.assertNotNull(labelArray38);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test16464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16464");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.util.Locale locale8 = null;
        org.mockito.asm.ClassWriter classWriter11 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter11.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter39.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter39.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter64 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor65.visit(2, (int) (byte) 0, "", "", "", strArray74);
        classWriter39.visit((int) 'a', (int) '#', "", "", "hi!", strArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label84 = null;
        int[] intArray86 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor78.visitLookupSwitchInsn(label84, intArray86, labelArray87);
        aSMifierMethodVisitor23.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray74, (int) (short) 100, (java.lang.Object[]) labelArray87);
        classWriter11.visit(7, (-889275714), "", "hi!", "hi!", strArray74);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale8, "hi!", (java.lang.Object[]) strArray74);
        printWriter91.print('a');
        printWriter91.print(0.0f);
        printWriter91.println(true);
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test16465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16465");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray34 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector37 = byteVector17.putByteArray(byteArray34, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader38 = new org.mockito.asm.ClassReader(byteArray34);
        long long40 = classReader38.readLong((int) (byte) 100);
        long long42 = classReader38.readLong((int) (byte) 10);
        java.lang.String[] strArray43 = classReader38.getInterfaces();
        int int45 = classReader38.readByte((int) '#');
        long long47 = classReader38.readLong(4);
        int int48 = classReader38.header;
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader38, (int) (byte) 0);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classWriter50);
        aSMifierMethodVisitor0.visitMaxs(1, 25929);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(28);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1720168318", (-889275714));
        aSMifierMethodVisitor0.visitIincInsn(16777217, 1869967971);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 8532477865490146625L + "'", long40 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 72057598333118569L + "'", long42 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 86 + "'", int45 == 86);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 590080L + "'", long47 == 590080L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 118 + "'", int48 == 118);
    }

    @Test
    public void test16466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16466");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(0, 7);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test16467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16467");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter60 = printWriter21.append((java.lang.CharSequence) "L1232938969", (int) (short) 26913, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 14");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test16468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16468");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((-1), 24942);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L801849928", 0);
        java.util.List list30 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) 872, "L620771739", "", "L1213666109");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test16469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16469");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor26.visitLabel(label32);
        aSMifierMethodVisitor26.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor26.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor21.visitField(8, "L994489370", "L1703143512", "L1434348811", (java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor48.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor48.visitLocalVariable("", "", "hi!", label63, label64, 3);
        aSMifierMethodVisitor48.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor48.visitAnnotationDefault();
        aSMifierMethodVisitor48.visitIincInsn(590080, 9);
        org.mockito.asm.FieldVisitor fieldVisitor72 = aSMifierClassVisitor21.visitField(0, "L821985585", "L2112385861", "L845352536", (java.lang.Object) 590080);
        java.lang.String[] strArray77 = null;
        org.mockito.asm.MethodVisitor methodVisitor78 = aSMifierClassVisitor21.visitMethod((-889275714), "", "", "L1924143761", strArray77);
        aSMifierClassVisitor21.visitOuterClass("L406814154", "L1461066057", "L1121272190");
        aSMifierClassVisitor21.visitInnerClass("L384579388", "L1521763917", "L964051540", 1952542324);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierClassVisitor21.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(fieldVisitor72);
        org.junit.Assert.assertNotNull(methodVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor90);
    }

    @Test
    public void test16470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16470");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (short) 0);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitAnnotation("L1694926691", true);
        aSMifierMethodVisitor0.visitMaxs(16779859, 14);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test16471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16471");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        java.util.List list9 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (short) 28526, 27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 28526");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test16472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16472");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitOuterClass("", "L1434348811", "hi!");
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter21.visitEnd();
        classWriter21.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter21.visitAnnotation("L422154835", false);
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter51 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter51.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = classWriter51.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor63 = classWriter51.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray64 = classWriter51.toByteArray();
        org.mockito.asm.ByteVector byteVector67 = byteVector47.putByteArray(byteArray64, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader68 = new org.mockito.asm.ClassReader(byteArray64);
        long long70 = classReader68.readLong((int) (byte) 100);
        long long72 = classReader68.readLong((int) (byte) 10);
        java.lang.String[] strArray73 = classReader68.getInterfaces();
        int int75 = classReader68.readInt(0);
        int int76 = classReader68.getAccess();
        java.lang.String[] strArray77 = classReader68.getInterfaces();
        classWriter21.visit(7, 33, "L779142371", "L1009311081", "L1344346170", strArray77);
        aSMifierClassVisitor10.visit(30313, (int) 'a', "L1930290201", "L1508718123", "L1320473481", strArray77);
        aSMifierClassVisitor10.visitInnerClass("L917265559", "L514553090", "L1428793912", 257);
        aSMifierClassVisitor10.visitEnd();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 8532477865490146625L + "'", long70 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 72057598333118569L + "'", long72 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-889275714) + "'", int75 == (-889275714));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(strArray77);
    }

    @Test
    public void test16473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16473");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("", true);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label26 = null;
        int[] intArray28 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray29 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label26, intArray28, labelArray29);
        java.util.List list31 = aSMifierMethodVisitor20.getText();
        printWriter17.println((java.lang.Object) list31);
        printWriter17.print((double) 10L);
        printWriter17.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor37 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter17);
        aSMifierClassVisitor37.visitInnerClass("L1434348811", "", "L142696279", 24942);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter55 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter55.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = classWriter55.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor67 = classWriter55.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray68 = classWriter55.toByteArray();
        org.mockito.asm.ByteVector byteVector71 = byteVector51.putByteArray(byteArray68, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader72 = new org.mockito.asm.ClassReader(byteArray68);
        long long74 = classReader72.readLong((int) (byte) 100);
        long long76 = classReader72.readLong((int) (byte) 10);
        short short78 = classReader72.readShort(1);
        int int80 = classReader72.readUnsignedShort(0);
        java.lang.String[] strArray81 = classReader72.getInterfaces();
        aSMifierClassVisitor37.visit(590080, (int) (short) 1, "L326432149", "L967033583", "L943959020", strArray81);
        classWriter1.visit(0, (int) (byte) 100, "L1675715472", "L1289682213", "L1004430080", strArray81);
        classWriter1.visitSource("L1532047758", "L714880249");
        classWriter1.visitInnerClass("L134221141", "L139692246", "L188937864", 4);
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1]");
        org.junit.Assert.assertNotNull(labelArray29);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor67);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 8532477865490146625L + "'", long74 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 72057598333118569L + "'", long76 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short78 + "' != '" + (short) -326 + "'", short78 == (short) -326);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 51966 + "'", int80 == 51966);
        org.junit.Assert.assertNotNull(strArray81);
    }

    @Test
    public void test16474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16474");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L2018459260", (int) (short) 0);
        aSMifierMethodVisitor0.visitMethodInsn(140, "L563651980", "L98900900", "L1675929423");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test16475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16475");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(4, "L2113189186", "L1434348811", "L799304101");
        aSMifierMethodVisitor0.visitIntInsn(4, (int) (short) 256);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.lang.Object obj31 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj31);
        java.io.PrintWriter printWriter33 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor34.visit(2, (int) (byte) 0, "", "", "", strArray43);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierClassVisitor34.visitAnnotation("", false);
        aSMifierClassVisitor34.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor57.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor57.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list73 = aSMifierMethodVisitor57.text;
        org.mockito.asm.FieldVisitor fieldVisitor74 = aSMifierClassVisitor34.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor57);
        aSMifierMethodVisitor57.visitEnd();
        aSMifierMethodVisitor57.visitIntInsn(0, 590080);
        java.util.List list79 = aSMifierMethodVisitor57.getText();
        aSMifierMethodVisitor57.visitMaxs((int) (short) 100, 326);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor57);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L242350734", 22);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(list73);
        org.junit.Assert.assertNotNull(fieldVisitor74);
        org.junit.Assert.assertNotNull(list79);
    }

    @Test
    public void test16476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16476");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.println('#');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        aSMifierMethodVisitor39.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list69 = aSMifierMethodVisitor39.text;
        aSMifierMethodVisitor39.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor39.visitCode();
        java.util.List list74 = aSMifierMethodVisitor39.text;
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor39);
        aSMifierMethodVisitor39.visitMaxs((int) (short) 256, (int) (short) 0);
        aSMifierMethodVisitor39.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor39.visitAnnotation("L459227517", true);
        aSMifierMethodVisitor39.visitCode();
        java.util.List list84 = aSMifierMethodVisitor39.text;
        aSMifierMethodVisitor39.visitIincInsn((int) (short) 24942, 101);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(annotationVisitor82);
        org.junit.Assert.assertNotNull(list84);
    }

    @Test
    public void test16477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16477");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((-1), 24942);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L801849928", 0);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.println(0.0d);
        printWriter31.println((float) 2817);
        aSMifierMethodVisitor0.print(printWriter31);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn(19, "L812886011");
        aSMifierMethodVisitor0.visitInsn(0);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test16478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16478");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        printWriter1.println((long) 5);
        printWriter1.write("hi!", 14, (-1161953280));
        printWriter1.println((double) 2817);
        java.io.PrintWriter printWriter43 = printWriter1.append('a');
        printWriter1.print("L1837291041");
        printWriter1.close();
        printWriter1.println("L1133749595");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test16479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16479");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label13);
        aSMifierMethodVisitor0.visitVarInsn(111, 320);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 9, "L395265253", "L1449203555", "L503616188");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (short) 27745, 27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 27745");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor11);
    }

    @Test
    public void test16480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16480");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label29);
        aSMifierMethodVisitor0.visitIincInsn((-1161953280), (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L1749641217", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test16481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16481");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        java.io.PrintWriter printWriter64 = printWriter37.format("L1669980843", (java.lang.Object[]) labelArray61);
        printWriter37.println((float) (-1107296256));
        java.io.PrintWriter printWriter68 = printWriter37.append((java.lang.CharSequence) "L1508718123");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(printWriter68);
    }

    @Test
    public void test16482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16482");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotation("L2112385861", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation(872, "L365115101", false);
        aSMifierMethodVisitor0.visitTypeInsn(5, "L1321861150");
        java.util.List list44 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(list44);
    }

    @Test
    public void test16483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16483");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter25 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter25);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor26.visit(2, (int) (byte) 0, "", "", "", strArray35);
        org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter43.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter43.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor55 = classWriter43.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter43.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter43.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter68 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter68);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor69.visit(2, (int) (byte) 0, "", "", "", strArray78);
        classWriter43.visit((int) 'a', (int) '#', "", "", "hi!", strArray78);
        aSMifierClassVisitor26.visit((int) (short) 10, (int) (short) 30313, "", "L1669980843", "L1669980843", strArray78);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L1669980843");
        aSMifierMethodVisitor0.visitFieldInsn(0, "L1715840275", "L142696279", "L459227517");
        aSMifierMethodVisitor0.visitInsn(12);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(326);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 326");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test16484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16484");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putByte(6);
        org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter((int) 'a');
        byte[] byteArray14 = classWriter13.toByteArray();
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putByteArray(byteArray14, 5, (int) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putByte(2);
        annotationVisitor30.visit("", (java.lang.Object) byteVector33);
        org.mockito.asm.ByteVector byteVector40 = byteVector33.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector42 = byteVector33.putByte(3);
        org.mockito.asm.ByteVector byteVector44 = byteVector33.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter52.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = classWriter52.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter52.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray65 = classWriter52.toByteArray();
        org.mockito.asm.ByteVector byteVector68 = byteVector48.putByteArray(byteArray65, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader69 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray65);
        byte[] byteArray72 = classReader71.b;
        org.mockito.asm.ByteVector byteVector75 = byteVector44.putByteArray(byteArray72, 0, 5);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ByteVector byteVector79 = byteVector17.putByteArray(byteArray72, 25, (int) (short) 0);
        org.mockito.asm.ClassReader classReader80 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ClassWriter classWriter82 = new org.mockito.asm.ClassWriter(classReader80, 872);
        int int84 = classReader80.readByte(13);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = classReader80.getItem(30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 30");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test16485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16485");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("hi!");
        printWriter19.println("hi!");
        printWriter19.close();
        printWriter19.println((double) 3);
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.io.PrintWriter printWriter38 = printWriter19.printf(locale25, "L1749641217", (java.lang.Object[]) labelArray36);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter38, false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter40);
        java.util.List list42 = aSMifierMethodVisitor0.text;
        java.util.List list43 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMaxs(51966, 1951818092);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(list43);
    }

    @Test
    public void test16486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16486");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print(9);
        java.util.Locale locale9 = null;
        org.mockito.asm.ClassWriter classWriter12 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor18 = classWriter12.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor24.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list36 = aSMifierMethodVisitor24.text;
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter40.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter40.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter40.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter40.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter40.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter65 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor66.visit(2, (int) (byte) 0, "", "", "", strArray75);
        classWriter40.visit((int) 'a', (int) '#', "", "", "hi!", strArray75);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor79.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label85 = null;
        int[] intArray87 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray88 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor79.visitLookupSwitchInsn(label85, intArray87, labelArray88);
        aSMifierMethodVisitor24.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray75, (int) (short) 100, (java.lang.Object[]) labelArray88);
        classWriter12.visit(7, (-889275714), "", "hi!", "hi!", strArray75);
        java.io.PrintWriter printWriter92 = printWriter1.format(locale9, "L1434348811", (java.lang.Object[]) strArray75);
        printWriter92.print((long) 2);
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.Writer) printWriter92, false);
        printWriter92.println();
        org.junit.Assert.assertNotNull(fieldVisitor18);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1]");
        org.junit.Assert.assertNotNull(labelArray88);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test16487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16487");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 151060480);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((-889275714));
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label29 = null;
        int[] intArray31 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor23.visitLookupSwitchInsn(label29, intArray31, labelArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor21.visitLookupSwitchInsn(label22, intArray31, labelArray43);
        java.io.PrintWriter printWriter46 = printWriter16.format(locale19, "hi!", (java.lang.Object[]) labelArray43);
        printWriter46.print((int) '4');
        boolean boolean49 = printWriter46.checkError();
        printWriter46.print("L1105153118");
        printWriter46.println((float) 57174305);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter61 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter61.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = classWriter61.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor73 = classWriter61.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray74 = classWriter61.toByteArray();
        org.mockito.asm.ByteVector byteVector77 = byteVector57.putByteArray(byteArray74, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader78 = new org.mockito.asm.ClassReader(byteArray74);
        long long80 = classReader78.readLong((int) (byte) 100);
        long long82 = classReader78.readLong((int) (byte) 10);
        int int84 = classReader78.readUnsignedShort(0);
        int int86 = classReader78.readUnsignedShort(3);
        byte[] byteArray87 = classReader78.b;
        printWriter46.println((java.lang.Object) byteArray87);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter46);
        java.io.PrintWriter printWriter91 = printWriter46.append((java.lang.CharSequence) "L237245406");
        printWriter91.print((int) (byte) 1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor94 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter91);
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = aSMifierClassVisitor94.visitAnnotation("L1483711204", false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 8532477865490146625L + "'", long80 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 72057598333118569L + "'", long82 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 51966 + "'", int84 == 51966);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 48640 + "'", int86 == 48640);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test16488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16488");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L659269359", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label26 = null;
        int[] intArray28 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray29 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label26, intArray28, labelArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label19, intArray28, labelArray40);
        aSMifierMethodVisitor18.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor18);
        java.util.List list45 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1]");
        org.junit.Assert.assertNotNull(labelArray29);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(list45);
    }

    @Test
    public void test16489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16489");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label63);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor66.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor66.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor66.visitAnnotation("hi!", false);
        org.mockito.asm.Label label82 = new org.mockito.asm.Label();
        aSMifierMethodVisitor66.visitLineNumber(10, label82);
        java.lang.String str84 = label82.toString();
        aSMifierMethodVisitor0.visitLineNumber(11, label82);
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter88 = new java.io.PrintWriter("hi!");
        printWriter88.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor91 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter88);
        printWriter88.print(0.0d);
        printWriter88.println((int) (short) 256);
        aSMifierMethodVisitor0.print(printWriter88);
        printWriter88.print(false);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
        org.junit.Assert.assertNotNull(annotationVisitor80);
// flaky:         org.junit.Assert.assertEquals("'" + str84 + "' != '" + "L2013752974" + "'", str84, "L2013752974");
    }

    @Test
    public void test16490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16490");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitVarInsn(8, 22113);
        aSMifierMethodVisitor0.visitMethodInsn(18, "L1689719368", "L1647649528", "L821985585");
        aSMifierMethodVisitor0.visitMaxs((-889275714), 210);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
    }

    @Test
    public void test16491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16491");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        java.io.PrintWriter printWriter64 = printWriter37.format("L1669980843", (java.lang.Object[]) labelArray61);
        printWriter64.print((float) 8532477865490146625L);
        printWriter64.print(35);
        printWriter64.println((int) (short) -16896);
        java.io.PrintWriter printWriter72 = new java.io.PrintWriter((java.io.Writer) printWriter64, true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test16492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16492");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println((long) (short) 9);
        printWriter21.print((double) (-91551935198396416L));
        printWriter21.write("L1174087069", 26913, (-1161953280));
        printWriter21.print(false);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test16493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16493");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.println("L799304101");
        java.io.PrintWriter printWriter35 = printWriter31.append('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor36.visitOuterClass("", "L407895089", "L2101667039");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label46, intArray55, labelArray67);
        aSMifierMethodVisitor45.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list75 = aSMifierMethodVisitor45.text;
        aSMifierMethodVisitor45.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor45.visitCode();
        java.util.List list80 = aSMifierMethodVisitor45.text;
        org.mockito.asm.FieldVisitor fieldVisitor81 = aSMifierClassVisitor36.visitField(1970431233, "", "L779142371", "L804028497", (java.lang.Object) list80);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierClassVisitor36.visitAnnotation("L1449203555", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierClassVisitor36.visitAnnotation("L406965428", true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(list75);
        org.junit.Assert.assertNotNull(list80);
        org.junit.Assert.assertNotNull(fieldVisitor81);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(annotationVisitor87);
    }

    @Test
    public void test16494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16494");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
    }

    @Test
    public void test16495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16495");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 100, "L326432149", "", "L142696279");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test16496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16496");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        printWriter21.print(0.0d);
        printWriter21.print(9);
        printWriter21.println('4');
        aSMifierMethodVisitor0.print(printWriter21);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((-889275714));
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        java.io.PrintWriter printWriter63 = printWriter33.format(locale36, "hi!", (java.lang.Object[]) labelArray60);
        printWriter33.println((int) (short) 1);
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter68 = printWriter33.format("hi!", (java.lang.Object[]) strArray67);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter33);
        boolean boolean70 = printWriter33.checkError();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter33);
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', 25929);
        aSMifierMethodVisitor0.visitMaxs(28526, (int) (short) 10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1769388599", 110);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test16497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16497");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) (short) 22113);
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("hi!");
        printWriter3.print((int) 'a');
        printWriter3.println("");
        printWriter3.print((float) 590080L);
        java.lang.Object[] objArray11 = null;
        java.io.PrintWriter printWriter12 = printWriter3.printf("hi!", objArray11);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((int) 'a');
        printWriter14.println("");
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        aSMifierClassVisitor20.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierClassVisitor20.visitAnnotation("", false);
        printWriter14.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter14);
        java.io.PrintWriter printWriter32 = printWriter14.append(' ');
        printWriter14.println(true);
        printWriter14.println(false);
        printWriter12.print((java.lang.Object) false);
        printWriter12.write("L2113189186", 0, 10);
        printWriter12.println((double) (-1L));
        int int44 = classWriter1.newConst((java.lang.Object) (-1L));
        int int48 = classWriter1.newField("L847652191", "L1413764419", "L1199538687");
        classWriter1.visitEnd();
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 8 + "'", int48 == 8);
    }

    @Test
    public void test16498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16498");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        org.mockito.asm.FieldVisitor fieldVisitor7 = aSMifierClassVisitor1.visitField((int) (short) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) 0L);
        java.lang.Object obj12 = null;
        org.mockito.asm.FieldVisitor fieldVisitor13 = aSMifierClassVisitor1.visitField(8, "L1216476214", "L911973346", "L1544572272", obj12);
        org.mockito.asm.Attribute attribute14 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor13.visitAttribute(attribute14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
    }

    @Test
    public void test16499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16499");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), 17);
        java.util.List list22 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "L459227517", "L2086382828", "L1978431276");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(list22);
    }

    @Test
    public void test16500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest32.test16500");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.println('#');
        printWriter1.print(1.0d);
        printWriter1.println((double) 282574710861678L);
        printWriter1.close();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }
}
