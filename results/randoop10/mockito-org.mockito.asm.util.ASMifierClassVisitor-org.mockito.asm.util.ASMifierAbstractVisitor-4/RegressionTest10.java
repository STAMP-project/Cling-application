import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test05001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05001");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = printWriter31.append('a');
        java.io.PrintWriter printWriter60 = printWriter31.append((java.lang.CharSequence) "L601661571", (int) (short) 0, (int) (byte) 1);
        printWriter60.flush();
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter64.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = classWriter64.visitAnnotation("hi!", false);
        classWriter64.visitOuterClass("hi!", "", "hi!");
        classWriter64.visitEnd();
        java.lang.String[] strArray85 = new java.lang.String[] { "L61669440", "L666971223", "L1434348811", "L1715840275" };
        classWriter64.visit(3, (int) (short) 10, "L1441782014", "L326432149", "hi!", strArray85);
        java.io.PrintWriter printWriter87 = printWriter60.printf("L540616366", (java.lang.Object[]) strArray85);
        // The following exception was thrown during execution in test generation
        try {
            printWriter60.write("L111016143", 186, 3395);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 3581");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test05002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05002");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitIincInsn(24942, 0);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitFieldInsn((int) (short) -1, "L767403187", "L1641107942", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
    }

    @Test
    public void test05003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05003");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor16.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor29.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor29.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor29.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor29.visitAnnotation("hi!", false);
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        aSMifierMethodVisitor29.visitLineNumber(10, label45);
        aSMifierMethodVisitor16.visitLineNumber(1, label45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor48.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor48.visitLocalVariable("hi!", "hi!", "hi!", label63, label64, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor68.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor68.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor68.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor68.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor68.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label88 = new org.mockito.asm.Label();
        aSMifierMethodVisitor68.visitLabel(label88);
        java.lang.String str90 = label88.toString();
        aSMifierMethodVisitor48.visitJumpInsn(5, label88);
        java.lang.Object obj92 = label88.info;
        label45.info = label88;
        aSMifierMethodVisitor0.visitJumpInsn(136, label88);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor87);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "L1514525409" + "'", str90, "L1514525409");
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test05004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05004");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        org.mockito.asm.FieldVisitor fieldVisitor7 = aSMifierClassVisitor1.visitField((int) (short) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) 0L);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierClassVisitor1.visitAnnotation("L994489370", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor15.visitLabel(label21);
        aSMifierMethodVisitor15.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor15.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = aSMifierClassVisitor1.visitField(321, "L137501116", "L1289682213", "L1592299270", (java.lang.Object) aSMifierMethodVisitor15);
        org.mockito.asm.Attribute attribute33 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor32.visitAttribute(attribute33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(fieldVisitor32);
    }

    @Test
    public void test05005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05005");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor31.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor31.visitLineNumber((int) (byte) 10, label41);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        aSMifierMethodVisitor31.visitTableSwitchInsn((int) (byte) 0, 51966, label45, labelArray55);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor31.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor61.visitLineNumber((int) (byte) 10, label71);
        aSMifierMethodVisitor61.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor61.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label82 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(4, label82);
        aSMifierMethodVisitor31.visitLabel(label82);
        aSMifierMethodVisitor0.visitJumpInsn((int) '4', label82);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L137501116", 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1254755410", 29);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test05006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05006");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        java.util.Locale locale17 = null;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        int int47 = classReader43.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray48 = classReader43.getInterfaces();
        java.io.PrintWriter printWriter49 = printWriter6.format(locale17, "L1434348811", (java.lang.Object[]) strArray48);
        printWriter6.print(18);
        printWriter6.print(true);
        printWriter6.println(1.0d);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 51966 + "'", int47 == 51966);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter49);
    }

    @Test
    public void test05007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05007");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray14 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader15 = new org.mockito.asm.ClassReader(byteArray14);
        int int16 = classReader15.header;
        int int18 = classReader15.readInt(4);
        long long20 = classReader15.readLong((int) (byte) 10);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((-889275714));
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        int[] intArray38 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label36, intArray38, labelArray39);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label29, intArray38, labelArray50);
        java.io.PrintWriter printWriter53 = printWriter23.format(locale26, "hi!", (java.lang.Object[]) labelArray50);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        char[] charArray62 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter55.print(charArray62);
        printWriter53.print(charArray62);
        printWriter53.print((float) 10L);
        printWriter53.println();
        printWriter53.write("L1669980843");
        java.io.PrintWriter printWriter71 = printWriter53.append((java.lang.CharSequence) "L1691870655");
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter("hi!");
        printWriter73.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor76 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter73);
        java.io.PrintWriter printWriter78 = printWriter73.append('#');
        printWriter78.println((double) 51966);
        char[] charArray87 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter78.write(charArray87);
        printWriter53.print(charArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = classReader15.readConst(66, charArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 66");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 118 + "'", int16 == 118);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 72057598333118569L + "'", long20 == 72057598333118569L);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1]");
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[ , a,  , #, #, a]");
    }

    @Test
    public void test05008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05008");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor19.visitLineNumber((int) (byte) 10, label29);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor19.visitTableSwitchInsn((int) (byte) 0, 51966, label33, labelArray43);
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor19.visitLabel(label46);
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        aSMifierMethodVisitor19.visitLabel(label48);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label48);
        java.io.PrintWriter printWriter51 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor52 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        aSMifierClassVisitor52.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor52.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitCode();
        aSMifierMethodVisitor65.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor65.visitEnd();
        aSMifierMethodVisitor65.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label75 = new org.mockito.asm.Label();
        aSMifierMethodVisitor65.visitJumpInsn(25, label75);
        java.lang.String str77 = label75.toString();
        aSMifierMethodVisitor0.visitJumpInsn(118, label75);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 872);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L2008752917", 218169344);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L1848839374" + "'", str77, "L1848839374");
    }

    @Test
    public void test05009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05009");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        printWriter1.println((long) 5);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor36.visitCode();
        aSMifierMethodVisitor36.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor36.visitAnnotation("hi!", false);
        aSMifierMethodVisitor36.visitMethodInsn(1, "L142696279", "L994489370", "L326432149");
        printWriter1.println((java.lang.Object) "L142696279");
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        java.util.List list70 = aSMifierMethodVisitor59.getText();
        printWriter56.println((java.lang.Object) list70);
        printWriter56.print((double) 10L);
        printWriter56.println(false);
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter("hi!");
        printWriter77.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor80 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter77);
        printWriter77.print(0.0d);
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter("hi!");
        char[] charArray91 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter84.print(charArray91);
        printWriter77.write(charArray91);
        printWriter56.print(charArray91);
        printWriter1.write(charArray91);
        printWriter1.flush();
        printWriter1.println();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05010");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println(false);
        java.io.PrintWriter printWriter25 = printWriter1.append((java.lang.CharSequence) "L1669980843");
        java.lang.Object obj26 = null;
        printWriter25.println(obj26);
        printWriter25.print('a');
        printWriter25.print("L607677620");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter25);
    }

    @Test
    public void test05011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05011");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(0, 151060480);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(27, "L437863088", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(3841);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3841");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test05012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05012");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierClassVisitor1.visitAnnotation("L666971223", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierClassVisitor1.visitAnnotation("L298663367", false);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter25);
        java.io.PrintWriter printWriter30 = printWriter25.append('#');
        printWriter30.println((double) 51966);
        char[] charArray39 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter30.write(charArray39);
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField(3, "L967033583", "L454715523", "L237245406", (java.lang.Object) charArray39);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierClassVisitor1.visitAnnotation("L644390938", false);
        aSMifierClassVisitor1.visitInnerClass("L1715840275", "L1569615272", "L1815018994", 1937006958);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor44);
    }

    @Test
    public void test05013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05013");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        classWriter1.visitInnerClass("hi!", "", "", 3);
        classWriter1.visitSource("L994489370", "L1669980843");
        int int15 = classWriter1.newNameType("L326432149", "");
        int int19 = classWriter1.newField("L834812042", "L1749641217", "L1105153118");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = classWriter1.visitAnnotation("L61669440", true);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor28.visit(2, (int) (byte) 0, "", "", "", strArray37);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("", "", "L142696279");
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((int) 'a');
        printWriter56.println("");
        printWriter56.print((float) 590080L);
        java.lang.Object[] objArray64 = null;
        java.io.PrintWriter printWriter65 = printWriter56.printf("hi!", objArray64);
        org.mockito.asm.FieldVisitor fieldVisitor66 = aSMifierClassVisitor28.visitField((int) (byte) 1, "L994489370", "L142696279", "L326432149", (java.lang.Object) printWriter56);
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter56, false);
        org.mockito.asm.FieldVisitor fieldVisitor69 = classWriter1.visitField(0, "L1556845882", "L1003926609", "L1418438756", (java.lang.Object) false);
        org.mockito.asm.Attribute attribute70 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor69.visitAttribute(attribute70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7 + "'", int15 == 7);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 13 + "'", int19 == 13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(fieldVisitor69);
    }

    @Test
    public void test05014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05014");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        java.util.List list9 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor0.visitIincInsn(190, (int) (byte) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor16.visitAnnotation("", false);
        aSMifierMethodVisitor16.visitMethodInsn(6, "L994489370", "L61669440", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor26.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor26.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor41.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor41.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray56 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        aSMifierMethodVisitor41.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray56, (int) 'a', (java.lang.Object[]) labelArray67);
        aSMifierMethodVisitor26.visitTableSwitchInsn(8, (int) (byte) 1, label40, labelArray67);
        aSMifierMethodVisitor26.visitMaxs(3, 51966);
        aSMifierMethodVisitor26.visitIincInsn((-889275714), 9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor78.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor78.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor78.visitAnnotation("hi!", false);
        org.mockito.asm.Label label94 = new org.mockito.asm.Label();
        aSMifierMethodVisitor78.visitLineNumber(10, label94);
        aSMifierMethodVisitor26.visitLineNumber(4, label94);
        aSMifierMethodVisitor16.visitLineNumber((int) (short) 872, label94);
        aSMifierMethodVisitor0.visitLabel(label94);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = label94.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(attributeArray56);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test05015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05015");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor14.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter21.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter21.visitAnnotation("", true);
        classWriter21.visitSource("", "");
        annotationVisitor14.visit("L454715523", (java.lang.Object) classWriter21);
        int int36 = classWriter21.newClass("L1669980843");
        classWriter21.visitOuterClass("L1694926691", "L1000949368", "L326432149");
        int int42 = classWriter21.newClass("hi!");
        org.mockito.asm.Attribute attribute43 = null;
        // The following exception was thrown during execution in test generation
        try {
            classWriter21.visitAttribute(attribute43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 11 + "'", int42 == 11);
    }

    @Test
    public void test05016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05016");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter1 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor2.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor2.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor15.visitLineNumber((int) (byte) 10, label25);
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        int[] intArray38 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label36, intArray38, labelArray39);
        aSMifierMethodVisitor15.visitTableSwitchInsn((int) (byte) 0, 51966, label29, labelArray39);
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor15.visitLabel(label42);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor47.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor60.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor60.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor60.visitAnnotation("hi!", false);
        org.mockito.asm.Label label76 = new org.mockito.asm.Label();
        aSMifierMethodVisitor60.visitLineNumber(10, label76);
        aSMifierMethodVisitor47.visitLineNumber(1, label76);
        org.mockito.asm.Label label79 = new org.mockito.asm.Label();
        aSMifierMethodVisitor15.visitLocalVariable("hi!", "L1434348811", "L326432149", label76, label79, 9);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label79);
        aSMifierMethodVisitor0.visitIntInsn(136, 28);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, 26913);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1]");
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test05017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05017");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor22 = aSMifierClassVisitor1.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        aSMifierClassVisitor1.visitInnerClass("L2036836790", "L779142371", "L231657813", (int) (short) 0);
        java.util.List list31 = aSMifierClassVisitor1.text;
        aSMifierClassVisitor1.visitInnerClass("L1003926609", "", "L247779944", (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(list31);
    }

    @Test
    public void test05018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05018");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        java.lang.Object obj42 = new java.lang.Object();
        aSMifierMethodVisitor0.visitLdcInsn(obj42);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitAnnotation("L1428686501", false);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor50);
    }

    @Test
    public void test05019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05019");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitIincInsn(13, 16);
        aSMifierMethodVisitor0.visitIntInsn(15, 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("L1482294079", true);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test05020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05020");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor34.visitAnnotation("", true);
        aSMifierClassVisitor34.visitEnd();
        aSMifierClassVisitor34.visitOuterClass("L614568462", "L139692246", "L659269359");
        aSMifierClassVisitor34.visitInnerClass("L1492698303", "L1428686501", "L1892091981", 332);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test05021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05021");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.println("L799304101");
        java.io.PrintWriter printWriter35 = printWriter31.append('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.println((double) 4);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter47 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter47.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = classWriter47.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter47.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray60 = classWriter47.toByteArray();
        org.mockito.asm.ByteVector byteVector63 = byteVector43.putByteArray(byteArray60, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader64 = new org.mockito.asm.ClassReader(byteArray60);
        long long66 = classReader64.readLong((int) (byte) 100);
        long long68 = classReader64.readLong((int) (byte) 10);
        java.lang.String[] strArray69 = classReader64.getInterfaces();
        int int71 = classReader64.readByte((int) '#');
        long long73 = classReader64.readLong(4);
        int int74 = classReader64.header;
        java.lang.String[] strArray75 = classReader64.getInterfaces();
        java.io.PrintWriter printWriter76 = printWriter31.printf("", (java.lang.Object[]) strArray75);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 8532477865490146625L + "'", long66 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 72057598333118569L + "'", long68 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 86 + "'", int71 == 86);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 590080L + "'", long73 == 590080L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 118 + "'", int74 == 118);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter76);
    }

    @Test
    public void test05022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05022");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) '4', "", "L326432149", "L326432149");
        aSMifierMethodVisitor0.visitVarInsn(86, 24942);
        aSMifierMethodVisitor0.visitIincInsn(24942, 1);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(321, "L1432518723");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 321");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test05023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05023");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(51966, "L1883257399");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test05024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05024");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor34.visitEnd();
        aSMifierClassVisitor34.visitInnerClass("L1077931653", "L309204558", "L783935767", 33);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test05025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05025");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label63);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotation("L137501116", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test05026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05026");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray49 = classReader48.b;
        byte[] byteArray50 = classReader48.b;
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter(classReader48, 30313);
        classWriter52.visitSource("L870080724", "L858787082");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray50);
    }

    @Test
    public void test05027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05027");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        java.util.List list48 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitIincInsn(0, 17);
        aSMifierMethodVisitor0.visitVarInsn(23, (int) (short) 10);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(111, 257);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(list48);
    }

    @Test
    public void test05028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05028");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(2, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 2817);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', (-1));
        aSMifierMethodVisitor0.visitIntInsn(1, 29);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test05029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05029");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1715840275", 24942);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1691870655", 3);
        aSMifierMethodVisitor0.visitFieldInsn(5, "L1608560463", "L454715523", "L1544572272");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor0.visitParameterAnnotation(186, "", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = annotationVisitor48.visitAnnotation("L1601831013", "L929094301");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test05030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05030");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.flush();
        printWriter1.println('#');
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((-889275714));
        java.util.Locale locale13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label16, intArray25, labelArray37);
        java.io.PrintWriter printWriter40 = printWriter10.format(locale13, "hi!", (java.lang.Object[]) labelArray37);
        printWriter40.print((int) '4');
        java.io.PrintWriter printWriter44 = printWriter40.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        printWriter46.print(0.0d);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        char[] charArray60 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter53.print(charArray60);
        printWriter46.write(charArray60);
        printWriter44.println(charArray60);
        printWriter1.print(charArray60);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.lang.String[] strArray71 = null;
        aSMifierClassVisitor65.visit(116, 118, "L1508691945", "L1716111915", "L1528647597", strArray71);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05031");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitVarInsn(86, 1);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) -13570, "L136336566", "L1843076310", "L571926043");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05032");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitSource("L799304101", "L326432149");
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter25 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter25.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = classWriter25.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor37 = classWriter25.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray38 = classWriter25.toByteArray();
        org.mockito.asm.ByteVector byteVector41 = byteVector21.putByteArray(byteArray38, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader42 = new org.mockito.asm.ClassReader(byteArray38);
        long long44 = classReader42.readLong((int) (byte) 100);
        long long46 = classReader42.readLong((int) (byte) 10);
        java.lang.String[] strArray47 = classReader42.getInterfaces();
        int int49 = classReader42.readInt(0);
        int int50 = classReader42.getAccess();
        java.lang.String[] strArray51 = classReader42.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor52 = aSMifierClassVisitor10.visitMethod(111, "L1541482702", "L939261813", "L434356257", strArray51);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierClassVisitor10.visitAnnotation("L1005725320", true);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(fieldVisitor37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 8532477865490146625L + "'", long44 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 72057598333118569L + "'", long46 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-889275714) + "'", int49 == (-889275714));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(methodVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor55);
    }

    @Test
    public void test05033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05033");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        boolean boolean38 = printWriter37.checkError();
        boolean boolean39 = printWriter37.checkError();
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter42.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray48);
        java.io.PrintWriter printWriter50 = printWriter37.format("L1669980843", (java.lang.Object[]) strArray48);
        printWriter50.print(190);
        printWriter50.print(true);
        printWriter50.print("L767403187");
        printWriter50.print('a');
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter50);
        java.lang.Object obj60 = null;
        printWriter50.println(obj60);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test05034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05034");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        aSMifierMethodVisitor0.visitEnd();
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.print(0.0d);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter51, false);
        aSMifierMethodVisitor0.print(printWriter51);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L1284973471");
        org.mockito.asm.Attribute attribute62 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
    }

    @Test
    public void test05035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05035");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor32.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor32.visitLocalVariable("hi!", "hi!", "hi!", label47, label48, 1);
        org.mockito.asm.Label label52 = new org.mockito.asm.Label();
        aSMifierMethodVisitor32.visitLineNumber(8, label52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor54.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor54.visitAnnotation("hi!", false);
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        aSMifierMethodVisitor54.visitLineNumber(10, label70);
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter74 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter74.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = classWriter74.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor86 = classWriter74.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label72.info = classWriter74;
        aSMifierMethodVisitor0.visitTryCatchBlock(label52, label70, label72, "L2113189186");
        java.util.List list90 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor80);
        org.junit.Assert.assertNotNull(fieldVisitor86);
        org.junit.Assert.assertNotNull(list90);
    }

    @Test
    public void test05036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05036");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor34.visitAnnotation("", true);
        aSMifierClassVisitor34.visitEnd();
        aSMifierClassVisitor34.visitEnd();
        aSMifierClassVisitor34.visitInnerClass("L544338606", "L1198406086", "L428948816", 186);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierClassVisitor34.visitAnnotation("L2076399201", false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor47);
    }

    @Test
    public void test05037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05037");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = printWriter31.append('a');
        java.io.PrintWriter printWriter58 = printWriter56.append('#');
        printWriter58.print((long) (short) 9);
        printWriter58.println((long) 86);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.util.List list64 = aSMifierClassVisitor63.getText();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(list64);
    }

    @Test
    public void test05038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05038");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor29.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor29.visitLabel(label35);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label71 = null;
        int[] intArray73 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor65.visitLookupSwitchInsn(label71, intArray73, labelArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor76 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor76.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label82 = null;
        int[] intArray84 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray85 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor76.visitLookupSwitchInsn(label82, intArray84, labelArray85);
        aSMifierMethodVisitor63.visitLookupSwitchInsn(label64, intArray73, labelArray85);
        aSMifierMethodVisitor29.visitLookupSwitchInsn(label37, intArray48, labelArray85);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor29);
        aSMifierMethodVisitor29.visitMaxs((-1), 30313);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor29.visitMethodInsn(2305, "L536317741", "L1858624456", "L136332369");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1]");
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[1]");
        org.junit.Assert.assertNotNull(labelArray85);
    }

    @Test
    public void test05039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05039");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) (short) 0);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        printWriter7.print((-889275714));
        java.util.Locale locale10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label20 = null;
        int[] intArray22 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray23 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor14.visitLookupSwitchInsn(label20, intArray22, labelArray23);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label31 = null;
        int[] intArray33 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray34 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label31, intArray33, labelArray34);
        aSMifierMethodVisitor12.visitLookupSwitchInsn(label13, intArray22, labelArray34);
        java.io.PrintWriter printWriter37 = printWriter7.format(locale10, "hi!", (java.lang.Object[]) labelArray34);
        printWriter7.println((int) (short) 1);
        java.lang.String[] strArray41 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter42 = printWriter7.format("hi!", (java.lang.Object[]) strArray41);
        java.lang.String[] strArray44 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter45 = printWriter7.printf("", (java.lang.Object[]) strArray44);
        org.mockito.asm.MethodVisitor methodVisitor46 = classWriter1.visitMethod(8, "", "L1715840275", "L1715840275", strArray44);
        classWriter1.visitOuterClass("L1500133082", "L1000949368", "");
        classWriter1.visitInnerClass("L1813264043", "L1035698796", "L1527711418", 320);
        classWriter1.visitOuterClass("L1003926609", "L2032501860", "L96121905");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1]");
        org.junit.Assert.assertNotNull(labelArray23);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1]");
        org.junit.Assert.assertNotNull(labelArray34);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(methodVisitor46);
    }

    @Test
    public void test05040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05040");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor16.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor16.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, 1);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLineNumber(8, label36);
        aSMifierMethodVisitor0.visitLineNumber(118, label36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor40.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor40.visitLocalVariable("hi!", "hi!", "hi!", label55, label56, 1);
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        aSMifierMethodVisitor40.visitLineNumber(8, label60);
        aSMifierMethodVisitor0.visitLineNumber(151060480, label60);
        java.lang.Object obj63 = label60.info;
        // The following exception was thrown during execution in test generation
        try {
            int int64 = label60.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test05041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05041");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((double) 1);
        printWriter19.write("L1174087069");
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test05042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05042");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter36.print(true);
        printWriter36.write("hi!");
        printWriter36.print(false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test05043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05043");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter24.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        printWriter22.print((java.lang.Object) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitLineNumber((int) (byte) 10, label42);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor32.visitTableSwitchInsn((int) (byte) 0, 51966, label46, labelArray56);
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor32.visitLabel(label59);
        aSMifierMethodVisitor32.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter64.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = classWriter64.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter64.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray77 = classWriter64.toByteArray();
        aSMifierMethodVisitor32.visitLdcInsn((java.lang.Object) byteArray77);
        aSMifierMethodVisitor32.visitIincInsn(0, (int) (short) 10);
        aSMifierMethodVisitor32.visitMethodInsn((int) '4', "", "L326432149", "L326432149");
        aSMifierMethodVisitor32.visitVarInsn(86, 24942);
        printWriter22.print((java.lang.Object) 24942);
        printWriter22.close();
        printWriter22.close();
        printWriter22.print(123);
        printWriter22.print('a');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test05044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05044");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor36.visitOuterClass("L298663367", "L994489370", "L1749641217");
        aSMifierClassVisitor36.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierClassVisitor36.visitAnnotation("L1688081168", true);
        java.util.List list45 = aSMifierClassVisitor36.text;
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(list45);
    }

    @Test
    public void test05045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05045");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        printWriter21.print((double) (short) 30313);
        printWriter21.print((long) 10);
        printWriter21.print(true);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        boolean boolean66 = printWriter65.checkError();
        java.io.PrintWriter printWriter68 = printWriter65.append('a');
        printWriter65.write("L598840791");
        printWriter65.println(14);
        java.io.PrintWriter printWriter74 = printWriter65.append('4');
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(printWriter74);
    }

    @Test
    public void test05046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05046");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Attribute attribute27 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05047");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) '#');
        long long33 = classReader24.readLong(4);
        int int35 = classReader24.readInt((int) (short) 9);
        long long37 = classReader24.readLong((int) '4');
        java.lang.String str38 = classReader24.getSuperName();
        int int40 = classReader24.readByte((int) (byte) 1);
        short short42 = classReader24.readShort(0);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        char[] charArray51 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter44.print(charArray51);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor53 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        aSMifierClassVisitor53.visitSource("L799304101", "L326432149");
        aSMifierClassVisitor53.visitEnd();
        aSMifierClassVisitor53.visitEnd();
        aSMifierClassVisitor53.visitSource("L614568462", "L337574950");
        aSMifierClassVisitor53.visitInnerClass("L139692246", "L978789454", "L598840791", 3);
        aSMifierClassVisitor53.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            classReader24.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor53, 22113);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 86 + "'", int31 == 86);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 590080L + "'", long33 == 590080L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 151060480 + "'", int35 == 151060480);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 72068947506459235L + "'", long37 == 72068947506459235L);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 254 + "'", int40 == 254);
        org.junit.Assert.assertTrue("'" + short42 + "' != '" + (short) -13570 + "'", short42 == (short) -13570);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05048");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitCode();
        aSMifierMethodVisitor26.visitInsn(10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor56.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor56.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putByte(2);
        annotationVisitor68.visit("", (java.lang.Object) byteVector71);
        org.mockito.asm.ByteVector byteVector78 = byteVector71.putUTF8("");
        aSMifierMethodVisitor26.visitLdcInsn((java.lang.Object) byteVector71);
        org.mockito.asm.ByteVector byteVector81 = byteVector71.putLong(72068947506459235L);
        org.mockito.asm.ByteVector byteVector83 = byteVector71.putUTF8("L1939891096");
        org.mockito.asm.ByteVector byteVector85 = byteVector71.putUTF8("L2112385861");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
    }

    @Test
    public void test05049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05049");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(100, 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitCode();
        aSMifierMethodVisitor24.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor24.visitTryCatchBlock(label34, label35, label36, "hi!");
        aSMifierMethodVisitor24.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor42.visitLineNumber((int) (byte) 10, label52);
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label63 = null;
        int[] intArray65 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label63, intArray65, labelArray66);
        aSMifierMethodVisitor42.visitTableSwitchInsn((int) (byte) 0, 51966, label56, labelArray66);
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor42.visitLabel(label69);
        org.mockito.asm.Label label71 = new org.mockito.asm.Label();
        aSMifierMethodVisitor42.visitLabel(label71);
        org.mockito.asm.Label label73 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor74.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor74.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor74.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor74.visitAnnotation("hi!", false);
        org.mockito.asm.Label label90 = new org.mockito.asm.Label();
        aSMifierMethodVisitor74.visitLineNumber(10, label90);
        aSMifierMethodVisitor24.visitTryCatchBlock(label71, label73, label90, "L1434348811");
        aSMifierMethodVisitor0.visitLineNumber(16779859, label73);
        org.mockito.asm.AnnotationVisitor annotationVisitor98 = aSMifierMethodVisitor0.visitParameterAnnotation(234, "L1278664853", false);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1]");
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(annotationVisitor98);
    }

    @Test
    public void test05050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05050");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitOuterClass("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor8 = classWriter1.visitAnnotation("", true);
        classWriter1.visitSource("L1669980843", "L967033583");
        classWriter1.visitEnd();
        int int16 = classWriter1.newField("L704540978", "L1004430080", "L1669980843");
        int int19 = classWriter1.newNameType("L1454236833", "L389484434");
        classWriter1.visitInnerClass("L607677620", "L1284973471", "L1123989782", (int) (short) 100);
        classWriter1.visitInnerClass("L477731576", "", "L1700715189", 16);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        java.util.List list45 = aSMifierMethodVisitor34.getText();
        printWriter31.println((java.lang.Object) list45);
        printWriter31.print((double) 10L);
        printWriter31.print('4');
        printWriter31.print("");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label63 = null;
        int[] intArray65 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label63, intArray65, labelArray66);
        java.util.List list68 = aSMifierMethodVisitor57.getText();
        printWriter54.println((java.lang.Object) list68);
        printWriter54.print((double) 10L);
        printWriter54.print(false);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierClassVisitor75.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierClassVisitor75.visitAnnotation("hi!", false);
        printWriter54.println((java.lang.Object) aSMifierClassVisitor75);
        printWriter31.print((java.lang.Object) printWriter54);
        java.io.PrintWriter printWriter95 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.Writer) printWriter95);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = classWriter1.newConst((java.lang.Object) printWriter96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value java.io.PrintWriter@7d49d4fe");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor8);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 13 + "'", int19 == 13);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1]");
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test05051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05051");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitOuterClass("", "L1434348811", "hi!");
        org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter27 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter27.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = classWriter27.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter27.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray40 = classWriter27.toByteArray();
        org.mockito.asm.ByteVector byteVector43 = byteVector23.putByteArray(byteArray40, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader44 = new org.mockito.asm.ClassReader(byteArray40);
        long long46 = classReader44.readLong((int) (byte) 100);
        int int48 = classReader44.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray49 = classReader44.getInterfaces();
        aSMifierClassVisitor10.visit(151060480, (-1), "L142696279", "L61669440", "L2113189186", strArray49);
        aSMifierClassVisitor10.visitSource("hi!", "L1722902851");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierClassVisitor10.visitAnnotation("L1150302951", false);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 8532477865490146625L + "'", long46 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 51966 + "'", int48 == 51966);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(annotationVisitor56);
    }

    @Test
    public void test05052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05052");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray34 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector37 = byteVector17.putByteArray(byteArray34, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader38 = new org.mockito.asm.ClassReader(byteArray34);
        long long40 = classReader38.readLong((int) (byte) 100);
        long long42 = classReader38.readLong((int) (byte) 10);
        java.lang.String[] strArray43 = classReader38.getInterfaces();
        int int45 = classReader38.readByte((int) '#');
        long long47 = classReader38.readLong(4);
        int int48 = classReader38.header;
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader38, (int) (byte) 0);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classWriter50);
        aSMifierMethodVisitor0.visitMaxs(1, 25929);
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        printWriter57.print((int) 'a');
        printWriter57.println("");
        java.io.PrintWriter printWriter62 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        aSMifierClassVisitor63.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierClassVisitor63.visitAnnotation("", false);
        printWriter57.print((java.lang.Object) false);
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        java.io.PrintWriter printWriter75 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor76 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter75);
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor76.visit(2, (int) (byte) 0, "", "", "", strArray85);
        java.io.PrintWriter printWriter87 = printWriter57.printf("hi!", (java.lang.Object[]) strArray85);
        java.io.PrintWriter printWriter88 = new java.io.PrintWriter((java.io.Writer) printWriter87);
        printWriter87.write(25929);
        printWriter87.close();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter87);
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.Writer) printWriter87);
        boolean boolean94 = printWriter87.checkError();
        printWriter87.println(1763771136);
        printWriter87.println(222523246);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 8532477865490146625L + "'", long40 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 72057598333118569L + "'", long42 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 86 + "'", int45 == 86);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 590080L + "'", long47 == 590080L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 118 + "'", int48 == 118);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test05053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05053");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list18 = aSMifierMethodVisitor0.text;
        java.util.List list19 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn(16777217, (-889275714));
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) 24940);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 24940");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
    }

    @Test
    public void test05054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05054");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.print((float) 8532477865490146625L);
        printWriter31.print('#');
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test05055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05055");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter18 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter18.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter18.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter18.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label16.info = classWriter18;
        java.lang.Object obj32 = label16.info;
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray55 = classWriter42.toByteArray();
        org.mockito.asm.ByteVector byteVector58 = byteVector38.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray55);
        long long61 = classReader59.readLong((int) (byte) 100);
        int int63 = classReader59.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray64 = classReader59.getInterfaces();
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter(classReader59, 2);
        int int68 = classWriter66.newUTF8("");
        label34.info = classWriter66;
        org.mockito.asm.ClassWriter classWriter71 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter71.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = classWriter71.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor83 = classWriter71.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter71.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor90 = classWriter71.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        fieldVisitor90.visitEnd();
        label34.info = fieldVisitor90;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label33, label34, "L55453359");
        aSMifierMethodVisitor0.visitFieldInsn(25, "L1853824624", "L559428047", "L1651106531");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 8532477865490146625L + "'", long61 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 51966 + "'", int63 == 51966);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor83);
        org.junit.Assert.assertNotNull(fieldVisitor90);
    }

    @Test
    public void test05056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05056");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor27.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor27.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor27.visitLocalVariable("hi!", "hi!", "hi!", label42, label43, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor47.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor47.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor47.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        aSMifierMethodVisitor47.visitLabel(label67);
        java.lang.String str69 = label67.toString();
        aSMifierMethodVisitor27.visitJumpInsn(5, label67);
        java.lang.String str71 = label67.toString();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor72.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label78 = null;
        int[] intArray80 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor72.visitLookupSwitchInsn(label78, intArray80, labelArray81);
        aSMifierMethodVisitor0.visitTableSwitchInsn(590080, (int) (short) -1, label67, labelArray81);
        aSMifierMethodVisitor0.visitIincInsn(57174305, (int) (byte) 100);
        aSMifierMethodVisitor0.visitMethodInsn(0, "hi!", "hi!", "");
        aSMifierMethodVisitor0.visitVarInsn(0, 1634628694);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) 3395);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3395");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor66);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L1068219575" + "'", str69, "L1068219575");
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "L1068219575" + "'", str71, "L1068219575");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1]");
        org.junit.Assert.assertNotNull(labelArray81);
    }

    @Test
    public void test05057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05057");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        aSMifierMethodVisitor0.visitInsn(0);
        java.util.List list31 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitLineNumber((int) (byte) 10, label42);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor32.visitAnnotation("hi!", true);
        aSMifierMethodVisitor32.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor51.visitLineNumber((int) (byte) 10, label61);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label72 = null;
        int[] intArray74 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor66.visitLookupSwitchInsn(label72, intArray74, labelArray75);
        aSMifierMethodVisitor51.visitTableSwitchInsn((int) (byte) 0, 51966, label65, labelArray75);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor51.visitLabel(label78);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor51.visitLabel(label80);
        aSMifierMethodVisitor32.visitJumpInsn((int) (short) 10, label80);
        aSMifierMethodVisitor0.visitLabel(label80);
        java.lang.Object obj84 = label80.info;
        java.lang.String str85 = label80.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int86 = label80.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1]");
        org.junit.Assert.assertNotNull(labelArray75);
        org.junit.Assert.assertNull(obj84);
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "L1069902092" + "'", str85, "L1069902092");
    }

    @Test
    public void test05058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05058");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(6, "hi!", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor27.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor27.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray42 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor44.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label50 = null;
        int[] intArray52 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray53 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label50, intArray52, labelArray53);
        aSMifierMethodVisitor27.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray42, (int) 'a', (java.lang.Object[]) labelArray53);
        aSMifierMethodVisitor27.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor59.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor59.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor59.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor59.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label79 = new org.mockito.asm.Label();
        aSMifierMethodVisitor59.visitLabel(label79);
        aSMifierMethodVisitor27.visitLineNumber((int) '#', label79);
        aSMifierMethodVisitor27.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor27);
        aSMifierMethodVisitor0.visitMaxs(16842765, 9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(attributeArray42);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[1]");
        org.junit.Assert.assertNotNull(labelArray53);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test05059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05059");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn(21, "L2036836790", "", "L1852655365");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitAnnotation("L422154835", false);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L779142371");
        aSMifierMethodVisitor0.visitIincInsn(34, 15);
        aSMifierMethodVisitor0.visitIincInsn(26, 0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test05060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05060");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitParameterAnnotation(7, "L454715523", false);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor50);
    }

    @Test
    public void test05061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05061");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.io.PrintWriter printWriter7 = printWriter1.append((java.lang.CharSequence) "L1703143512", (int) (short) 1, (int) (byte) 1);
        printWriter7.println();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter7);
        org.junit.Assert.assertNotNull(printWriter7);
    }

    @Test
    public void test05062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05062");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        byte[] byteArray39 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray39);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((int) 'a');
        printWriter42.println("");
        printWriter42.print((float) 590080L);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.Writer) printWriter42, true);
        printWriter42.print((float) (short) 30313);
        java.util.Locale locale53 = null;
        java.lang.Object[] objArray55 = null;
        java.io.PrintWriter printWriter56 = printWriter42.printf(locale53, "", objArray55);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter42);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter57);
        classReader40.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor58, (int) '#');
        long long62 = classReader40.readLong(22);
        byte[] byteArray63 = classReader40.b;
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 286145753645063L + "'", long62 == 286145753645063L);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test05063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05063");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L601661571");
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitParameterAnnotation(16, "L1788074348", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (short) -326, 218169344);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test05064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05064");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        boolean boolean89 = printWriter88.checkError();
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.Writer) printWriter88, false);
        printWriter91.print("L1703143512");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor94 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter91);
        aSMifierClassVisitor94.visitSource("L1127838997", "L648105835");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test05065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05065");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test05066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05066");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        printWriter90.print("");
        printWriter90.println((long) '4');
        printWriter90.write("L309204558");
        printWriter90.println((double) (short) 30313);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test05067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05067");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        printWriter31.println();
        java.util.Locale locale35 = null;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter38.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter38.visitEnd();
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter52.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = classWriter52.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter52.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter52.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor71 = classWriter52.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter77 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor78 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter77);
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor78.visit(2, (int) (byte) 0, "", "", "", strArray87);
        classWriter52.visit((int) 'a', (int) '#', "", "", "hi!", strArray87);
        classWriter38.visit(100, 100, "L326432149", "L1434348811", "", strArray87);
        java.io.PrintWriter printWriter91 = printWriter31.printf(locale35, "L601661571", (java.lang.Object[]) strArray87);
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor71);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test05068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05068");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitParameterAnnotation(33, "L836986691", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1138164648", 16778088);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test05069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05069");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray49 = classReader48.b;
        byte[] byteArray50 = classReader48.b;
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter(classReader48, 30313);
        int int53 = classReader48.getAccess();
        short short55 = classReader48.readShort(97);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + short55 + "' != '" + (short) 25970 + "'", short55 == (short) 25970);
    }

    @Test
    public void test05070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05070");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor10.visitAnnotation("L1555790481", false);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print((-889275714));
        printWriter20.write("");
        printWriter20.write("L994489370");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter20);
        org.mockito.asm.FieldVisitor fieldVisitor33 = aSMifierClassVisitor27.visitField((int) 'a', "L1544572272", "L2113189186", "L1703143512", (java.lang.Object) "L1715840275");
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter45 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter45.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = classWriter45.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter45.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray58 = classWriter45.toByteArray();
        org.mockito.asm.ByteVector byteVector61 = byteVector41.putByteArray(byteArray58, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray58);
        long long64 = classReader62.readLong((int) (byte) 100);
        long long66 = classReader62.readLong((int) (byte) 10);
        java.lang.String[] strArray67 = classReader62.getInterfaces();
        int int69 = classReader62.readByte((int) '#');
        long long71 = classReader62.readLong(4);
        int int73 = classReader62.readInt((int) (short) 9);
        long long75 = classReader62.readLong((int) '4');
        long long77 = classReader62.readLong((int) '4');
        java.lang.String[] strArray78 = classReader62.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor79 = aSMifierClassVisitor27.visitMethod(2, "L1216476214", "L459227517", "L1715840275", strArray78);
        aSMifierClassVisitor10.visit(115, 24942, "L1722902851", "L1691870655", "L943959020", strArray78);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierClassVisitor10.visitAnnotation("L603155286", false);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 8532477865490146625L + "'", long64 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 72057598333118569L + "'", long66 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 86 + "'", int69 == 86);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 590080L + "'", long71 == 590080L);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 151060480 + "'", int73 == 151060480);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 72068947506459235L + "'", long75 == 72068947506459235L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 72068947506459235L + "'", long77 == 72068947506459235L);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(methodVisitor79);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test05071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05071");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        aSMifierClassVisitor22.visitOuterClass("L237245406", "L1703143512", "L1669980843");
        aSMifierClassVisitor22.visitSource("L454715523", "L1556230913");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor22.visitAnnotation("L365115101", true);
        java.util.List list50 = aSMifierClassVisitor22.getText();
        aSMifierClassVisitor22.visitInnerClass("L1200596014", "L1005725320", "L1722902851", 24);
        aSMifierClassVisitor22.visitOuterClass("L1619590163", "L1526989973", "L1418438756");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(list50);
    }

    @Test
    public void test05072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05072");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        java.util.List list9 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor0.visitIincInsn(190, (int) (byte) 1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("L2016248295", true);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test05073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05073");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = annotationVisitor19.visitArray("");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = annotationVisitor21.visitAnnotation("L142696279", "L799304101");
        org.mockito.asm.ClassWriter classWriter27 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter27.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = classWriter27.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter27.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter27.visitEnd();
        classWriter27.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter27.visitSource("hi!", "hi!");
        byte[] byteArray49 = classWriter27.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label60 = null;
        aSMifierMethodVisitor54.visitLabel(label60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor54.visitLineNumber((int) '4', label63);
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter27.visitField((-1), "hi!", "", "", (java.lang.Object) label63);
        int int70 = classWriter27.newMethod("hi!", "L326432149", "hi!", false);
        int int72 = classWriter27.newUTF8("L994489370");
        int int75 = classWriter27.newNameType("L1441782014", "");
        classWriter27.visitInnerClass("L943959020", "L237245406", "L344842840", 16779859);
        int int82 = classWriter27.newClass("L674352908");
        annotationVisitor21.visit("L1479479862", (java.lang.Object) "L674352908");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 13 + "'", int70 == 13);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 14 + "'", int72 == 14);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 16 + "'", int75 == 16);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 23 + "'", int82 == 23);
    }

    @Test
    public void test05074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05074");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = fieldVisitor22.visitAnnotation("hi!", true);
        fieldVisitor22.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = fieldVisitor22.visitAnnotation("L994489370", true);
        annotationVisitor13.visit("L96121905", (java.lang.Object) true);
        annotationVisitor13.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = annotationVisitor13.visitAnnotation("L1906590307", "L1085773562");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = annotationVisitor13.visitAnnotation("L1062074562", "L1749343426");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test05075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05075");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.println("L799304101");
        printWriter31.print('4');
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        long long63 = classReader61.readLong((int) (byte) 100);
        long long65 = classReader61.readLong((int) (byte) 10);
        java.lang.String[] strArray66 = classReader61.getInterfaces();
        int int68 = classReader61.readByte((int) '#');
        long long70 = classReader61.readLong(4);
        int int72 = classReader61.readInt((int) (short) 9);
        long long74 = classReader61.readLong((int) '4');
        java.lang.String str75 = classReader61.getSuperName();
        java.lang.String str76 = classReader61.getSuperName();
        int int78 = classReader61.readUnsignedShort(0);
        java.lang.String str79 = classReader61.getSuperName();
        java.lang.String[] strArray80 = classReader61.getInterfaces();
        java.io.PrintWriter printWriter81 = printWriter31.printf("L914596724", (java.lang.Object[]) strArray80);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 8532477865490146625L + "'", long63 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 72057598333118569L + "'", long65 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 86 + "'", int68 == 86);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 590080L + "'", long70 == 590080L);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 151060480 + "'", int72 == 151060480);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 72068947506459235L + "'", long74 == 72068947506459235L);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 51966 + "'", int78 == 51966);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test05076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05076");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter16.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = classWriter16.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor28 = classWriter16.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray29 = classWriter16.toByteArray();
        org.mockito.asm.ByteVector byteVector32 = byteVector12.putByteArray(byteArray29, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader33 = new org.mockito.asm.ClassReader(byteArray29);
        short short35 = classReader33.readShort(8);
        short short37 = classReader33.readShort((int) (byte) 10);
        byte[] byteArray38 = classReader33.b;
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter(classReader33, 5);
        printWriter8.println((java.lang.Object) classWriter40);
        classWriter40.visitSource("L1441782014", "L1320473481");
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 9 + "'", short35 == (short) 9);
        org.junit.Assert.assertTrue("'" + short37 + "' != '" + (short) 256 + "'", short37 == (short) 256);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test05077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05077");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.Attribute[] attributeArray31 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor33.visitLineNumber((int) (byte) 10, label43);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        int[] intArray56 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label54, intArray56, labelArray57);
        aSMifierMethodVisitor33.visitTableSwitchInsn((int) (byte) 0, 51966, label47, labelArray57);
        aSMifierMethodVisitor0.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray31, (int) '4', (java.lang.Object[]) labelArray57);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(34, 332);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(attributeArray31);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(labelArray57);
    }

    @Test
    public void test05078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05078");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((-21316096), 111);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test05079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05079");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor0.visitInsn(8);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitCode();
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label11, label12, label13, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor9.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray33 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        aSMifierMethodVisitor18.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray33, (int) 'a', (java.lang.Object[]) labelArray44);
        aSMifierMethodVisitor18.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor50.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor50.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor50.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLabel(label70);
        aSMifierMethodVisitor18.visitLineNumber((int) '#', label70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor73.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor73.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list85 = aSMifierMethodVisitor73.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor86 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor86);
        aSMifierMethodVisitor73.visitVarInsn(8, 25);
        label70.info = 25;
        aSMifierMethodVisitor9.visitLineNumber((int) '4', label70);
        aSMifierMethodVisitor0.visitLabel(label70);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(320);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 320");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(attributeArray33);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(list85);
    }

    @Test
    public void test05080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05080");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIntInsn(86, 18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor5.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor5.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor5.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor5.visitLocalVariable("hi!", "hi!", "hi!", label20, label21, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor25.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor25.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor25.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor25.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        aSMifierMethodVisitor25.visitLabel(label45);
        java.lang.String str47 = label45.toString();
        aSMifierMethodVisitor5.visitJumpInsn(5, label45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        int[] intArray70 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label68, intArray70, labelArray71);
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label50, intArray59, labelArray71);
        java.lang.Object obj74 = null;
        aSMifierMethodVisitor49.visitLdcInsn(obj74);
        label45.info = aSMifierMethodVisitor49;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 256, label45);
        java.lang.String str78 = label45.toString();
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor44);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L1012945192" + "'", str47, "L1012945192");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1]");
        org.junit.Assert.assertNotNull(labelArray71);
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L1012945192" + "'", str78, "L1012945192");
    }

    @Test
    public void test05081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05081");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print((float) (-3819410108757049344L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor9.visitOuterClass("L601661571", "L1434348811", "L799304101");
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierClassVisitor9.visitAnnotation("L1694926691", true);
        aSMifierClassVisitor9.visitSource("L1508718123", "L1579492813");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor9.visitAnnotation("L802852197", false);
        org.mockito.asm.Attribute attribute23 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor9.visitAttribute(attribute23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test05082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05082");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label2, label3, label4, "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor8 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "L1434348811");
        org.junit.Assert.assertNotNull(annotationVisitor8);
    }

    @Test
    public void test05083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05083");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        printWriter1.print(true);
        printWriter1.close();
        printWriter1.println("L1694926691");
        printWriter1.println((int) (short) 24942);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test05084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05084");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        printWriter21.print(0.0d);
        printWriter21.print(9);
        printWriter21.println('4');
        aSMifierMethodVisitor0.print(printWriter21);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(1853030400, "L233033650", "L583709824", "L876659615");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1853030400");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test05085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05085");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) '4');
        int int6 = classWriter1.newMethod("hi!", "L326432149", "hi!", true);
        int int11 = classWriter1.newMethod("L1289682213", "L1853824624", "L1479479862", true);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((-889275714));
        java.util.Locale locale16 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label26 = null;
        int[] intArray28 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray29 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label26, intArray28, labelArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label19, intArray28, labelArray40);
        java.io.PrintWriter printWriter43 = printWriter13.format(locale16, "hi!", (java.lang.Object[]) labelArray40);
        printWriter13.println((int) (short) 1);
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter48 = printWriter13.format("hi!", (java.lang.Object[]) strArray47);
        java.lang.String[] strArray50 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter51 = printWriter13.printf("", (java.lang.Object[]) strArray50);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.print((int) 'a');
        printWriter53.println("");
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        aSMifierClassVisitor59.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierClassVisitor59.visitAnnotation("", false);
        printWriter53.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter53);
        java.io.PrintWriter printWriter71 = printWriter53.append(' ');
        printWriter53.println(true);
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter("hi!");
        char[] charArray82 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter75.print(charArray82);
        printWriter53.print(charArray82);
        printWriter13.println(charArray82);
        java.io.PrintWriter printWriter87 = printWriter13.append(' ');
        printWriter87.print("L1669980843");
        printWriter87.println((float) 28526);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = classWriter1.newConst((java.lang.Object) printWriter87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value java.io.PrintWriter@2f02d9cd");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 11 + "'", int11 == 11);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1]");
        org.junit.Assert.assertNotNull(labelArray29);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test05086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05086");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        boolean boolean19 = printWriter1.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter23, true);
        printWriter25.println(0.0f);
        printWriter25.print('a');
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test05087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05087");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.Attribute[] attributeArray31 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor33.visitLineNumber((int) (byte) 10, label43);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        int[] intArray56 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label54, intArray56, labelArray57);
        aSMifierMethodVisitor33.visitTableSwitchInsn((int) (byte) 0, 51966, label47, labelArray57);
        aSMifierMethodVisitor0.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray31, (int) '4', (java.lang.Object[]) labelArray57);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) 3395);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3395");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(attributeArray31);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(labelArray57);
    }

    @Test
    public void test05088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05088");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        printWriter1.println((int) (short) 9);
        printWriter1.print((-1161953280));
        printWriter1.print((float) 48640);
        printWriter1.println((long) 14);
        boolean boolean99 = printWriter1.checkError();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test05089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05089");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list15 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor16.visitLineNumber((int) (byte) 10, label26);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor16.visitTableSwitchInsn((int) (byte) 0, 51966, label30, labelArray40);
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor16.visitLabel(label43);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor48.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor61.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor61.visitAnnotation("hi!", false);
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(10, label77);
        aSMifierMethodVisitor48.visitLineNumber(1, label77);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLocalVariable("hi!", "L1434348811", "L326432149", label77, label80, 9);
        java.lang.String str83 = label80.toString();
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitVarInsn(30, (int) (short) -326);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(320, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 320");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor75);
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L1275755006" + "'", str83, "L1275755006");
    }

    @Test
    public void test05090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05090");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        int int40 = classReader36.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray41 = classReader36.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor4.visitMethod(0, "hi!", "L994489370", "hi!", strArray41);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        long long75 = classReader71.readLong((int) (byte) 10);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        int int78 = classReader71.readByte((int) '#');
        long long80 = classReader71.readLong(4);
        int int81 = classReader71.header;
        byte[] byteArray82 = classReader71.b;
        org.mockito.asm.ClassReader classReader85 = new org.mockito.asm.ClassReader(byteArray82, (-1), 13);
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor4.visitField(5, "L2113189186", "L666971223", "L666971223", (java.lang.Object) (-1));
        aSMifierClassVisitor4.visitSource("L1749641217", "");
        aSMifierClassVisitor4.visitSource("L1644755393", "L1962067231");
        org.mockito.asm.Attribute attribute93 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor4.visitAttribute(attribute93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 51966 + "'", int40 == 51966);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 72057598333118569L + "'", long75 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 86 + "'", int78 == 86);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 590080L + "'", long80 == 590080L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 118 + "'", int81 == 118);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor86);
    }

    @Test
    public void test05091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05091");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((-889275714));
        java.util.Locale locale21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label31 = null;
        int[] intArray33 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray34 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label31, intArray33, labelArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor23.visitLookupSwitchInsn(label24, intArray33, labelArray45);
        java.io.PrintWriter printWriter48 = printWriter18.format(locale21, "hi!", (java.lang.Object[]) labelArray45);
        printWriter48.print((int) '4');
        java.io.PrintWriter printWriter52 = printWriter48.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor53 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        printWriter55.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        java.util.List list69 = aSMifierMethodVisitor58.getText();
        printWriter55.println((java.lang.Object) list69);
        printWriter55.print((double) 10L);
        printWriter55.print(false);
        java.io.PrintWriter printWriter75 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor76 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter75);
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor76.visit(2, (int) (byte) 0, "", "", "", strArray85);
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierClassVisitor76.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierClassVisitor76.visitAnnotation("hi!", false);
        printWriter55.println((java.lang.Object) aSMifierClassVisitor76);
        char[] charArray96 = new char[] { 'a', '#' };
        printWriter55.println(charArray96);
        printWriter48.print(charArray96);
        printWriter1.write(charArray96);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1]");
        org.junit.Assert.assertNotNull(labelArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(annotationVisitor89);
        org.junit.Assert.assertNotNull(annotationVisitor92);
        org.junit.Assert.assertNotNull(charArray96);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray96), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray96), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray96), "[a, #]");
    }

    @Test
    public void test05092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05092");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = annotationVisitor19.visitArray("");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = annotationVisitor19.visitArray("L666971223");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.print((int) 'a');
        printWriter26.println("");
        java.io.PrintWriter printWriter31 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor32.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor32.visitAnnotation("", false);
        printWriter26.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor42 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.io.PrintWriter printWriter44 = printWriter26.append(' ');
        java.io.PrintWriter printWriter46 = printWriter26.append(' ');
        printWriter46.println();
        annotationVisitor19.visit("L1620871785", (java.lang.Object) printWriter46);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter46);
    }

    @Test
    public void test05093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05093");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitMethodInsn(19, "L799304101", "L96121905", "L834812042");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        aSMifierMethodVisitor21.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor37.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor37.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor37.visitLocalVariable("hi!", "hi!", "hi!", label52, label53, 1);
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        aSMifierMethodVisitor37.visitLineNumber(8, label57);
        aSMifierMethodVisitor21.visitLineNumber(118, label57);
        aSMifierMethodVisitor0.visitLineNumber(0, label57);
        java.lang.Object obj61 = label57.info;
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test05094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05094");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("L1853824624", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 872, "L174478886", true);
        aSMifierMethodVisitor0.visitTypeInsn(134, "L1230702653");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation(256, "L1250170942", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(57174305, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 57174305");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test05095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05095");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(4, "L994489370", "", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor17.visitLineNumber((int) (byte) 10, label27);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor17.visitTableSwitchInsn((int) (byte) 0, 51966, label31, labelArray41);
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor17.visitLabel(label44);
        org.mockito.asm.Label label46 = new org.mockito.asm.Label();
        aSMifierMethodVisitor17.visitLabel(label46);
        aSMifierMethodVisitor0.visitJumpInsn(100, label46);
        aSMifierMethodVisitor0.visitMethodInsn(104, "L834812042", "L464564430", "L1719622935");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor0.visitParameterAnnotation(8, "L1788074348", true);
        annotationVisitor57.visitEnd();
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test05096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05096");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor14.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor20.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor20.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor20.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        aSMifierMethodVisitor20.visitLabel(label40);
        aSMifierMethodVisitor20.visitCode();
        annotationVisitor14.visit("hi!", (java.lang.Object) aSMifierMethodVisitor20);
        aSMifierMethodVisitor20.visitVarInsn(1, 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor20.visitAnnotation("L215000262", true);
        aSMifierMethodVisitor20.visitFieldInsn((int) (byte) 0, "L1137045083", "L1137045083", "L104460547");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test05097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05097");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(1763771136, "L127379530", "L2114156461", "L1592299270");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1763771136");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test05098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05098");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter23.print((long) 118);
        java.lang.Object[] objArray27 = null;
        java.io.PrintWriter printWriter28 = printWriter23.format("L1852655365", objArray27);
        java.io.PrintWriter printWriter30 = printWriter23.append((java.lang.CharSequence) "L1418438756");
        printWriter23.println(7);
        printWriter23.write("");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter30);
    }

    @Test
    public void test05099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05099");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        printWriter9.print(9);
        printWriter9.print(118);
        printWriter9.println(false);
        printWriter9.print((float) 105);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitCode();
        aSMifierMethodVisitor20.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label30, label31, label32, "hi!");
        aSMifierMethodVisitor20.visitIntInsn(2, (int) (short) -1);
        aSMifierMethodVisitor20.visitTypeInsn((int) (byte) 0, "L1694926691");
        aSMifierMethodVisitor20.visitVarInsn(115, (int) (byte) -1);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.print((-889275714));
        java.util.Locale locale48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label69 = null;
        int[] intArray71 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray72 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor63.visitLookupSwitchInsn(label69, intArray71, labelArray72);
        aSMifierMethodVisitor50.visitLookupSwitchInsn(label51, intArray60, labelArray72);
        java.io.PrintWriter printWriter75 = printWriter45.format(locale48, "hi!", (java.lang.Object[]) labelArray72);
        printWriter45.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor78 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        aSMifierClassVisitor78.visitEnd();
        aSMifierClassVisitor78.visitInnerClass("L2113189186", "L326432149", "", (int) (byte) 100);
        aSMifierClassVisitor78.visitOuterClass("L2036836790", "L1808073265", "L1297264300");
        aSMifierClassVisitor78.visitInnerClass("L544338606", "L55453359", "L137501116", 29);
        aSMifierMethodVisitor20.visitLdcInsn((java.lang.Object) aSMifierClassVisitor78);
        printWriter9.print((java.lang.Object) aSMifierClassVisitor78);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1]");
        org.junit.Assert.assertNotNull(labelArray72);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test05100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05100");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        classWriter1.visitInnerClass("hi!", "", "", 3);
        classWriter1.visitSource("L994489370", "L1669980843");
        classWriter1.visitInnerClass("L326432149", "L326432149", "L1544572272", 100);
        classWriter1.visitOuterClass("L1715840275", "L1715840275", "L799304101");
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter40.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter40.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter40.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter40.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter40.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter65 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor66.visit(2, (int) (byte) 0, "", "", "", strArray75);
        classWriter40.visit((int) 'a', (int) '#', "", "", "hi!", strArray75);
        aSMifierClassVisitor28.visit((int) 'a', (int) (short) 100, "L666971223", "L142696279", "L1434348811", strArray75);
        classWriter1.visit(134, 24, "", "L601058011", "L384579388", strArray75);
        classWriter1.visitOuterClass("L326432149", "L2036836790", "L365115101");
        classWriter1.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(strArray75);
    }

    @Test
    public void test05101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05101");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        aSMifierClassVisitor1.visitInnerClass("L61669440", "hi!", "L2113189186", 10);
        aSMifierClassVisitor1.visitSource("L1669980843", "L666971223");
        aSMifierClassVisitor1.visitInnerClass("L1544572272", "L994489370", "L1544572272", 86);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test05102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05102");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(33, 16778088);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((-889275714));
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        java.io.PrintWriter printWriter59 = printWriter29.format(locale32, "hi!", (java.lang.Object[]) labelArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor60.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor60.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor60.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor60.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor60.visitLabel(label80);
        printWriter59.println((java.lang.Object) label80);
        printWriter59.print((double) 7);
        printWriter59.print(15);
        aSMifierMethodVisitor0.print(printWriter59);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((-889275714));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -889275714");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test05103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05103");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        int[] intArray19 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label17, intArray19, labelArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label28 = null;
        int[] intArray30 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray31 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label28, intArray30, labelArray31);
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label10, intArray19, labelArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label8, intArray19, labelArray56);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "L326432149", "L326432149", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(186, 0);
        org.mockito.asm.Attribute attribute69 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1]");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1]");
        org.junit.Assert.assertNotNull(labelArray31);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
    }

    @Test
    public void test05104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05104");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIntInsn(86, 18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor5.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor5.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor5.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor5.visitLocalVariable("hi!", "hi!", "hi!", label20, label21, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor25.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor25.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor25.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor25.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        aSMifierMethodVisitor25.visitLabel(label45);
        java.lang.String str47 = label45.toString();
        aSMifierMethodVisitor5.visitJumpInsn(5, label45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        int[] intArray70 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label68, intArray70, labelArray71);
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label50, intArray59, labelArray71);
        java.lang.Object obj74 = null;
        aSMifierMethodVisitor49.visitLdcInsn(obj74);
        label45.info = aSMifierMethodVisitor49;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 256, label45);
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor0.visitParameterAnnotation(16779859, "L2093444817", false);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor44);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "L1887971966" + "'", str47, "L1887971966");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(annotationVisitor81);
    }

    @Test
    public void test05105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05105");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter1.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = classWriter1.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter1.visitField(590080, "hi!", "L1434348811", "hi!", (java.lang.Object) 1L);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print('4');
        printWriter24.print("");
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        int int75 = classReader71.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        java.io.PrintWriter printWriter77 = printWriter24.printf("", (java.lang.Object[]) strArray76);
        classWriter1.visit(1, 86, "hi!", "L142696279", "L2113189186", strArray76);
        classWriter1.visitInnerClass("L943959020", "L1691870655", "L1441782014", 51966);
        classWriter1.visitEnd();
        int int86 = classWriter1.newUTF8("L1430933554");
        int int91 = classWriter1.newMethod("L371187565", "L117134386", "L912991706", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = classWriter1.visitAnnotation("L1438609464", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = classWriter1.visitAnnotation("L1962766465", true);
        java.lang.Object obj98 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int99 = classWriter1.newConst(obj98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 51966 + "'", int75 == 51966);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 16 + "'", int86 == 16);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 22 + "'", int91 == 22);
        org.junit.Assert.assertNotNull(annotationVisitor94);
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test05106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05106");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitMethodInsn(4, "", "hi!", "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(324, 2817);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((-21316096), 1536);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
    }

    @Test
    public void test05107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05107");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        char[] charArray16 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter9.print(charArray16);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        aSMifierClassVisitor18.visitEnd();
        aSMifierClassVisitor18.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierClassVisitor18.visitAnnotation("L326432149", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor28.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor28.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor28.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor28.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        aSMifierMethodVisitor28.visitLabel(label48);
        aSMifierMethodVisitor28.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor52.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor52.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor52.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor52.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        aSMifierMethodVisitor52.visitLabel(label72);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor74.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor74.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor74.visitIincInsn(1, 0);
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor74.visitLabel(label86);
        label72.info = aSMifierMethodVisitor74;
        aSMifierMethodVisitor28.visitLineNumber(24942, label72);
        java.lang.Object obj90 = label72.info;
        org.mockito.asm.FieldVisitor fieldVisitor91 = aSMifierClassVisitor18.visitField((int) (short) -1, "L326432149", "L1715840275", "", (java.lang.Object) label72);
        aSMifierMethodVisitor0.visitLabel(label72);
        java.lang.Object obj93 = label72.info;
        java.lang.String str94 = label72.toString();
        java.lang.Object obj95 = label72.info;
        // The following exception was thrown during execution in test generation
        try {
            int int96 = label72.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(fieldVisitor91);
        org.junit.Assert.assertNotNull(obj93);
// flaky:         org.junit.Assert.assertEquals("'" + str94 + "' != '" + "L1906482528" + "'", str94, "L1906482528");
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test05108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05108");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label63);
        org.mockito.asm.Attribute attribute65 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
    }

    @Test
    public void test05109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05109");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor15.visitLocalVariable("", "hi!", "", label31, label32, 8);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.print((-889275714));
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label49 = null;
        int[] intArray51 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor43.visitLookupSwitchInsn(label49, intArray51, labelArray52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label60 = null;
        int[] intArray62 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label60, intArray62, labelArray63);
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label42, intArray51, labelArray63);
        java.io.PrintWriter printWriter66 = printWriter36.format(locale39, "hi!", (java.lang.Object[]) labelArray63);
        printWriter66.print((int) '4');
        aSMifierMethodVisitor15.print(printWriter66);
        printWriter66.println((long) 1986622313);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter66);
        org.mockito.asm.FieldVisitor fieldVisitor73 = aSMifierClassVisitor10.visitField((int) (byte) -1, "L407895089", "L978789454", "L1532047758", (java.lang.Object) aSMifierClassVisitor72);
        aSMifierClassVisitor10.visitInnerClass("L1601501049", "L1097906296", "L394842588", 9);
        aSMifierClassVisitor10.visitOuterClass("L1843076310", "L845352536", "L674352908");
        java.lang.String[] strArray88 = null;
        aSMifierClassVisitor10.visit((-1), 218169344, "L1491461890", "L1720168318", "L939261813", strArray88);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(fieldVisitor73);
    }

    @Test
    public void test05110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05110");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor18.visitLineNumber((int) (byte) 10, label28);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        aSMifierMethodVisitor18.visitTableSwitchInsn((int) (byte) 0, 51966, label32, labelArray42);
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor18.visitLabel(label45);
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label47);
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor50.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor50.visitAnnotation("hi!", false);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLineNumber(10, label66);
        aSMifierMethodVisitor0.visitTryCatchBlock(label47, label49, label66, "L1434348811");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotation("L954744343", true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test05111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05111");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((-889275714));
        java.util.Locale locale44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        int[] intArray56 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label54, intArray56, labelArray57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label47, intArray56, labelArray68);
        java.io.PrintWriter printWriter71 = printWriter41.format(locale44, "hi!", (java.lang.Object[]) labelArray68);
        printWriter41.println((int) (short) 1);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter76 = printWriter41.format("hi!", (java.lang.Object[]) strArray75);
        java.lang.String[] strArray78 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter79 = printWriter41.printf("", (java.lang.Object[]) strArray78);
        aSMifierClassVisitor34.visit((int) (short) 9, 5, "hi!", "", "", strArray78);
        aSMifierClassVisitor34.visitEnd();
        java.util.List list82 = aSMifierClassVisitor34.getText();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(list82);
    }

    @Test
    public void test05112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05112");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor22.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray37 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor22.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray37, (int) 'a', (java.lang.Object[]) labelArray48);
        aSMifierMethodVisitor22.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor54.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor54.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor54.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label74 = new org.mockito.asm.Label();
        aSMifierMethodVisitor54.visitLabel(label74);
        aSMifierMethodVisitor22.visitLineNumber((int) '#', label74);
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label74);
        java.util.List list78 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "");
        java.lang.Object obj83 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj83);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor0.visitParameterAnnotation(22, "L1111263690", true);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(attributeArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(annotationVisitor88);
    }

    @Test
    public void test05113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05113");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        printWriter31.print("L309204558");
        printWriter31.println(true);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test05114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05114");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println(7);
        printWriter1.println(true);
        printWriter1.println("L1024239044");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test05115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05115");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.println('#');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        aSMifierMethodVisitor39.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list69 = aSMifierMethodVisitor39.text;
        aSMifierMethodVisitor39.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor39.visitCode();
        java.util.List list74 = aSMifierMethodVisitor39.text;
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor39);
        aSMifierMethodVisitor39.visitIntInsn(18, 872);
        aSMifierMethodVisitor39.visitMaxs((-1161953280), 2);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list74);
    }

    @Test
    public void test05116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05116");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putByte(6);
        org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter((int) 'a');
        byte[] byteArray14 = classWriter13.toByteArray();
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putByteArray(byteArray14, 5, (int) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putByte(2);
        annotationVisitor30.visit("", (java.lang.Object) byteVector33);
        org.mockito.asm.ByteVector byteVector40 = byteVector33.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector42 = byteVector33.putByte(3);
        org.mockito.asm.ByteVector byteVector44 = byteVector33.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter52.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = classWriter52.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter52.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray65 = classWriter52.toByteArray();
        org.mockito.asm.ByteVector byteVector68 = byteVector48.putByteArray(byteArray65, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader69 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray65);
        byte[] byteArray72 = classReader71.b;
        org.mockito.asm.ByteVector byteVector75 = byteVector44.putByteArray(byteArray72, 0, 5);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ByteVector byteVector79 = byteVector17.putByteArray(byteArray72, 25, (int) (short) 0);
        org.mockito.asm.ClassReader classReader80 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ClassReader classReader81 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ClassReader classReader84 = new org.mockito.asm.ClassReader(byteArray72, 17, 36);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector79);
    }

    @Test
    public void test05117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05117");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, 320);
        aSMifierMethodVisitor0.visitIincInsn(104, 20);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (-889275714));
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test05118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05118");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor14.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter21.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter21.visitAnnotation("", true);
        classWriter21.visitSource("", "");
        annotationVisitor14.visit("L454715523", (java.lang.Object) classWriter21);
        classWriter21.visitInnerClass("L799304101", "L1441782014", "L1434348811", 57174305);
        int int42 = classWriter21.newNameType("L1592299270", "L834812042");
        classWriter21.visitSource("L2113189186", "L1808073265");
        int int47 = classWriter21.newClass("L1228713414");
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter60 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter60.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = classWriter60.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor72 = classWriter60.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray73 = classWriter60.toByteArray();
        org.mockito.asm.ByteVector byteVector76 = byteVector56.putByteArray(byteArray73, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader77 = new org.mockito.asm.ClassReader(byteArray73);
        long long79 = classReader77.readLong((int) (byte) 100);
        long long81 = classReader77.readLong((int) (byte) 10);
        java.lang.String str82 = classReader77.getSuperName();
        java.lang.String[] strArray83 = classReader77.getInterfaces();
        java.lang.String[] strArray84 = classReader77.getInterfaces();
        classWriter21.visit(24, (int) (short) 10, "L1775421725", "L173581797", "L1174303418", strArray84);
        int int87 = classWriter21.newUTF8("L1608972287");
        int int92 = classWriter21.newMethod("L2113189186", "L699807857", "L1556845882", false);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 13 + "'", int47 == 13);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(fieldVisitor72);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 8532477865490146625L + "'", long79 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 72057598333118569L + "'", long81 == 72057598333118569L);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 19 + "'", int87 == 19);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 24 + "'", int92 == 24);
    }

    @Test
    public void test05119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05119");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        aSMifierMethodVisitor0.visitInsn(0);
        java.util.List list31 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitLineNumber((int) (byte) 10, label42);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor32.visitAnnotation("hi!", true);
        aSMifierMethodVisitor32.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor51.visitLineNumber((int) (byte) 10, label61);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label72 = null;
        int[] intArray74 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor66.visitLookupSwitchInsn(label72, intArray74, labelArray75);
        aSMifierMethodVisitor51.visitTableSwitchInsn((int) (byte) 0, 51966, label65, labelArray75);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor51.visitLabel(label78);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor51.visitLabel(label80);
        aSMifierMethodVisitor32.visitJumpInsn((int) (short) 10, label80);
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitVarInsn(10, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(29793, "L799304101");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 29793");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1]");
        org.junit.Assert.assertNotNull(labelArray75);
    }

    @Test
    public void test05120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05120");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 151060480);
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(47806);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 47806");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05121");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitIincInsn(16842765, (int) (byte) 0);
        aSMifierMethodVisitor0.visitIincInsn(86, 8);
    }

    @Test
    public void test05122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05122");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitInsn(10);
        org.mockito.asm.Attribute[] attributeArray26 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor28.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor28.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list40 = aSMifierMethodVisitor28.text;
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter44.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor63 = classWriter44.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter69 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor70.visit(2, (int) (byte) 0, "", "", "", strArray79);
        classWriter44.visit((int) 'a', (int) '#', "", "", "hi!", strArray79);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor83 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor83.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label89 = null;
        int[] intArray91 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray92 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor83.visitLookupSwitchInsn(label89, intArray91, labelArray92);
        aSMifierMethodVisitor28.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray79, (int) (short) 100, (java.lang.Object[]) labelArray92);
        aSMifierMethodVisitor21.visitFrame((int) '#', (int) (short) 0, (java.lang.Object[]) attributeArray26, 2, (java.lang.Object[]) labelArray92);
        java.io.PrintWriter printWriter96 = printWriter1.printf(locale19, "", (java.lang.Object[]) attributeArray26);
        java.io.PrintWriter printWriter98 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(attributeArray26);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor63);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1]");
        org.junit.Assert.assertNotNull(labelArray92);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test05123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05123");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitIincInsn(1, 0);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor14.visitLabel(label26);
        aSMifierMethodVisitor14.visitMaxs((int) 'a', (int) (byte) 0);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitIincInsn(104, (int) (short) 1280);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test05124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05124");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, 5);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), (int) (byte) 1);
        aSMifierMethodVisitor0.visitVarInsn(86, 0);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
    }

    @Test
    public void test05125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05125");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        printWriter1.println('a');
        printWriter1.print("L1000949368");
        printWriter1.println(' ');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter25.close();
        boolean boolean27 = printWriter25.checkError();
        printWriter25.println();
        printWriter25.print((float) 286145753645063L);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test05126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05126");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        int int3 = classWriter1.newClass("L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor8.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor8.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor8.visitAnnotationDefault();
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor8.visitLabel(label22);
        aSMifierMethodVisitor8.visitTypeInsn(8, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor8.visitParameterAnnotation(25929, "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = annotationVisitor30.visitArray("");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter1.visitField(16, "L1864262327", "L207321209", "L394842588", (java.lang.Object) annotationVisitor32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.util.ASMifierAnnotationVisitor@6d9d8eac");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test05127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05127");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        java.io.PrintWriter printWriter67 = printWriter1.append('#');
        printWriter1.flush();
        printWriter1.flush();
        printWriter1.println(true);
        printWriter1.print("L664055953");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test05128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05128");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.write("L256017232");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
    }

    @Test
    public void test05129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05129");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor16.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor16.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, 1);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLineNumber(8, label36);
        aSMifierMethodVisitor0.visitLineNumber(118, label36);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotation("L598840791", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn(186, 1634628694);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test05130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05130");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(334, 28);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 334");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test05131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05131");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print((float) 10L);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((int) 'a');
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter50.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = fieldVisitor56.visitAnnotation("hi!", true);
        printWriter46.print((java.lang.Object) annotationVisitor59);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter("hi!");
        printWriter62.print((int) 'a');
        printWriter62.println("");
        java.io.PrintWriter printWriter67 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        aSMifierClassVisitor68.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierClassVisitor68.visitAnnotation("", false);
        printWriter62.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor78 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        java.io.PrintWriter printWriter80 = printWriter62.append(' ');
        printWriter62.println(true);
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter("hi!");
        char[] charArray91 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter84.print(charArray91);
        printWriter62.print(charArray91);
        printWriter46.write(charArray91);
        printWriter31.write(charArray91);
        printWriter31.println("L967033583");
        boolean boolean98 = printWriter31.checkError();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[#, a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test05132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05132");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        org.mockito.asm.ClassWriter classWriter8 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter8.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = classWriter8.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter8.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter8.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter8.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter33 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor34.visit(2, (int) (byte) 0, "", "", "", strArray43);
        classWriter8.visit((int) 'a', (int) '#', "", "", "hi!", strArray43);
        aSMifierClassVisitor1.visit((int) (byte) -1, 1, "hi!", "hi!", "hi!", strArray43);
        aSMifierClassVisitor1.visitSource("hi!", "");
        java.lang.String[] strArray54 = null;
        org.mockito.asm.MethodVisitor methodVisitor55 = aSMifierClassVisitor1.visitMethod((int) (short) 4, "L1003926609", "L1421508585", "L1829941255", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor1.visitAnnotation("L812886011", true);
        aSMifierClassVisitor1.visitOuterClass("L1200596014", "L1601501049", "L1504370299");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(methodVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test05133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05133");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitVarInsn((int) 'a', 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "L1271688136", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(1751720195);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1751720195");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test05134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05134");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        aSMifierClassVisitor1.visitOuterClass("L1441782014", "L1555790481", "L1281777590");
        aSMifierClassVisitor1.visitInnerClass("L1482294079", "L1479479862", "L139692246", (int) (short) 9);
        aSMifierClassVisitor1.visitSource("", "L598840791");
        aSMifierClassVisitor1.visitOuterClass("L422154835", "L1103251756", "L1703143512");
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        char[] charArray52 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter45.print(charArray52);
        printWriter45.write("");
        printWriter45.println((double) (short) 100);
        printWriter45.println((float) (-1107296256));
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter("hi!");
        printWriter62.print((int) 'a');
        printWriter62.println("");
        java.io.PrintWriter printWriter67 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        aSMifierClassVisitor68.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierClassVisitor68.visitAnnotation("", false);
        printWriter62.print((java.lang.Object) false);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter((java.io.Writer) printWriter62);
        java.io.PrintWriter printWriter80 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor81 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter80);
        java.lang.String[] strArray90 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor81.visit(2, (int) (byte) 0, "", "", "", strArray90);
        java.io.PrintWriter printWriter92 = printWriter62.printf("hi!", (java.lang.Object[]) strArray90);
        java.io.PrintWriter printWriter93 = printWriter45.printf("L614568462", (java.lang.Object[]) strArray90);
        org.mockito.asm.FieldVisitor fieldVisitor94 = aSMifierClassVisitor1.visitField(22, "L464564430", "L614568462", "L644390938", (java.lang.Object) printWriter45);
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = fieldVisitor94.visitAnnotation("L1301622947", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertNotNull(fieldVisitor94);
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test05135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05135");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L601661571");
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1544572272", 1);
        aSMifierMethodVisitor0.visitFieldInsn(10, "L399637105", "L1931374313", "L459227517");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 24942, "L1340859678", true);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test05136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05136");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor32.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor45.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor45.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor45.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor45.visitAnnotation("hi!", false);
        org.mockito.asm.Label label61 = new org.mockito.asm.Label();
        aSMifierMethodVisitor45.visitLineNumber(10, label61);
        aSMifierMethodVisitor32.visitLineNumber(1, label61);
        org.mockito.asm.Label label64 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "L1434348811", "L326432149", label61, label64, 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor0.visitParameterAnnotation(3, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor0.visitParameterAnnotation(118, "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L943959020", 1634628694);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(16842765, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 16842765");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(annotationVisitor75);
    }

    @Test
    public void test05137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05137");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(590080, 9);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((-889275714));
        printWriter25.write("");
        printWriter25.write("L994489370");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter25);
        org.mockito.asm.FieldVisitor fieldVisitor38 = aSMifierClassVisitor32.visitField((int) 'a', "L1544572272", "L2113189186", "L1703143512", (java.lang.Object) "L1715840275");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor43.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor43.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor43.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor43.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label63 = new org.mockito.asm.Label();
        aSMifierMethodVisitor43.visitLabel(label63);
        org.mockito.asm.FieldVisitor fieldVisitor65 = aSMifierClassVisitor32.visitField(118, "L1608560463", "L801849928", "L838424803", (java.lang.Object) label63);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter69 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter69.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = classWriter69.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor81 = classWriter69.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label67.info = classWriter69;
        aSMifierMethodVisitor0.visitTryCatchBlock(label63, label66, label67, "L2032501860");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L838424803", 190);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(fieldVisitor81);
    }

    @Test
    public void test05138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05138");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        aSMifierMethodVisitor0.visitTypeInsn(8, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "hi!", false);
        aSMifierMethodVisitor0.visitInsn(19);
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(2817, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test05139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05139");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.io.PrintWriter printWriter21 = printWriter1.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        printWriter1.print((java.lang.Object) (byte) 1);
        java.io.PrintWriter printWriter91 = printWriter1.append('4');
        printWriter1.println((long) 16779859);
        printWriter1.println((float) (byte) 10);
        printWriter1.print((double) (short) 9);
        printWriter1.println();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test05140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05140");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L454715523");
        java.util.Locale locale2 = null;
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter5);
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierClassVisitor8.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter23.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = classWriter23.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter23.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray36 = classWriter23.toByteArray();
        org.mockito.asm.ByteVector byteVector39 = byteVector19.putByteArray(byteArray36, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray36);
        long long42 = classReader40.readLong((int) (byte) 100);
        int int44 = classReader40.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray45 = classReader40.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor46 = aSMifierClassVisitor8.visitMethod(0, "hi!", "L994489370", "hi!", strArray45);
        java.io.PrintWriter printWriter47 = printWriter1.format(locale2, "L1715840275", (java.lang.Object[]) strArray45);
        char[] charArray48 = new char[] {};
        printWriter47.write(charArray48);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        printWriter47.print(true);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 8532477865490146625L + "'", long42 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 51966 + "'", int44 == 51966);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodVisitor46);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
    }

    @Test
    public void test05141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05141");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor16.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor16.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, 1);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLineNumber(8, label36);
        aSMifierMethodVisitor0.visitLineNumber(118, label36);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotation("L598840791", true);
        org.mockito.asm.Attribute attribute43 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test05142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05142");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        printWriter56.print((long) 17);
        java.io.PrintWriter printWriter60 = printWriter56.append('a');
        printWriter56.write("L207321209", 0, (int) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor65.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor65.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector80 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector84 = byteVector80.putByte(2);
        annotationVisitor77.visit("", (java.lang.Object) byteVector80);
        java.io.PrintWriter printWriter87 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor88 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter87);
        aSMifierClassVisitor88.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor96 = aSMifierClassVisitor88.visitAnnotation("", false);
        annotationVisitor77.visit("hi!", (java.lang.Object) annotationVisitor96);
        printWriter56.println((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(annotationVisitor96);
    }

    @Test
    public void test05143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05143");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        printWriter1.println((double) 2817);
        printWriter1.print((float) (byte) 1);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.flush();
        printWriter1.println(false);
        printWriter1.print(0);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write("L371352799", 115, 15);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 130");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test05144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05144");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        classWriter1.visitOuterClass("L96121905", "hi!", "L61669440");
        int int48 = classWriter1.newNameType("", "L407895089");
        int int50 = classWriter1.newUTF8("L601058011");
        byte[] byteArray51 = classWriter1.toByteArray();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 13 + "'", int48 == 13);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 14 + "'", int50 == 14);
        org.junit.Assert.assertNotNull(byteArray51);
    }

    @Test
    public void test05145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05145");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor14.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor20.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor20.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor20.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        aSMifierMethodVisitor20.visitLabel(label40);
        aSMifierMethodVisitor20.visitCode();
        annotationVisitor14.visit("hi!", (java.lang.Object) aSMifierMethodVisitor20);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor20.visitIntInsn(1536, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test05146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05146");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor0.visitInsn(8);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor13.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor13.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor13.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor13.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        aSMifierMethodVisitor13.visitLabel(label33);
        aSMifierMethodVisitor0.visitLineNumber(57174305, label33);
        aSMifierMethodVisitor0.visitTypeInsn(7, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn(29, "L799304101", "L447192223", "L904580930");
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test05147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05147");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L459227517");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println((double) 1L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor5 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor5.visitInnerClass("L1757074100", "L1948392215", "L1754345445", (int) (byte) 0);
        aSMifierClassVisitor5.visitInnerClass("L1549311922", "L252015005", "L1968448721", 28276);
    }

    @Test
    public void test05148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05148");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        aSMifierMethodVisitor0.visitIincInsn(5, 202);
        aSMifierMethodVisitor0.visitTypeInsn(4, "L61669440");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1691870655", 254);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, (int) '#');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(2, 15);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(1970431233, "L1620118107");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1970431233");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
    }

    @Test
    public void test05149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05149");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.io.PrintWriter printWriter21 = printWriter1.append(' ');
        printWriter21.println();
        printWriter21.println(7);
        printWriter21.write("L1579098349");
        printWriter21.print(false);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter21);
    }

    @Test
    public void test05150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05150");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitMethodInsn(19, "L799304101", "L96121905", "L834812042");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putInt((int) 'a');
        aSMifierMethodVisitor21.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor37.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor37.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor37.visitLocalVariable("hi!", "hi!", "hi!", label52, label53, 1);
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        aSMifierMethodVisitor37.visitLineNumber(8, label57);
        aSMifierMethodVisitor21.visitLineNumber(118, label57);
        aSMifierMethodVisitor0.visitLineNumber(0, label57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor61.visitLineNumber((int) (byte) 10, label71);
        aSMifierMethodVisitor61.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor61.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label82 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(4, label82);
        java.util.List list84 = aSMifierMethodVisitor61.text;
        label57.info = aSMifierMethodVisitor61;
        aSMifierMethodVisitor61.visitTypeInsn(9, "L2072201856");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor61.visitMethodInsn(590080, "L117134386", "L870080724", "L1847055122");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(list84);
    }

    @Test
    public void test05151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05151");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitEnd();
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((int) 'a');
        printWriter18.println("");
        printWriter18.print((float) 590080L);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter18, true);
        printWriter26.println('a');
        printWriter26.print(9);
        java.io.PrintWriter printWriter32 = printWriter26.append('#');
        printWriter32.print(true);
        boolean boolean35 = printWriter32.checkError();
        java.util.Locale locale36 = null;
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        char[] charArray46 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter39.print(charArray46);
        printWriter39.write("");
        java.util.Locale locale50 = null;
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter59 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter59.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = classWriter59.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor71 = classWriter59.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray72 = classWriter59.toByteArray();
        org.mockito.asm.ByteVector byteVector75 = byteVector55.putByteArray(byteArray72, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72);
        long long78 = classReader76.readLong((int) (byte) 100);
        long long80 = classReader76.readLong((int) (byte) 10);
        java.lang.String[] strArray81 = classReader76.getInterfaces();
        int int83 = classReader76.readInt(0);
        int int84 = classReader76.header;
        java.lang.String[] strArray85 = classReader76.getInterfaces();
        java.io.PrintWriter printWriter86 = printWriter39.printf(locale50, "L1444913603", (java.lang.Object[]) strArray85);
        java.io.PrintWriter printWriter87 = printWriter32.printf(locale36, "L1541482702", (java.lang.Object[]) strArray85);
        org.mockito.asm.MethodVisitor methodVisitor88 = aSMifierClassVisitor10.visitMethod(104, "L912991706", "L1675913995", "L2040887363", strArray85);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(fieldVisitor71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 8532477865490146625L + "'", long78 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 72057598333118569L + "'", long80 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-889275714) + "'", int83 == (-889275714));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 118 + "'", int84 == 118);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(methodVisitor88);
    }

    @Test
    public void test05152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05152");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println((double) (-91551935198396416L));
        java.io.PrintWriter printWriter23 = printWriter1.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) (byte) 1);
        classWriter26.visitInnerClass("", "hi!", "", (int) (byte) 10);
        classWriter26.visitInnerClass("L1434348811", "L1434348811", "L1434348811", 151060480);
        int int39 = classWriter26.newNameType("L326432149", "L1715840275");
        classWriter26.visitEnd();
        printWriter1.print((java.lang.Object) classWriter26);
        printWriter1.print((double) 34);
        printWriter1.println((float) 105);
        printWriter1.print((float) 28);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 9 + "'", int39 == 9);
    }

    @Test
    public void test05153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05153");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor14.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter21.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter21.visitAnnotation("", true);
        classWriter21.visitSource("", "");
        annotationVisitor14.visit("L454715523", (java.lang.Object) classWriter21);
        classWriter21.visitInnerClass("L799304101", "L1441782014", "L1434348811", 57174305);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = classWriter21.visitAnnotation("L1675715472", true);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test05154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05154");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println(false);
        boolean boolean68 = printWriter1.checkError();
        printWriter1.print(false);
        printWriter1.print(false);
        printWriter1.flush();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test05155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05155");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(86, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putInt((int) 'a');
        aSMifierMethodVisitor43.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor59.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor59.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label74 = null;
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor59.visitLocalVariable("hi!", "hi!", "hi!", label74, label75, 1);
        org.mockito.asm.Label label79 = new org.mockito.asm.Label();
        aSMifierMethodVisitor59.visitLineNumber(8, label79);
        aSMifierMethodVisitor43.visitLineNumber(118, label79);
        aSMifierMethodVisitor0.visitLineNumber(10, label79);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor86 = aSMifierMethodVisitor0.visitAnnotation("L1775421725", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(47806, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(annotationVisitor86);
    }

    @Test
    public void test05156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05156");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter37.write("L326432149");
        // The following exception was thrown during execution in test generation
        try {
            printWriter37.write("L1346842308", 28275, 57174305);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 36439");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test05157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05157");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor17.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor17.visitLocalVariable("hi!", "hi!", "hi!", label32, label33, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor37.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor37.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor37.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor37.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        aSMifierMethodVisitor37.visitLabel(label57);
        java.lang.String str59 = label57.toString();
        aSMifierMethodVisitor17.visitJumpInsn(5, label57);
        java.lang.Object obj61 = label57.info;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitCode();
        aSMifierMethodVisitor63.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor63);
        aSMifierMethodVisitor63.visitIincInsn(86, 5);
        aSMifierMethodVisitor63.visitFieldInsn(12, "L799304101", "L1770505064", "L1770505064");
        aSMifierMethodVisitor63.visitTypeInsn(21, "L1722902851");
        org.mockito.asm.Attribute attribute80 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor63.visitAttribute(attribute80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor56);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1818512556" + "'", str59, "L1818512556");
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test05158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05158");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(2, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 2817);
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((-889275714));
        java.util.Locale locale31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label34, intArray43, labelArray55);
        java.io.PrintWriter printWriter58 = printWriter28.format(locale31, "hi!", (java.lang.Object[]) labelArray55);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        char[] charArray67 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter60.print(charArray67);
        printWriter58.print(charArray67);
        printWriter58.print((float) 10L);
        printWriter58.print(25);
        printWriter58.println();
        printWriter58.println("L723576843");
        printWriter58.flush();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter58);
        java.lang.Class<?> wildcardClass79 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test05159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05159");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write("L1344346170", (int) ' ', 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 41");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test05160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05160");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 256);
        aSMifierMethodVisitor0.visitIincInsn(29801, 21);
        aSMifierMethodVisitor0.visitMethodInsn(15, "L1105153118", "hi!", "L1297264300");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1280, (int) (short) 1);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test05161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05161");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter1.printf("", (java.lang.Object[]) strArray38);
        boolean boolean40 = printWriter1.checkError();
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((-889275714));
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label66 = null;
        int[] intArray68 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor60.visitLookupSwitchInsn(label66, intArray68, labelArray69);
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label48, intArray57, labelArray69);
        java.io.PrintWriter printWriter72 = printWriter42.format(locale45, "hi!", (java.lang.Object[]) labelArray69);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("hi!");
        char[] charArray81 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter74.print(charArray81);
        printWriter72.print(charArray81);
        printWriter1.print(charArray81);
        java.io.PrintWriter printWriter85 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.print((double) 65210);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1]");
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05162");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.println((double) 57174305);
        printWriter1.println(false);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter44 = printWriter1.append((java.lang.CharSequence) "L2041941526", 590080, 16777217);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 16777217");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test05163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05163");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitCode();
        aSMifierMethodVisitor26.visitTypeInsn(11, "L371187565");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test05164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05164");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label10 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitJumpInsn(25, label10);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        long long40 = classReader36.readLong((int) (byte) 10);
        short short42 = classReader36.readShort(1);
        int int44 = classReader36.readInt(9);
        int int46 = classReader36.readInt((int) (short) 9);
        label10.info = classReader36;
        label10.info = "hi!";
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 72057598333118569L + "'", long40 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short42 + "' != '" + (short) -326 + "'", short42 == (short) -326);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 151060480 + "'", int44 == 151060480);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 151060480 + "'", int46 == 151060480);
    }

    @Test
    public void test05165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05165");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor21.visitInnerClass("L1434348811", "", "L142696279", 24942);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray51 = classWriter38.toByteArray();
        org.mockito.asm.ByteVector byteVector54 = byteVector34.putByteArray(byteArray51, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader55 = new org.mockito.asm.ClassReader(byteArray51);
        long long57 = classReader55.readLong((int) (byte) 100);
        long long59 = classReader55.readLong((int) (byte) 10);
        java.lang.String[] strArray60 = classReader55.getInterfaces();
        int int62 = classReader55.readInt(0);
        int int63 = classReader55.getAccess();
        java.lang.String[] strArray64 = classReader55.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor65 = aSMifierClassVisitor21.visitMethod((int) (byte) 100, "L142696279", "L601661571", "L1434348811", strArray64);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor70.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label76 = null;
        int[] intArray78 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor70.visitLookupSwitchInsn(label76, intArray78, labelArray79);
        java.util.List list81 = aSMifierMethodVisitor70.getText();
        printWriter67.println((java.lang.Object) list81);
        printWriter67.print((long) (byte) 10);
        boolean boolean85 = printWriter67.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor86 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        aSMifierClassVisitor21.print(printWriter67);
        aSMifierClassVisitor21.visitEnd();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 8532477865490146625L + "'", long57 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 72057598333118569L + "'", long59 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-889275714) + "'", int62 == (-889275714));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(methodVisitor65);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1]");
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(list81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test05166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05166");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        int int10 = classWriter1.newNameType("L1669980843", "");
        classWriter1.visitOuterClass("L666971223", "L666971223", "L666971223");
        int int17 = classWriter1.newNameType("L1284973471", "");
        int int19 = classWriter1.newUTF8("L598840791");
        int int21 = classWriter1.newClass("L799304101");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor22.visitAnnotation("hi!", false);
        aSMifierMethodVisitor22.visitMaxs(3, 24942);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = classWriter1.newConst((java.lang.Object) aSMifierMethodVisitor22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.util.ASMifierMethodVisitor@3bc629bb");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 9 + "'", int17 == 9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 12 + "'", int21 == 12);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test05167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05167");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = printWriter31.append('a');
        java.io.PrintWriter printWriter58 = printWriter56.append('#');
        printWriter58.print((long) (short) 9);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        printWriter58.println((int) (short) 100);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter58);
    }

    @Test
    public void test05168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05168");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        int[] intArray19 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label17, intArray19, labelArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label28 = null;
        int[] intArray30 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray31 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label28, intArray30, labelArray31);
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label10, intArray19, labelArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label8, intArray19, labelArray56);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "L326432149", "L326432149", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(29, 0);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 0, 0);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1]");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1]");
        org.junit.Assert.assertNotNull(labelArray31);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
    }

    @Test
    public void test05169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05169");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        aSMifierMethodVisitor24.visitFieldInsn(14, "L601661571", "L454715523", "L142696279");
        aSMifierMethodVisitor24.visitMaxs(1970431233, 326);
        java.lang.Object obj55 = null;
        aSMifierMethodVisitor24.visitLdcInsn(obj55);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter("hi!");
        char[] charArray65 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter58.print(charArray65);
        printWriter58.print("L1434348811");
        printWriter58.print((long) 3);
        aSMifierMethodVisitor24.print(printWriter58);
        org.mockito.asm.Attribute attribute72 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitAttribute(attribute72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05170");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        java.io.PrintWriter printWriter67 = printWriter1.append('#');
        printWriter1.flush();
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.print(false);
        printWriter1.print("L1527711418");
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write("L1805888593", (int) (short) 24942, 51966);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 33118");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test05171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05171");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter16.visitAnnotation("L2113189186", true);
        int int32 = classWriter16.newMethod("L326432149", "L967033583", "L61669440", false);
        classWriter16.visitSource("L598840791", "L2113189186");
        classWriter16.visitOuterClass("L1715840275", "L1000949368", "L298663367");
        classWriter16.visitOuterClass("L61669440", "L96121905", "L139692246");
        int int48 = classWriter16.newMethod("L1085773562", "L1715840275", "L1715840275", false);
        int int52 = classWriter16.newField("L1005725320", "L2041941526", "L575352164");
        int int54 = classWriter16.newClass("L1418438756");
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 9 + "'", int32 == 9);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 23 + "'", int48 == 23);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 29 + "'", int52 == 29);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 31 + "'", int54 == 31);
    }

    @Test
    public void test05172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05172");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L723576843", 1699311222);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(218169344, "L1601831013");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 218169344");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test05173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05173");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter35);
        printWriter35.print(0.0d);
        printWriter35.println();
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((int) 'a');
        printWriter43.println("");
        printWriter43.print((float) 590080L);
        java.lang.Object[] objArray51 = null;
        java.io.PrintWriter printWriter52 = printWriter43.printf("hi!", objArray51);
        printWriter52.println('a');
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter((java.io.Writer) printWriter52);
        printWriter55.print(false);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((-889275714));
        printWriter59.println((int) (short) 256);
        printWriter59.print((long) 1);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        java.io.PrintWriter printWriter72 = printWriter67.append('#');
        printWriter72.println((double) 51966);
        char[] charArray81 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter72.write(charArray81);
        printWriter59.print(charArray81);
        printWriter55.println(charArray81);
        printWriter35.println(charArray81);
        printWriter1.print((java.lang.Object) printWriter35);
        java.util.Locale locale87 = null;
        java.lang.String[] strArray89 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter90 = printWriter1.format(locale87, "L477731576", (java.lang.Object[]) strArray89);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor91 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor91.visitOuterClass("L384579388", "L1722902851", "");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test05174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05174");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, 0);
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter(classReader24, (int) (short) 1);
        int int38 = classWriter35.newNameType("L61669440", "L601661571");
        int int42 = classWriter35.newField("L1808073265", "L1000949368", "L834812042");
        classWriter35.visitSource("L607677620", "L1845262982");
        classWriter35.visitOuterClass("L674352908", "L48323983", "L834812042");
        int int51 = classWriter35.newUTF8("L1808073265");
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        printWriter57.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor60 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter57);
        java.io.PrintWriter printWriter62 = printWriter57.append('#');
        printWriter62.print("L231657813");
        printWriter62.println((double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor67 = classWriter35.visitField(116, "L1656212772", "L169779857", "L217177050", (java.lang.Object) printWriter62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value java.io.PrintWriter@28659775");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 11 + "'", int38 == 11);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 17 + "'", int42 == 17);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 12 + "'", int51 == 12);
        org.junit.Assert.assertNotNull(printWriter62);
    }

    @Test
    public void test05175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05175");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        printWriter1.println('a');
        printWriter1.print("L1000949368");
        printWriter1.println(' ');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter25.print((double) 25929);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter31 = printWriter25.append((java.lang.CharSequence) "L1430933554", 18, 1853030400);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 1853030400");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test05176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05176");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor22 = aSMifierClassVisitor1.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        aSMifierClassVisitor1.visitInnerClass("L2113189186", "L326432149", "L61669440", 51966);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((int) 'a');
        printWriter29.println("");
        aSMifierClassVisitor1.print(printWriter29);
        aSMifierClassVisitor1.visitOuterClass("L994489370", "L1715840275", "L1544572272");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor1.visitAnnotation("L96121905", true);
        aSMifierClassVisitor1.visitSource("L1284973471", "L389484434");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test05177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05177");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) (short) -326);
        classWriter1.visitEnd();
        int int4 = classWriter1.newClass("L337574950");
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("hi!");
        printWriter11.print((-889275714));
        java.util.Locale locale14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label24 = null;
        int[] intArray26 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label24, intArray26, labelArray27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor29.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label35 = null;
        int[] intArray37 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray38 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor29.visitLookupSwitchInsn(label35, intArray37, labelArray38);
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label17, intArray26, labelArray38);
        java.io.PrintWriter printWriter41 = printWriter11.format(locale14, "hi!", (java.lang.Object[]) labelArray38);
        printWriter11.println(8532477865490146625L);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("hi!");
        printWriter45.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor48 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        printWriter45.print(0.0d);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        char[] charArray59 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter52.print(charArray59);
        printWriter45.write(charArray59);
        printWriter11.print(charArray59);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        printWriter65.print(0.0d);
        java.io.PrintWriter printWriter72 = new java.io.PrintWriter((java.io.Writer) printWriter65, true);
        printWriter72.write("L142696279");
        java.util.Locale locale75 = null;
        java.lang.String[] strArray77 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter78 = printWriter72.printf(locale75, "L1105153118", (java.lang.Object[]) strArray77);
        java.io.PrintWriter printWriter79 = printWriter11.format("L598840791", (java.lang.Object[]) strArray77);
        // The following exception was thrown during execution in test generation
        try {
            classWriter1.visit(0, (int) ' ', "L1051947494", "L1570018250", "L2038596437", strArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1]");
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1]");
        org.junit.Assert.assertNotNull(labelArray38);
        org.junit.Assert.assertNotNull(printWriter41);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(printWriter79);
    }

    @Test
    public void test05178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05178");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitOuterClass("hi!", "", "");
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("L1852655365", "L142696279", "L834812042", 25929);
        int int83 = classWriter1.newClass("L1592299270");
        int int87 = classWriter1.newField("L1441782014", "L1418438756", "");
        classWriter1.visitInnerClass("L1297264300", "", "L1532047758", 202);
        int int96 = classWriter1.newField("L981073027", "L1236963294", "L140707071");
        classWriter1.visitSource("L1849458793", "L290335602");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 15 + "'", int83 == 15);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 20 + "'", int87 == 20);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 29 + "'", int96 == 29);
    }

    @Test
    public void test05179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05179");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        printWriter1.print("L1434348811");
        java.io.PrintWriter printWriter13 = printWriter1.append((java.lang.CharSequence) "L1544572272");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierClassVisitor14.visitAnnotation("L1573179142", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = annotationVisitor17.visitAnnotation("L173581797", "L1514525409");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test05180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05180");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        annotationVisitor10.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = annotationVisitor10.visitAnnotation("L926821323", "L1737005341");
        java.lang.Object obj16 = null;
        annotationVisitor10.visit("L2032501860", obj16);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test05181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05181");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        printWriter88.println((long) (-1107296256));
        printWriter88.println("L994489370");
        printWriter88.write(13);
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.Writer) printWriter88, true);
        printWriter96.println();
        printWriter96.write(123);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
    }

    @Test
    public void test05182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05182");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitInnerClass("L237245406", "L1434348811", "L1297264300", 15);
        int int49 = classWriter1.newMethod("L1544572272", "L1271688136", "L1651106531", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = classWriter1.visitAnnotation("L1003926609", false);
        int int54 = classWriter1.newClass("L104358438");
        int int58 = classWriter1.newField("L1722902851", "", "L1761736395");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 21 + "'", int49 == 21);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 24 + "'", int54 == 24);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 29 + "'", int58 == 29);
    }

    @Test
    public void test05183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05183");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print(9);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor9.visitSource("L978789454", "L967033583");
        aSMifierClassVisitor9.visitInnerClass("L192302291", "L1651106531", "L61669440", 320);
        aSMifierClassVisitor9.visitEnd();
    }

    @Test
    public void test05184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05184");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "L1434348811", "L454715523", "L1284973471");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L344842840", 20);
        java.io.PrintWriter printWriter39 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor40 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter39);
        aSMifierClassVisitor40.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor40.visitOuterClass("", "", "hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor40);
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(326, "L1459078187", "L1504370299", "L237245406");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 326");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test05185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05185");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list15 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor18.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor18.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label38);
        java.lang.Object obj40 = label38.info;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putInt((int) 'a');
        aSMifierMethodVisitor41.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label56 = null;
        int[] intArray62 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor63.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor63.visitLineNumber((int) (byte) 10, label73);
        org.mockito.asm.Label label77 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label84 = null;
        int[] intArray86 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor78.visitLookupSwitchInsn(label84, intArray86, labelArray87);
        aSMifierMethodVisitor63.visitTableSwitchInsn((int) (byte) 0, 51966, label77, labelArray87);
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label56, intArray62, labelArray87);
        aSMifierMethodVisitor0.visitTableSwitchInsn(13, (-1), label38, labelArray87);
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierMethodVisitor0.visitAnnotation("L139692246", true);
        java.util.List list95 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor96 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(annotationVisitor94);
        org.junit.Assert.assertNotNull(list95);
        org.junit.Assert.assertNotNull(annotationVisitor96);
    }

    @Test
    public void test05186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05186");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        printWriter31.print('a');
        java.io.PrintWriter printWriter37 = printWriter31.append('#');
        java.io.PrintWriter printWriter39 = printWriter31.append(' ');
        java.io.PrintWriter printWriter41 = printWriter39.append('a');
        printWriter39.println("L697610249");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(printWriter41);
    }

    @Test
    public void test05187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05187");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println(7);
        printWriter1.write("L834812042");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter59 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter59.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = classWriter59.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor71 = classWriter59.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray72 = classWriter59.toByteArray();
        org.mockito.asm.ByteVector byteVector75 = byteVector55.putByteArray(byteArray72, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72);
        long long78 = classReader76.readLong((int) (byte) 100);
        long long80 = classReader76.readLong((int) (byte) 10);
        java.lang.String[] strArray81 = classReader76.getInterfaces();
        aSMifierClassVisitor46.visit((int) (byte) 1, (-1), "", "hi!", "", strArray81);
        aSMifierClassVisitor36.visit(30313, (int) (byte) 100, "L911973346", "L1555790481", "L1000949368", strArray81);
        java.util.List list84 = aSMifierClassVisitor36.getText();
        org.mockito.asm.Attribute attribute85 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor36.visitAttribute(attribute85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(fieldVisitor71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 8532477865490146625L + "'", long78 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 72057598333118569L + "'", long80 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(list84);
    }

    @Test
    public void test05188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05188");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray53 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor38.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray53, (int) 'a', (java.lang.Object[]) labelArray64);
        aSMifierMethodVisitor23.visitTableSwitchInsn(8, (int) (byte) 1, label37, labelArray64);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-889275714), (int) '#', label22, labelArray64);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "L1434348811", "L1441782014", "L1749641217");
        java.util.List list74 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) (short) 872, (-1161953280));
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor0.visitAnnotation("L1461066057", true);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(attributeArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(annotationVisitor80);
    }

    @Test
    public void test05189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05189");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitInsn((int) (short) 1);
        java.util.List list45 = aSMifierMethodVisitor24.getText();
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("L2072201856", 22);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor24.visitAnnotation("L911946641", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test05190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05190");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor14.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter21.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter21.visitAnnotation("", true);
        classWriter21.visitSource("", "");
        annotationVisitor14.visit("L454715523", (java.lang.Object) classWriter21);
        classWriter21.visitInnerClass("L799304101", "L1441782014", "L1434348811", 57174305);
        int int44 = classWriter21.newMethod("L1669980843", "L614568462", "L834812042", false);
        classWriter21.visitEnd();
        org.mockito.asm.ClassWriter classWriter47 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor53 = classWriter47.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = fieldVisitor53.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = annotationVisitor56.visitAnnotation("L1722902851", "L666971223");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = annotationVisitor59.visitArray("L1579098349");
        // The following exception was thrown during execution in test generation
        try {
            int int62 = classWriter21.newConst((java.lang.Object) annotationVisitor61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.AnnotationWriter@4433a39a");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 13 + "'", int44 == 13);
        org.junit.Assert.assertNotNull(fieldVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test05191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05191");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor3 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMaxs(12, (int) (short) 10);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        int[] intArray19 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label17, intArray19, labelArray20);
        java.util.List list22 = aSMifierMethodVisitor11.getText();
        printWriter8.println((java.lang.Object) list22);
        printWriter8.print((double) 10L);
        printWriter8.print(false);
        printWriter8.println(false);
        aSMifierMethodVisitor0.print(printWriter8);
        printWriter8.println((float) (byte) 10);
        printWriter8.write(104);
        org.junit.Assert.assertNotNull(annotationVisitor3);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1]");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(list22);
    }

    @Test
    public void test05192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05192");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        printWriter35.println("L2113189186");
        printWriter35.println((double) (short) 872);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test05193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05193");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor28.visit(2, (int) (byte) 0, "", "", "", strArray37);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "L1434348811");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        java.util.List list52 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn((int) (byte) 0);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        java.lang.Object obj58 = label57.info;
        aSMifierMethodVisitor0.visitJumpInsn(86, label57);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(321, 152);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test05194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05194");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        short short30 = classReader24.readShort((int) (short) 100);
        java.lang.String str31 = classReader24.getSuperName();
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((int) 'a');
        printWriter34.println("");
        printWriter34.print((float) 590080L);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter((java.io.Writer) printWriter34, true);
        printWriter34.print((float) (short) 30313);
        printWriter34.println((long) (short) 1);
        printWriter34.print('4');
        java.io.PrintWriter printWriter50 = printWriter34.append((java.lang.CharSequence) "L799304101");
        printWriter34.write(18);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((-889275714));
        printWriter54.println((int) (short) 256);
        printWriter54.print((long) 1);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter("hi!");
        printWriter62.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        java.io.PrintWriter printWriter67 = printWriter62.append('#');
        printWriter67.println((double) 51966);
        char[] charArray76 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter67.write(charArray76);
        printWriter54.print(charArray76);
        printWriter34.println(charArray76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = classReader24.readClass(29793, charArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 29793");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short30 + "' != '" + (short) 30313 + "'", short30 == (short) 30313);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[ , a,  , #, #, a]");
    }

    @Test
    public void test05195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05195");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter75.println(10);
        printWriter75.print((float) (byte) 1);
        java.io.PrintWriter printWriter81 = printWriter75.append((java.lang.CharSequence) "L955027613");
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test05196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05196");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitVarInsn(86, (int) (short) 100);
        aSMifierMethodVisitor0.visitMaxs((int) (short) -13570, (-1));
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test05197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05197");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter75.println(10);
        printWriter75.println(100);
        printWriter75.write("L142696279");
        printWriter75.close();
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test05198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05198");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter1.visitEnd();
        org.mockito.asm.ClassWriter classWriter15 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter15.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = classWriter15.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter15.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter15.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor34 = classWriter15.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter40 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor41.visit(2, (int) (byte) 0, "", "", "", strArray50);
        classWriter15.visit((int) 'a', (int) '#', "", "", "hi!", strArray50);
        classWriter1.visit(100, 100, "L326432149", "L1434348811", "", strArray50);
        java.lang.Object obj58 = null;
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter1.visitField(28526, "L399637105", "L2113189186", "L1852655365", obj58);
        int int63 = classWriter1.newField("L2032501860", "L799304101", "L1085773562");
        int int68 = classWriter1.newMethod("L514140742", "L699807857", "L246301320", true);
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 17 + "'", int63 == 17);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 23 + "'", int68 == 23);
    }

    @Test
    public void test05199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05199");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        aSMifierMethodVisitor0.visitInsn(0);
        java.util.List list31 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitLineNumber((int) (byte) 10, label42);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor32.visitAnnotation("hi!", true);
        aSMifierMethodVisitor32.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor51.visitLineNumber((int) (byte) 10, label61);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label72 = null;
        int[] intArray74 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor66.visitLookupSwitchInsn(label72, intArray74, labelArray75);
        aSMifierMethodVisitor51.visitTableSwitchInsn((int) (byte) 0, 51966, label65, labelArray75);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor51.visitLabel(label78);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor51.visitLabel(label80);
        aSMifierMethodVisitor32.visitJumpInsn((int) (short) 10, label80);
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitVarInsn(10, (int) (short) 10);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 0, (int) (short) 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor0.visitAnnotation("L1715840275", true);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMethodInsn(15, "L1527711418", "L1808073265", "L290335602");
        java.util.List list99 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1]");
        org.junit.Assert.assertNotNull(labelArray75);
        org.junit.Assert.assertNotNull(annotationVisitor92);
        org.junit.Assert.assertNotNull(list99);
    }

    @Test
    public void test05200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05200");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        int int40 = classReader36.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray41 = classReader36.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor4.visitMethod(0, "hi!", "L994489370", "hi!", strArray41);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        long long75 = classReader71.readLong((int) (byte) 10);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        int int78 = classReader71.readByte((int) '#');
        long long80 = classReader71.readLong(4);
        int int81 = classReader71.header;
        byte[] byteArray82 = classReader71.b;
        org.mockito.asm.ClassReader classReader85 = new org.mockito.asm.ClassReader(byteArray82, (-1), 13);
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor4.visitField(5, "L2113189186", "L666971223", "L666971223", (java.lang.Object) (-1));
        aSMifierClassVisitor4.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 51966 + "'", int40 == 51966);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 72057598333118569L + "'", long75 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 86 + "'", int78 == 86);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 590080L + "'", long80 == 590080L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 118 + "'", int81 == 118);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor86);
    }

    @Test
    public void test05201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05201");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        classWriter1.visitInnerClass("L104358438", "L1736155405", "L406814154", (int) (short) 1280);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
    }

    @Test
    public void test05202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05202");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitEnd();
        aSMifierMethodVisitor24.visitIntInsn(0, 590080);
        java.util.List list46 = aSMifierMethodVisitor24.getText();
        aSMifierMethodVisitor24.visitIincInsn(202, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor24.visitAnnotation("L978789454", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitVarInsn(3841, 1970431233);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3841");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test05203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05203");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor49.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putByte(2);
        annotationVisitor61.visit("", (java.lang.Object) byteVector64);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor61);
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        java.lang.Object obj73 = label72.info;
        aSMifierMethodVisitor0.visitJumpInsn(25, label72);
        aSMifierMethodVisitor0.visitMaxs(3, 8);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test05204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05204");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        java.lang.Object obj42 = new java.lang.Object();
        aSMifierMethodVisitor0.visitLdcInsn(obj42);
        aSMifierMethodVisitor0.visitIntInsn(6, 254);
        java.util.List list47 = aSMifierMethodVisitor0.text;
        java.util.List list48 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list48);
    }

    @Test
    public void test05205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05205");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.print('#');
        printWriter21.flush();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test05206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05206");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.io.PrintWriter printWriter21 = printWriter1.append(' ');
        printWriter21.write(24942);
        printWriter21.print(false);
        printWriter21.flush();
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        long long53 = classReader51.readLong((int) (byte) 100);
        long long55 = classReader51.readLong((int) (byte) 10);
        int int57 = classReader51.readUnsignedShort(0);
        int int59 = classReader51.readUnsignedShort(3);
        org.mockito.asm.ClassWriter classWriter61 = new org.mockito.asm.ClassWriter(classReader51, (int) (short) 30313);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        printWriter63.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label72 = null;
        int[] intArray74 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor66.visitLookupSwitchInsn(label72, intArray74, labelArray75);
        java.util.List list77 = aSMifierMethodVisitor66.getText();
        printWriter63.println((java.lang.Object) list77);
        printWriter63.print((double) 10L);
        printWriter63.println(false);
        int int83 = classWriter61.newConst((java.lang.Object) false);
        printWriter21.println((java.lang.Object) false);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 8532477865490146625L + "'", long53 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 72057598333118569L + "'", long55 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 51966 + "'", int57 == 51966);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 48640 + "'", int59 == 48640);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1]");
        org.junit.Assert.assertNotNull(labelArray75);
        org.junit.Assert.assertNotNull(list77);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 9 + "'", int83 == 9);
    }

    @Test
    public void test05207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05207");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        java.util.List list30 = aSMifierMethodVisitor19.getText();
        printWriter16.println((java.lang.Object) list30);
        printWriter16.print((double) 10L);
        printWriter16.print(false);
        printWriter16.println(false);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter16);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter47 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter47.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = classWriter47.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter47.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray60 = classWriter47.toByteArray();
        org.mockito.asm.ByteVector byteVector63 = byteVector43.putByteArray(byteArray60, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader64 = new org.mockito.asm.ClassReader(byteArray60);
        long long66 = classReader64.readLong((int) (byte) 100);
        long long68 = classReader64.readLong((int) (byte) 10);
        java.lang.String[] strArray69 = classReader64.getInterfaces();
        java.io.PrintWriter printWriter70 = printWriter16.printf("L2099222213", (java.lang.Object[]) strArray69);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter((java.io.Writer) printWriter16);
        printWriter71.print((long) 4);
        printWriter71.print(true);
        java.lang.Object obj76 = null;
        printWriter71.println(obj76);
        org.mockito.asm.FieldVisitor fieldVisitor78 = aSMifierClassVisitor1.visitField(26913, "L607677620", "L1601831013", "L1837291041", (java.lang.Object) printWriter71);
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierClassVisitor1.visitAnnotation("L1301153355", false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 8532477865490146625L + "'", long66 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 72057598333118569L + "'", long68 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor81);
    }

    @Test
    public void test05208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05208");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        java.io.PrintWriter printWriter89 = printWriter1.format(locale20, "hi!", (java.lang.Object[]) labelArray86);
        printWriter1.print((int) (byte) 1);
        printWriter1.close();
        printWriter1.print('4');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter98 = printWriter1.append((java.lang.CharSequence) "L801849928", (int) (short) 26995, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -26995");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test05209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05209");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((-1), 24942);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMethodInsn(145, "L756219730", "L1703143512", "L188165429");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test05210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05210");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L142696279", (int) (byte) 10);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test05211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05211");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label9);
        aSMifierMethodVisitor0.visitMaxs(3, 0);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) (short) 22113);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 22113);
        aSMifierMethodVisitor0.visitIincInsn(8, 25);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor23.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor36.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor36.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor36.visitAnnotation("hi!", false);
        org.mockito.asm.Label label52 = new org.mockito.asm.Label();
        aSMifierMethodVisitor36.visitLineNumber(10, label52);
        aSMifierMethodVisitor23.visitLineNumber(1, label52);
        java.lang.Object obj55 = label52.info;
        aSMifierMethodVisitor0.visitLabel(label52);
        java.lang.String str57 = label52.toString();
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNull(obj55);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L731130013" + "'", str57, "L731130013");
    }

    @Test
    public void test05212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05212");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor19.visitLineNumber((int) (byte) 10, label29);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor19.visitTableSwitchInsn((int) (byte) 0, 51966, label33, labelArray43);
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor19.visitLabel(label46);
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        aSMifierMethodVisitor19.visitLabel(label48);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label48);
        java.io.PrintWriter printWriter51 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor52 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        aSMifierClassVisitor52.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor52.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitCode();
        aSMifierMethodVisitor65.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor65.visitEnd();
        aSMifierMethodVisitor65.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label75 = new org.mockito.asm.Label();
        aSMifierMethodVisitor65.visitJumpInsn(25, label75);
        java.lang.String str77 = label75.toString();
        aSMifierMethodVisitor0.visitJumpInsn(118, label75);
        java.lang.Object obj79 = label75.info;
        java.lang.Object obj80 = label75.info;
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L2048731948" + "'", str77, "L2048731948");
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj80);
    }

    @Test
    public void test05213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05213");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(100, 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn(66, (int) (short) 24942);
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor0.visitJumpInsn(26, label29);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test05214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05214");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitParameterAnnotation(1986622313, "L1675715472", true);
        java.util.List list53 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn(0, "L437863088", "L659269359", "L192302291");
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 0, "L1265340659", false);
        aSMifierMethodVisitor0.visitFieldInsn(152, "L954744343", "L1121272190", "");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(list53);
        org.junit.Assert.assertNotNull(annotationVisitor62);
    }

    @Test
    public void test05215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05215");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter1.print((float) (short) 30313);
        java.util.Locale locale12 = null;
        java.lang.Object[] objArray14 = null;
        java.io.PrintWriter printWriter15 = printWriter1.printf(locale12, "", objArray14);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter16);
        aSMifierClassVisitor17.visitOuterClass("L117232912", "L1051947494", "L1764179183");
        org.junit.Assert.assertNotNull(printWriter15);
    }

    @Test
    public void test05216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05216");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        char[] charArray16 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter9.print(charArray16);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        aSMifierClassVisitor18.visitEnd();
        aSMifierClassVisitor18.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierClassVisitor18.visitAnnotation("L326432149", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor28.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor28.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor28.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor28.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        aSMifierMethodVisitor28.visitLabel(label48);
        aSMifierMethodVisitor28.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor52.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor52.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor52.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor52.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        aSMifierMethodVisitor52.visitLabel(label72);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor74.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor74.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor74.visitIincInsn(1, 0);
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor74.visitLabel(label86);
        label72.info = aSMifierMethodVisitor74;
        aSMifierMethodVisitor28.visitLineNumber(24942, label72);
        java.lang.Object obj90 = label72.info;
        org.mockito.asm.FieldVisitor fieldVisitor91 = aSMifierClassVisitor18.visitField((int) (short) -1, "L326432149", "L1715840275", "", (java.lang.Object) label72);
        aSMifierMethodVisitor0.visitLabel(label72);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = label72.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(fieldVisitor91);
    }

    @Test
    public void test05217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05217");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        printWriter1.println(true);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter45 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter45.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = classWriter45.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter45.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray58 = classWriter45.toByteArray();
        org.mockito.asm.ByteVector byteVector61 = byteVector41.putByteArray(byteArray58, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray58);
        long long64 = classReader62.readLong((int) (byte) 100);
        int int66 = classReader62.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray67 = classReader62.getInterfaces();
        org.mockito.asm.ClassWriter classWriter69 = new org.mockito.asm.ClassWriter(classReader62, 2);
        int int71 = classReader62.readUnsignedShort((int) ' ');
        java.lang.String[] strArray72 = classReader62.getInterfaces();
        java.io.PrintWriter printWriter73 = printWriter1.printf("L365115101", (java.lang.Object[]) strArray72);
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter((java.io.Writer) printWriter73, false);
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter((java.io.Writer) printWriter73, true);
        printWriter73.println((long) 24);
        printWriter73.print((float) 32);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 8532477865490146625L + "'", long64 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 51966 + "'", int66 == 51966);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 24942 + "'", int71 == 24942);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test05218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05218");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print(9);
        printWriter1.println('4');
        printWriter1.println((double) 13);
        printWriter1.println(72057598333118569L);
        printWriter1.write("L2017261077");
    }

    @Test
    public void test05219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05219");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1004430080", 202);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, 254);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test05220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05220");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotation("L1808073265", true);
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitMaxs(27, 1);
        aSMifierMethodVisitor0.visitMethodInsn(152, "L1344346170", "L1228713414", "L1884432389");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test05221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05221");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn((int) '#', (int) (short) -326);
        aSMifierMethodVisitor0.visitMethodInsn(136, "L1454236833", "L309204558", "L1669980843");
        aSMifierMethodVisitor0.visitTypeInsn(100, "L4743655");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test05222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05222");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((-1), 24942);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L801849928", 0);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.println(0.0d);
        printWriter31.println((float) 2817);
        aSMifierMethodVisitor0.print(printWriter31);
        boolean boolean40 = printWriter31.checkError();
        java.io.PrintWriter printWriter42 = printWriter31.append((java.lang.CharSequence) "L1845262982");
        printWriter31.print((int) (short) 1);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(printWriter42);
    }

    @Test
    public void test05223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05223");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        classWriter1.visitSource("L575352164", "L1544572272");
        classWriter1.visitOuterClass("L2072201856", "L237245406", "hi!");
        int int56 = classWriter1.newClass("L1000949368");
        classWriter1.visitOuterClass("L8325504", "L1855853747", "L1951373725");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 21 + "'", int56 == 21);
    }

    @Test
    public void test05224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05224");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitSource("", "hi!");
        int int16 = classWriter1.newConst((java.lang.Object) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        classWriter1.visit((int) ' ', 9, "", "", "", strArray73);
        byte[] byteArray90 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader91 = new org.mockito.asm.ClassReader(byteArray90);
        org.mockito.asm.ClassReader classReader92 = new org.mockito.asm.ClassReader(byteArray90);
        org.mockito.asm.ClassReader classReader93 = new org.mockito.asm.ClassReader(byteArray90);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ClassReader classReader96 = new org.mockito.asm.ClassReader(byteArray90, 28275, 16780108);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[-54, -2, -70, -66, 0, 0, 0, 32, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 8, 0, 1, 7, 0, 1, 7, 0, 2, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 25, 82, 117, 110, 116, 105, 109, 101, 86, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 9, 0, 4, 0, 4, 0, 3, 0, 5, 0, 4, 0, 4, 0, 0, 0, 0, 0, 5, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 2, 0, 1, 0, 8, 0, 0, 0, 0, 0, 9, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test05225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05225");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("hi!", true);
        aSMifierClassVisitor1.visitSource("L519300220", "L978789454");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((-889275714));
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        java.io.PrintWriter printWriter59 = printWriter29.format(locale32, "hi!", (java.lang.Object[]) labelArray56);
        printWriter59.print((int) '4');
        java.io.PrintWriter printWriter63 = printWriter59.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter63, false);
        printWriter63.println("L1479479862");
        org.mockito.asm.FieldVisitor fieldVisitor68 = aSMifierClassVisitor1.visitField(123, "L261648562", "L671482438", "L326432149", (java.lang.Object) printWriter63);
        java.util.List list69 = aSMifierClassVisitor1.getText();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(list69);
    }

    @Test
    public void test05226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05226");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor10);
    }

    @Test
    public void test05227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05227");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn(118, "L1578022509");
        aSMifierMethodVisitor0.visitVarInsn(142, 7);
        java.util.List list33 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test05228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05228");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.io.PrintWriter printWriter21 = printWriter1.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        printWriter1.print((java.lang.Object) (byte) 1);
        java.io.PrintWriter printWriter91 = printWriter1.append('4');
        printWriter1.println((long) 16779859);
        printWriter1.println((float) (byte) 10);
        printWriter1.print((double) (short) 9);
        printWriter1.print((long) 20);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test05229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05229");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter16.visitAnnotation("L2113189186", true);
        java.lang.Object obj32 = null;
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter16.visitField((int) (short) 30313, "L2113189186", "L1434348811", "L61669440", obj32);
        classWriter16.visitSource("L1749641217", "L1544572272");
        classWriter16.visitInnerClass("L964051540", "L1675715472", "L1150302951", 2305);
        classWriter16.visitSource("L281240074", "L78149900");
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
    }

    @Test
    public void test05230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05230");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        java.io.PrintWriter printWriter64 = printWriter37.format("L1669980843", (java.lang.Object[]) labelArray61);
        printWriter37.println((float) (-1107296256));
        printWriter37.println('4');
        printWriter37.println(true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(printWriter64);
    }

    @Test
    public void test05231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05231");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        byte[] byteArray39 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray39);
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        classWriter42.visitInnerClass("hi!", "", "", 3);
        classWriter42.visitSource("L994489370", "L1669980843");
        int int56 = classWriter42.newNameType("L326432149", "");
        classReader40.accept((org.mockito.asm.ClassVisitor) classWriter42, (int) (short) 10);
        int int63 = classWriter42.newMethod("L614568462", "L1592299270", "L316026808", true);
        classWriter42.visitSource("L1434348811", "L1265340659");
        java.lang.String[] strArray71 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor72 = classWriter42.visitMethod(22113, "L1150302951", "L1905158729", "", strArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7 + "'", int56 == 7);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 15 + "'", int63 == 15);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test05232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05232");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("hi!");
        printWriter19.println("hi!");
        printWriter19.close();
        printWriter19.println((double) 3);
        java.util.Locale locale25 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.io.PrintWriter printWriter38 = printWriter19.printf(locale25, "L1749641217", (java.lang.Object[]) labelArray36);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter38, false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter40);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (short) 29782, "L147912305", "L265725697", "L1000949368");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 29782");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(printWriter38);
    }

    @Test
    public void test05233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05233");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        java.util.Locale locale17 = null;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        int int47 = classReader43.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray48 = classReader43.getInterfaces();
        java.io.PrintWriter printWriter49 = printWriter6.format(locale17, "L1434348811", (java.lang.Object[]) strArray48);
        printWriter6.print((double) 216172782130626573L);
        printWriter6.println(true);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 51966 + "'", int47 == 51966);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter49);
    }

    @Test
    public void test05234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05234");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter32.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = fieldVisitor38.visitAnnotation("hi!", true);
        fieldVisitor38.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = fieldVisitor38.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitParameterAnnotation(30313, "L61669440", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 118);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(234, "L615939697", "L1142561338", "L615939697");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor50);
    }

    @Test
    public void test05235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05235");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitOuterClass("L1691870655", "L96121905", "L994489370");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        java.io.PrintWriter printWriter29 = printWriter24.append('#');
        printWriter29.print((float) ' ');
        printWriter29.println('4');
        java.util.Locale locale34 = null;
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter43.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter43.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor55 = classWriter43.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray56 = classWriter43.toByteArray();
        org.mockito.asm.ByteVector byteVector59 = byteVector39.putByteArray(byteArray56, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader60 = new org.mockito.asm.ClassReader(byteArray56);
        long long62 = classReader60.readLong((int) (byte) 100);
        long long64 = classReader60.readLong((int) (byte) 10);
        java.lang.String[] strArray65 = classReader60.getInterfaces();
        int int67 = classReader60.readByte((int) '#');
        long long69 = classReader60.readLong(4);
        int int71 = classReader60.readInt((int) (short) 9);
        long long73 = classReader60.readLong((int) '4');
        java.lang.String str74 = classReader60.getSuperName();
        int int76 = classReader60.readByte((int) (byte) 1);
        org.mockito.asm.ClassWriter classWriter78 = new org.mockito.asm.ClassWriter(classReader60, 0);
        java.lang.String[] strArray79 = classReader60.getInterfaces();
        java.io.PrintWriter printWriter80 = printWriter29.format(locale34, "L1962766465", (java.lang.Object[]) strArray79);
        org.mockito.asm.MethodVisitor methodVisitor81 = aSMifierClassVisitor1.visitMethod(57174305, "L121647365", "L1556230913", "L523399549", strArray79);
        aSMifierClassVisitor1.visitSource("L1984018713", "L1289682213");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 8532477865490146625L + "'", long62 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 72057598333118569L + "'", long64 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 86 + "'", int67 == 86);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 590080L + "'", long69 == 590080L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 151060480 + "'", int71 == 151060480);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 72068947506459235L + "'", long73 == 72068947506459235L);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 254 + "'", int76 == 254);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(methodVisitor81);
    }

    @Test
    public void test05236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05236");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter1 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor2.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor2.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitInsn(8);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor18.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor18.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label38);
        java.lang.Object obj40 = label38.info;
        aSMifierMethodVisitor0.visitLineNumber(13, label38);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor53.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor53.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor53.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass69 = aSMifierMethodVisitor53.getClass();
        aSMifierMethodVisitor42.visitLdcInsn((java.lang.Object) wildcardClass69);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor42.visitParameterAnnotation(16779859, "L2113189186", false);
        annotationVisitor74.visitEnum("L1281777590", "L137501116", "L142696279");
        label38.info = "L137501116";
        java.lang.String str80 = label38.toString();
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(annotationVisitor74);
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L1459133576" + "'", str80, "L1459133576");
    }

    @Test
    public void test05237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05237");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -13570, "", true);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray55 = classWriter42.toByteArray();
        org.mockito.asm.ByteVector byteVector58 = byteVector38.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray55);
        long long61 = classReader59.readLong((int) (byte) 100);
        long long63 = classReader59.readLong((int) (byte) 10);
        int int65 = classReader59.readUnsignedShort(0);
        int int67 = classReader59.readUnsignedShort(3);
        long long69 = classReader59.readLong(8);
        byte[] byteArray70 = classReader59.b;
        org.mockito.asm.ClassWriter classWriter72 = new org.mockito.asm.ClassWriter(classReader59, (int) (short) -326);
        byte[] byteArray73 = classReader59.b;
        org.mockito.asm.ClassReader classReader74 = new org.mockito.asm.ClassReader(byteArray73);
        int int76 = classReader74.readByte((int) (byte) 100);
        int int78 = classReader74.readInt(13);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) int78);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 8532477865490146625L + "'", long61 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 72057598333118569L + "'", long63 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 51966 + "'", int65 == 51966);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 48640 + "'", int67 == 48640);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 2534374302089219L + "'", long69 == 2534374302089219L);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 118 + "'", int76 == 118);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 16778088 + "'", int78 == 16778088);
    }

    @Test
    public void test05238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05238");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        boolean boolean89 = printWriter88.checkError();
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.Writer) printWriter88, false);
        printWriter88.println('#');
        printWriter88.println();
        printWriter88.println(7809650168297619712L);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test05239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05239");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.util.List list69 = aSMifierClassVisitor68.text;
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter("hi!");
        printWriter75.print((int) 'a');
        printWriter75.println("");
        java.io.PrintWriter printWriter80 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor81 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter80);
        aSMifierClassVisitor81.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierClassVisitor81.visitAnnotation("", false);
        printWriter75.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor91 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter75);
        java.io.PrintWriter printWriter93 = printWriter75.append(' ');
        java.io.PrintWriter printWriter95 = printWriter75.append(' ');
        org.mockito.asm.FieldVisitor fieldVisitor96 = aSMifierClassVisitor68.visitField((int) (short) 257, "L371352799", "L1123989782", "L978789454", (java.lang.Object) printWriter95);
        printWriter95.write("L1508691945");
        boolean boolean99 = printWriter95.checkError();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(annotationVisitor89);
        org.junit.Assert.assertNotNull(printWriter93);
        org.junit.Assert.assertNotNull(printWriter95);
        org.junit.Assert.assertNotNull(fieldVisitor96);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test05240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05240");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs((-889275714), (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1346842308", 1853118049);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitParameterAnnotation(34, "L673772124", false);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test05241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05241");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        java.util.List list48 = aSMifierMethodVisitor0.getText();
        java.util.List list49 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1579492813", 18);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((-889275714));
        java.util.Locale locale57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label67 = null;
        int[] intArray69 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray70 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor61.visitLookupSwitchInsn(label67, intArray69, labelArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor72.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label78 = null;
        int[] intArray80 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor72.visitLookupSwitchInsn(label78, intArray80, labelArray81);
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label60, intArray69, labelArray81);
        java.io.PrintWriter printWriter84 = printWriter54.format(locale57, "hi!", (java.lang.Object[]) labelArray81);
        printWriter54.println(7);
        printWriter54.write("L834812042");
        aSMifierMethodVisitor0.print(printWriter54);
        java.io.PrintWriter printWriter90 = new java.io.PrintWriter((java.io.Writer) printWriter54);
        printWriter54.println((double) (short) 29793);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1]");
        org.junit.Assert.assertNotNull(labelArray70);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1]");
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test05242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05242");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.print("L666971223");
        printWriter1.println('a');
        printWriter1.println((float) 7958820893801644044L);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector(13);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) (short) 9);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt(22);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort(590080);
        printWriter1.print((java.lang.Object) byteVector31);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter33.println((float) 29801);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
    }

    @Test
    public void test05243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05243");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        aSMifierMethodVisitor0.visitInsn(9);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(16);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((int) (short) 872, "L783935767");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 872");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test05244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05244");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter1.print((float) (short) 30313);
        java.util.Locale locale12 = null;
        java.lang.Object[] objArray14 = null;
        java.io.PrintWriter printWriter15 = printWriter1.printf(locale12, "", objArray14);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        java.util.List list28 = aSMifierMethodVisitor17.getText();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor17.visitTryCatchBlock(label29, label30, label31, "");
        printWriter16.println((java.lang.Object) label31);
        printWriter16.print('a');
        java.lang.Object[] objArray38 = null;
        java.io.PrintWriter printWriter39 = printWriter16.format("L756693488", objArray38);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(list28);
        org.junit.Assert.assertNotNull(printWriter39);
    }

    @Test
    public void test05245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05245");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.println("L799304101");
        java.io.PrintWriter printWriter35 = printWriter31.append('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter42.visitEnd();
        classWriter42.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        org.mockito.asm.FieldVisitor fieldVisitor61 = aSMifierClassVisitor36.visitField(3, "L997959795", "L812886011", "L671595473", (java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(fieldVisitor61);
    }

    @Test
    public void test05246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05246");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitEnd();
        aSMifierMethodVisitor24.visitIntInsn(0, 590080);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor47.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor47.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor47.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        aSMifierMethodVisitor47.visitLabel(label67);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor69.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor69.visitIincInsn(1, 0);
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor69.visitLabel(label81);
        label67.info = aSMifierMethodVisitor69;
        java.lang.Object obj84 = label67.info;
        aSMifierMethodVisitor24.visitJumpInsn((int) (short) 1, label67);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("L1454236833", 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor24.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(annotationVisitor89);
    }

    @Test
    public void test05247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05247");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor19.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor34.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor34.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray49 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor34.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray49, (int) 'a', (java.lang.Object[]) labelArray60);
        aSMifierMethodVisitor19.visitTableSwitchInsn(8, (int) (byte) 1, label33, labelArray60);
        aSMifierMethodVisitor19.visitMaxs(3, 51966);
        aSMifierMethodVisitor19.visitIincInsn((-889275714), 9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor71.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor71.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor71.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor71.visitAnnotation("hi!", false);
        org.mockito.asm.Label label87 = new org.mockito.asm.Label();
        aSMifierMethodVisitor71.visitLineNumber(10, label87);
        aSMifierMethodVisitor19.visitLineNumber(4, label87);
        java.lang.String str90 = label87.toString();
        aSMifierMethodVisitor0.visitJumpInsn(100, label87);
        aSMifierMethodVisitor0.visitTypeInsn(118, "L1005725320");
        aSMifierMethodVisitor0.visitIntInsn(18, 33);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(attributeArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(annotationVisitor85);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "L698099150" + "'", str90, "L698099150");
    }

    @Test
    public void test05248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05248");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print(true);
        printWriter31.println('#');
        java.io.PrintWriter printWriter48 = printWriter31.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter((java.io.Writer) printWriter48, false);
        printWriter51.print((double) 1449225333);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter48);
    }

    @Test
    public void test05249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05249");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitMethodInsn(1, "L142696279", "L994489370", "L326432149");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(2, 51966);
        aSMifierMethodVisitor0.visitMethodInsn(9, "L2018459260", "L9178859", "L1247828331");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.lang.Class<?> wildcardClass28 = annotationVisitor27.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test05250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05250");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray54 = classReader53.b;
        org.mockito.asm.ByteVector byteVector57 = byteVector26.putByteArray(byteArray54, 0, 5);
        org.mockito.asm.ClassReader classReader58 = new org.mockito.asm.ClassReader(byteArray54);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray54);
        byte[] byteArray60 = classReader59.b;
        int int62 = classReader59.readByte(6);
        java.lang.String str63 = classReader59.getSuperName();
        // The following exception was thrown during execution in test generation
        try {
            short short65 = classReader59.readShort((int) (short) 1280);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1280");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test05251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05251");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter13.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = classWriter13.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor25 = classWriter13.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter13.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter13.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter38 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor39 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter38);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor39.visit(2, (int) (byte) 0, "", "", "", strArray48);
        classWriter13.visit((int) 'a', (int) '#', "", "", "hi!", strArray48);
        aSMifierClassVisitor1.visit((int) 'a', (int) (short) 100, "L666971223", "L142696279", "L1434348811", strArray48);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor56.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor56.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector71 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector75 = byteVector71.putByte(2);
        annotationVisitor68.visit("", (java.lang.Object) byteVector71);
        org.mockito.asm.ByteVector byteVector78 = byteVector71.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector80 = byteVector71.putByte(3);
        org.mockito.asm.ByteVector byteVector82 = byteVector71.putInt((-889275714));
        org.mockito.asm.FieldVisitor fieldVisitor83 = aSMifierClassVisitor1.visitField(202, "L1434348811", "L1669980843", "L459227517", (java.lang.Object) byteVector82);
        fieldVisitor83.visitEnd();
        org.mockito.asm.Attribute attribute85 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor83.visitAttribute(attribute85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(fieldVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(fieldVisitor83);
    }

    @Test
    public void test05252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05252");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putByte((int) (short) 256);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(24942);
        byte[] byteArray29 = null;
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByteArray(byteArray29, 57174305, (int) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putInt(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector28.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector28.putByte(321);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor39.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor39.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector54.putByte(2);
        annotationVisitor51.visit("", (java.lang.Object) byteVector54);
        org.mockito.asm.ByteVector byteVector61 = byteVector54.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector63 = byteVector54.putByte(3);
        org.mockito.asm.ByteVector byteVector65 = byteVector54.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putShort(28526);
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putUTF8("L659269359");
        org.mockito.asm.ClassWriter classWriter71 = new org.mockito.asm.ClassWriter((int) (byte) 1);
        classWriter71.visitInnerClass("", "hi!", "", (int) (byte) 10);
        classWriter71.visitInnerClass("L1434348811", "L1434348811", "L1434348811", 151060480);
        classWriter71.visitOuterClass("hi!", "L142696279", "");
        byte[] byteArray86 = classWriter71.toByteArray();
        org.mockito.asm.ByteVector byteVector89 = byteVector69.putByteArray(byteArray86, 1, 27);
        org.mockito.asm.ByteVector byteVector92 = byteVector38.putByteArray(byteArray86, 17, (int) '4');
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 7, 0, 1, 1, 0, 3, 104, 105, 33, 7, 0, 3, 1, 0, 11, 76, 49, 52, 51, 52, 51, 52, 56, 56, 49, 49, 7, 0, 5, 1, 0, 10, 76, 49, 52, 50, 54, 57, 54, 50, 55, 57, 12, 0, 7, 0, 1, 1, 0, 15, 69, 110, 99, 108, 111, 115, 105, 110, 103, 77, 101, 116, 104, 111, 100, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 9, 0, 0, 0, 4, 0, 4, 0, 8, 0, 10, 0, 0, 0, 18, 0, 2, 0, 2, 0, 4, 0, 1, 0, 10, 0, 6, 0, 6, 0, 5, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector92);
    }

    @Test
    public void test05253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05253");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        java.util.List list47 = aSMifierMethodVisitor24.text;
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("L2113189186", (int) (byte) -1);
        aSMifierMethodVisitor24.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitIntInsn(47806, 116);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test05254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05254");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        annotationVisitor42.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = annotationVisitor42.visitArray("L1105153118");
        annotationVisitor42.visitEnum("L290335602", "L429585682", "");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test05255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05255");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("L1853824624", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 872, "L174478886", true);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 10, 190);
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (short) 24940, "L446800432", "L1444913603", "L1866436761");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 24940");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test05256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05256");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.util.Locale locale8 = null;
        org.mockito.asm.ClassWriter classWriter11 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter11.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter39.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter39.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter64 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor65.visit(2, (int) (byte) 0, "", "", "", strArray74);
        classWriter39.visit((int) 'a', (int) '#', "", "", "hi!", strArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label84 = null;
        int[] intArray86 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor78.visitLookupSwitchInsn(label84, intArray86, labelArray87);
        aSMifierMethodVisitor23.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray74, (int) (short) 100, (java.lang.Object[]) labelArray87);
        classWriter11.visit(7, (-889275714), "", "hi!", "hi!", strArray74);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale8, "hi!", (java.lang.Object[]) strArray74);
        boolean boolean92 = printWriter91.checkError();
        boolean boolean93 = printWriter91.checkError();
        printWriter91.print("L1669980843");
        java.io.PrintWriter printWriter97 = new java.io.PrintWriter((java.io.Writer) printWriter91, false);
        printWriter97.println('#');
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test05257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05257");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitInsn((int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 9, "L767403187", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L1017243937", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "L407895089", false);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor0.visitLabel(label78);
        aSMifierMethodVisitor0.visitMaxs(1763771136, 22113);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor77);
    }

    @Test
    public void test05258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05258");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47, (-1), (int) (short) 256);
        int int52 = classReader51.header;
        int int53 = classReader51.getAccess();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 9 + "'", int52 == 9);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3841 + "'", int53 == 3841);
    }

    @Test
    public void test05259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05259");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        printWriter58.print("L972180261");
        printWriter58.println();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test05260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05260");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((int) 'a');
        printWriter10.println("");
        printWriter10.print((float) 590080L);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter10, true);
        printWriter18.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter29.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter42.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter42.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter67 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor68.visit(2, (int) (byte) 0, "", "", "", strArray77);
        classWriter42.visit((int) 'a', (int) '#', "", "", "hi!", strArray77);
        classWriter29.visit(7, (int) (byte) 0, "hi!", "", "", strArray77);
        org.mockito.asm.Attribute[] attributeArray82 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor22.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray77, (int) (short) 0, (java.lang.Object[]) attributeArray82);
        java.io.PrintWriter printWriter84 = printWriter18.printf("", (java.lang.Object[]) attributeArray82);
        printWriter84.println((double) 100);
        org.mockito.asm.FieldVisitor fieldVisitor87 = aSMifierClassVisitor1.visitField(25929, "L666971223", "L1715840275", "L454715523", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitSource("L1605751355", "");
        org.mockito.asm.Attribute attribute91 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitAttribute(attribute91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(attributeArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(fieldVisitor87);
    }

    @Test
    public void test05261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05261");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter1.print((float) (short) 30313);
        printWriter1.println((long) (short) 1);
        printWriter1.print('a');
        printWriter1.write("L1847055122");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor18.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor18.visitAnnotation("L911973346", false);
        aSMifierClassVisitor18.visitEnd();
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        char[] charArray37 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter30.print(charArray37);
        printWriter30.write("");
        java.util.Locale locale41 = null;
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter50.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = classWriter50.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter50.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray63 = classWriter50.toByteArray();
        org.mockito.asm.ByteVector byteVector66 = byteVector46.putByteArray(byteArray63, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader67 = new org.mockito.asm.ClassReader(byteArray63);
        long long69 = classReader67.readLong((int) (byte) 100);
        long long71 = classReader67.readLong((int) (byte) 10);
        java.lang.String[] strArray72 = classReader67.getInterfaces();
        int int74 = classReader67.readInt(0);
        int int75 = classReader67.header;
        java.lang.String[] strArray76 = classReader67.getInterfaces();
        java.io.PrintWriter printWriter77 = printWriter30.printf(locale41, "L1444913603", (java.lang.Object[]) strArray76);
        aSMifierClassVisitor18.visit(114, 142, "L1368033619", "L1395614519", "L1017243937", strArray76);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 8532477865490146625L + "'", long69 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 72057598333118569L + "'", long71 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-889275714) + "'", int74 == (-889275714));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 118 + "'", int75 == 118);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test05262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05262");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor10.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor10.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putByte(2);
        annotationVisitor22.visit("", (java.lang.Object) byteVector25);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector34 = byteVector25.putByte(3);
        org.mockito.asm.ByteVector byteVector36 = byteVector25.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader63 = new org.mockito.asm.ClassReader(byteArray57);
        byte[] byteArray64 = classReader63.b;
        org.mockito.asm.ByteVector byteVector67 = byteVector36.putByteArray(byteArray64, 0, 5);
        org.mockito.asm.ByteVector byteVector70 = byteVector5.putByteArray(byteArray64, (int) '#', 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putShort(0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putInt(222523246);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putShort(203);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
    }

    @Test
    public void test05263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05263");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter1.print((float) (short) 30313);
        printWriter1.println((long) (short) 1);
        printWriter1.print('4');
        java.io.PrintWriter printWriter17 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter17);
        aSMifierClassVisitor18.visitSource("", "hi!");
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor28.visit(2, (int) (byte) 0, "", "", "", strArray37);
        aSMifierClassVisitor18.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray37);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray50 = null;
        org.mockito.asm.MethodVisitor methodVisitor51 = aSMifierClassVisitor45.visitMethod((-1), "", "hi!", "", strArray50);
        org.mockito.asm.FieldVisitor fieldVisitor52 = aSMifierClassVisitor18.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        aSMifierClassVisitor18.visitOuterClass("L1434348811", "hi!", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierClassVisitor18.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector73 = byteVector69.putShort((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter75 = new org.mockito.asm.ClassWriter((int) 'a');
        byte[] byteArray76 = classWriter75.toByteArray();
        org.mockito.asm.ByteVector byteVector79 = byteVector73.putByteArray(byteArray76, 7, 0);
        org.mockito.asm.ClassReader classReader82 = new org.mockito.asm.ClassReader(byteArray76, 2, 51966);
        int int84 = classReader82.readByte((int) (short) 10);
        java.lang.String[] strArray85 = classReader82.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor86 = aSMifierClassVisitor18.visitMethod((int) (short) 9, "L2113189186", "L1544572272", "L1715840275", strArray85);
        java.io.PrintWriter printWriter87 = printWriter1.printf("L1845262982", (java.lang.Object[]) strArray85);
        printWriter87.println();
        printWriter87.print("L2016248295");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(methodVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(methodVisitor86);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test05264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05264");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, 0);
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter(classReader24, (int) (short) 9);
        classWriter35.visitInnerClass("L994489370", "L326432149", "hi!", (int) (byte) -1);
        classWriter35.visitSource("L61669440", "hi!");
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        int int59 = classWriter35.newConst((java.lang.Object) "");
        classWriter35.visitOuterClass("L1009311081", "L365115101", "");
        classWriter35.visitSource("L598840791", "L852338205");
        classWriter35.visitInnerClass("L188937864", "L1579098349", "L117134386", 151060480);
        int int74 = classWriter35.newNameType("L990238104", "L1734603415");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 14 + "'", int59 == 14);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 27 + "'", int74 == 27);
    }

    @Test
    public void test05265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05265");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj16);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("L1669980843", false);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((-889275714));
        printWriter22.print(0.0d);
        aSMifierMethodVisitor0.print(printWriter22);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((-889275714));
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        java.io.PrintWriter printWriter59 = printWriter29.format(locale32, "hi!", (java.lang.Object[]) labelArray56);
        printWriter29.println(8532477865490146625L);
        aSMifierMethodVisitor0.print(printWriter29);
        aSMifierMethodVisitor0.visitMethodInsn(123, "hi!", "L1482294079", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test05266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05266");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotation("L2112385861", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation(872, "L365115101", false);
        aSMifierMethodVisitor0.visitTypeInsn(5, "L1321861150");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(29801, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 29801");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test05267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05267");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.io.PrintWriter printWriter21 = printWriter1.append(' ');
        printWriter1.print((long) '#');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        char[] charArray26 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter25.println(charArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter21);
    }

    @Test
    public void test05268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05268");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        int int40 = classReader36.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray41 = classReader36.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor4.visitMethod(0, "hi!", "L994489370", "hi!", strArray41);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        long long75 = classReader71.readLong((int) (byte) 10);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        int int78 = classReader71.readByte((int) '#');
        long long80 = classReader71.readLong(4);
        int int81 = classReader71.header;
        byte[] byteArray82 = classReader71.b;
        org.mockito.asm.ClassReader classReader85 = new org.mockito.asm.ClassReader(byteArray82, (-1), 13);
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor4.visitField(5, "L2113189186", "L666971223", "L666971223", (java.lang.Object) (-1));
        aSMifierClassVisitor4.visitInnerClass("L1536756937", "L1216476214", "", 22113);
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierClassVisitor4.visitAnnotation("", true);
        aSMifierClassVisitor4.visitSource("L666971223", "L2018459260");
        org.mockito.asm.Attribute attribute98 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor4.visitAttribute(attribute98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 51966 + "'", int40 == 51966);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 72057598333118569L + "'", long75 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 86 + "'", int78 == 86);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 590080L + "'", long80 == 590080L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 118 + "'", int81 == 118);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor86);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test05269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05269");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((-1), 24942);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L801849928", 0);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.println(0.0d);
        printWriter31.println((float) 2817);
        aSMifierMethodVisitor0.print(printWriter31);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = annotationVisitor40.visitArray("L365115101");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = annotationVisitor42.visitArray("L1297264300");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor44);
    }

    @Test
    public void test05270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05270");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        aSMifierMethodVisitor0.visitInsn(0);
        java.util.List list31 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 27745, 57174305);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(47806, "L96121905", "L406965428", "L447192223");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(list31);
    }

    @Test
    public void test05271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05271");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor31.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor31.visitLineNumber((int) (byte) 10, label41);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        aSMifierMethodVisitor31.visitTableSwitchInsn((int) (byte) 0, 51966, label45, labelArray55);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor31.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor61.visitLineNumber((int) (byte) 10, label71);
        aSMifierMethodVisitor61.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor61.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label82 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(4, label82);
        aSMifierMethodVisitor31.visitLabel(label82);
        aSMifierMethodVisitor0.visitJumpInsn((int) '4', label82);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L137501116", 100);
        aSMifierMethodVisitor0.visitMaxs((int) 'a', 1869509376);
        aSMifierMethodVisitor0.visitIincInsn(28275, 27745);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test05272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05272");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        byte[] byteArray72 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader73 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ClassReader classReader79 = new org.mockito.asm.ClassReader(byteArray72, 47806, 1702035712);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 15, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 12, 0, 1, 0, 1, 3, 0, 0, 0, 97, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 9, 0, 0, 0, 2, 0, 3, 0, 10, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 9, 0, 0, 0, 2, 0, 4, 0, 11, 0, 0, 0, 0, 0, 10, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 10, 0, 0, 0, 2, 0, 1, 0, 12, 0, 0, 0, 2, 0, 1, 0, 13, 0, 0, 0, 0, 0, 14, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test05273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05273");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        java.lang.Object obj42 = new java.lang.Object();
        aSMifierMethodVisitor0.visitLdcInsn(obj42);
        aSMifierMethodVisitor0.visitIntInsn(6, 254);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(29793, 101);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 29793");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test05274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05274");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter1.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = classWriter1.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter1.visitField(590080, "hi!", "L1434348811", "hi!", (java.lang.Object) 1L);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print('4');
        printWriter24.print("");
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        int int75 = classReader71.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        java.io.PrintWriter printWriter77 = printWriter24.printf("", (java.lang.Object[]) strArray76);
        classWriter1.visit(1, 86, "hi!", "L142696279", "L2113189186", strArray76);
        java.io.PrintWriter printWriter83 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor84 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter83);
        aSMifierClassVisitor84.visitSource("hi!", "");
        org.mockito.asm.FieldVisitor fieldVisitor88 = classWriter1.visitField(2, "L666971223", "", "L2113189186", (java.lang.Object) "");
        classWriter1.visitInnerClass("L1852655365", "L1346842308", "L1077931653", (-1107296256));
        classWriter1.visitEnd();
        int int99 = classWriter1.newMethod("L1691870655", "L1284973471", "L267810866", false);
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 51966 + "'", int75 == 51966);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(fieldVisitor88);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 23 + "'", int99 == 23);
    }

    @Test
    public void test05275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05275");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitInsn((int) (short) 1);
        java.util.List list45 = aSMifierMethodVisitor24.getText();
        aSMifierMethodVisitor24.visitTypeInsn((int) '#', "L1216476214");
        aSMifierMethodVisitor24.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitTypeInsn(26729, "L491672583");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 26729");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(list45);
    }

    @Test
    public void test05276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05276");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        printWriter88.println('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor91 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter88);
        printWriter88.print(true);
        boolean boolean94 = printWriter88.checkError();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test05277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05277");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        java.util.List list42 = aSMifierMethodVisitor24.text;
        aSMifierMethodVisitor24.visitIincInsn(24942, (int) '#');
        aSMifierMethodVisitor24.visitIntInsn((int) (byte) 100, 590080);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitFieldInsn(30313, "L1533650022", "L671595473", "L1150302951");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 30313");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list42);
    }

    @Test
    public void test05278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05278");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) '#');
        long long33 = classReader24.readLong(4);
        java.lang.String[] strArray34 = classReader24.getInterfaces();
        int int36 = classReader24.getItem(0);
        java.lang.String str37 = classReader24.getSuperName();
        byte[] byteArray38 = classReader24.b;
        int int40 = classReader24.readByte((int) (short) 13);
        int int42 = classReader24.readByte((int) 'a');
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter("L365115101");
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("L1845262982");
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        printWriter49.print((-889275714));
        boolean boolean52 = printWriter49.checkError();
        printWriter49.print((double) 14);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((int) 'a');
        printWriter56.println("");
        java.io.PrintWriter printWriter61 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor62 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter61);
        aSMifierClassVisitor62.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierClassVisitor62.visitAnnotation("", false);
        printWriter56.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter56);
        java.io.PrintWriter printWriter74 = printWriter56.append(' ');
        printWriter56.println(true);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter("hi!");
        char[] charArray85 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter78.print(charArray85);
        printWriter56.print(charArray85);
        printWriter49.write(charArray85);
        printWriter47.print(charArray85);
        printWriter45.println(charArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj91 = classReader24.readConst(320, charArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 320");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 86 + "'", int31 == 86);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 590080L + "'", long33 == 590080L);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 101 + "'", int42 == 101);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05279");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label75 = null;
        int[] intArray77 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor69.visitLookupSwitchInsn(label75, intArray77, labelArray78);
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label57, intArray66, labelArray78);
        aSMifierMethodVisitor56.visitMaxs((int) (short) 1, 86);
        printWriter31.print((java.lang.Object) 86);
        printWriter31.print((long) 590080);
        printWriter31.close();
        printWriter31.print(true);
        boolean boolean90 = printWriter31.checkError();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[1]");
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test05280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05280");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (short) 0);
        aSMifierMethodVisitor0.visitTypeInsn((int) ' ', "L1845262982");
        aSMifierMethodVisitor0.visitIincInsn(86, 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = annotationVisitor41.visitArray("");
        annotationVisitor41.visitEnum("L1230702653", "L483311603", "L1344346170");
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test05281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05281");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitVarInsn(86, (int) (short) 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1906590307", 26729);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label31 = null;
        int[] intArray33 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray34 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label31, intArray33, labelArray34);
        java.util.List list36 = aSMifierMethodVisitor25.getText();
        printWriter22.println((java.lang.Object) list36);
        printWriter22.print((double) 10L);
        printWriter22.print('4');
        printWriter22.print("");
        printWriter22.println((long) 25929);
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter53 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter53.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = classWriter53.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter53.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray66 = classWriter53.toByteArray();
        org.mockito.asm.ByteVector byteVector69 = byteVector49.putByteArray(byteArray66, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray66);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray66);
        printWriter22.print((java.lang.Object) classReader71);
        aSMifierMethodVisitor0.print(printWriter22);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1]");
        org.junit.Assert.assertNotNull(labelArray34);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector69);
    }

    @Test
    public void test05282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05282");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor30.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor30.visitLineNumber((int) (byte) 10, label40);
        aSMifierMethodVisitor30.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor30.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label51 = new org.mockito.asm.Label();
        aSMifierMethodVisitor30.visitLineNumber(4, label51);
        aSMifierMethodVisitor0.visitLabel(label51);
        aSMifierMethodVisitor0.visitIincInsn(2817, 29801);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor0.visitParameterAnnotation((-1107296256), "", true);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "L298663367", "L1951373725", "L911946641");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (short) 872, (-1161953280));
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor0.visitAnnotation("L1951373725", false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test05283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05283");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 9);
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        java.lang.Object obj36 = label35.info;
        aSMifierMethodVisitor0.visitLineNumber(20, label35);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test05284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05284");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        printWriter9.print(9);
        printWriter9.print((double) 2817);
        printWriter9.print((double) 590080L);
        printWriter9.write("L1669980843", 86, (int) (short) -1);
        java.io.PrintWriter printWriter23 = printWriter9.append((java.lang.CharSequence) "L1829941255");
        printWriter23.print("L583709824");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter23);
        // The following exception was thrown during execution in test generation
        try {
            printWriter23.write("L1720888652", 30313, (int) (short) 24940);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 38469");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter23);
    }

    @Test
    public void test05285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05285");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        classWriter1.visitOuterClass("L96121905", "hi!", "L61669440");
        int int48 = classWriter1.newNameType("", "L407895089");
        int int50 = classWriter1.newUTF8("L601058011");
        classWriter1.visitOuterClass("L1578022509", "L1578022509", "L1705566046");
        org.mockito.asm.Attribute attribute55 = null;
        // The following exception was thrown during execution in test generation
        try {
            classWriter1.visitAttribute(attribute55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 13 + "'", int48 == 13);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 14 + "'", int50 == 14);
    }

    @Test
    public void test05286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05286");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        byte[] byteArray29 = classReader24.b;
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter(classReader24, 24942);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = new org.mockito.asm.Label();
        aSMifierMethodVisitor32.visitLabel(label52);
        java.util.List list54 = aSMifierMethodVisitor32.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor32.visitParameterAnnotation(6, "hi!", false);
        int int59 = classWriter31.newConst((java.lang.Object) 6);
        classWriter31.visitInnerClass("L823983574", "L1085773562", "L1688081168", 86);
        classWriter31.visitEnd();
        int int70 = classWriter31.newMethod("L926821323", "L1847055122", "L783935767", false);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 9 + "'", int59 == 9);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 20 + "'", int70 == 20);
    }

    @Test
    public void test05287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05287");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor26.visitLabel(label32);
        aSMifierMethodVisitor26.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor26.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor21.visitField(8, "L994489370", "L1703143512", "L1434348811", (java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor26.visitParameterAnnotation(0, "L598840791", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor26.visitMethodInsn(16780108, "L756693488", "L601058011", "L1653372446");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor47);
    }

    @Test
    public void test05288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05288");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        printWriter1.write("");
        printWriter1.write("L994489370");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.close();
        java.io.PrintWriter printWriter11 = printWriter1.append((java.lang.CharSequence) "L1236963294");
        printWriter1.print("L1628873907");
        org.junit.Assert.assertNotNull(printWriter11);
    }

    @Test
    public void test05289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05289");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.util.Locale locale8 = null;
        org.mockito.asm.ClassWriter classWriter11 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter11.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter39.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter39.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter64 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor65.visit(2, (int) (byte) 0, "", "", "", strArray74);
        classWriter39.visit((int) 'a', (int) '#', "", "", "hi!", strArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label84 = null;
        int[] intArray86 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor78.visitLookupSwitchInsn(label84, intArray86, labelArray87);
        aSMifierMethodVisitor23.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray74, (int) (short) 100, (java.lang.Object[]) labelArray87);
        classWriter11.visit(7, (-889275714), "", "hi!", "hi!", strArray74);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale8, "hi!", (java.lang.Object[]) strArray74);
        boolean boolean92 = printWriter91.checkError();
        printWriter91.print("L601661571");
        printWriter91.println(true);
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test05290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05290");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter75.println((double) 100);
        printWriter75.print(10L);
        printWriter75.println((long) 116);
        printWriter75.println("L1398906509");
        java.lang.Object[] objArray85 = null;
        java.io.PrintWriter printWriter86 = printWriter75.format("L464564430", objArray85);
        boolean boolean87 = printWriter86.checkError();
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test05291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05291");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(25, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotation("L1555790481", false);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 1, 256);
        org.mockito.asm.Attribute attribute27 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test05292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05292");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        short short30 = classReader24.readShort((int) (short) 100);
        java.lang.String str31 = classReader24.getSuperName();
        int int32 = classReader24.header;
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        java.util.List list49 = aSMifierMethodVisitor38.getText();
        printWriter35.println((java.lang.Object) list49);
        printWriter35.print((double) 10L);
        printWriter35.println(false);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter56);
        printWriter56.print(0.0d);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        char[] charArray70 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter63.print(charArray70);
        printWriter56.write(charArray70);
        printWriter35.print(charArray70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = classReader24.readClass(1986622313, charArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1986622313");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short30 + "' != '" + (short) 30313 + "'", short30 == (short) 30313);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 118 + "'", int32 == 118);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05293");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitParameterAnnotation(4, "L365115101", true);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, 14);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1675913995", 29);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test05294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05294");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label2, label3, label4, "");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(19, (int) (short) 4);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(321, 21);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 321");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05295");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter32.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = fieldVisitor38.visitAnnotation("hi!", true);
        fieldVisitor38.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = fieldVisitor38.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitParameterAnnotation(30313, "L61669440", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitCode();
        aSMifierMethodVisitor51.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor51.visitEnd();
        aSMifierMethodVisitor51.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label61 = new org.mockito.asm.Label();
        aSMifierMethodVisitor51.visitJumpInsn(25, label61);
        java.lang.Object obj63 = label61.info;
        java.lang.String str64 = label61.toString();
        java.lang.String str65 = label61.toString();
        aSMifierMethodVisitor0.visitLabel(label61);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L399637105", "L337574950", "L836986691");
        aSMifierMethodVisitor0.visitTypeInsn(22, "L1536756937");
        aSMifierMethodVisitor0.visitIincInsn(0, 1869509376);
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor0.visitAnnotation("L1150302951", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierMethodVisitor0.visitAnnotation("L1200350890", false);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNull(obj63);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L25251448" + "'", str64, "L25251448");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L25251448" + "'", str65, "L25251448");
        org.junit.Assert.assertNotNull(annotationVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test05296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05296");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor17.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor17.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor36.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor36.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray51 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label59 = null;
        int[] intArray61 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor53.visitLookupSwitchInsn(label59, intArray61, labelArray62);
        aSMifierMethodVisitor36.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray51, (int) 'a', (java.lang.Object[]) labelArray62);
        aSMifierMethodVisitor17.visitTableSwitchInsn(3, 2, label35, labelArray62);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor67.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor67.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor67.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor67.visitAnnotation("hi!", false);
        org.mockito.asm.Label label83 = new org.mockito.asm.Label();
        aSMifierMethodVisitor67.visitLineNumber(10, label83);
        aSMifierMethodVisitor17.visitJumpInsn((int) (short) 9, label83);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label83);
        java.lang.String str87 = label83.toString();
        java.lang.Object obj88 = label83.info;
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(attributeArray51);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(annotationVisitor81);
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L563651980" + "'", str87, "L563651980");
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test05297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05297");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        aSMifierClassVisitor4.visitEnd();
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((-889275714));
        printWriter14.write("");
        printWriter14.write("L994489370");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter14);
        org.mockito.asm.FieldVisitor fieldVisitor27 = aSMifierClassVisitor21.visitField((int) 'a', "L1544572272", "L2113189186", "L1703143512", (java.lang.Object) "L1715840275");
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray52 = classWriter39.toByteArray();
        org.mockito.asm.ByteVector byteVector55 = byteVector35.putByteArray(byteArray52, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader56 = new org.mockito.asm.ClassReader(byteArray52);
        long long58 = classReader56.readLong((int) (byte) 100);
        long long60 = classReader56.readLong((int) (byte) 10);
        java.lang.String[] strArray61 = classReader56.getInterfaces();
        int int63 = classReader56.readByte((int) '#');
        long long65 = classReader56.readLong(4);
        int int67 = classReader56.readInt((int) (short) 9);
        long long69 = classReader56.readLong((int) '4');
        long long71 = classReader56.readLong((int) '4');
        java.lang.String[] strArray72 = classReader56.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor73 = aSMifierClassVisitor21.visitMethod(2, "L1216476214", "L459227517", "L1715840275", strArray72);
        org.mockito.asm.MethodVisitor methodVisitor74 = aSMifierClassVisitor4.visitMethod((int) (short) -13570, "L1808073265", "L2113189186", "L1555790481", strArray72);
        methodVisitor74.visitVarInsn(0, 51966);
        // The following exception was thrown during execution in test generation
        try {
            methodVisitor74.visitIntInsn((int) (short) 24940, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 8532477865490146625L + "'", long58 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 72057598333118569L + "'", long60 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 86 + "'", int63 == 86);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 590080L + "'", long65 == 590080L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 151060480 + "'", int67 == 151060480);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 72068947506459235L + "'", long69 == 72068947506459235L);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 72068947506459235L + "'", long71 == 72068947506459235L);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(methodVisitor73);
        org.junit.Assert.assertNotNull(methodVisitor74);
    }

    @Test
    public void test05298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05298");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        boolean boolean23 = printWriter19.checkError();
        java.io.PrintWriter printWriter25 = printWriter19.append((java.lang.CharSequence) "L2113189186");
        printWriter19.println(true);
        printWriter19.flush();
        printWriter19.println();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(printWriter25);
    }

    @Test
    public void test05299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05299");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((-889275714));
        int int3 = classWriter1.newClass("");
        classWriter1.visitSource("", "hi!");
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("hi!");
        printWriter12.print((-889275714));
        java.util.Locale locale15 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        int[] intArray38 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label36, intArray38, labelArray39);
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label18, intArray27, labelArray39);
        java.io.PrintWriter printWriter42 = printWriter12.format(locale15, "hi!", (java.lang.Object[]) labelArray39);
        printWriter42.println("L799304101");
        java.io.PrintWriter printWriter46 = printWriter42.append('#');
        boolean boolean47 = printWriter42.checkError();
        printWriter42.println();
        printWriter42.println((float) 0);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter1.visitField((int) ' ', "L78149900", "L1035698796", "L298663367", (java.lang.Object) 0);
        classWriter1.visitInnerClass("L8325504", "L417802083", "L417802083", 16778088);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1]");
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(printWriter42);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fieldVisitor51);
    }

    @Test
    public void test05300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05300");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("hi!");
        printWriter11.print((int) 'a');
        printWriter11.println("");
        printWriter11.print((float) 590080L);
        java.lang.Object[] objArray19 = null;
        java.io.PrintWriter printWriter20 = printWriter11.printf("hi!", objArray19);
        printWriter20.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor23.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor23.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor23.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        aSMifierMethodVisitor23.visitLabel(label43);
        aSMifierMethodVisitor23.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor47.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor47.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor47.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        aSMifierMethodVisitor47.visitLabel(label67);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor69.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor69.visitIincInsn(1, 0);
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor69.visitLabel(label81);
        label67.info = aSMifierMethodVisitor69;
        aSMifierMethodVisitor23.visitLineNumber(24942, label67);
        java.lang.Object obj85 = label67.info;
        printWriter20.print((java.lang.Object) label67);
        java.lang.String str87 = label67.toString();
        aSMifierMethodVisitor0.visitLineNumber(26913, label67);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(obj85);
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L242350734" + "'", str87, "L242350734");
    }

    @Test
    public void test05301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05301");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((-1), 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("L1441782014", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L1924143761", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitParameterAnnotation(136, "L1216476214", true);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test05302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05302");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.write("L61669440");
        printWriter1.println((long) (short) 27745);
        printWriter1.println((float) 7523580949267742721L);
        printWriter1.println(true);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test05303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05303");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1931374313");
        printWriter1.print("L1454236833");
        java.io.PrintWriter printWriter6 = new java.io.PrintWriter("hi!");
        printWriter6.print((int) 'a');
        printWriter6.println("");
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor12.visitAnnotation("", false);
        printWriter6.print((java.lang.Object) false);
        printWriter6.print((double) 10.0f);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.Writer) printWriter6);
        boolean boolean25 = printWriter24.checkError();
        java.util.Locale locale26 = null;
        java.io.PrintWriter printWriter28 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter36.visitEnd();
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter50.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = classWriter50.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter50.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter50.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor69 = classWriter50.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter75 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor76 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter75);
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor76.visit(2, (int) (byte) 0, "", "", "", strArray85);
        classWriter50.visit((int) 'a', (int) '#', "", "", "hi!", strArray85);
        classWriter36.visit(100, 100, "L326432149", "L1434348811", "", strArray85);
        aSMifierClassVisitor29.visit(590080, 256, "L994489370", "L237245406", "L1749641217", strArray85);
        java.io.PrintWriter printWriter90 = printWriter24.printf(locale26, "L1105153118", (java.lang.Object[]) strArray85);
        java.io.PrintWriter printWriter91 = printWriter1.format("L4743655", (java.lang.Object[]) strArray85);
        printWriter1.write("L1675913995");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(fieldVisitor69);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test05304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05304");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        boolean boolean34 = printWriter31.checkError();
        printWriter31.print("L1105153118");
        printWriter31.println((float) 57174305);
        printWriter31.print((long) 218169344);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test05305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05305");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter75.write("L1853824624");
        printWriter75.print((float) 16842765);
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test05306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05306");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor28.visit(2, (int) (byte) 0, "", "", "", strArray37);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "L1434348811");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (short) -326, (int) (short) 1);
        org.mockito.asm.Label label57 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn(1536, label57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1536");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test05307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05307");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list15 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitVarInsn(1, 22113);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(1634628694, "L876659615", "L390977699", "L422154835");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1634628694");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test05308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05308");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test05309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05309");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter1.printf("", (java.lang.Object[]) strArray38);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((int) 'a');
        printWriter41.println("");
        java.io.PrintWriter printWriter46 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor47 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        aSMifierClassVisitor47.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierClassVisitor47.visitAnnotation("", false);
        printWriter41.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        java.io.PrintWriter printWriter59 = printWriter41.append(' ');
        printWriter41.println(true);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        char[] charArray70 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter63.print(charArray70);
        printWriter41.print(charArray70);
        printWriter1.println(charArray70);
        java.io.PrintWriter printWriter75 = printWriter1.append(' ');
        java.lang.Class<?> wildcardClass76 = printWriter1.getClass();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test05310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05310");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.lang.Object[] objArray9 = null;
        java.io.PrintWriter printWriter10 = printWriter1.printf("hi!", objArray9);
        printWriter10.println('a');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        java.io.PrintWriter printWriter15 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter23.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter23.visitEnd();
        org.mockito.asm.ClassWriter classWriter37 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter37.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = classWriter37.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor49 = classWriter37.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter37.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter37.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter62 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor63.visit(2, (int) (byte) 0, "", "", "", strArray72);
        classWriter37.visit((int) 'a', (int) '#', "", "", "hi!", strArray72);
        classWriter23.visit(100, 100, "L326432149", "L1434348811", "", strArray72);
        aSMifierClassVisitor16.visit(590080, 256, "L994489370", "L237245406", "L1749641217", strArray72);
        java.io.PrintWriter printWriter77 = printWriter10.printf("L943959020", (java.lang.Object[]) strArray72);
        printWriter10.println(true);
        java.io.PrintWriter printWriter81 = printWriter10.append((java.lang.CharSequence) "L1847055122");
        printWriter81.print(false);
        printWriter81.write("L1200350890");
        printWriter81.print('a');
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(fieldVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test05311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05311");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print((float) 10L);
        printWriter31.println();
        printWriter31.write("L1669980843");
        printWriter31.print((double) 72057598333118569L);
        java.lang.Object obj50 = null;
        printWriter31.print(obj50);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05312");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor60 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter59);
        printWriter59.close();
        printWriter59.print((float) 142);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test05313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05313");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -13570, "L1675715472", false);
        aSMifierMethodVisitor0.visitTypeInsn(15, "L267810866");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L1694926691", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor32.visitLocalVariable("", "hi!", "hi!", label57, label58, 51966);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor32.visitParameterAnnotation((int) (short) 100, "", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor66.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor66.visitLineNumber((int) (byte) 10, label76);
        org.mockito.asm.Label label80 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor81 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor81.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label87 = null;
        int[] intArray89 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray90 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor81.visitLookupSwitchInsn(label87, intArray89, labelArray90);
        aSMifierMethodVisitor66.visitTableSwitchInsn((int) (byte) 0, 51966, label80, labelArray90);
        org.mockito.asm.Label label93 = null;
        aSMifierMethodVisitor66.visitLabel(label93);
        org.mockito.asm.Label label95 = new org.mockito.asm.Label();
        aSMifierMethodVisitor66.visitLabel(label95);
        aSMifierMethodVisitor32.visitLineNumber(590080, label95);
        aSMifierMethodVisitor0.visitLabel(label95);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[1]");
        org.junit.Assert.assertNotNull(labelArray90);
    }

    @Test
    public void test05314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05314");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L601661571");
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitTypeInsn(100, "L666971223");
        java.io.PrintWriter printWriter40 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        aSMifierClassVisitor41.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor41.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter56 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter56.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter56.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor41.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter56);
        java.util.List list65 = aSMifierClassVisitor41.getText();
        aSMifierClassVisitor41.visitSource("L1829941255", "L389484434");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L1829941255");
        org.mockito.asm.Attribute attribute70 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(list65);
    }

    @Test
    public void test05315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05315");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor36.visitSource("hi!", "L142696279");
        aSMifierClassVisitor36.visitSource("L601661571", "L326432149");
        java.lang.String[] strArray47 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor48 = aSMifierClassVisitor36.visitMethod(0, "L1532047758", "L326432149", "L1479479862", strArray47);
        // The following exception was thrown during execution in test generation
        try {
            methodVisitor48.visitVarInsn((-21316096), 1853118049);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -21316096");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(methodVisitor48);
    }

    @Test
    public void test05316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05316");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, 151060480);
        aSMifierMethodVisitor0.visitFieldInsn(2, "", "L2101667039", "L659269359");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(26729, 16778088);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05317");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter36.print(' ');
        printWriter36.println(true);
        printWriter36.println(false);
        printWriter36.print((long) 332);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test05318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05318");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label2, label3, label4, "");
        aSMifierMethodVisitor0.visitMaxs(1751720195, 18);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((int) (short) 27745, "L756219730");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 27745");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05319");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIincInsn(100, (int) (short) 872);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 0, "L723576843", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor21.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor34.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor34.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor34.visitAnnotation("hi!", false);
        org.mockito.asm.Label label50 = new org.mockito.asm.Label();
        aSMifierMethodVisitor34.visitLineNumber(10, label50);
        aSMifierMethodVisitor21.visitLineNumber(1, label50);
        java.lang.Object obj53 = label50.info;
        java.lang.String str54 = label50.toString();
        java.lang.String str55 = label50.toString();
        java.lang.String str56 = label50.toString();
        java.lang.String str57 = label50.toString();
        aSMifierMethodVisitor0.visitLabel(label50);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNull(obj53);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "L1178910296" + "'", str54, "L1178910296");
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L1178910296" + "'", str55, "L1178910296");
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "L1178910296" + "'", str56, "L1178910296");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L1178910296" + "'", str57, "L1178910296");
    }

    @Test
    public void test05320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05320");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter24.print("L1669980843");
        printWriter24.println(false);
        printWriter24.print((double) 51966);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test05321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05321");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.print((float) 8532477865490146625L);
        printWriter31.print('#');
        printWriter31.println((long) 28526);
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter44.visitEnd();
        classWriter44.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter44.visitSource("hi!", "hi!");
        byte[] byteArray66 = classWriter44.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor71.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor71.visitLabel(label77);
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor71.visitLineNumber((int) '4', label80);
        org.mockito.asm.FieldVisitor fieldVisitor82 = classWriter44.visitField((-1), "hi!", "", "", (java.lang.Object) label80);
        classWriter44.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = classWriter44.visitAnnotation("L1434348811", true);
        byte[] byteArray89 = classWriter44.toByteArray();
        byte[] byteArray90 = classWriter44.toByteArray();
        org.mockito.asm.ClassReader classReader91 = new org.mockito.asm.ClassReader(byteArray90);
        printWriter31.print((java.lang.Object) classReader91);
        org.mockito.asm.ClassWriter classWriter94 = new org.mockito.asm.ClassWriter(classReader91, 1751720195);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str95 = classReader91.getClassName();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor82);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertNotNull(byteArray90);
    }

    @Test
    public void test05322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05322");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        classWriter1.visitSource("L1000949368", "L1441782014");
        byte[] byteArray51 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader54 = new org.mockito.asm.ClassReader(byteArray51, 13, (int) (byte) 100);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray51);
    }

    @Test
    public void test05323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05323");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L659269359", true);
        java.util.List list18 = aSMifierMethodVisitor0.getText();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((-1161953280), "L2063102727", "L1265340659", "L836986691");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1161953280");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(list18);
    }

    @Test
    public void test05324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05324");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierClassVisitor1.visitAnnotation("L1669980843", false);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("L1556230913");
        java.util.Locale locale32 = null;
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter35);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor38.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter53 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter53.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = classWriter53.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter53.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray66 = classWriter53.toByteArray();
        org.mockito.asm.ByteVector byteVector69 = byteVector49.putByteArray(byteArray66, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray66);
        long long72 = classReader70.readLong((int) (byte) 100);
        int int74 = classReader70.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray75 = classReader70.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor76 = aSMifierClassVisitor38.visitMethod(0, "hi!", "L994489370", "hi!", strArray75);
        java.io.PrintWriter printWriter77 = printWriter31.printf(locale32, "L454715523", (java.lang.Object[]) strArray75);
        org.mockito.asm.MethodVisitor methodVisitor78 = aSMifierClassVisitor1.visitMethod(33, "L1262125332", "L1849458793", "L1656212772", strArray75);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 8532477865490146625L + "'", long72 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 51966 + "'", int74 == 51966);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(methodVisitor76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(methodVisitor78);
    }

    @Test
    public void test05325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05325");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1715840275", 24942);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor0.visitJumpInsn(22, label41);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test05326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05326");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor18.visitLineNumber((int) (byte) 10, label28);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        aSMifierMethodVisitor18.visitTableSwitchInsn((int) (byte) 0, 51966, label32, labelArray42);
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor18.visitLabel(label45);
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label47);
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor50.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor50.visitAnnotation("hi!", false);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLineNumber(10, label66);
        aSMifierMethodVisitor0.visitTryCatchBlock(label47, label49, label66, "L1434348811");
        aSMifierMethodVisitor0.visitIntInsn(100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn(1, 2817);
        aSMifierMethodVisitor0.visitVarInsn(25, (int) '#');
        aSMifierMethodVisitor0.visitFieldInsn(3, "L1770505064", "L978789454", "L814836869");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -13570, 142);
        aSMifierMethodVisitor0.visitInsn(33);
        aSMifierMethodVisitor0.visitInsn(26);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test05327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05327");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter("hi!");
        printWriter11.print((int) 'a');
        printWriter11.println("");
        printWriter11.print((float) 590080L);
        java.lang.Object[] objArray19 = null;
        java.io.PrintWriter printWriter20 = printWriter11.printf("hi!", objArray19);
        printWriter20.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor23.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor23.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor23.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label43 = new org.mockito.asm.Label();
        aSMifierMethodVisitor23.visitLabel(label43);
        aSMifierMethodVisitor23.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor47.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor47.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor47.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        aSMifierMethodVisitor47.visitLabel(label67);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor69.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor69.visitIincInsn(1, 0);
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor69.visitLabel(label81);
        label67.info = aSMifierMethodVisitor69;
        aSMifierMethodVisitor23.visitLineNumber(24942, label67);
        java.lang.Object obj85 = label67.info;
        printWriter20.print((java.lang.Object) label67);
        java.lang.String str87 = label67.toString();
        aSMifierMethodVisitor0.visitLineNumber(26913, label67);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = label67.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(obj85);
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L2080879012" + "'", str87, "L2080879012");
    }

    @Test
    public void test05328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05328");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        printWriter90.print("");
        printWriter90.println((long) '4');
        printWriter90.write("L309204558");
        java.io.PrintWriter printWriter98 = printWriter90.append('#');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter98);
    }

    @Test
    public void test05329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05329");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label14);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("L601661571", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(334, "L1051947494", "L233033650", "L992490396");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test05330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05330");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, 5);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitParameterAnnotation(2817, "L298663367", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = annotationVisitor31.visitAnnotation("L1394342338", "L536317741");
        annotationVisitor31.visit("L1174303418", (java.lang.Object) 97);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test05331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05331");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label2, label3, label4, "");
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        printWriter8.print(0.0d);
        printWriter8.print((float) (-3819410108757049344L));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (-3819410108757049344L));
        aSMifierMethodVisitor0.visitIntInsn(31, 32);
    }

    @Test
    public void test05332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05332");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter77 = printWriter9.append((java.lang.CharSequence) "L994489370");
        printWriter9.println((double) '#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor80 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierClassVisitor80.visitAnnotation("L1004430080", false);
        org.mockito.asm.Attribute attribute84 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor80.visitAttribute(attribute84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test05333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05333");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        org.mockito.asm.FieldVisitor fieldVisitor7 = aSMifierClassVisitor1.visitField((int) (short) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) 0L);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor22.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putByte(2);
        annotationVisitor34.visit("", (java.lang.Object) byteVector37);
        org.mockito.asm.ByteVector byteVector44 = byteVector37.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector46 = byteVector37.putByte(3);
        org.mockito.asm.ByteVector byteVector48 = byteVector37.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter56 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter56.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = classWriter56.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter56.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray69 = classWriter56.toByteArray();
        org.mockito.asm.ByteVector byteVector72 = byteVector52.putByteArray(byteArray69, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader73 = new org.mockito.asm.ClassReader(byteArray69);
        org.mockito.asm.ClassReader classReader74 = new org.mockito.asm.ClassReader(byteArray69);
        org.mockito.asm.ClassReader classReader75 = new org.mockito.asm.ClassReader(byteArray69);
        byte[] byteArray76 = classReader75.b;
        org.mockito.asm.ByteVector byteVector79 = byteVector48.putByteArray(byteArray76, 0, 5);
        org.mockito.asm.ByteVector byteVector82 = byteVector17.putByteArray(byteArray76, (int) '#', 1);
        org.mockito.asm.ClassReader classReader83 = new org.mockito.asm.ClassReader(byteArray76);
        org.mockito.asm.ClassReader classReader84 = new org.mockito.asm.ClassReader(byteArray76);
        org.mockito.asm.FieldVisitor fieldVisitor85 = aSMifierClassVisitor1.visitField((int) (short) -1, "L1592299270", "L598840791", "L1592299270", (java.lang.Object) classReader84);
        aSMifierClassVisitor1.visitOuterClass("L1675715472", "L1418438756", "L1289682213");
        aSMifierClassVisitor1.visitOuterClass("L1647649528", "L1962067231", "L904580930");
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(fieldVisitor85);
    }

    @Test
    public void test05334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05334");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        java.lang.String[] strArray18 = null;
        aSMifierClassVisitor1.visit((int) (byte) 10, 1, "", "L1434348811", "L326432149", strArray18);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test05335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05335");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray33 = null;
        org.mockito.asm.MethodVisitor methodVisitor34 = aSMifierClassVisitor28.visitMethod((-1), "", "hi!", "", strArray33);
        org.mockito.asm.FieldVisitor fieldVisitor35 = aSMifierClassVisitor1.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        aSMifierClassVisitor1.visitInnerClass("L1669980843", "L142696279", "", (int) (byte) 100);
        aSMifierClassVisitor1.visitSource("L326432149", "L1715840275");
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter55 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter55.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = classWriter55.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor67 = classWriter55.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray68 = classWriter55.toByteArray();
        org.mockito.asm.ByteVector byteVector71 = byteVector51.putByteArray(byteArray68, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader72 = new org.mockito.asm.ClassReader(byteArray68);
        long long74 = classReader72.readLong((int) (byte) 100);
        long long76 = classReader72.readLong((int) (byte) 10);
        short short78 = classReader72.readShort(1);
        int int80 = classReader72.readUnsignedShort(0);
        java.lang.String[] strArray81 = classReader72.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor1.visitMethod((int) (short) 872, "L96121905", "L61669440", "L1853824624", strArray81);
        org.mockito.asm.Attribute attribute83 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitAttribute(attribute83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor67);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 8532477865490146625L + "'", long74 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 72057598333118569L + "'", long76 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short78 + "' != '" + (short) -326 + "'", short78 == (short) -326);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 51966 + "'", int80 == 51966);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(methodVisitor82);
    }

    @Test
    public void test05336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05336");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label15 = null;
        int[] intArray17 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label15, intArray17, labelArray18);
        org.mockito.asm.FieldVisitor fieldVisitor20 = aSMifierClassVisitor1.visitField(1, "", "hi!", "", (java.lang.Object) label15);
        aSMifierClassVisitor1.visitOuterClass("L994489370", "L799304101", "L1434348811");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierClassVisitor1.visitAnnotation("L61669440", false);
        aSMifierClassVisitor1.visitSource("L2101667039", "L2036836790");
        aSMifierClassVisitor1.visitInnerClass("L1931374313", "L779142371", "L1864262327", 100);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter47 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter47.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = classWriter47.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter47.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray60 = classWriter47.toByteArray();
        org.mockito.asm.ByteVector byteVector63 = byteVector43.putByteArray(byteArray60, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader64 = new org.mockito.asm.ClassReader(byteArray60);
        long long66 = classReader64.readLong((int) (byte) 100);
        long long68 = classReader64.readLong((int) (byte) 10);
        java.lang.String[] strArray69 = classReader64.getInterfaces();
        int int71 = classReader64.readByte((int) '#');
        long long73 = classReader64.readLong(4);
        int int74 = classReader64.header;
        org.mockito.asm.ClassWriter classWriter76 = new org.mockito.asm.ClassWriter(classReader64, (int) (byte) 0);
        java.lang.String[] strArray77 = classReader64.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor78 = aSMifierClassVisitor1.visitMethod((int) (short) 1280, "L1067871917", "L127379530", "L661313578", strArray77);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[1]");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 8532477865490146625L + "'", long66 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 72057598333118569L + "'", long68 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 86 + "'", int71 == 86);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 590080L + "'", long73 == 590080L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 118 + "'", int74 == 118);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(methodVisitor78);
    }

    @Test
    public void test05337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05337");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (short) 0);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 0.0d);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "L1749343426", "L406965428", "L697359787");
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test05338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05338");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        aSMifierMethodVisitor35.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label50 = null;
        int[] intArray56 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor57.visitLineNumber((int) (byte) 10, label67);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor72.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label78 = null;
        int[] intArray80 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor72.visitLookupSwitchInsn(label78, intArray80, labelArray81);
        aSMifierMethodVisitor57.visitTableSwitchInsn((int) (byte) 0, 51966, label71, labelArray81);
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label50, intArray56, labelArray81);
        java.io.PrintWriter printWriter85 = printWriter1.printf("L61669440", (java.lang.Object[]) labelArray81);
        printWriter1.println("L407895089");
        printWriter1.println();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1]");
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(printWriter85);
    }

    @Test
    public void test05339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05339");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation(590080, "", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitCode();
        aSMifierMethodVisitor16.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor16.visitTypeInsn(8, "");
        aSMifierMethodVisitor16.visitEnd();
        java.util.List list30 = aSMifierMethodVisitor16.getText();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) list30);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor33.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor33.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor33.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        aSMifierMethodVisitor33.visitLabel(label53);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor55.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor55.visitIincInsn(1, 0);
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor55.visitLabel(label67);
        label53.info = aSMifierMethodVisitor55;
        java.lang.String str70 = label53.toString();
        aSMifierMethodVisitor0.visitLineNumber(256, label53);
        java.util.List list72 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor52);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L1634458015" + "'", str70, "L1634458015");
        org.junit.Assert.assertNotNull(list72);
    }

    @Test
    public void test05340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05340");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(11, 320);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitParameterAnnotation(24942, "L783935767", true);
        annotationVisitor52.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test05341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05341");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readInt(0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, (int) '4');
        classWriter33.visitEnd();
        classWriter33.visitSource("L1703143512", "L1749641217");
        byte[] byteArray38 = classWriter33.toByteArray();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        printWriter44.print((-889275714));
        java.util.Locale locale47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        int[] intArray70 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label68, intArray70, labelArray71);
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label50, intArray59, labelArray71);
        java.io.PrintWriter printWriter74 = printWriter44.format(locale47, "hi!", (java.lang.Object[]) labelArray71);
        printWriter74.print((long) 28526);
        printWriter74.print(321);
        java.io.PrintWriter printWriter80 = new java.io.PrintWriter((java.io.Writer) printWriter74, true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor81 = classWriter33.visitField(1869480192, "L756693488", "L1561022062", "L964051540", (java.lang.Object) printWriter74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value java.io.PrintWriter@28fd4e2e");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-889275714) + "'", int31 == (-889275714));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 10, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 11, 76, 49, 55, 48, 51, 49, 52, 51, 53, 49, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 6, 0, 0, 0, 2, 0, 9, 0, 7, 0, 0, 0, 11, 76, 49, 55, 52, 57, 54, 52, 49, 50, 49, 55]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(printWriter74);
    }

    @Test
    public void test05342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05342");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, 0);
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter(classReader24, (int) (short) 9);
        classWriter35.visitInnerClass("L994489370", "L326432149", "hi!", (int) (byte) -1);
        classWriter35.visitSource("L61669440", "hi!");
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        int int59 = classWriter35.newConst((java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = classWriter35.visitAnnotation("L1216017066", true);
        int int65 = classWriter35.newNameType("L1459078187", "L1605751355");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 14 + "'", int59 == 14);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 18 + "'", int65 == 18);
    }

    @Test
    public void test05343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05343");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.util.Locale locale25 = null;
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        java.io.PrintWriter printWriter33 = printWriter28.append('#');
        printWriter33.println((double) 51966);
        char[] charArray42 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter33.write(charArray42);
        java.util.Locale locale44 = null;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter53 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter53.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = classWriter53.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter53.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray66 = classWriter53.toByteArray();
        org.mockito.asm.ByteVector byteVector69 = byteVector49.putByteArray(byteArray66, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray66);
        long long72 = classReader70.readLong((int) (byte) 100);
        int int74 = classReader70.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray75 = classReader70.getInterfaces();
        java.io.PrintWriter printWriter76 = printWriter33.format(locale44, "L1434348811", (java.lang.Object[]) strArray75);
        java.io.PrintWriter printWriter77 = printWriter1.printf(locale25, "L316026808", (java.lang.Object[]) strArray75);
        printWriter77.close();
        printWriter77.println((float) 7958832928307566177L);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 8532477865490146625L + "'", long72 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 51966 + "'", int74 == 51966);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test05344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05344");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putByte((int) (short) 256);
        org.mockito.asm.ByteVector byteVector28 = byteVector15.putLong(2534374302089219L);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte(1937006958);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
    }

    @Test
    public void test05345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05345");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.Attribute[] attributeArray31 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor33.visitLineNumber((int) (byte) 10, label43);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        int[] intArray56 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label54, intArray56, labelArray57);
        aSMifierMethodVisitor33.visitTableSwitchInsn((int) (byte) 0, 51966, label47, labelArray57);
        aSMifierMethodVisitor0.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray31, (int) '4', (java.lang.Object[]) labelArray57);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), (int) '#');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(7, (int) ' ');
        aSMifierMethodVisitor0.visitMethodInsn(20, "L911946641", "L1703143512", "L799304101");
        aSMifierMethodVisitor0.visitMaxs(17, 19);
        org.mockito.asm.Attribute attribute76 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(attributeArray31);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(labelArray57);
    }

    @Test
    public void test05346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05346");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter1.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = classWriter1.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter1.visitField(590080, "hi!", "L1434348811", "hi!", (java.lang.Object) 1L);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print('4');
        printWriter24.print("");
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        int int75 = classReader71.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        java.io.PrintWriter printWriter77 = printWriter24.printf("", (java.lang.Object[]) strArray76);
        classWriter1.visit(1, 86, "hi!", "L142696279", "L2113189186", strArray76);
        java.io.PrintWriter printWriter83 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor84 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter83);
        aSMifierClassVisitor84.visitSource("hi!", "");
        org.mockito.asm.FieldVisitor fieldVisitor88 = classWriter1.visitField(2, "L666971223", "", "L2113189186", (java.lang.Object) "");
        classWriter1.visitInnerClass("L1852655365", "L1346842308", "L1077931653", (-1107296256));
        int int98 = classWriter1.newMethod("L1703143512", "L1737005341", "", true);
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 51966 + "'", int75 == 51966);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(fieldVisitor88);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 22 + "'", int98 == 22);
    }

    @Test
    public void test05347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05347");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, (-1107296256));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor23.visitLineNumber((int) (byte) 10, label33);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor23.visitAnnotation("hi!", true);
        aSMifierMethodVisitor23.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor42.visitLineNumber((int) (byte) 10, label52);
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label63 = null;
        int[] intArray65 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label63, intArray65, labelArray66);
        aSMifierMethodVisitor42.visitTableSwitchInsn((int) (byte) 0, 51966, label56, labelArray66);
        org.mockito.asm.Label label69 = null;
        aSMifierMethodVisitor42.visitLabel(label69);
        org.mockito.asm.Label label71 = new org.mockito.asm.Label();
        aSMifierMethodVisitor42.visitLabel(label71);
        aSMifierMethodVisitor23.visitJumpInsn((int) (short) 10, label71);
        aSMifierMethodVisitor0.visitLabel(label71);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor0.visitParameterAnnotation(3, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn(6);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(2305, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1]");
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test05348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05348");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitSource("L1749641217", "L994489370");
        aSMifierClassVisitor4.visitOuterClass("L137501116", "L2036836790", "L1230702653");
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter21.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray27);
        org.mockito.asm.MethodVisitor methodVisitor29 = aSMifierClassVisitor4.visitMethod((int) (short) -326, "L1004430080", "L1931374313", "L137136720", strArray27);
        aSMifierClassVisitor4.visitSource("L464564430", "L834812042");
        org.mockito.asm.FieldVisitor fieldVisitor38 = aSMifierClassVisitor4.visitField(16842765, "L1689719368", "L836986691", "", (java.lang.Object) 151060480L);
        aSMifierClassVisitor4.visitInnerClass("", "L1951373725", "L77953979", 332);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor48.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor48.visitParameterAnnotation((int) (short) 100, "L836986691", true);
        org.mockito.asm.FieldVisitor fieldVisitor65 = aSMifierClassVisitor4.visitField(142, "L1694926691", "L1375118326", "L371352799", (java.lang.Object) "L836986691");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodVisitor29);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor65);
    }

    @Test
    public void test05349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05349");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = printWriter31.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.println('4');
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        printWriter61.print(0L);
        printWriter61.print(true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter56);
    }

    @Test
    public void test05350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05350");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(6, 6);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn(26, "L661313578");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (short) -326, "L1853312656", "L1103251756", "L1736155405");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -326");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test05351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05351");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj25);
        aSMifierMethodVisitor0.visitVarInsn(2, 256);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L344842840", 28526);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor33.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor33.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor33.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor33.visitParameterAnnotation(10, "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor33.visitAnnotation("L1103251756", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) false);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test05352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05352");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj16);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("L1669980843", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test05353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05353");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        org.mockito.asm.FieldVisitor fieldVisitor7 = aSMifierClassVisitor1.visitField((int) (short) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) 0L);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierClassVisitor1.visitAnnotation("L994489370", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        aSMifierMethodVisitor15.visitLabel(label21);
        aSMifierMethodVisitor15.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor15.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = aSMifierClassVisitor1.visitField(321, "L137501116", "L1289682213", "L1592299270", (java.lang.Object) aSMifierMethodVisitor15);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(fieldVisitor32);
    }

    @Test
    public void test05354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05354");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(6, 6);
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        aSMifierClassVisitor20.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierClassVisitor20.visitAnnotation("L1200350890", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor20);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray52 = classWriter39.toByteArray();
        org.mockito.asm.ByteVector byteVector55 = byteVector35.putByteArray(byteArray52, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader56 = new org.mockito.asm.ClassReader(byteArray52);
        short short58 = classReader56.readShort(8);
        short short60 = classReader56.readShort((int) (byte) 10);
        byte[] byteArray61 = classReader56.b;
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray61);
        java.lang.String[] strArray63 = classReader62.getInterfaces();
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor20.visitField(0, "L514140742", "L111851498", "L1700715189", (java.lang.Object) classReader62);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertTrue("'" + short58 + "' != '" + (short) 9 + "'", short58 == (short) 9);
        org.junit.Assert.assertTrue("'" + short60 + "' != '" + (short) 256 + "'", short60 == (short) 256);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
    }

    @Test
    public void test05355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05355");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor14.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter21.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter21.visitAnnotation("", true);
        classWriter21.visitSource("", "");
        annotationVisitor14.visit("L454715523", (java.lang.Object) classWriter21);
        classWriter21.visitInnerClass("L799304101", "L1441782014", "L1434348811", 57174305);
        int int42 = classWriter21.newNameType("L1592299270", "L834812042");
        classWriter21.visitSource("L2113189186", "L1808073265");
        int int47 = classWriter21.newClass("L1228713414");
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter60 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter60.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = classWriter60.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor72 = classWriter60.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray73 = classWriter60.toByteArray();
        org.mockito.asm.ByteVector byteVector76 = byteVector56.putByteArray(byteArray73, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader77 = new org.mockito.asm.ClassReader(byteArray73);
        long long79 = classReader77.readLong((int) (byte) 100);
        long long81 = classReader77.readLong((int) (byte) 10);
        java.lang.String str82 = classReader77.getSuperName();
        java.lang.String[] strArray83 = classReader77.getInterfaces();
        java.lang.String[] strArray84 = classReader77.getInterfaces();
        classWriter21.visit(24, (int) (short) 10, "L1775421725", "L173581797", "L1174303418", strArray84);
        int int88 = classWriter21.newNameType("L615939697", "L1413764419");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 13 + "'", int47 == 13);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(fieldVisitor72);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 8532477865490146625L + "'", long79 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 72057598333118569L + "'", long81 == 72057598333118569L);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 21 + "'", int88 == 21);
    }

    @Test
    public void test05356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05356");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        printWriter1.println((long) 5);
        printWriter1.write("hi!", 14, (-1161953280));
        printWriter1.flush();
        java.io.PrintWriter printWriter42 = printWriter1.append((java.lang.CharSequence) "L1608972287");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter42);
    }

    @Test
    public void test05357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05357");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitOuterClass("", "L1434348811", "hi!");
        aSMifierClassVisitor10.visitSource("", "L237245406");
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor10.visitAnnotation("L1479479862", false);
        java.util.List list21 = aSMifierClassVisitor10.getText();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test05358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05358");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation(2, "", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitCode();
        aSMifierMethodVisitor40.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor40.visitTypeInsn(8, "");
        annotationVisitor38.visit("L142696279", (java.lang.Object) aSMifierMethodVisitor40);
        aSMifierMethodVisitor40.visitVarInsn(15, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor40.visitAnnotationDefault();
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor40.visitLabel(label58);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor40.visitAnnotation("L1749641217", false);
        org.mockito.asm.Attribute attribute63 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor40.visitAttribute(attribute63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor62);
    }

    @Test
    public void test05359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05359");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter22 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor28 = classWriter22.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter35.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter35.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter60 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor61.visit(2, (int) (byte) 0, "", "", "", strArray70);
        classWriter35.visit((int) 'a', (int) '#', "", "", "hi!", strArray70);
        classWriter22.visit(7, (int) (byte) 0, "hi!", "", "", strArray70);
        org.mockito.asm.Attribute[] attributeArray75 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor15.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray70, (int) (short) 0, (java.lang.Object[]) attributeArray75);
        aSMifierClassVisitor1.visit((int) (byte) 10, 100, "", "hi!", "", strArray70);
        java.util.List list78 = aSMifierClassVisitor1.text;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(fieldVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(attributeArray75);
        org.junit.Assert.assertNotNull(list78);
    }

    @Test
    public void test05360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05360");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47, (-1), (int) (short) 256);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray47);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ClassReader classReader55 = new org.mockito.asm.ClassReader(byteArray47, (int) (short) 30313, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
    }

    @Test
    public void test05361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05361");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        java.util.List list24 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(13, (int) (short) 27745);
        java.util.List list29 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test05362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05362");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.println();
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((int) 'a');
        printWriter21.println("");
        printWriter21.flush();
        printWriter21.println("L1694926691");
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        printWriter30.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        java.util.List list44 = aSMifierMethodVisitor33.getText();
        printWriter30.println((java.lang.Object) list44);
        printWriter30.print((double) 10L);
        printWriter30.print(false);
        java.io.PrintWriter printWriter50 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter50);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor51.visit(2, (int) (byte) 0, "", "", "", strArray60);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierClassVisitor51.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierClassVisitor51.visitAnnotation("hi!", false);
        printWriter30.println((java.lang.Object) aSMifierClassVisitor51);
        char[] charArray71 = new char[] { 'a', '#' };
        printWriter30.println(charArray71);
        printWriter21.println(charArray71);
        printWriter1.println(charArray71);
        printWriter1.print(114);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, #]");
    }

    @Test
    public void test05363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05363");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label15 = null;
        int[] intArray21 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLineNumber((int) (byte) 10, label32);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label43 = null;
        int[] intArray45 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray46 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor37.visitLookupSwitchInsn(label43, intArray45, labelArray46);
        aSMifierMethodVisitor22.visitTableSwitchInsn((int) (byte) 0, 51966, label36, labelArray46);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label15, intArray21, labelArray46);
        aSMifierMethodVisitor0.visitMaxs(0, 9);
        aSMifierMethodVisitor0.visitInsn(11);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(2817);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2817");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1]");
        org.junit.Assert.assertNotNull(labelArray46);
    }

    @Test
    public void test05364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05364");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor22 = aSMifierClassVisitor1.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        aSMifierClassVisitor1.visitInnerClass("L2036836790", "L779142371", "L231657813", (int) (short) 0);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray55 = classWriter42.toByteArray();
        org.mockito.asm.ByteVector byteVector58 = byteVector38.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray55);
        long long61 = classReader59.readLong((int) (byte) 100);
        long long63 = classReader59.readLong((int) (byte) 10);
        java.lang.String[] strArray64 = classReader59.getInterfaces();
        int int66 = classReader59.readByte((int) '#');
        long long68 = classReader59.readLong(4);
        int int70 = classReader59.readInt((int) (short) 9);
        long long72 = classReader59.readLong((int) '4');
        long long74 = classReader59.readLong((int) '4');
        java.lang.String[] strArray75 = classReader59.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor76 = aSMifierClassVisitor1.visitMethod((int) (short) 30313, "L247779944", "L389484434", "L1576898305", strArray75);
        aSMifierClassVisitor1.visitSource("L674352908", "L1198406086");
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierClassVisitor1.visitAnnotation("L1375118326", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 8532477865490146625L + "'", long61 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 72057598333118569L + "'", long63 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 86 + "'", int66 == 86);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 590080L + "'", long68 == 590080L);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 151060480 + "'", int70 == 151060480);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 72068947506459235L + "'", long72 == 72068947506459235L);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 72068947506459235L + "'", long74 == 72068947506459235L);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(methodVisitor76);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test05365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05365");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L344842840", (int) (short) 9);
        aSMifierMethodVisitor0.visitMaxs((-1161953280), (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(47806, "L1849458793", "L1578022509", "L671482438");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test05366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05366");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        org.mockito.asm.Attribute[] attributeArray18 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter19 = printWriter6.format("L142696279", (java.lang.Object[]) attributeArray18);
        java.io.PrintWriter printWriter21 = printWriter6.append((java.lang.CharSequence) "L994489370");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        aSMifierClassVisitor22.visitSource("L779142371", "L267810866");
        aSMifierClassVisitor22.visitInnerClass("L1722902851", "L1297264300", "L1418438756", 25929);
        aSMifierClassVisitor22.visitEnd();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter38);
        java.io.PrintWriter printWriter43 = printWriter38.append('#');
        printWriter43.print((float) ' ');
        printWriter43.println('4');
        java.util.Locale locale48 = null;
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter57 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter57.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = classWriter57.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor69 = classWriter57.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray70 = classWriter57.toByteArray();
        org.mockito.asm.ByteVector byteVector73 = byteVector53.putByteArray(byteArray70, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader74 = new org.mockito.asm.ClassReader(byteArray70);
        long long76 = classReader74.readLong((int) (byte) 100);
        long long78 = classReader74.readLong((int) (byte) 10);
        java.lang.String[] strArray79 = classReader74.getInterfaces();
        int int81 = classReader74.readByte((int) '#');
        long long83 = classReader74.readLong(4);
        int int85 = classReader74.readInt((int) (short) 9);
        long long87 = classReader74.readLong((int) '4');
        java.lang.String str88 = classReader74.getSuperName();
        int int90 = classReader74.readByte((int) (byte) 1);
        org.mockito.asm.ClassWriter classWriter92 = new org.mockito.asm.ClassWriter(classReader74, 0);
        java.lang.String[] strArray93 = classReader74.getInterfaces();
        java.io.PrintWriter printWriter94 = printWriter43.format(locale48, "L1962766465", (java.lang.Object[]) strArray93);
        aSMifierClassVisitor22.visit(0, 114, "L142696279", "", "L1555790481", strArray93);
        aSMifierClassVisitor22.visitEnd();
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(attributeArray18);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor69);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 8532477865490146625L + "'", long76 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 72057598333118569L + "'", long78 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 86 + "'", int81 == 86);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 590080L + "'", long83 == 590080L);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 151060480 + "'", int85 == 151060480);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 72068947506459235L + "'", long87 == 72068947506459235L);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 254 + "'", int90 == 254);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(printWriter94);
    }

    @Test
    public void test05367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05367");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        boolean boolean20 = printWriter19.checkError();
        java.util.Locale locale21 = null;
        java.io.PrintWriter printWriter23 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter23);
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor37 = classWriter31.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter31.visitEnd();
        org.mockito.asm.ClassWriter classWriter45 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter45.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = classWriter45.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter45.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter45.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter45.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter70 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor71 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter70);
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor71.visit(2, (int) (byte) 0, "", "", "", strArray80);
        classWriter45.visit((int) 'a', (int) '#', "", "", "hi!", strArray80);
        classWriter31.visit(100, 100, "L326432149", "L1434348811", "", strArray80);
        aSMifierClassVisitor24.visit(590080, 256, "L994489370", "L237245406", "L1749641217", strArray80);
        java.io.PrintWriter printWriter85 = printWriter19.printf(locale21, "L1105153118", (java.lang.Object[]) strArray80);
        printWriter85.write(21);
        printWriter85.println(' ');
        printWriter85.println(0);
        printWriter85.close();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fieldVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter85);
    }

    @Test
    public void test05368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05368");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label16 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLineNumber(10, label16);
        org.mockito.asm.ByteVector byteVector19 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector23 = byteVector21.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter25 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter25.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = classWriter25.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor37 = classWriter25.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray38 = classWriter25.toByteArray();
        org.mockito.asm.ByteVector byteVector41 = byteVector21.putByteArray(byteArray38, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader42 = new org.mockito.asm.ClassReader(byteArray38);
        short short44 = classReader42.readShort(8);
        int int46 = classReader42.readInt(3);
        long long48 = classReader42.readLong((int) 'a');
        int int50 = classReader42.readInt((int) (byte) 100);
        byte[] byteArray51 = classReader42.b;
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray51);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray51);
        aSMifierMethodVisitor0.visitIincInsn(2305, 136);
        java.util.List list57 = aSMifierMethodVisitor0.text;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(257, "L555214098", "L1150302951", "L390977699");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 257");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(fieldVisitor37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertTrue("'" + short44 + "' != '" + (short) 9 + "'", short44 == (short) 9);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1107296256) + "'", int46 == (-1107296256));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 7298486125984967010L + "'", long48 == 7298486125984967010L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1986622313 + "'", int50 == 1986622313);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(list57);
    }

    @Test
    public void test05369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05369");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println(0.0d);
        printWriter1.print(false);
        printWriter1.println((float) 5);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write("L1305827832", (int) (byte) 0, 110);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 110");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05370");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.lang.Object[] objArray33 = null;
        java.io.PrintWriter printWriter34 = printWriter1.printf("", objArray33);
        printWriter34.println();
        printWriter34.println();
        printWriter34.println((float) 11);
        printWriter34.println(16777217);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter34);
    }

    @Test
    public void test05371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05371");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter9.println(1L);
        printWriter9.flush();
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter82 = printWriter9.append((java.lang.CharSequence) "L912991706", (int) (short) 27745, 104);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 104");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test05372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05372");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        java.util.List list47 = aSMifierMethodVisitor24.text;
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("L2113189186", (int) (byte) -1);
        aSMifierMethodVisitor24.visitMethodInsn((int) (short) 1, "L298663367", "L1788074348", "L821985585");
        aSMifierMethodVisitor24.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor24.visitParameterAnnotation(21, "L326432149", true);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter70 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter70.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = classWriter70.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor82 = classWriter70.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray83 = classWriter70.toByteArray();
        org.mockito.asm.ByteVector byteVector86 = byteVector66.putByteArray(byteArray83, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader87 = new org.mockito.asm.ClassReader(byteArray83);
        org.mockito.asm.ClassReader classReader88 = new org.mockito.asm.ClassReader(byteArray83);
        int int89 = classReader88.getAccess();
        java.lang.String[] strArray90 = classReader88.getInterfaces();
        java.lang.Object[] objArray92 = null;
        aSMifierMethodVisitor24.visitFrame(16777217, 114, (java.lang.Object[]) strArray90, 1699311222, objArray92);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitMethodInsn((int) (short) 22113, "L961424524", "L290807645", "L615939697");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(fieldVisitor82);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(strArray90);
    }

    @Test
    public void test05373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05373");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor19.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list31 = aSMifierMethodVisitor19.text;
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter35.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter35.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter60 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor61.visit(2, (int) (byte) 0, "", "", "", strArray70);
        classWriter35.visit((int) 'a', (int) '#', "", "", "hi!", strArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor74.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label80 = null;
        int[] intArray82 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor74.visitLookupSwitchInsn(label80, intArray82, labelArray83);
        aSMifierMethodVisitor19.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray70, (int) (short) 100, (java.lang.Object[]) labelArray83);
        classWriter1.visit((int) 'a', (int) (short) 30313, "hi!", "hi!", "", strArray70);
        int int88 = classWriter1.newUTF8("L2113189186");
        int int91 = classWriter1.newNameType("L192302291", "L1526656810");
        classWriter1.visitOuterClass("L1866436761", "L1808073265", "L801849928");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1]");
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 6 + "'", int88 == 6);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 9 + "'", int91 == 9);
    }

    @Test
    public void test05374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05374");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("hi!", true);
        aSMifierClassVisitor1.visitOuterClass("L2113189186", "L1441782014", "L96121905");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierClassVisitor1.visitAnnotation("L2018459260", true);
        aSMifierClassVisitor1.visitInnerClass("L1518460396", "L723576843", "L838424803", 114);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((-889275714));
        java.util.Locale locale41 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor45.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label51 = null;
        int[] intArray53 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label51, intArray53, labelArray54);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label62 = null;
        int[] intArray64 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray65 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label62, intArray64, labelArray65);
        aSMifierMethodVisitor43.visitLookupSwitchInsn(label44, intArray53, labelArray65);
        java.io.PrintWriter printWriter68 = printWriter38.format(locale41, "hi!", (java.lang.Object[]) labelArray65);
        printWriter38.println((int) (short) 1);
        java.lang.String[] strArray72 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter73 = printWriter38.format("hi!", (java.lang.Object[]) strArray72);
        java.lang.String[] strArray75 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter76 = printWriter38.printf("", (java.lang.Object[]) strArray75);
        org.mockito.asm.MethodVisitor methodVisitor77 = aSMifierClassVisitor1.visitMethod((int) 'a', "", "L1737005341", "L1962067231", strArray75);
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1]");
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1]");
        org.junit.Assert.assertNotNull(labelArray65);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(methodVisitor77);
    }

    @Test
    public void test05375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05375");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        boolean boolean89 = printWriter88.checkError();
        java.io.PrintWriter printWriter90 = new java.io.PrintWriter((java.io.Writer) printWriter88);
        printWriter88.println();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test05376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05376");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        java.io.PrintWriter printWriter89 = printWriter1.format(locale20, "hi!", (java.lang.Object[]) labelArray86);
        printWriter1.println(10L);
        printWriter1.print((long) 202);
        printWriter1.println((long) 18);
        printWriter1.print(true);
        printWriter1.flush();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test05377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05377");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitMethodInsn(19, "L799304101", "L96121905", "L834812042");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1890580259", (int) (short) 24940);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
    }

    @Test
    public void test05378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05378");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        java.io.PrintWriter printWriter89 = printWriter1.format(locale20, "hi!", (java.lang.Object[]) labelArray86);
        printWriter1.println((long) 1);
        printWriter1.print((double) 16779859);
        printWriter1.print((float) 7958832928307566177L);
        java.io.PrintWriter printWriter97 = printWriter1.append((java.lang.CharSequence) "L1363288052");
        printWriter1.println(true);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(printWriter97);
    }

    @Test
    public void test05379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05379");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 13, 254);
        aSMifierMethodVisitor0.visitMaxs(254, 118);
        java.lang.Class<?> wildcardClass18 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test05380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05380");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        java.util.List list30 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitAnnotation("L997959795", true);
        aSMifierMethodVisitor0.visitIincInsn(22113, 86);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test05381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05381");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L601661571");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("L2101667039", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor39.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor39.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor39.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor39.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label59 = new org.mockito.asm.Label();
        aSMifierMethodVisitor39.visitLabel(label59);
        java.util.List list61 = aSMifierMethodVisitor39.text;
        aSMifierMethodVisitor39.visitCode();
        aSMifierMethodVisitor39.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor39.visitAnnotationDefault();
        annotationVisitor37.visit("L1289682213", (java.lang.Object) annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test05382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05382");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotation("L96121905", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("L801849928", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor24.visitEnd();
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test05383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05383");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.println((int) (short) 256);
        printWriter51.print((long) 1);
        aSMifierMethodVisitor0.print(printWriter51);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter51, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter73 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter73.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = classWriter73.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor85 = classWriter73.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray86 = classWriter73.toByteArray();
        org.mockito.asm.ByteVector byteVector89 = byteVector69.putByteArray(byteArray86, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader90 = new org.mockito.asm.ClassReader(byteArray86);
        long long92 = classReader90.readLong((int) (byte) 100);
        long long94 = classReader90.readLong((int) (byte) 10);
        java.lang.String[] strArray95 = classReader90.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor96 = aSMifierClassVisitor61.visitMethod(16779859, "L96121905", "L454715523", "L1000949368", strArray95);
        aSMifierClassVisitor61.visitSource("L136336566", "");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(fieldVisitor85);
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 8532477865490146625L + "'", long92 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 72057598333118569L + "'", long94 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(methodVisitor96);
    }

    @Test
    public void test05384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05384");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor22.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray37 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor22.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray37, (int) 'a', (java.lang.Object[]) labelArray48);
        aSMifierMethodVisitor22.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor54.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor54.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor54.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label74 = new org.mockito.asm.Label();
        aSMifierMethodVisitor54.visitLabel(label74);
        aSMifierMethodVisitor22.visitLineNumber((int) '#', label74);
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label74);
        java.util.List list78 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1592299270", (-1107296256));
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(25, (int) (short) 0);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn(16779859, (int) 'a');
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(attributeArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test05385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05385");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("L1852655365", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor31.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor31.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor31.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor31.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label51 = new org.mockito.asm.Label();
        aSMifierMethodVisitor31.visitLabel(label51);
        aSMifierMethodVisitor31.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor55.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor55.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor55.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor55.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label75 = new org.mockito.asm.Label();
        aSMifierMethodVisitor55.visitLabel(label75);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor77.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor77.visitIincInsn(1, 0);
        org.mockito.asm.Label label89 = null;
        aSMifierMethodVisitor77.visitLabel(label89);
        label75.info = aSMifierMethodVisitor77;
        aSMifierMethodVisitor31.visitLineNumber(24942, label75);
        aSMifierMethodVisitor0.visitLineNumber(2, label75);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test05386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05386");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor28.visit(2, (int) (byte) 0, "", "", "", strArray37);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "L1434348811");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        aSMifierMethodVisitor0.visitFieldInsn(14, "L1434348811", "L61669440", "L1434348811");
        aSMifierMethodVisitor0.visitMaxs(29, 35);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test05387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05387");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter1.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = classWriter1.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter1.visitField(590080, "hi!", "L1434348811", "hi!", (java.lang.Object) 1L);
        classWriter1.visitEnd();
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter("hi!");
        printWriter20.print((-889275714));
        java.util.Locale locale23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label26, intArray35, labelArray47);
        java.io.PrintWriter printWriter50 = printWriter20.format(locale23, "hi!", (java.lang.Object[]) labelArray47);
        printWriter20.println((int) (short) 1);
        int int53 = classWriter1.newConst((java.lang.Object) (short) 1);
        int int57 = classWriter1.newField("L1461066057", "L1297264300", "L2112385861");
        int int59 = classWriter1.newUTF8("L644390938");
        int int64 = classWriter1.newMethod("", "L1761736395", "L928755548", false);
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7 + "'", int53 == 7);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 13 + "'", int57 == 13);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 14 + "'", int59 == 14);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 19 + "'", int64 == 19);
    }

    @Test
    public void test05388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05388");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), 9);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor55.visitLabel(label61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor64.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor64.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor64.visitLineNumber((int) (byte) 10, label74);
        aSMifierMethodVisitor64.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor64.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label85 = new org.mockito.asm.Label();
        aSMifierMethodVisitor64.visitLineNumber(4, label85);
        aSMifierMethodVisitor55.visitLineNumber((int) (short) 10, label85);
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label85);
        java.lang.String str89 = label85.toString();
        java.lang.Object obj90 = label85.info;
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L1719894901" + "'", str89, "L1719894901");
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test05389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05389");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor0.visitInsn(8);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitCode();
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label11, label12, label13, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor9.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray33 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        aSMifierMethodVisitor18.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray33, (int) 'a', (java.lang.Object[]) labelArray44);
        aSMifierMethodVisitor18.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor50.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor50.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor50.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLabel(label70);
        aSMifierMethodVisitor18.visitLineNumber((int) '#', label70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor73.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor73.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list85 = aSMifierMethodVisitor73.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor86 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor86);
        aSMifierMethodVisitor73.visitVarInsn(8, 25);
        label70.info = 25;
        aSMifierMethodVisitor9.visitLineNumber((int) '4', label70);
        aSMifierMethodVisitor0.visitLabel(label70);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L128274680", 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(attributeArray33);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(list85);
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test05390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05390");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        aSMifierMethodVisitor0.visitIincInsn(5, 202);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor30.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor30.visitLineNumber((int) (byte) 10, label40);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor30.visitAnnotation("hi!", true);
        aSMifierMethodVisitor30.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor30.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor30.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor30.visitParameterAnnotation((int) (byte) 100, "L399637105", true);
        aSMifierMethodVisitor30.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor58.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor58.visitLineNumber((int) (byte) 10, label68);
        aSMifierMethodVisitor58.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor58.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label79 = new org.mockito.asm.Label();
        aSMifierMethodVisitor58.visitLineNumber(4, label79);
        java.lang.Object obj81 = label79.info;
        java.lang.Object obj82 = label79.info;
        aSMifierMethodVisitor30.visitLineNumber(11, label79);
        aSMifierMethodVisitor0.visitLabel(label79);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor0.visitParameterAnnotation(34, "L1936863555", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = annotationVisitor88.visitAnnotation("L1009311081", "L298663367");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test05391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05391");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray30 = classWriter17.toByteArray();
        org.mockito.asm.ByteVector byteVector33 = byteVector13.putByteArray(byteArray30, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray30);
        long long36 = classReader34.readLong((int) (byte) 100);
        long long38 = classReader34.readLong((int) (byte) 10);
        java.lang.String[] strArray39 = classReader34.getInterfaces();
        aSMifierClassVisitor4.visit((int) (byte) 1, (-1), "", "hi!", "", strArray39);
        aSMifierClassVisitor4.visitOuterClass("L1434348811", "L326432149", "L994489370");
        aSMifierClassVisitor4.visitInnerClass("L1669980843", "L61669440", "L1722902851", 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor4.visitAnnotation("L1508691945", false);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 8532477865490146625L + "'", long36 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 72057598333118569L + "'", long38 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test05392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05392");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor29.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor29.visitLabel(label35);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label64 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label71 = null;
        int[] intArray73 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor65.visitLookupSwitchInsn(label71, intArray73, labelArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor76 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor76.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label82 = null;
        int[] intArray84 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray85 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor76.visitLookupSwitchInsn(label82, intArray84, labelArray85);
        aSMifierMethodVisitor63.visitLookupSwitchInsn(label64, intArray73, labelArray85);
        aSMifierMethodVisitor29.visitLookupSwitchInsn(label37, intArray48, labelArray85);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor29);
        aSMifierMethodVisitor29.visitMaxs((-1), 30313);
        aSMifierMethodVisitor29.visitMaxs(118, (int) (short) 872);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1]");
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[1]");
        org.junit.Assert.assertNotNull(labelArray85);
    }

    @Test
    public void test05393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05393");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, 0);
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter(classReader24, (int) (short) 9);
        classWriter35.visitInnerClass("L994489370", "L326432149", "hi!", (int) (byte) -1);
        classWriter35.visitSource("L61669440", "hi!");
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        int int59 = classWriter35.newConst((java.lang.Object) "");
        byte[] byteArray60 = classWriter35.toByteArray();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 14 + "'", int59 == 14);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 16, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 10, 76, 57, 57, 52, 52, 56, 57, 51, 55, 48, 7, 0, 9, 1, 0, 10, 76, 51, 50, 54, 52, 51, 50, 49, 52, 57, 7, 0, 11, 1, 0, 9, 76, 54, 49, 54, 54, 57, 52, 52, 48, 8, 0, 1, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 13, 0, 7, 0, 0, 0, 3, 104, 105, 33, 0, 15, 0, 0, 0, 10, 0, 1, 0, 10, 0, 12, 0, 2, -1, -1]");
    }

    @Test
    public void test05394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05394");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        printWriter21.print((double) (short) 30313);
        printWriter21.print((long) 10);
        printWriter21.print(true);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        boolean boolean66 = printWriter65.checkError();
        java.io.PrintWriter printWriter68 = printWriter65.append('a');
        printWriter68.println((int) (short) 872);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter74 = printWriter68.append((java.lang.CharSequence) "L1479479862", 1702035712, (int) (short) 257);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 257");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(printWriter68);
    }

    @Test
    public void test05395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05395");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(186);
        org.mockito.asm.AnnotationVisitor annotationVisitor4 = classWriter1.visitAnnotation("L559428047", false);
        classWriter1.visitOuterClass("L2113189186", "L1924143761", "L1957730982");
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter14);
        printWriter14.print(0.0d);
        printWriter14.print((float) (-3819410108757049344L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter14);
        aSMifierClassVisitor22.visitInnerClass("L1009311081", "L399637105", "L1321861150", 115);
        org.mockito.asm.FieldVisitor fieldVisitor28 = classWriter1.visitField(203, "L911973346", "L744095971", "L1000949368", (java.lang.Object) "L1009311081");
        org.mockito.asm.Attribute attribute29 = null;
        // The following exception was thrown during execution in test generation
        try {
            classWriter1.visitAttribute(attribute29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor4);
        org.junit.Assert.assertNotNull(fieldVisitor28);
    }

    @Test
    public void test05396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05396");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((int) 'a');
        printWriter28.println("");
        java.io.PrintWriter printWriter33 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        aSMifierClassVisitor34.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierClassVisitor34.visitAnnotation("", false);
        printWriter28.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor44 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        java.io.PrintWriter printWriter46 = printWriter28.append(' ');
        printWriter28.println(true);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        char[] charArray57 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter50.print(charArray57);
        printWriter28.print(charArray57);
        printWriter28.println(true);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter((java.io.Writer) printWriter28, false);
        aSMifierMethodVisitor14.print(printWriter63);
        aSMifierMethodVisitor14.visitMaxs(332, (int) 'a');
        org.mockito.asm.Attribute attribute68 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor14.visitAttribute(attribute68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05397");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println("L1461066057");
        boolean boolean27 = printWriter1.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println('#');
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test05398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05398");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        printWriter31.println((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor59.visitCode();
        aSMifierMethodVisitor59.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label69, label70, label71, "hi!");
        aSMifierMethodVisitor59.visitIntInsn(2, (int) (short) -1);
        aSMifierMethodVisitor59.visitMethodInsn(0, "hi!", "", "L61669440");
        aSMifierMethodVisitor59.visitMaxs((int) (byte) 0, 16777217);
        printWriter31.println((java.lang.Object) aSMifierMethodVisitor59);
        aSMifierMethodVisitor59.visitIincInsn(8, 0);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test05399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05399");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("L454715523", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label26, intArray35, labelArray47);
        aSMifierMethodVisitor25.visitFieldInsn((int) (short) 100, "", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor55 = aSMifierClassVisitor1.visitField(5, "L1808073265", "L2112385861", "L1200350890", (java.lang.Object) aSMifierMethodVisitor25);
        aSMifierClassVisitor1.visitInnerClass("L614568462", "L1216476214", "L1808073265", 65210);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierClassVisitor1.visitAnnotation("L104358438", true);
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test05400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05400");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(3841, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
    }

    @Test
    public void test05401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05401");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(2, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 2817);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIntInsn((int) '#', 15);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test05402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05402");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1715840275", 24942);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "L967033583");
        aSMifierMethodVisitor0.visitFieldInsn(11, "L61669440", "L1962067231", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test05403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05403");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        printWriter13.println(0.0d);
        printWriter13.print(false);
        aSMifierClassVisitor1.print(printWriter13);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor1.visitAnnotation("L1669980843", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierClassVisitor1.visitAnnotation("L1706222126", false);
        annotationVisitor27.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test05404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05404");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, 0);
        int int34 = classReader24.getAccess();
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("L1533650022");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((int) 'a');
        printWriter39.println("");
        printWriter39.print((float) 590080L);
        printWriter39.write(1);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        printWriter49.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor52 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter49);
        printWriter49.print(0.0d);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        char[] charArray63 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter56.print(charArray63);
        printWriter49.write(charArray63);
        printWriter39.print(charArray63);
        printWriter37.print(charArray63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = classReader24.readUTF8(27, charArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 17263");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05405");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        byte[] byteArray39 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray39);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((int) 'a');
        printWriter42.println("");
        printWriter42.print((float) 590080L);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.Writer) printWriter42, true);
        printWriter42.print((float) (short) 30313);
        java.util.Locale locale53 = null;
        java.lang.Object[] objArray55 = null;
        java.io.PrintWriter printWriter56 = printWriter42.printf(locale53, "", objArray55);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter42);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter57);
        classReader40.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor58, (int) '#');
        java.lang.String str61 = classReader40.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            long long63 = classReader40.readLong(24942);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test05406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05406");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        printWriter19.print('#');
        printWriter19.print((float) 12);
        printWriter19.println(false);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test05407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05407");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitParameterAnnotation(4, "L365115101", true);
        java.util.List list54 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(list54);
    }

    @Test
    public void test05408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05408");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = fieldVisitor39.visitAnnotation("L1532047758", true);
        org.mockito.asm.Attribute attribute43 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor39.visitAttribute(attribute43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test05409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05409");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        java.io.PrintWriter printWriter94 = printWriter1.append((java.lang.CharSequence) "L994489370", 5, (int) (byte) 10);
        printWriter1.println((float) 1L);
        printWriter1.println(true);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter94);
    }

    @Test
    public void test05410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05410");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L323026369");
        java.io.PrintWriter printWriter3 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        aSMifierClassVisitor4.visitSource("", "hi!");
        java.io.PrintWriter printWriter13 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor14.visit(2, (int) (byte) 0, "", "", "", strArray23);
        aSMifierClassVisitor4.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray23);
        java.util.List list26 = aSMifierClassVisitor4.text;
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter32);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor35.visitAnnotation("", false);
        aSMifierClassVisitor35.visitEnd();
        aSMifierClassVisitor35.visitSource("L1749641217", "L994489370");
        aSMifierClassVisitor35.visitOuterClass("L137501116", "L2036836790", "L1230702653");
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("L1808073265");
        printWriter52.print((double) 186);
        java.util.Locale locale55 = null;
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter64.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = classWriter64.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter64.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray77 = classWriter64.toByteArray();
        org.mockito.asm.ByteVector byteVector80 = byteVector60.putByteArray(byteArray77, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader81 = new org.mockito.asm.ClassReader(byteArray77);
        long long83 = classReader81.readLong((int) (byte) 100);
        long long85 = classReader81.readLong((int) (byte) 10);
        java.lang.String[] strArray86 = classReader81.getInterfaces();
        int int88 = classReader81.readByte((int) '#');
        long long90 = classReader81.readLong(4);
        int int91 = classReader81.header;
        byte[] byteArray92 = classReader81.b;
        java.lang.String[] strArray93 = classReader81.getInterfaces();
        java.io.PrintWriter printWriter94 = printWriter52.printf(locale55, "L1103251756", (java.lang.Object[]) strArray93);
        org.mockito.asm.MethodVisitor methodVisitor95 = aSMifierClassVisitor35.visitMethod((int) (short) 30313, "L394842588", "L1085773562", "L2072201856", strArray93);
        org.mockito.asm.MethodVisitor methodVisitor96 = aSMifierClassVisitor4.visitMethod(0, "L1675715472", "L1228713414", "L1453527686", strArray93);
        java.io.PrintWriter printWriter97 = printWriter1.format("L1012945192", (java.lang.Object[]) strArray93);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 8532477865490146625L + "'", long83 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 72057598333118569L + "'", long85 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 86 + "'", int88 == 86);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 590080L + "'", long90 == 590080L);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 118 + "'", int91 == 118);
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(printWriter94);
        org.junit.Assert.assertNotNull(methodVisitor95);
        org.junit.Assert.assertNotNull(methodVisitor96);
        org.junit.Assert.assertNotNull(printWriter97);
    }

    @Test
    public void test05411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05411");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        printWriter1.println('a');
        printWriter1.print("L1000949368");
        printWriter1.println(' ');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter25.close();
        boolean boolean27 = printWriter25.checkError();
        java.io.PrintWriter printWriter29 = printWriter25.append('a');
        java.io.PrintWriter printWriter31 = printWriter29.append((java.lang.CharSequence) "L1592299270");
        printWriter31.println((float) 8386111977330471680L);
        java.util.Locale locale34 = null;
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter43.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter43.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor55 = classWriter43.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray56 = classWriter43.toByteArray();
        org.mockito.asm.ByteVector byteVector59 = byteVector39.putByteArray(byteArray56, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader60 = new org.mockito.asm.ClassReader(byteArray56);
        long long62 = classReader60.readLong((int) (byte) 100);
        long long64 = classReader60.readLong((int) (byte) 10);
        short short66 = classReader60.readShort(1);
        java.lang.String[] strArray67 = classReader60.getInterfaces();
        java.lang.String[] strArray68 = classReader60.getInterfaces();
        java.io.PrintWriter printWriter69 = printWriter31.format(locale34, "L55453359", (java.lang.Object[]) strArray68);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 8532477865490146625L + "'", long62 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 72057598333118569L + "'", long64 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short66 + "' != '" + (short) -326 + "'", short66 == (short) -326);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(printWriter69);
    }

    @Test
    public void test05412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05412");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor10.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor10.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putByte(2);
        annotationVisitor22.visit("", (java.lang.Object) byteVector25);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector34 = byteVector25.putByte(3);
        org.mockito.asm.ByteVector byteVector36 = byteVector25.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader63 = new org.mockito.asm.ClassReader(byteArray57);
        byte[] byteArray64 = classReader63.b;
        org.mockito.asm.ByteVector byteVector67 = byteVector36.putByteArray(byteArray64, 0, 5);
        org.mockito.asm.ByteVector byteVector70 = byteVector5.putByteArray(byteArray64, (int) '#', 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putShort(0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putInt(151060480);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putShort((int) (short) -13570);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putUTF8("L1855853747");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
    }

    @Test
    public void test05413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05413");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        org.mockito.asm.ClassReader classReader25 = new org.mockito.asm.ClassReader(byteArray20);
        org.mockito.asm.ClassReader classReader26 = new org.mockito.asm.ClassReader(byteArray20);
        org.mockito.asm.ClassWriter classWriter28 = new org.mockito.asm.ClassWriter(classReader26, (int) (short) 10);
        int int30 = classReader26.readUnsignedShort(25);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((-889275714));
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        java.io.PrintWriter printWriter63 = printWriter33.format(locale36, "hi!", (java.lang.Object[]) labelArray60);
        printWriter33.println(8532477865490146625L);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        printWriter67.print(0.0d);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("hi!");
        char[] charArray81 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter74.print(charArray81);
        printWriter67.write(charArray81);
        printWriter33.print(charArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = classReader26.readConst((int) (short) -326, charArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -326");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 13 + "'", int30 == 13);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05414");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putByte(6);
        org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter((int) 'a');
        byte[] byteArray14 = classWriter13.toByteArray();
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putByteArray(byteArray14, 5, (int) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putByte(2);
        annotationVisitor30.visit("", (java.lang.Object) byteVector33);
        org.mockito.asm.ByteVector byteVector40 = byteVector33.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector42 = byteVector33.putByte(3);
        org.mockito.asm.ByteVector byteVector44 = byteVector33.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter52.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = classWriter52.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter52.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray65 = classWriter52.toByteArray();
        org.mockito.asm.ByteVector byteVector68 = byteVector48.putByteArray(byteArray65, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader69 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray65);
        byte[] byteArray72 = classReader71.b;
        org.mockito.asm.ByteVector byteVector75 = byteVector44.putByteArray(byteArray72, 0, 5);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ByteVector byteVector79 = byteVector17.putByteArray(byteArray72, 25, (int) (short) 0);
        org.mockito.asm.ClassReader classReader80 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ClassReader classReader81 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ClassWriter classWriter83 = new org.mockito.asm.ClassWriter(100);
        classWriter83.visitInnerClass("L836986691", "L2076399201", "L614568462", 65210);
        classWriter83.visitSource("", "L1556845882");
        // The following exception was thrown during execution in test generation
        try {
            classReader81.accept((org.mockito.asm.ClassVisitor) classWriter83, (int) (short) 25970);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector79);
    }

    @Test
    public void test05415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05415");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitFieldInsn(18, "L601661571", "L799304101", "L1845262982");
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 30313);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((int) (short) -13570, "L1884432389");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -13570");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test05416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05416");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        java.lang.Class<?> wildcardClass24 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test05417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05417");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 1, 7);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotation("L799304101", true);
        aSMifierMethodVisitor0.visitMaxs(1, 3);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor0.visitParameterAnnotation(27, "L939261813", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor51.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor51.visitAnnotation("hi!", false);
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        aSMifierMethodVisitor51.visitLineNumber(10, label67);
        java.lang.String str69 = label67.toString();
        aSMifierMethodVisitor0.visitJumpInsn(34, label67);
        aSMifierMethodVisitor0.visitInsn(18);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (short) 28275, 111);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 28275");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor65);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L355962968" + "'", str69, "L355962968");
    }

    @Test
    public void test05418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05418");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Attribute attribute34 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test05419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05419");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1930290201", 22);
        aSMifierMethodVisitor0.visitMaxs((-21316096), 256);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(1986622313, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
    }

    @Test
    public void test05420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05420");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(134);
        java.util.List list31 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(list31);
    }

    @Test
    public void test05421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05421");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray53 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor38.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray53, (int) 'a', (java.lang.Object[]) labelArray64);
        aSMifierMethodVisitor23.visitTableSwitchInsn(8, (int) (byte) 1, label37, labelArray64);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-889275714), (int) '#', label22, labelArray64);
        aSMifierMethodVisitor0.visitIincInsn(65210, 13);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor0.visitAnnotation("L1968448721", true);
        annotationVisitor74.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(attributeArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test05422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05422");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("hi!", true);
        aSMifierClassVisitor1.visitSource("L1715840275", "L2113189186");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test05423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05423");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L2018459260", (int) (short) 0);
        aSMifierMethodVisitor0.visitIincInsn(118, (int) (short) 29793);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(1449225333, "L1960608380");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1449225333");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test05424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05424");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        boolean boolean4 = printWriter1.checkError();
        printWriter1.print((double) 14);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        printWriter8.print((int) 'a');
        printWriter8.println("");
        java.io.PrintWriter printWriter13 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        aSMifierClassVisitor14.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor14.visitAnnotation("", false);
        printWriter8.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        java.io.PrintWriter printWriter26 = printWriter8.append(' ');
        printWriter8.println(true);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("hi!");
        char[] charArray37 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter30.print(charArray37);
        printWriter8.print(charArray37);
        printWriter1.write(charArray37);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05425");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        printWriter1.print(0.0d);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        boolean boolean8 = printWriter1.checkError();
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter("L459227517");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor13 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter12);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        printWriter15.print(0.0d);
        printWriter15.print(9);
        printWriter15.println('4');
        aSMifierClassVisitor13.print(printWriter15);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierClassVisitor13.visitAnnotation("L598840791", false);
        printWriter1.print((java.lang.Object) annotationVisitor28);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test05426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05426");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = annotationVisitor13.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor13.visitAnnotation("", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor20.visitParameterAnnotation(25929, "L799304101", false);
        aSMifierMethodVisitor20.visitEnd();
        annotationVisitor13.visit("L1009311081", (java.lang.Object) aSMifierMethodVisitor20);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor20.visitParameterAnnotation(50331648, "L1276244777", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor20.visitParameterAnnotation((int) (short) 10, "L1492698303", true);
        annotationVisitor40.visitEnum("L1951373725", "L1438609464", "L2032501860");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test05427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05427");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(6, "hi!", false);
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) 'a');
        aSMifierMethodVisitor30.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label45 = null;
        int[] intArray51 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor52.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor52.visitLineNumber((int) (byte) 10, label62);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor67.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label73 = null;
        int[] intArray75 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor67.visitLookupSwitchInsn(label73, intArray75, labelArray76);
        aSMifierMethodVisitor52.visitTableSwitchInsn((int) (byte) 0, 51966, label66, labelArray76);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label45, intArray51, labelArray76);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 9, 254, label29, labelArray76);
        aSMifierMethodVisitor0.visitFieldInsn(0, "L1931374313", "L2113189186", "L1105153118");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1035698796", 47806);
        aSMifierMethodVisitor0.visitTypeInsn(13, "L78149900");
        aSMifierMethodVisitor0.visitMethodInsn(3, "L1549311922", "L128274680", "L1297264300");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1]");
        org.junit.Assert.assertNotNull(labelArray76);
    }

    @Test
    public void test05428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05428");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        aSMifierMethodVisitor35.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label50 = null;
        int[] intArray56 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor57.visitLineNumber((int) (byte) 10, label67);
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor72.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label78 = null;
        int[] intArray80 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor72.visitLookupSwitchInsn(label78, intArray80, labelArray81);
        aSMifierMethodVisitor57.visitTableSwitchInsn((int) (byte) 0, 51966, label71, labelArray81);
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label50, intArray56, labelArray81);
        java.io.PrintWriter printWriter85 = printWriter1.printf("L61669440", (java.lang.Object[]) labelArray81);
        java.io.PrintWriter printWriter87 = printWriter85.append('#');
        printWriter85.println((double) 16842765);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1]");
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test05429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05429");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.println((int) (short) 256);
        printWriter51.print((long) 1);
        aSMifierMethodVisitor0.print(printWriter51);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor60.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor60.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor60.visitAnnotation("hi!", false);
        org.mockito.asm.Label label76 = new org.mockito.asm.Label();
        aSMifierMethodVisitor60.visitLineNumber(10, label76);
        org.mockito.asm.ByteVector byteVector79 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector83 = byteVector79.putByte(2);
        org.mockito.asm.ByteVector byteVector85 = byteVector79.putLong((long) 7);
        label76.info = byteVector79;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -326, label76);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "L852338205", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = annotationVisitor91.visitAnnotation("L838424803", "L48323983");
        annotationVisitor94.visitEnd();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor74);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(annotationVisitor91);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test05430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05430");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLineNumber(4, label21);
        java.util.List list23 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Attribute attribute25 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list23);
    }

    @Test
    public void test05431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05431");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor49.visitLineNumber((int) (byte) 10, label59);
        aSMifierMethodVisitor49.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor49.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        aSMifierMethodVisitor49.visitLineNumber(4, label70);
        aSMifierMethodVisitor0.visitLineNumber((-1), label70);
        java.util.List list73 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(list73);
    }

    @Test
    public void test05432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05432");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L666971223", (int) ' ');
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "L1628955470");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L281240074", 18);
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter36.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = classWriter36.visitAnnotation("hi!", false);
        int int45 = classWriter36.newNameType("L1434348811", "L1434348811");
        int int50 = classWriter36.newMethod("", "L1715840275", "", true);
        classWriter36.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = classWriter36.visitAnnotation("L801849928", true);
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter67 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter67.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = classWriter67.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor79 = classWriter67.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray80 = classWriter67.toByteArray();
        org.mockito.asm.ByteVector byteVector83 = byteVector63.putByteArray(byteArray80, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader84 = new org.mockito.asm.ClassReader(byteArray80);
        long long86 = classReader84.readLong((int) (byte) 100);
        int int88 = classReader84.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray89 = classReader84.getInterfaces();
        org.mockito.asm.ClassWriter classWriter91 = new org.mockito.asm.ClassWriter(classReader84, 2);
        int int92 = classReader84.getAccess();
        java.lang.String[] strArray93 = classReader84.getInterfaces();
        classWriter36.visit((int) (byte) 10, 151060480, "L1431375207", "L1259496549", "L615340472", strArray93);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L615340472");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 8 + "'", int50 == 8);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(fieldVisitor79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 8532477865490146625L + "'", long86 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 51966 + "'", int88 == 51966);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(strArray93);
    }

    @Test
    public void test05433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05433");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(6, 6);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierClassVisitor20.visitAnnotation("", false);
        aSMifierClassVisitor20.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor43.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor43.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor43.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list59 = aSMifierMethodVisitor43.text;
        org.mockito.asm.FieldVisitor fieldVisitor60 = aSMifierClassVisitor20.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor43);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor43.visitAnnotationDefault();
        aSMifierMethodVisitor43.visitInsn((int) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitCode();
        aSMifierMethodVisitor65.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor65.visitEnd();
        aSMifierMethodVisitor65.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label75 = new org.mockito.asm.Label();
        aSMifierMethodVisitor65.visitJumpInsn(25, label75);
        aSMifierMethodVisitor43.visitJumpInsn(0, label75);
        aSMifierMethodVisitor0.visitJumpInsn(0, label75);
        java.util.List list79 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(list79);
    }

    @Test
    public void test05434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05434");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation(16779859, "L2113189186", false);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray55 = classWriter42.toByteArray();
        org.mockito.asm.ByteVector byteVector58 = byteVector38.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray55);
        long long61 = classReader59.readLong((int) (byte) 100);
        long long63 = classReader59.readLong((int) (byte) 10);
        java.lang.String[] strArray64 = classReader59.getInterfaces();
        int int66 = classReader59.readInt(0);
        int int67 = classReader59.header;
        java.lang.String[] strArray68 = classReader59.getInterfaces();
        int int69 = classReader59.header;
        java.lang.String[] strArray70 = classReader59.getInterfaces();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classReader59);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 8532477865490146625L + "'", long61 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 72057598333118569L + "'", long63 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-889275714) + "'", int66 == (-889275714));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 118 + "'", int67 == 118);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 118 + "'", int69 == 118);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test05435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05435");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter34 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor35.visit(2, (int) (byte) 0, "", "", "", strArray44);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor35.visitAnnotation("", false);
        aSMifierClassVisitor35.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor58.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor58.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor58.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list74 = aSMifierMethodVisitor58.text;
        org.mockito.asm.FieldVisitor fieldVisitor75 = aSMifierClassVisitor35.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor58);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor58.visitAnnotationDefault();
        aSMifierMethodVisitor58.visitInsn((int) (short) 1);
        java.util.List list79 = aSMifierMethodVisitor58.getText();
        printWriter31.print((java.lang.Object) aSMifierMethodVisitor58);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor58.visitVarInsn((-21316096), 2305);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -21316096");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(fieldVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(list79);
    }

    @Test
    public void test05436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05436");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label16, label17, 8);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter51.print((int) '4');
        aSMifierMethodVisitor0.print(printWriter51);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 27745, "L1808073265", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitAnnotation("L845352536", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1855853747", 20);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(1853030400);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1853030400");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test05437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05437");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray54 = classReader53.b;
        org.mockito.asm.ByteVector byteVector57 = byteVector26.putByteArray(byteArray54, 0, 5);
        org.mockito.asm.ClassReader classReader60 = new org.mockito.asm.ClassReader(byteArray54, 0, (int) (short) -326);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray54);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("L459227517");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        // The following exception was thrown during execution in test generation
        try {
            classReader61.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor64, 66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector57);
    }

    @Test
    public void test05438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05438");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(0, 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitParameterAnnotation(6, "L1669980843", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation(110, "L845352536", true);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test05439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05439");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray30 = classWriter17.toByteArray();
        org.mockito.asm.ByteVector byteVector33 = byteVector13.putByteArray(byteArray30, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray30);
        long long36 = classReader34.readLong((int) (byte) 100);
        long long38 = classReader34.readLong((int) (byte) 10);
        java.lang.String[] strArray39 = classReader34.getInterfaces();
        aSMifierClassVisitor4.visit((int) (byte) 1, (-1), "", "hi!", "", strArray39);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.TYPES;
        org.mockito.asm.MethodVisitor methodVisitor46 = aSMifierClassVisitor4.visitMethod((int) (short) 0, "L459227517", "L1715840275", "L96121905", strArray45);
        aSMifierClassVisitor4.visitOuterClass("L1321861150", "L173581797", "L990238104");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 8532477865490146625L + "'", long36 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 72057598333118569L + "'", long38 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodVisitor46);
    }

    @Test
    public void test05440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05440");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        printWriter1.print((float) 25929);
        printWriter1.println((float) (-1161953280));
        printWriter1.println(2378745028181819648L);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test05441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05441");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitIntInsn(0, 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor16.visitLineNumber((int) (byte) 10, label26);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor16.visitTableSwitchInsn((int) (byte) 0, 51966, label30, labelArray40);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor16.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor46.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor46.visitLineNumber((int) (byte) 10, label56);
        aSMifierMethodVisitor46.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor46.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        aSMifierMethodVisitor46.visitLineNumber(4, label67);
        aSMifierMethodVisitor16.visitLabel(label67);
        java.lang.Object obj70 = label67.info;
        aSMifierMethodVisitor0.visitLineNumber(151060480, label67);
        aSMifierMethodVisitor0.visitIincInsn(1853118049, 28);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(1536, "L290335602");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1536");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test05442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05442");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation(3, "L61669440", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1418438756", (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        java.lang.Object obj39 = label38.info;
        java.io.PrintWriter printWriter40 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        aSMifierClassVisitor41.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor41.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor41.visitAnnotation("L1434348811", true);
        aSMifierClassVisitor41.visitSource("L994489370", "");
        aSMifierClassVisitor41.visitOuterClass("L1284973471", "L394842588", "L1103251756");
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor41.visitAnnotation("L1930290201", true);
        label38.info = "L1930290201";
        aSMifierMethodVisitor0.visitLabel(label38);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor62);
    }

    @Test
    public void test05443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05443");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println("hi!");
        printWriter1.close();
        java.io.PrintWriter printWriter6 = printWriter1.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        printWriter6.print((int) '4');
        printWriter6.print(32);
        printWriter6.write("L1305827832", 1702035712, (int) (short) 30313);
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test05444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05444");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", 151060480);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((-889275714));
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label29 = null;
        int[] intArray31 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor23.visitLookupSwitchInsn(label29, intArray31, labelArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor21.visitLookupSwitchInsn(label22, intArray31, labelArray43);
        java.io.PrintWriter printWriter46 = printWriter16.format(locale19, "hi!", (java.lang.Object[]) labelArray43);
        printWriter46.print((int) '4');
        boolean boolean49 = printWriter46.checkError();
        printWriter46.print("L1105153118");
        printWriter46.println((float) 57174305);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter61 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter61.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = classWriter61.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor73 = classWriter61.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray74 = classWriter61.toByteArray();
        org.mockito.asm.ByteVector byteVector77 = byteVector57.putByteArray(byteArray74, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader78 = new org.mockito.asm.ClassReader(byteArray74);
        long long80 = classReader78.readLong((int) (byte) 100);
        long long82 = classReader78.readLong((int) (byte) 10);
        int int84 = classReader78.readUnsignedShort(0);
        int int86 = classReader78.readUnsignedShort(3);
        byte[] byteArray87 = classReader78.b;
        printWriter46.println((java.lang.Object) byteArray87);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter46);
        printWriter46.print((float) (short) 24940);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 8532477865490146625L + "'", long80 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 72057598333118569L + "'", long82 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 51966 + "'", int84 == 51966);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 48640 + "'", int86 == 48640);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test05445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05445");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = annotationVisitor13.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor13.visitAnnotation("", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor20.visitParameterAnnotation(25929, "L799304101", false);
        aSMifierMethodVisitor20.visitEnd();
        annotationVisitor13.visit("L1009311081", (java.lang.Object) aSMifierMethodVisitor20);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor20.visitParameterAnnotation(50331648, "L1276244777", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor20.visitParameterAnnotation((int) (short) 10, "L1492698303", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor20.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor20.visitParameterAnnotation(16779859, "L1454236833", false);
        aSMifierMethodVisitor20.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor20.visitTypeInsn((int) (short) 257, "L1853312656");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 257");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test05446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05446");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.println((int) (short) 256);
        printWriter51.print((long) 1);
        aSMifierMethodVisitor0.print(printWriter51);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter51, false);
        printWriter60.println('4');
        printWriter60.println((float) 118);
        java.io.PrintWriter printWriter66 = printWriter60.append('4');
        printWriter66.close();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(printWriter66);
    }

    @Test
    public void test05447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05447");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter23.println((int) (byte) -1);
        printWriter23.println(true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test05448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05448");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1163352429", 47806);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitParameterAnnotation(142, "L1174303418", false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test05449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05449");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print(true);
        java.util.Locale locale45 = null;
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        char[] charArray55 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter48.print(charArray55);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        aSMifierClassVisitor57.visitEnd();
        aSMifierClassVisitor57.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor57.visitAnnotation("L326432149", false);
        java.io.PrintWriter printWriter68 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter68);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor69.visit(2, (int) (byte) 0, "", "", "", strArray78);
        aSMifierClassVisitor57.visit(12, (int) (short) 0, "L1555790481", "L2101667039", "L137501116", strArray78);
        java.io.PrintWriter printWriter81 = printWriter31.printf(locale45, "L1284973471", (java.lang.Object[]) strArray78);
        printWriter81.write("L1005725320");
        printWriter81.println();
        printWriter81.print(1699311222);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test05450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05450");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierClassVisitor1.visitAnnotation("L666971223", true);
        aSMifierClassVisitor1.visitSource("L389484434", "L231657813");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test05451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05451");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L994489370");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        printWriter40.close();
        printWriter40.print((double) 590080L);
        printWriter40.write(18);
        printWriter40.close();
        java.lang.CharSequence charSequence47 = null;
        java.io.PrintWriter printWriter48 = printWriter40.append(charSequence47);
        printWriter48.println((long) 101);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter48);
    }

    @Test
    public void test05452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05452");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), 9);
        aSMifierMethodVisitor0.visitIincInsn(100, 6);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1715840275", 590080);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1847055122", 142);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitParameterAnnotation(1986622313, "L290335602", true);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test05453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05453");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor34.visitSource("L704540978", "L2036836790");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test05454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05454");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        org.mockito.asm.FieldVisitor fieldVisitor7 = aSMifierClassVisitor1.visitField((int) (short) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) 0L);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector21 = byteVector17.putShort((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor22.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector37.putByte(2);
        annotationVisitor34.visit("", (java.lang.Object) byteVector37);
        org.mockito.asm.ByteVector byteVector44 = byteVector37.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector46 = byteVector37.putByte(3);
        org.mockito.asm.ByteVector byteVector48 = byteVector37.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter56 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter56.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = classWriter56.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter56.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray69 = classWriter56.toByteArray();
        org.mockito.asm.ByteVector byteVector72 = byteVector52.putByteArray(byteArray69, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader73 = new org.mockito.asm.ClassReader(byteArray69);
        org.mockito.asm.ClassReader classReader74 = new org.mockito.asm.ClassReader(byteArray69);
        org.mockito.asm.ClassReader classReader75 = new org.mockito.asm.ClassReader(byteArray69);
        byte[] byteArray76 = classReader75.b;
        org.mockito.asm.ByteVector byteVector79 = byteVector48.putByteArray(byteArray76, 0, 5);
        org.mockito.asm.ByteVector byteVector82 = byteVector17.putByteArray(byteArray76, (int) '#', 1);
        org.mockito.asm.ClassReader classReader83 = new org.mockito.asm.ClassReader(byteArray76);
        org.mockito.asm.ClassReader classReader84 = new org.mockito.asm.ClassReader(byteArray76);
        org.mockito.asm.FieldVisitor fieldVisitor85 = aSMifierClassVisitor1.visitField((int) (short) -1, "L1592299270", "L598840791", "L1592299270", (java.lang.Object) classReader84);
        org.mockito.asm.ClassWriter classWriter87 = new org.mockito.asm.ClassWriter(classReader84, 111);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = classReader84.readByte(22113);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 22113");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(fieldVisitor85);
    }

    @Test
    public void test05455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05455");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.Attribute[] attributeArray31 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor33.visitLineNumber((int) (byte) 10, label43);
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        int[] intArray56 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label54, intArray56, labelArray57);
        aSMifierMethodVisitor33.visitTableSwitchInsn((int) (byte) 0, 51966, label47, labelArray57);
        aSMifierMethodVisitor0.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray31, (int) '4', (java.lang.Object[]) labelArray57);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitParameterAnnotation(2305, "L1788074348", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitCode();
        aSMifierMethodVisitor69.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor69.visitEnd();
        aSMifierMethodVisitor69.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label79 = new org.mockito.asm.Label();
        aSMifierMethodVisitor69.visitJumpInsn(25, label79);
        java.lang.Object obj81 = label79.info;
        java.lang.String str82 = label79.toString();
        java.lang.String str83 = label79.toString();
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label79);
        aSMifierMethodVisitor0.visitVarInsn(9, 110);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(attributeArray31);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNull(obj81);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L1391024490" + "'", str82, "L1391024490");
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L1391024490" + "'", str83, "L1391024490");
    }

    @Test
    public void test05456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05456");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("", "", "L142696279");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((int) 'a');
        printWriter29.println("");
        printWriter29.print((float) 590080L);
        java.lang.Object[] objArray37 = null;
        java.io.PrintWriter printWriter38 = printWriter29.printf("hi!", objArray37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L994489370", "L142696279", "L326432149", (java.lang.Object) printWriter29);
        printWriter29.write("L994489370");
        printWriter29.println('4');
        printWriter29.print((long) 12);
        printWriter29.print((float) (short) 256);
        printWriter29.print("L540616366");
        printWriter29.print('a');
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(fieldVisitor39);
    }

    @Test
    public void test05457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05457");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter67 = printWriter65.append((java.lang.CharSequence) "L142696279");
        printWriter65.print(8);
        printWriter65.println((double) 245561770196860928L);
        boolean boolean72 = printWriter65.checkError();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test05458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05458");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = annotationVisitor19.visitArray("");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = annotationVisitor19.visitArray("L666971223");
        annotationVisitor19.visitEnum("L48323983", "L365115101", "L1508718123");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test05459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05459");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.ClassWriter classWriter18 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter18.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter18.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter18.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter18.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor37 = classWriter18.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter43 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor44 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor44.visit(2, (int) (byte) 0, "", "", "", strArray53);
        classWriter18.visit((int) 'a', (int) '#', "", "", "hi!", strArray53);
        aSMifierClassVisitor1.visit((int) (short) 10, (int) (short) 30313, "", "L1669980843", "L1669980843", strArray53);
        org.mockito.asm.ClassWriter classWriter62 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter62.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = fieldVisitor68.visitAnnotation("hi!", true);
        fieldVisitor68.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor73 = aSMifierClassVisitor1.visitField((int) (byte) -1, "L2113189186", "L1715840275", "", (java.lang.Object) fieldVisitor68);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierClassVisitor1.visitAnnotation("L601661571", true);
        java.lang.String[] strArray81 = null;
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor1.visitMethod(6, "L1722902851", "L139692246", "L555214098", strArray81);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor83 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor83.visitCode();
        aSMifierMethodVisitor83.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor83.visitEnd();
        aSMifierMethodVisitor83.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label93 = new org.mockito.asm.Label();
        aSMifierMethodVisitor83.visitJumpInsn(25, label93);
        java.lang.String str95 = label93.toString();
        methodVisitor82.visitLabel(label93);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = label93.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(fieldVisitor37);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(methodVisitor82);
// flaky:         org.junit.Assert.assertEquals("'" + str95 + "' != '" + "L518062966" + "'", str95, "L518062966");
    }

    @Test
    public void test05460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05460");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1434348811", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L142696279", (-889275714));
        aSMifierMethodVisitor0.visitTypeInsn(118, "L1931374313");
        java.util.List list41 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitCode();
        aSMifierMethodVisitor43.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor43.visitEnd();
        aSMifierMethodVisitor43.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        aSMifierMethodVisitor43.visitJumpInsn(25, label53);
        java.lang.String str55 = label53.toString();
        aSMifierMethodVisitor0.visitLineNumber(25, label53);
        java.lang.String str57 = label53.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int58 = label53.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(list41);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L751132159" + "'", str55, "L751132159");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L751132159" + "'", str57, "L751132159");
    }

    @Test
    public void test05461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05461");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.close();
        printWriter1.println("L419263736");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05462");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print(9);
        java.util.Locale locale9 = null;
        org.mockito.asm.ClassWriter classWriter12 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor18 = classWriter12.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor24.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list36 = aSMifierMethodVisitor24.text;
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter40.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter40.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter40.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter40.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter40.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter65 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor66.visit(2, (int) (byte) 0, "", "", "", strArray75);
        classWriter40.visit((int) 'a', (int) '#', "", "", "hi!", strArray75);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor79.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label85 = null;
        int[] intArray87 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray88 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor79.visitLookupSwitchInsn(label85, intArray87, labelArray88);
        aSMifierMethodVisitor24.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray75, (int) (short) 100, (java.lang.Object[]) labelArray88);
        classWriter12.visit(7, (-889275714), "", "hi!", "hi!", strArray75);
        java.io.PrintWriter printWriter92 = printWriter1.format(locale9, "L1434348811", (java.lang.Object[]) strArray75);
        printWriter1.close();
        java.lang.String[] strArray95 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter96 = printWriter1.format("hi!", (java.lang.Object[]) strArray95);
        printWriter1.print(2305);
        org.junit.Assert.assertNotNull(fieldVisitor18);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1]");
        org.junit.Assert.assertNotNull(labelArray88);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test05463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05463");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitSource("", "hi!");
        int int16 = classWriter1.newConst((java.lang.Object) "");
        classWriter1.visitInnerClass("L834812042", "L459227517", "", 30313);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter1.visitAnnotation("L1691870655", true);
        classWriter1.visitInnerClass("L858787082", "", "L994489370", 324);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray55 = classWriter42.toByteArray();
        org.mockito.asm.ByteVector byteVector58 = byteVector38.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray55);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray55, 0, (-1107296256));
        java.lang.String[] strArray63 = classReader62.getInterfaces();
        classWriter1.visit(142, 0, "L1592299270", "L1250170942", "", strArray63);
        classWriter1.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test05464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05464");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        java.io.PrintWriter printWriter89 = printWriter1.format(locale20, "hi!", (java.lang.Object[]) labelArray86);
        printWriter1.print("L459227517");
        printWriter1.println(' ');
        printWriter1.println("L1722902851");
        printWriter1.println((float) 118);
        printWriter1.println(true);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test05465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05465");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        printWriter1.println((double) 2817);
        printWriter1.println(23);
        printWriter1.println(2305);
        java.io.PrintWriter printWriter28 = printWriter1.append('a');
        printWriter28.print('#');
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter28);
    }

    @Test
    public void test05466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05466");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label40.info = classWriter42;
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = classWriter42.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = annotationVisitor58.visitArray("L174478886");
        annotationVisitor38.visit("L1893447210", (java.lang.Object) annotationVisitor58);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test05467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05467");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(4, "L994489370", "", "L326432149");
        aSMifierMethodVisitor0.visitInsn(18);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(872, 114);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05468");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray48 = classWriter35.toByteArray();
        org.mockito.asm.ByteVector byteVector51 = byteVector31.putByteArray(byteArray48, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray48);
        short short54 = classReader52.readShort(8);
        short short56 = classReader52.readShort((int) (byte) 10);
        byte[] byteArray57 = classReader52.b;
        byte[] byteArray58 = classReader52.b;
        org.mockito.asm.FieldVisitor fieldVisitor59 = aSMifierClassVisitor1.visitField(0, "L1434348811", "L799304101", "L1715840275", (java.lang.Object) byteArray58);
        fieldVisitor59.visitEnd();
        fieldVisitor59.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = fieldVisitor59.visitAnnotation("L78149900", false);
        org.mockito.asm.Attribute attribute65 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor59.visitAttribute(attribute65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertTrue("'" + short54 + "' != '" + (short) 9 + "'", short54 == (short) 9);
        org.junit.Assert.assertTrue("'" + short56 + "' != '" + (short) 256 + "'", short56 == (short) 256);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test05469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05469");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor38.visitInnerClass("L1174087069", "L1174303418", "L1137045083", 590080);
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putByte(2);
        org.mockito.asm.ByteVector byteVector55 = byteVector49.putUTF8("L1441782014");
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("L601661571");
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putUTF8("L1843076310");
        org.mockito.asm.FieldVisitor fieldVisitor60 = aSMifierClassVisitor38.visitField(114, "L744095971", "L1247828331", "L173547556", (java.lang.Object) byteVector55);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(fieldVisitor60);
    }

    @Test
    public void test05470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05470");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.util.Locale locale8 = null;
        org.mockito.asm.ClassWriter classWriter11 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter11.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter39.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter39.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter64 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor65.visit(2, (int) (byte) 0, "", "", "", strArray74);
        classWriter39.visit((int) 'a', (int) '#', "", "", "hi!", strArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label84 = null;
        int[] intArray86 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor78.visitLookupSwitchInsn(label84, intArray86, labelArray87);
        aSMifierMethodVisitor23.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray74, (int) (short) 100, (java.lang.Object[]) labelArray87);
        classWriter11.visit(7, (-889275714), "", "hi!", "hi!", strArray74);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale8, "hi!", (java.lang.Object[]) strArray74);
        java.io.PrintWriter printWriter92 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println(100.0f);
        printWriter1.println(' ');
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test05471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05471");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        aSMifierMethodVisitor0.visitIincInsn((-1161953280), 7);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitAnnotation("L1837291041", true);
        annotationVisitor53.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test05472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05472");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        printWriter35.print("L614568462");
        printWriter35.print("L104358438");
        printWriter35.print(false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test05473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05473");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) '4', "", "L326432149", "L326432149");
        java.util.List list55 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1150302951", 0);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter66.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = classWriter66.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor78 = classWriter66.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray79 = classWriter66.toByteArray();
        org.mockito.asm.ByteVector byteVector82 = byteVector62.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader83 = new org.mockito.asm.ClassReader(byteArray79);
        long long85 = classReader83.readLong((int) (byte) 100);
        long long87 = classReader83.readLong((int) (byte) 10);
        java.lang.String[] strArray88 = classReader83.getInterfaces();
        int int90 = classReader83.readInt(0);
        org.mockito.asm.ClassWriter classWriter92 = new org.mockito.asm.ClassWriter(classReader83, (int) '4');
        classWriter92.visitEnd();
        classWriter92.visitSource("L801849928", "L1715840275");
        classWriter92.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classWriter92);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(list55);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 8532477865490146625L + "'", long85 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 72057598333118569L + "'", long87 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-889275714) + "'", int90 == (-889275714));
    }

    @Test
    public void test05474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05474");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        org.mockito.asm.ClassReader classReader27 = new org.mockito.asm.ClassReader(byteArray20, 0, (-1107296256));
        java.lang.String[] strArray28 = classReader27.getInterfaces();
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((-889275714));
        java.util.Locale locale34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label37, intArray46, labelArray58);
        java.io.PrintWriter printWriter61 = printWriter31.format(locale34, "hi!", (java.lang.Object[]) labelArray58);
        printWriter31.println(7);
        printWriter31.println(false);
        char[] charArray71 = new char[] { 'a', 'a', '#', 'a', ' ' };
        printWriter31.print(charArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = classReader27.readUTF8(0, charArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "aa#a ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "aa#a ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[a, a, #, a,  ]");
    }

    @Test
    public void test05475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05475");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        int int3 = classWriter1.newClass("L326432149");
        int int6 = classWriter1.newNameType("L1544572272", "L326432149");
        classWriter1.visitInnerClass("L994489370", "L389484434", "L555214098", 7);
        classWriter1.visitInnerClass("L1957730982", "L1004430080", "L544338606", (int) (short) 28275);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor21.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray55 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label63 = null;
        int[] intArray65 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label63, intArray65, labelArray66);
        aSMifierMethodVisitor40.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray55, (int) 'a', (java.lang.Object[]) labelArray66);
        aSMifierMethodVisitor21.visitTableSwitchInsn(3, 2, label39, labelArray66);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor70.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor70.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor70.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector85 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector87 = byteVector85.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector89 = byteVector85.putByte(2);
        annotationVisitor82.visit("", (java.lang.Object) byteVector85);
        aSMifierMethodVisitor21.visitLdcInsn((java.lang.Object) annotationVisitor82);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor21.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor95 = annotationVisitor92.visitAnnotation("L575352164", "L1216476214");
        org.mockito.asm.FieldVisitor fieldVisitor96 = classWriter1.visitField((int) (short) -17730, "L544338606", "L97937772", "L1669980843", (java.lang.Object) "L575352164");
        fieldVisitor96.visitEnd();
        org.mockito.asm.Attribute attribute98 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor96.visitAttribute(attribute98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(attributeArray55);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1]");
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(annotationVisitor82);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(annotationVisitor92);
        org.junit.Assert.assertNotNull(annotationVisitor95);
        org.junit.Assert.assertNotNull(fieldVisitor96);
    }

    @Test
    public void test05476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05476");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter1.visitEnd();
        int int10 = classWriter1.newClass("");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter1.visitAnnotation("", false);
        annotationVisitor13.visitEnum("L779142371", "L1852655365", "L483311603");
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = annotationVisitor13.visitAnnotation("L142696279", "L106018564");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label30 = null;
        int[] intArray32 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label30, intArray32, labelArray33);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label23, intArray32, labelArray44);
        aSMifierMethodVisitor22.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list52 = aSMifierMethodVisitor22.text;
        aSMifierMethodVisitor22.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor22.visitCode();
        aSMifierMethodVisitor22.visitEnd();
        aSMifierMethodVisitor22.visitMaxs(9, 0);
        aSMifierMethodVisitor22.visitFieldInsn(21, "L20866424", "L1719622935", "L1813264043");
        annotationVisitor20.visit("L756219730", (java.lang.Object) "L20866424");
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1]");
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(list52);
    }

    @Test
    public void test05477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05477");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println(7);
        printWriter1.println(false);
        java.io.PrintWriter printWriter37 = printWriter1.append(' ');
        java.lang.Object[] objArray39 = null;
        java.io.PrintWriter printWriter40 = printWriter37.printf("L801849928", objArray39);
        printWriter40.println(true);
        printWriter40.write("L1174087069");
        java.io.PrintWriter printWriter46 = printWriter40.append('4');
        printWriter46.println(7958832928307566177L);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter46);
    }

    @Test
    public void test05478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05478");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj16);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(316, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test05479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05479");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte(2);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter7.visitEnd();
        classWriter7.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter7.visitSource("hi!", "hi!");
        byte[] byteArray29 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector32 = byteVector5.putByteArray(byteArray29, 118, (int) (short) 1);
        org.mockito.asm.ClassReader classReader33 = new org.mockito.asm.ClassReader(byteArray29);
        byte[] byteArray34 = classReader33.b;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter(classReader33, (int) (short) 29793);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((int) 'a');
        printWriter39.println("");
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        aSMifierClassVisitor45.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierClassVisitor45.visitAnnotation("", false);
        printWriter39.print((java.lang.Object) false);
        printWriter39.print((double) 10.0f);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter39);
        printWriter57.print((long) 1);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter57);
        boolean boolean61 = printWriter57.checkError();
        java.io.PrintWriter printWriter63 = printWriter57.append((java.lang.CharSequence) "L2113189186");
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        java.io.PrintWriter printWriter70 = printWriter65.append('#');
        printWriter70.println((double) 51966);
        char[] charArray79 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter70.write(charArray79);
        printWriter63.print(charArray79);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = classReader33.readClass(97, charArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 25970");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[ , a,  , #, #, a]");
    }

    @Test
    public void test05480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05480");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter75.println(10);
        printWriter75.println(100);
        printWriter75.println(true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor82 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter75);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor83 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter75);
        java.io.PrintWriter printWriter85 = new java.io.PrintWriter((java.io.Writer) printWriter75, true);
        printWriter85.print("L1579098349");
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test05481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05481");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        boolean boolean23 = printWriter19.checkError();
        java.io.PrintWriter printWriter25 = printWriter19.append((java.lang.CharSequence) "L2113189186");
        printWriter19.println(' ');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter("L1533650022");
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((int) 'a');
        printWriter32.println("");
        printWriter32.print((float) 590080L);
        printWriter32.write(1);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter42);
        printWriter42.print(0.0d);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        char[] charArray56 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter49.print(charArray56);
        printWriter42.write(charArray56);
        printWriter32.print(charArray56);
        printWriter30.print(charArray56);
        printWriter19.print(charArray56);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, a,  , a,  , #]");
    }

    @Test
    public void test05482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05482");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation(2, "", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitCode();
        aSMifierMethodVisitor40.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor40.visitTypeInsn(8, "");
        annotationVisitor38.visit("L142696279", (java.lang.Object) aSMifierMethodVisitor40);
        aSMifierMethodVisitor40.visitFieldInsn(36, "L20866424", "L1805888593", "L1691870655");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor40.visitIntInsn(1702035712, 26729);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test05483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05483");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotation("L1608560463", true);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, 34);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test05484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05484");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.println(0L);
        java.lang.Object[] objArray23 = null;
        java.io.PrintWriter printWriter24 = printWriter19.printf("L1866436761", objArray23);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter24);
    }

    @Test
    public void test05485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05485");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.print((float) ' ');
        printWriter6.println('4');
        java.io.PrintWriter printWriter12 = printWriter6.append(' ');
        printWriter12.print(0.0f);
        printWriter12.print('#');
        printWriter12.flush();
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter12);
    }

    @Test
    public void test05486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05486");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        printWriter21.print((double) (short) 30313);
        printWriter21.flush();
        printWriter21.print(10.0d);
        printWriter21.close();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test05487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05487");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print((float) (-3819410108757049344L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor9.visitOuterClass("L601661571", "L1434348811", "L799304101");
        aSMifierClassVisitor9.visitInnerClass("L97937772", "L1003926609", "L1691870655", 104);
        org.mockito.asm.ClassWriter classWriter25 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter25.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = classWriter25.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor37 = classWriter25.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter25.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter25.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter50 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter50);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor51.visit(2, (int) (byte) 0, "", "", "", strArray60);
        classWriter25.visit((int) 'a', (int) '#', "", "", "hi!", strArray60);
        aSMifierClassVisitor9.visit(320, 104, "L801849928", "L801849928", "L607677620", strArray60);
        aSMifierClassVisitor9.visitEnd();
        aSMifierClassVisitor9.visitInnerClass("L743230707", "L1931374313", "L96121905", 97);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(fieldVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(strArray60);
    }

    @Test
    public void test05488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05488");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        printWriter1.println('a');
        printWriter1.print("L1000949368");
        printWriter1.println(' ');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter25.close();
        boolean boolean27 = printWriter25.checkError();
        java.io.PrintWriter printWriter29 = printWriter25.append('a');
        java.io.PrintWriter printWriter31 = printWriter29.append((java.lang.CharSequence) "L1592299270");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor32.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor32.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor32.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor32.visitAnnotationDefault();
        printWriter29.println((java.lang.Object) aSMifierMethodVisitor32);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter55 = printWriter29.append((java.lang.CharSequence) "L215000262", 16, 3841);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 3841");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor50);
    }

    @Test
    public void test05489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05489");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label63);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (byte) 0);
        java.util.List list69 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L666971223", 1986622313);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1555790481", (int) (short) -326);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L97937772", (int) (short) 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1770505064", 21);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((-1107296256), 47806);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1675913995", 1634628694);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 256, 3395);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test05490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05490");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        java.lang.String[] strArray18 = null;
        aSMifierClassVisitor1.visit((int) (byte) 10, 1, "", "L1434348811", "L326432149", strArray18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor1.visitAnnotation("L967033583", false);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((int) 'a');
        printWriter24.println("");
        printWriter24.print((float) 590080L);
        java.lang.Object[] objArray32 = null;
        java.io.PrintWriter printWriter33 = printWriter24.printf("hi!", objArray32);
        printWriter33.println('a');
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter33);
        printWriter36.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor39 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter36);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((int) 'a');
        printWriter41.println("");
        printWriter41.print((float) 590080L);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter((java.io.Writer) printWriter41, true);
        printWriter41.print((float) (short) 30313);
        printWriter41.println((long) (short) 1);
        java.io.PrintWriter printWriter55 = printWriter41.append((java.lang.CharSequence) "L1703143512");
        aSMifierClassVisitor39.print(printWriter41);
        printWriter41.println((long) 17);
        aSMifierClassVisitor1.print(printWriter41);
        aSMifierClassVisitor1.visitOuterClass("L1285969608", "L215000262", "L1017243937");
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter55);
    }

    @Test
    public void test05491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05491");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        printWriter31.write(25929);
        printWriter31.println("L1736155405");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test05492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05492");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        classWriter1.visitInnerClass("hi!", "", "", 3);
        classWriter1.visitSource("L994489370", "L1669980843");
        int int15 = classWriter1.newNameType("L326432149", "");
        int int19 = classWriter1.newField("L834812042", "L1749641217", "L1105153118");
        classWriter1.visitInnerClass("L1544572272", "L801849928", "L911973346", 3);
        classWriter1.visitInnerClass("L1532047758", "L298663367", "L575352164", (int) (byte) 10);
        classWriter1.visitOuterClass("L1788074348", "L454715523", "L1694926691");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        aSMifierMethodVisitor38.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list68 = aSMifierMethodVisitor38.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor38.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor38.visitParameterAnnotation(30313, "L575352164", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor38.visitParameterAnnotation(0, "L601661571", false);
        org.mockito.asm.FieldVisitor fieldVisitor78 = classWriter1.visitField(32, "L9178859", "L1855853747", "L992490396", (java.lang.Object) "L601661571");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7 + "'", int15 == 7);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 13 + "'", int19 == 13);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor78);
    }

    @Test
    public void test05493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05493");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        printWriter35.print(118);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter43 = printWriter35.append((java.lang.CharSequence) "L111016143", (-889275714), 1853118049);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -889275714");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test05494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05494");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("L1000949368", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("L1555790481", true);
        aSMifierMethodVisitor0.visitFieldInsn(136, "L1418438756", "L575352164", "L2112385861");
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(16777217, "L1316336231", "L1620871785", "L9178859");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 16777217");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test05495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05495");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L344842840", (int) (short) 9);
        aSMifierMethodVisitor0.visitMaxs(9, 100);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 13, 116);
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test05496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05496");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitInnerClass("", "hi!", "hi!", 100);
        int int10 = classWriter1.newField("", "hi!", "L994489370");
        classWriter1.visitSource("L459227517", "L1230702653");
        java.lang.String[] strArray19 = null;
        classWriter1.visit(22, 22, "L1105153118", "hi!", "L1669980843", strArray19);
        java.io.PrintWriter printWriter25 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter25);
        aSMifierClassVisitor26.visitSource("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor26.visitField(1, "", "hi!", "", (java.lang.Object) label40);
        aSMifierClassVisitor26.visitOuterClass("L994489370", "L799304101", "L1434348811");
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor26.visitAnnotation("L61669440", false);
        aSMifierClassVisitor26.visitSource("L1434348811", "L298663367");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector67 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector73 = byteVector71.putInt((int) 'a');
        aSMifierMethodVisitor60.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor60.visitAnnotation("L96121905", false);
        org.mockito.asm.FieldVisitor fieldVisitor78 = aSMifierClassVisitor26.visitField((int) (short) 256, "L1216476214", "L2112385861", "L316026808", (java.lang.Object) "L96121905");
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = fieldVisitor78.visitAnnotation("L1866436761", false);
        org.mockito.asm.FieldVisitor fieldVisitor82 = classWriter1.visitField(26729, "L1628955470", "L1514525409", "L1230702653", (java.lang.Object) false);
        org.mockito.asm.Attribute attribute83 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor82.visitAttribute(attribute83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertNotNull(fieldVisitor82);
    }

    @Test
    public void test05497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05497");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        boolean boolean17 = printWriter6.checkError();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor19.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor19.visitInsn(8);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor30.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor30.visitLineNumber((int) (byte) 10, label40);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor45.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label51 = null;
        int[] intArray53 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label51, intArray53, labelArray54);
        aSMifierMethodVisitor30.visitTableSwitchInsn((int) (byte) 0, 51966, label44, labelArray54);
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor30.visitLabel(label57);
        org.mockito.asm.Label label59 = new org.mockito.asm.Label();
        aSMifierMethodVisitor30.visitLabel(label59);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor61.visitLineNumber((int) (byte) 10, label71);
        org.mockito.asm.Label label75 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor76 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor76.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label82 = null;
        int[] intArray84 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray85 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor76.visitLookupSwitchInsn(label82, intArray84, labelArray85);
        aSMifierMethodVisitor61.visitTableSwitchInsn((int) (byte) 0, 51966, label75, labelArray85);
        aSMifierMethodVisitor19.visitTableSwitchInsn(256, 118, label59, labelArray85);
        java.io.PrintWriter printWriter89 = printWriter6.format("", (java.lang.Object[]) labelArray85);
        boolean boolean90 = printWriter89.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor91 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter89);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1]");
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[1]");
        org.junit.Assert.assertNotNull(labelArray85);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test05498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05498");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation(2, "", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitCode();
        aSMifierMethodVisitor40.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor40.visitTypeInsn(8, "");
        annotationVisitor38.visit("L142696279", (java.lang.Object) aSMifierMethodVisitor40);
        aSMifierMethodVisitor40.visitFieldInsn(36, "L20866424", "L1805888593", "L1691870655");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor40.visitInsn((int) (short) 29793);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 29793");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test05499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05499");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor49.visitLineNumber((int) (byte) 10, label59);
        aSMifierMethodVisitor49.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor49.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        aSMifierMethodVisitor49.visitLineNumber(4, label70);
        aSMifierMethodVisitor0.visitLineNumber((-1), label70);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn(12, "L2113189186", "L407895089", "L326432149");
        aSMifierMethodVisitor0.visitTypeInsn(11, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor0.visitAnnotation("L1805888593", false);
        java.util.List list88 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn(5, 26);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor87);
        org.junit.Assert.assertNotNull(list88);
    }

    @Test
    public void test05500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05500");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort(0);
        org.mockito.asm.ByteVector byteVector13 = byteVector7.putLong((long) (short) -1);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("L559428047");
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter17.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor36 = classWriter17.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        classWriter17.visitEnd();
        int int39 = classWriter17.newClass("L326432149");
        int int41 = classWriter17.newUTF8("L459227517");
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter64.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = classWriter64.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter64.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray77 = classWriter64.toByteArray();
        org.mockito.asm.ByteVector byteVector80 = byteVector60.putByteArray(byteArray77, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader81 = new org.mockito.asm.ClassReader(byteArray77);
        long long83 = classReader81.readLong((int) (byte) 100);
        long long85 = classReader81.readLong((int) (byte) 10);
        java.lang.String[] strArray86 = classReader81.getInterfaces();
        aSMifierClassVisitor51.visit((int) (byte) 1, (-1), "", "hi!", "", strArray86);
        classWriter17.visit(0, (int) (byte) 10, "L994489370", "hi!", "L1216476214", strArray86);
        byte[] byteArray89 = classWriter17.toByteArray();
        org.mockito.asm.ClassReader classReader90 = new org.mockito.asm.ClassReader(byteArray89);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector93 = byteVector15.putByteArray(byteArray89, (-889275714), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(fieldVisitor36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 6 + "'", int39 == 6);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 8532477865490146625L + "'", long83 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 72057598333118569L + "'", long85 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(byteArray89);
    }
}
