import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest24 {

    public static boolean debug = false;

    @Test
    public void test12001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12001");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor6.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor6.visitLabel(label12);
        aSMifierMethodVisitor6.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor6.visitTryCatchBlock(label17, label18, label19, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitCode();
        aSMifierMethodVisitor23.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.Label label35 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label33, label34, label35, "hi!");
        aSMifierMethodVisitor23.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor41.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor41.visitLineNumber((int) (byte) 10, label51);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label62 = null;
        int[] intArray64 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray65 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label62, intArray64, labelArray65);
        aSMifierMethodVisitor41.visitTableSwitchInsn((int) (byte) 0, 51966, label55, labelArray65);
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor41.visitLabel(label68);
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        aSMifierMethodVisitor41.visitLabel(label70);
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor73.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor73.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor73.visitAnnotation("hi!", false);
        org.mockito.asm.Label label89 = new org.mockito.asm.Label();
        aSMifierMethodVisitor73.visitLineNumber(10, label89);
        aSMifierMethodVisitor23.visitTryCatchBlock(label70, label72, label89, "L1434348811");
        aSMifierMethodVisitor6.visitLineNumber(1, label70);
        aSMifierMethodVisitor0.visitLabel(label70);
        java.lang.Object obj95 = label70.info;
        java.lang.Object obj96 = label70.info;
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1]");
        org.junit.Assert.assertNotNull(labelArray65);
        org.junit.Assert.assertNotNull(annotationVisitor87);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test12002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12002");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation(6, "L1715840275", true);
        aSMifierMethodVisitor0.visitMaxs(16778088, (int) (short) 29782);
        aSMifierMethodVisitor0.visitIincInsn(123, 14);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("L207321209", true);
        aSMifierMethodVisitor0.visitCode();
        java.lang.Class<?> wildcardClass30 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test12003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12003");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        org.mockito.asm.FieldVisitor fieldVisitor7 = aSMifierClassVisitor1.visitField((int) (short) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) 0L);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor12.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor12.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor12.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor12.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor12.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((-889275714));
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        java.io.PrintWriter printWriter63 = printWriter33.format(locale36, "hi!", (java.lang.Object[]) labelArray60);
        printWriter33.print(false);
        printWriter33.println((long) (-889275714));
        aSMifierMethodVisitor12.visitLdcInsn((java.lang.Object) printWriter33);
        printWriter33.println("L1669980843");
        printWriter33.print((double) (short) 30313);
        printWriter33.print((long) 10);
        printWriter33.print(true);
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor1.visitField(15, "L1808073265", "L994489370", "L326432149", (java.lang.Object) true);
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = fieldVisitor77.visitAnnotation("L1852655365", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = fieldVisitor77.visitAnnotation("L1316565713", false);
        annotationVisitor83.visitEnum("L1800049467", "", "L961424524");
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test12004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12004");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) (short) 10);
        aSMifierMethodVisitor0.visitMaxs(142, (int) '4');
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test12005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12005");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        printWriter21.print((double) (short) 30313);
        printWriter21.print((long) 10);
        printWriter21.print(true);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        boolean boolean66 = printWriter65.checkError();
        printWriter65.print(false);
        printWriter65.write(1634628694);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor71 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        aSMifierClassVisitor71.visitEnd();
        java.util.List list73 = aSMifierClassVisitor71.text;
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(list73);
    }

    @Test
    public void test12006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12006");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        aSMifierClassVisitor1.visitOuterClass("L1441782014", "L1555790481", "L1281777590");
        aSMifierClassVisitor1.visitInnerClass("L1482294079", "L1479479862", "L139692246", (int) (short) 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor1.visitAnnotation("L2126073810", false);
        aSMifierClassVisitor1.visitOuterClass("L510949655", "L1569615272", "L1889738775");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test12007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12007");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        java.io.PrintWriter printWriter94 = printWriter1.append((java.lang.CharSequence) "L994489370", 5, (int) (byte) 10);
        printWriter94.write(0);
        printWriter94.write("L2063859988");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter94);
    }

    @Test
    public void test12008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12008");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test12009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12009");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation(4, "L1434348811", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 13);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(30313, "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test12010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12010");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        int int52 = classReader48.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        java.io.PrintWriter printWriter54 = printWriter1.printf("", (java.lang.Object[]) strArray53);
        printWriter54.println(134);
        printWriter54.flush();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 51966 + "'", int52 == 51966);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test12011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12011");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray53 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor38.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray53, (int) 'a', (java.lang.Object[]) labelArray64);
        aSMifierMethodVisitor23.visitTableSwitchInsn(8, (int) (byte) 1, label37, labelArray64);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-889275714), (int) '#', label22, labelArray64);
        aSMifierMethodVisitor0.visitIincInsn(65210, 13);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor0.visitAnnotation("L1968448721", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(18798, "L1862033567", "L1141916607", "L998472006");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 18798");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(attributeArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test12012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12012");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        boolean boolean34 = printWriter31.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor35.visitEnd();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test12013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12013");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitParameterAnnotation(10, "hi!", true);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMethodInsn(108, "L2106184417", "L55453359", "");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test12014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12014");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("", true);
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 3);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("L1434348811", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation((int) 'a', "L1700715189", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(16778088, 1634497893);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 16778088");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test12015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12015");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label33);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("L326432149", false);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L2101667039");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitCode();
        aSMifierMethodVisitor42.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor42.visitEnd();
        aSMifierMethodVisitor42.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label52 = new org.mockito.asm.Label();
        aSMifierMethodVisitor42.visitJumpInsn(25, label52);
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter61 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter61.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = classWriter61.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor73 = classWriter61.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray74 = classWriter61.toByteArray();
        org.mockito.asm.ByteVector byteVector77 = byteVector57.putByteArray(byteArray74, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader78 = new org.mockito.asm.ClassReader(byteArray74);
        long long80 = classReader78.readLong((int) (byte) 100);
        long long82 = classReader78.readLong((int) (byte) 10);
        short short84 = classReader78.readShort(1);
        int int86 = classReader78.readInt(9);
        int int88 = classReader78.readInt((int) (short) 9);
        label52.info = classReader78;
        aSMifierMethodVisitor0.visitLabel(label52);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(326, 140);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 8532477865490146625L + "'", long80 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 72057598333118569L + "'", long82 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short84 + "' != '" + (short) -326 + "'", short84 == (short) -326);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 151060480 + "'", int86 == 151060480);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 151060480 + "'", int88 == 151060480);
    }

    @Test
    public void test12016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12016");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        java.util.List list47 = aSMifierMethodVisitor24.text;
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("L2113189186", (int) (byte) -1);
        aSMifierMethodVisitor24.visitMethodInsn((int) (short) 1, "L298663367", "L1788074348", "L821985585");
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("L641049979", 20);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor24.visitAnnotation("L723576843", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test12017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12017");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor1.visitInnerClass("L1788074348", "L316026808", "L389484434", 254);
        java.io.PrintWriter printWriter20 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter20);
        java.lang.String[] strArray26 = null;
        org.mockito.asm.MethodVisitor methodVisitor27 = aSMifierClassVisitor21.visitMethod((-1), "", "hi!", "", strArray26);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter40.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter40.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter40.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray53 = classWriter40.toByteArray();
        org.mockito.asm.ByteVector byteVector56 = byteVector36.putByteArray(byteArray53, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader57 = new org.mockito.asm.ClassReader(byteArray53);
        long long59 = classReader57.readLong((int) (byte) 100);
        long long61 = classReader57.readLong((int) (byte) 10);
        java.lang.String[] strArray62 = classReader57.getInterfaces();
        int int64 = classReader57.readInt(0);
        int int65 = classReader57.getAccess();
        int int67 = classReader57.getItem(2);
        java.lang.String[] strArray68 = classReader57.getInterfaces();
        aSMifierClassVisitor21.visit(51966, (int) '4', "L2113189186", "", "L326432149", strArray68);
        org.mockito.asm.MethodVisitor methodVisitor70 = aSMifierClassVisitor1.visitMethod((int) '#', "L1305827832", "L943959020", "", strArray68);
        java.util.List list71 = aSMifierClassVisitor1.text;
        org.junit.Assert.assertNotNull(methodVisitor27);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 8532477865490146625L + "'", long59 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 72057598333118569L + "'", long61 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-889275714) + "'", int64 == (-889275714));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 14 + "'", int67 == 14);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(methodVisitor70);
        org.junit.Assert.assertNotNull(list71);
    }

    @Test
    public void test12018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12018");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L939261813", 27);
        aSMifierMethodVisitor0.visitMaxs(151060480, (int) (short) 25929);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test12019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12019");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((int) 'a');
        printWriter13.println("");
        printWriter13.print((long) 86);
        aSMifierClassVisitor1.print(printWriter13);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierClassVisitor30.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter45 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter45.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = classWriter45.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter45.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray58 = classWriter45.toByteArray();
        org.mockito.asm.ByteVector byteVector61 = byteVector41.putByteArray(byteArray58, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray58);
        long long64 = classReader62.readLong((int) (byte) 100);
        int int66 = classReader62.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray67 = classReader62.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor68 = aSMifierClassVisitor30.visitMethod(0, "hi!", "L994489370", "hi!", strArray67);
        aSMifierClassVisitor1.visit(86, 1, "L454715523", "L454715523", "L1669980843", strArray67);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierClassVisitor1.visitAnnotation("L323026369", false);
        org.mockito.asm.ByteVector byteVector75 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector77 = byteVector75.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector79 = byteVector77.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector81 = byteVector77.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector83 = byteVector81.putShort(6);
        org.mockito.asm.ByteVector byteVector85 = byteVector81.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector87 = byteVector85.putLong((long) 29);
        annotationVisitor72.visit("L601058011", (java.lang.Object) 29);
        annotationVisitor72.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 8532477865490146625L + "'", long64 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 51966 + "'", int66 == 51966);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(methodVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
    }

    @Test
    public void test12020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12020");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitSource("L1805888593", "L1576898305");
        aSMifierClassVisitor1.visitOuterClass("L555214098", "L1222191132", "L1561022062");
        aSMifierClassVisitor1.visitInnerClass("L56171884", "L1230702653", "L8325504", 1699311222);
    }

    @Test
    public void test12021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12021");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "L1434348811");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitParameterAnnotation(1986622313, "L48323983", true);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 3395, 16777217);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitLineNumber((int) (byte) 10, label42);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor32.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor32.visitParameterAnnotation(151060480, "hi!", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor52.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor52.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.Label label68 = null;
        aSMifierMethodVisitor52.visitLocalVariable("hi!", "hi!", "hi!", label67, label68, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor72.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor72.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor72.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor72.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierMethodVisitor72.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label92 = new org.mockito.asm.Label();
        aSMifierMethodVisitor72.visitLabel(label92);
        java.lang.String str94 = label92.toString();
        aSMifierMethodVisitor52.visitJumpInsn(5, label92);
        java.lang.String str96 = label92.toString();
        aSMifierMethodVisitor32.visitLineNumber(1751720195, label92);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 0, label92);
        java.lang.String str99 = label92.toString();
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(annotationVisitor91);
// flaky:         org.junit.Assert.assertEquals("'" + str94 + "' != '" + "L1068307050" + "'", str94, "L1068307050");
// flaky:         org.junit.Assert.assertEquals("'" + str96 + "' != '" + "L1068307050" + "'", str96, "L1068307050");
// flaky:         org.junit.Assert.assertEquals("'" + str99 + "' != '" + "L1068307050" + "'", str99, "L1068307050");
    }

    @Test
    public void test12022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12022");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitIntInsn(0, 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor16.visitLineNumber((int) (byte) 10, label26);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor16.visitTableSwitchInsn((int) (byte) 0, 51966, label30, labelArray40);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor16.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor46.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor46.visitLineNumber((int) (byte) 10, label56);
        aSMifierMethodVisitor46.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor46.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        aSMifierMethodVisitor46.visitLineNumber(4, label67);
        aSMifierMethodVisitor16.visitLabel(label67);
        java.lang.Object obj70 = label67.info;
        aSMifierMethodVisitor0.visitLineNumber(151060480, label67);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) -1, 256);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, 0);
        aSMifierMethodVisitor0.visitMaxs(98, 0);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(8451, "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test12023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12023");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLineNumber(4, label21);
        java.util.List list23 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn(27745, 28275);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        java.util.List list39 = aSMifierMethodVisitor28.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor28.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor28.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        java.lang.Object obj49 = label48.info;
        java.lang.String str50 = label48.toString();
        aSMifierMethodVisitor28.visitLineNumber((int) '#', label48);
        java.lang.String str52 = label48.toString();
        java.lang.String str53 = label48.toString();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn(26729, label48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 26729");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list23);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNull(obj49);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "L603482076" + "'", str50, "L603482076");
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "L603482076" + "'", str52, "L603482076");
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "L603482076" + "'", str53, "L603482076");
    }

    @Test
    public void test12024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12024");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (short) 30313);
        aSMifierMethodVisitor0.visitMaxs(118, 4);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor19.visitLineNumber((int) (byte) 10, label29);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor19.visitAnnotation("hi!", true);
        aSMifierMethodVisitor19.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor38.visitLineNumber((int) (byte) 10, label48);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label59 = null;
        int[] intArray61 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor53.visitLookupSwitchInsn(label59, intArray61, labelArray62);
        aSMifierMethodVisitor38.visitTableSwitchInsn((int) (byte) 0, 51966, label52, labelArray62);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor38.visitLabel(label65);
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        aSMifierMethodVisitor38.visitLabel(label67);
        aSMifierMethodVisitor19.visitJumpInsn((int) (short) 10, label67);
        java.lang.String str70 = label67.toString();
        aSMifierMethodVisitor0.visitLineNumber(320, label67);
        java.util.List list72 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor75.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor75.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor75.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor75.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor75.visitCode();
        annotationVisitor73.visit("L2018459260", (java.lang.Object) aSMifierMethodVisitor75);
        aSMifierMethodVisitor75.visitMaxs((int) (short) 3395, 28275);
        aSMifierMethodVisitor75.visitMultiANewArrayInsn("L1933585767", (int) (short) 25196);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1]");
        org.junit.Assert.assertNotNull(labelArray62);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L70782547" + "'", str70, "L70782547");
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test12025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12025");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        printWriter1.print(true);
        printWriter1.println((double) 1536);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test12026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12026");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor17.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor17.visitLocalVariable("hi!", "hi!", "hi!", label32, label33, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor37.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor37.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor37.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor37.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        aSMifierMethodVisitor37.visitLabel(label57);
        java.lang.String str59 = label57.toString();
        aSMifierMethodVisitor17.visitJumpInsn(5, label57);
        java.lang.Object obj61 = label57.info;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitCode();
        aSMifierMethodVisitor63.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor63);
        java.util.List list69 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(65210, 28275);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor56);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1815099218" + "'", str59, "L1815099218");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(list69);
    }

    @Test
    public void test12027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12027");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        printWriter1.print((float) 25929);
        printWriter1.println((double) 7);
        java.util.Locale locale44 = null;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter53 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter53.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = classWriter53.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter53.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray66 = classWriter53.toByteArray();
        org.mockito.asm.ByteVector byteVector69 = byteVector49.putByteArray(byteArray66, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray66);
        long long72 = classReader70.readLong((int) (byte) 100);
        long long74 = classReader70.readLong((int) (byte) 10);
        java.lang.String[] strArray75 = classReader70.getInterfaces();
        int int77 = classReader70.readInt(0);
        org.mockito.asm.ClassWriter classWriter79 = new org.mockito.asm.ClassWriter(classReader70, (int) '4');
        org.mockito.asm.ClassWriter classWriter81 = new org.mockito.asm.ClassWriter(classReader70, 51966);
        int int83 = classReader70.readUnsignedShort((int) '#');
        org.mockito.asm.ClassWriter classWriter85 = new org.mockito.asm.ClassWriter(classReader70, 18);
        org.mockito.asm.ClassWriter classWriter87 = new org.mockito.asm.ClassWriter(classReader70, 332);
        int int89 = classReader70.readUnsignedShort((int) (byte) 100);
        java.lang.String[] strArray90 = classReader70.getInterfaces();
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale44, "L2080075526", (java.lang.Object[]) strArray90);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write("L697718317", 202, 104);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 306");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 8532477865490146625L + "'", long72 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 72057598333118569L + "'", long74 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-889275714) + "'", int77 == (-889275714));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 22113 + "'", int83 == 22113);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 30313 + "'", int89 == 30313);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test12028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12028");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = classWriter1.visitAnnotation("hi!", true);
        classWriter1.visitEnd();
        classWriter1.visitSource("L61669440", "L666971223");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitMaxs((int) (short) 0, 1);
        int int34 = classWriter1.newConst((java.lang.Object) 1);
        classWriter1.visitOuterClass("L1936863555", "L477422003", "L895464062");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
    }

    @Test
    public void test12029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12029");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.Writer) printWriter9);
        java.util.Locale locale13 = null;
        java.io.PrintWriter printWriter15 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter23.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter23.visitEnd();
        org.mockito.asm.ClassWriter classWriter37 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter37.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = classWriter37.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor49 = classWriter37.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter37.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter37.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter62 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor63.visit(2, (int) (byte) 0, "", "", "", strArray72);
        classWriter37.visit((int) 'a', (int) '#', "", "", "hi!", strArray72);
        classWriter23.visit(100, 100, "L326432149", "L1434348811", "", strArray72);
        aSMifierClassVisitor16.visit(590080, 256, "L994489370", "L237245406", "L1749641217", strArray72);
        java.io.PrintWriter printWriter77 = printWriter12.format(locale13, "L2036836790", (java.lang.Object[]) strArray72);
        printWriter12.println((long) (byte) 1);
        printWriter12.flush();
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(fieldVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test12030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12030");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((int) (short) -1);
        org.mockito.asm.ByteVector byteVector13 = byteVector7.putShort(28526);
        org.mockito.asm.ClassWriter classWriter15 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter15.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = classWriter15.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter15.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter15.visitEnd();
        classWriter15.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter15.visitSource("hi!", "hi!");
        byte[] byteArray37 = classWriter15.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor42.visitLabel(label48);
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor42.visitLineNumber((int) '4', label51);
        org.mockito.asm.FieldVisitor fieldVisitor53 = classWriter15.visitField((-1), "hi!", "", "", (java.lang.Object) label51);
        int int58 = classWriter15.newMethod("hi!", "L326432149", "hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = classWriter15.visitAnnotation("L1544572272", false);
        int int66 = classWriter15.newMethod("L540616366", "L1962067231", "L316026808", false);
        int int71 = classWriter15.newMethod("L1528647597", "L799304101", "L344842840", false);
        byte[] byteArray72 = classWriter15.toByteArray();
        org.mockito.asm.ByteVector byteVector75 = byteVector7.putByteArray(byteArray72, 210, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector77 = byteVector7.putLong((-1L));
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 13 + "'", int58 == 13);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 20 + "'", int66 == 20);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 26 + "'", int71 == 26);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector77);
    }

    @Test
    public void test12031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12031");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        boolean boolean38 = printWriter37.checkError();
        boolean boolean39 = printWriter37.checkError();
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter42.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray48);
        java.io.PrintWriter printWriter50 = printWriter37.format("L1669980843", (java.lang.Object[]) strArray48);
        printWriter50.print(190);
        printWriter50.println((float) 8);
        printWriter50.println(true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test12032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12032");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        printWriter1.print(0.0d);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        boolean boolean8 = printWriter1.checkError();
        printWriter1.write(65210);
        java.io.PrintWriter printWriter12 = printWriter1.append('4');
        java.io.PrintWriter printWriter14 = printWriter1.append('a');
        java.util.Locale locale15 = null;
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((-889275714));
        java.util.Locale locale21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label31 = null;
        int[] intArray33 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray34 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label31, intArray33, labelArray34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor23.visitLookupSwitchInsn(label24, intArray33, labelArray45);
        java.io.PrintWriter printWriter48 = printWriter18.format(locale21, "hi!", (java.lang.Object[]) labelArray45);
        printWriter18.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter18);
        aSMifierClassVisitor51.visitEnd();
        aSMifierClassVisitor51.visitInnerClass("L1719622935", "L137136720", "L1105153118", 50331648);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter70 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter70.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = classWriter70.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor82 = classWriter70.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray83 = classWriter70.toByteArray();
        org.mockito.asm.ByteVector byteVector86 = byteVector66.putByteArray(byteArray83, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader87 = new org.mockito.asm.ClassReader(byteArray83);
        long long89 = classReader87.readLong((int) (byte) 100);
        long long91 = classReader87.readLong((int) (byte) 10);
        java.lang.String[] strArray92 = classReader87.getInterfaces();
        int int94 = classReader87.readByte((int) '#');
        long long96 = classReader87.readLong(4);
        java.lang.String[] strArray97 = classReader87.getInterfaces();
        aSMifierClassVisitor51.visit(47806, 48640, "L742367259", "L111851498", "L823983574", strArray97);
        java.io.PrintWriter printWriter99 = printWriter1.format(locale15, "L2058942103", (java.lang.Object[]) strArray97);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1]");
        org.junit.Assert.assertNotNull(labelArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(fieldVisitor82);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 8532477865490146625L + "'", long89 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 72057598333118569L + "'", long91 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 86 + "'", int94 == 86);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 590080L + "'", long96 == 590080L);
        org.junit.Assert.assertNotNull(strArray97);
        org.junit.Assert.assertNotNull(printWriter99);
    }

    @Test
    public void test12033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12033");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), 17);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label32 = null;
        int[] intArray34 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray35 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label32, intArray34, labelArray35);
        java.util.List list37 = aSMifierMethodVisitor26.getText();
        printWriter23.println((java.lang.Object) list37);
        printWriter23.print((long) (byte) 10);
        boolean boolean41 = printWriter23.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor42 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter23);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor42);
        org.mockito.asm.Attribute attribute44 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor42.visitAttribute(attribute44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[1]");
        org.junit.Assert.assertNotNull(labelArray35);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test12034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12034");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1230702653");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("hi!");
        printWriter3.print((int) 'a');
        printWriter3.println("");
        java.io.PrintWriter printWriter8 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        aSMifierClassVisitor9.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierClassVisitor9.visitAnnotation("", false);
        printWriter3.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor19 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        java.io.PrintWriter printWriter21 = printWriter3.append(' ');
        java.io.PrintWriter printWriter23 = printWriter3.append(' ');
        printWriter23.write("L967033583");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("hi!");
        printWriter27.print((int) 'a');
        printWriter27.println("");
        java.io.PrintWriter printWriter32 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor33 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter32);
        aSMifierClassVisitor33.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor33.visitAnnotation("", false);
        printWriter27.print((java.lang.Object) false);
        printWriter27.print((double) 10.0f);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter27);
        printWriter45.print((long) 1);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter45);
        boolean boolean49 = printWriter45.checkError();
        java.io.PrintWriter printWriter51 = printWriter45.append((java.lang.CharSequence) "L2113189186");
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter((java.io.Writer) printWriter45, true);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter53);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        printWriter56.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        java.util.List list70 = aSMifierMethodVisitor59.getText();
        printWriter56.println((java.lang.Object) list70);
        printWriter56.print((double) 10L);
        printWriter56.println(false);
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter("hi!");
        printWriter77.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor80 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter77);
        printWriter77.print(0.0d);
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter("hi!");
        char[] charArray91 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter84.print(charArray91);
        printWriter77.write(charArray91);
        printWriter56.print(charArray91);
        printWriter54.println(charArray91);
        printWriter23.print(charArray91);
        printWriter1.write(charArray91);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(list70);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12035");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label9);
        aSMifierMethodVisitor0.visitMaxs(3, 0);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) (short) 22113);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 22113);
        aSMifierMethodVisitor0.visitIincInsn(8, 25);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1703143512", (int) (byte) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor26.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor26.visitLineNumber((int) (byte) 10, label36);
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        aSMifierMethodVisitor26.visitTableSwitchInsn((int) (byte) 0, 51966, label40, labelArray50);
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor26.visitLabel(label53);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor58.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor58.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor71.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor71.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor71.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor71.visitAnnotation("hi!", false);
        org.mockito.asm.Label label87 = new org.mockito.asm.Label();
        aSMifierMethodVisitor71.visitLineNumber(10, label87);
        aSMifierMethodVisitor58.visitLineNumber(1, label87);
        org.mockito.asm.Label label90 = new org.mockito.asm.Label();
        aSMifierMethodVisitor26.visitLocalVariable("hi!", "L1434348811", "L326432149", label87, label90, 9);
        label90.info = 'a';
        aSMifierMethodVisitor0.visitLineNumber(65210, label90);
        java.lang.Object obj96 = label90.info;
        java.lang.String str97 = label90.toString();
        java.lang.String str98 = label90.toString();
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor85);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 'a' + "'", obj96, 'a');
// flaky:         org.junit.Assert.assertEquals("'" + str97 + "' != '" + "L133250491" + "'", str97, "L133250491");
// flaky:         org.junit.Assert.assertEquals("'" + str98 + "' != '" + "L133250491" + "'", str98, "L133250491");
    }

    @Test
    public void test12036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12036");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        printWriter1.print(0.0d);
        printWriter1.print(false);
        printWriter1.print(true);
        printWriter1.close();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label30 = null;
        int[] intArray32 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label30, intArray32, labelArray33);
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label12, intArray21, labelArray33);
        aSMifierMethodVisitor11.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list41 = aSMifierMethodVisitor11.text;
        aSMifierMethodVisitor11.visitMaxs((-1), (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor11.visitParameterAnnotation((-889275714), "", false);
        annotationVisitor48.visitEnd();
        printWriter1.println((java.lang.Object) annotationVisitor48);
        printWriter1.flush();
        printWriter1.println('a');
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1]");
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test12037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12037");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        printWriter88.println((long) (-1107296256));
        printWriter88.println("L994489370");
        printWriter88.write(13);
        boolean boolean95 = printWriter88.checkError();
        printWriter88.print((long) 30);
        printWriter88.flush();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test12038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12038");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation(151060480, "hi!", false);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 0, (int) 'a');
        aSMifierMethodVisitor0.visitEnd();
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((int) 'a');
        printWriter24.println("");
        printWriter24.print((float) 590080L);
        java.lang.Object[] objArray32 = null;
        java.io.PrintWriter printWriter33 = printWriter24.printf("hi!", objArray32);
        java.io.PrintWriter printWriter35 = printWriter24.append('4');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) '4');
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 4, (int) ' ');
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test12039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12039");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label29);
        aSMifierMethodVisitor0.visitMaxs((-1), 6);
        aSMifierMethodVisitor0.visitIntInsn(23, 0);
        aSMifierMethodVisitor0.visitIincInsn(872, 7);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
    }

    @Test
    public void test12040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12040");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print(false);
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        printWriter34.println(true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test12041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12041");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        aSMifierClassVisitor1.visitInnerClass("L61669440", "hi!", "L2113189186", 10);
        aSMifierClassVisitor1.visitSource("L1669980843", "L666971223");
        java.util.List list32 = aSMifierClassVisitor1.text;
        aSMifierClassVisitor1.visitSource("L834812042", "");
        aSMifierClassVisitor1.visitSource("L1363288052", "L121647365");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor1.visitAnnotation("L394842588", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test12042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12042");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor17.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor17.visitLocalVariable("hi!", "hi!", "hi!", label32, label33, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor37.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor37.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor37.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor37.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        aSMifierMethodVisitor37.visitLabel(label57);
        java.lang.String str59 = label57.toString();
        aSMifierMethodVisitor17.visitJumpInsn(5, label57);
        java.lang.Object obj61 = label57.info;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label57);
        java.lang.String str63 = label57.toString();
        java.lang.Object obj64 = label57.info;
        java.lang.String str65 = label57.toString();
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor56);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1528574721" + "'", str59, "L1528574721");
        org.junit.Assert.assertNull(obj61);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "L1528574721" + "'", str63, "L1528574721");
        org.junit.Assert.assertNull(obj64);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "L1528574721" + "'", str65, "L1528574721");
    }

    @Test
    public void test12043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12043");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 10, (int) (short) 100);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj16);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Attribute attribute19 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test12044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12044");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray54 = classReader53.b;
        org.mockito.asm.ByteVector byteVector57 = byteVector26.putByteArray(byteArray54, 0, 5);
        org.mockito.asm.ByteVector byteVector59 = byteVector26.putUTF8("L666971223");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putInt(4);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putByte(254);
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((int) (short) -13570);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putInt(3841);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
    }

    @Test
    public void test12045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12045");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print((float) 10L);
        printWriter31.print(25);
        printWriter31.println((float) 34);
        printWriter31.write("L1467378836");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12046");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "L1749641217", false);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 15);
        aSMifierMethodVisitor0.visitVarInsn(25, 7);
        aSMifierMethodVisitor0.visitMaxs(16777217, (int) (short) 30313);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test12047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12047");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        aSMifierClassVisitor1.visitSource("L994489370", "");
        java.util.List list16 = aSMifierClassVisitor1.text;
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test12048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12048");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        aSMifierMethodVisitor0.visitInsn(9);
        org.mockito.asm.Label label60 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn(25929, label60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 25929");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test12049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12049");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1434348811", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation(13, "L704540978", true);
        aSMifierMethodVisitor0.visitVarInsn(100, (int) (short) 872);
        java.util.List list42 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L607601671", 28526);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test12050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12050");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotation("L96121905", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("L801849928", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "L384579388", true);
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter(17);
        int int28 = classWriter26.newClass("L1555790481");
        classWriter26.visitEnd();
        int int34 = classWriter26.newMethod("L1085773562", "L365115101", "L1837291041", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L365115101");
        org.mockito.asm.Attribute attribute36 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
    }

    @Test
    public void test12051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12051");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(17, 21);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(1869509492, 73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1869509492");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test12052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12052");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("hi!", "");
        java.lang.String[] strArray9 = null;
        org.mockito.asm.MethodVisitor methodVisitor10 = aSMifierClassVisitor1.visitMethod((-889275714), "L659269359", "L1532047758", "hi!", strArray9);
        methodVisitor10.visitMultiANewArrayInsn("L98547873", (int) (byte) 10);
        org.junit.Assert.assertNotNull(methodVisitor10);
    }

    @Test
    public void test12053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12053");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L601661571");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor36.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor36.visitIincInsn(1, 0);
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor36.visitLabel(label48);
        aSMifierMethodVisitor36.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor36.visitAnnotationDefault();
        java.util.List list54 = aSMifierMethodVisitor36.text;
        java.util.List list55 = aSMifierMethodVisitor36.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor57.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label72 = null;
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor57.visitLocalVariable("hi!", "hi!", "hi!", label72, label73, 1);
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        aSMifierMethodVisitor57.visitLineNumber(8, label77);
        aSMifierMethodVisitor36.visitLineNumber(1634628694, label77);
        java.lang.String str80 = label77.toString();
        aSMifierMethodVisitor0.visitLineNumber(114, label77);
        java.util.List list82 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(list55);
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L26593764" + "'", str80, "L26593764");
        org.junit.Assert.assertNotNull(list82);
    }

    @Test
    public void test12054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12054");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "L997959795", false);
        aSMifierMethodVisitor0.visitTypeInsn(22, "L821985585");
        aSMifierMethodVisitor0.visitIincInsn(151060480, 26913);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitCode();
        aSMifierMethodVisitor20.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor20.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitCode();
        aSMifierMethodVisitor27.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor27.visitEnd();
        aSMifierMethodVisitor27.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label37 = new org.mockito.asm.Label();
        aSMifierMethodVisitor27.visitJumpInsn(25, label37);
        java.lang.Object obj39 = label37.info;
        java.lang.String str40 = label37.toString();
        java.lang.String str41 = label37.toString();
        java.lang.String str42 = label37.toString();
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitInnerClass("L298663367", "L1715840275", "L614568462", 18);
        org.mockito.asm.ByteVector byteVector56 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter62 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter62.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = classWriter62.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor74 = classWriter62.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray75 = classWriter62.toByteArray();
        org.mockito.asm.ByteVector byteVector78 = byteVector58.putByteArray(byteArray75, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader79 = new org.mockito.asm.ClassReader(byteArray75);
        long long81 = classReader79.readLong((int) (byte) 100);
        long long83 = classReader79.readLong((int) (byte) 10);
        java.lang.String str84 = classReader79.getSuperName();
        java.lang.String[] strArray85 = classReader79.getInterfaces();
        classWriter44.visit((int) (byte) 1, 1869480192, "L1911123705", "L173581797", "", strArray85);
        label37.info = strArray85;
        aSMifierMethodVisitor20.visitLineNumber(69, label37);
        aSMifierMethodVisitor0.visitLabel(label37);
        aSMifierMethodVisitor0.visitMaxs(73, (int) (short) 0);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 9, "L330163999", "L2117337292", "L607601671");
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNull(obj39);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "L1609763582" + "'", str40, "L1609763582");
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "L1609763582" + "'", str41, "L1609763582");
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1609763582" + "'", str42, "L1609763582");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(fieldVisitor74);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 8532477865490146625L + "'", long81 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 72057598333118569L + "'", long83 == 72057598333118569L);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test12055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12055");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector(13);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putLong((long) (short) 9);
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putInt(22);
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort(590080);
        org.mockito.asm.ClassWriter classWriter9 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter9.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = classWriter9.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor21 = classWriter9.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter9.visitEnd();
        classWriter9.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter9.visitSource("hi!", "hi!");
        byte[] byteArray31 = classWriter9.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor36.visitLabel(label42);
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor36.visitLineNumber((int) '4', label45);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter9.visitField((-1), "hi!", "", "", (java.lang.Object) label45);
        classWriter9.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = classWriter9.visitAnnotation("L1434348811", true);
        byte[] byteArray54 = classWriter9.toByteArray();
        byte[] byteArray55 = classWriter9.toByteArray();
        org.mockito.asm.ClassReader classReader56 = new org.mockito.asm.ClassReader(byteArray55);
        byte[] byteArray57 = classReader56.b;
        org.mockito.asm.ByteVector byteVector60 = byteVector7.putByteArray(byteArray57, (int) (byte) 100, 134);
        org.mockito.asm.ByteVector byteVector62 = byteVector7.putShort(17);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putLong((long) (short) 9);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(fieldVisitor21);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
    }

    @Test
    public void test12056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12056");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(48640);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter("hi!");
        char[] charArray15 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter8.print(charArray15);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        aSMifierClassVisitor17.visitEnd();
        aSMifierClassVisitor17.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor17.visitAnnotation("L326432149", false);
        aSMifierClassVisitor17.visitOuterClass("L1694926691", "L1749641217", "L1284973471");
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        printWriter33.print(0.0d);
        printWriter33.print((float) (-3819410108757049344L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        aSMifierClassVisitor41.visitOuterClass("L601661571", "L1434348811", "L799304101");
        aSMifierClassVisitor41.visitInnerClass("L97937772", "L1003926609", "L1691870655", 104);
        org.mockito.asm.ClassWriter classWriter57 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter57.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = classWriter57.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor69 = classWriter57.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter57.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter57.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter82 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor83 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter82);
        java.lang.String[] strArray92 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor83.visit(2, (int) (byte) 0, "", "", "", strArray92);
        classWriter57.visit((int) 'a', (int) '#', "", "", "hi!", strArray92);
        aSMifierClassVisitor41.visit(320, 104, "L801849928", "L801849928", "L607677620", strArray92);
        aSMifierClassVisitor17.visit(256, (int) (short) 30313, "L344842840", "L464564430", "L1289682213", strArray92);
        classWriter1.visit((int) (short) 4, 1536, "L2041941526", "L823983574", "L1097906296", strArray92);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor69);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test12057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12057");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label33);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("L326432149", false);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L2101667039");
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor0.visitAnnotation("L1620871785", false);
        aSMifierMethodVisitor0.visitMethodInsn(35, "", "L1587148073", "L503616188");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test12058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12058");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1808073265");
        printWriter1.print((double) 186);
        java.util.Locale locale4 = null;
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter13.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = classWriter13.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor25 = classWriter13.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray26 = classWriter13.toByteArray();
        org.mockito.asm.ByteVector byteVector29 = byteVector9.putByteArray(byteArray26, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader30 = new org.mockito.asm.ClassReader(byteArray26);
        long long32 = classReader30.readLong((int) (byte) 100);
        long long34 = classReader30.readLong((int) (byte) 10);
        java.lang.String[] strArray35 = classReader30.getInterfaces();
        int int37 = classReader30.readByte((int) '#');
        long long39 = classReader30.readLong(4);
        int int40 = classReader30.header;
        byte[] byteArray41 = classReader30.b;
        java.lang.String[] strArray42 = classReader30.getInterfaces();
        java.io.PrintWriter printWriter43 = printWriter1.printf(locale4, "L1103251756", (java.lang.Object[]) strArray42);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor44.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor44.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor44.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor44.visitAnnotationDefault();
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor44.visitLabel(label58);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor44.visitAnnotationDefault();
        aSMifierMethodVisitor44.visitIntInsn((int) (short) 9, 118);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor44.visitAnnotation("L1556230913", true);
        aSMifierMethodVisitor44.visitEnd();
        aSMifierMethodVisitor44.visitInsn(0);
        printWriter1.print((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(fieldVisitor25);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 8532477865490146625L + "'", long32 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 72057598333118569L + "'", long34 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 86 + "'", int37 == 86);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 590080L + "'", long39 == 590080L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 118 + "'", int40 == 118);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test12059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12059");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label9);
        aSMifierMethodVisitor0.visitMaxs(3, 0);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) (short) 22113);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 22113);
        aSMifierMethodVisitor0.visitIincInsn(8, 25);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1703143512", (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitParameterAnnotation(18798, "L661313578", true);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test12060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12060");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L1669980843", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor33.visitIincInsn(1, 0);
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor33.visitLabel(label45);
        aSMifierMethodVisitor33.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor33.visitAnnotationDefault();
        java.util.List list51 = aSMifierMethodVisitor33.text;
        java.util.List list52 = aSMifierMethodVisitor33.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor54.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor54.visitLocalVariable("hi!", "hi!", "hi!", label69, label70, 1);
        org.mockito.asm.Label label74 = new org.mockito.asm.Label();
        aSMifierMethodVisitor54.visitLineNumber(8, label74);
        aSMifierMethodVisitor33.visitLineNumber(1634628694, label74);
        java.lang.String str77 = label74.toString();
        aSMifierMethodVisitor0.visitLabel(label74);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(list52);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L1581863962" + "'", str77, "L1581863962");
    }

    @Test
    public void test12061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12061");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "L454715523", false);
        aSMifierMethodVisitor0.visitIntInsn(16, 1634628694);
        aSMifierMethodVisitor0.visitIntInsn(111, (int) (short) 9);
        java.util.List list26 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list26);
    }

    @Test
    public void test12062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12062");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = printWriter31.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.println('4');
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        printWriter61.write("L1962374298");
        printWriter61.println(false);
        printWriter61.print(true);
        // The following exception was thrown during execution in test generation
        try {
            printWriter61.write("L961993492", 140, 101);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 241");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter56);
    }

    @Test
    public void test12063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12063");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("L1853824624", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = annotationVisitor29.visitAnnotation("", "L454715523");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = annotationVisitor29.visitAnnotation("L1749343426", "L990238104");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test12064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12064");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter1.print((long) 25);
        printWriter1.print((double) 1952543849);
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test12065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12065");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter16.visitAnnotation("L2113189186", true);
        java.lang.Object obj32 = null;
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter16.visitField((int) (short) 30313, "L2113189186", "L1434348811", "L61669440", obj32);
        classWriter16.visitInnerClass("L1749641217", "L1544572272", "L237245406", (int) '#');
        int int42 = classWriter16.newField("L1555790481", "hi!", "L399637105");
        byte[] byteArray43 = classWriter16.toByteArray();
        org.mockito.asm.ClassReader classReader44 = new org.mockito.asm.ClassReader(byteArray43);
        org.mockito.asm.ClassReader classReader45 = new org.mockito.asm.ClassReader(byteArray43);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray43, 11, 123);
        // The following exception was thrown during execution in test generation
        try {
            int int50 = classReader48.readByte(65539);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 65539");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 16 + "'", int42 == 16);
        org.junit.Assert.assertNotNull(byteArray43);
    }

    @Test
    public void test12066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12066");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor24.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label44 = new org.mockito.asm.Label();
        aSMifierMethodVisitor24.visitLabel(label44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor46.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor46.visitIincInsn(1, 0);
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor46.visitLabel(label58);
        label44.info = aSMifierMethodVisitor46;
        aSMifierMethodVisitor0.visitLineNumber(24942, label44);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L2113189186", 5);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1390196302", 16);
        aSMifierMethodVisitor0.visitInsn(22);
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor65);
    }

    @Test
    public void test12067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12067");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitCode();
        aSMifierMethodVisitor20.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor20.visitTryCatchBlock(label30, label31, label32, "hi!");
        aSMifierMethodVisitor20.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor38.visitLineNumber((int) (byte) 10, label48);
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label59 = null;
        int[] intArray61 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor53.visitLookupSwitchInsn(label59, intArray61, labelArray62);
        aSMifierMethodVisitor38.visitTableSwitchInsn((int) (byte) 0, 51966, label52, labelArray62);
        org.mockito.asm.Label label65 = null;
        aSMifierMethodVisitor38.visitLabel(label65);
        org.mockito.asm.Label label67 = new org.mockito.asm.Label();
        aSMifierMethodVisitor38.visitLabel(label67);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor70.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor70.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor70.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor70.visitAnnotation("hi!", false);
        org.mockito.asm.Label label86 = new org.mockito.asm.Label();
        aSMifierMethodVisitor70.visitLineNumber(10, label86);
        aSMifierMethodVisitor20.visitTryCatchBlock(label67, label69, label86, "L1434348811");
        aSMifierMethodVisitor0.visitLabel(label69);
        aSMifierMethodVisitor0.visitVarInsn(104, (int) (short) 256);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor98 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 257, "L1326680450", true);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(annotationVisitor98);
    }

    @Test
    public void test12068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12068");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter17.visitEnd();
        classWriter17.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter17.visitSource("hi!", "hi!");
        classWriter17.visitSource("", "");
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter64.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = classWriter64.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter64.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray77 = classWriter64.toByteArray();
        org.mockito.asm.ByteVector byteVector80 = byteVector60.putByteArray(byteArray77, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader81 = new org.mockito.asm.ClassReader(byteArray77);
        long long83 = classReader81.readLong((int) (byte) 100);
        long long85 = classReader81.readLong((int) (byte) 10);
        java.lang.String[] strArray86 = classReader81.getInterfaces();
        aSMifierClassVisitor51.visit((int) (byte) 1, (-1), "", "hi!", "", strArray86);
        classWriter17.visit(10, 202, "L601661571", "L1669980843", "L1669980843", strArray86);
        org.mockito.asm.MethodVisitor methodVisitor89 = aSMifierClassVisitor1.visitMethod(1986622313, "", "L142696279", "L659269359", strArray86);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 8532477865490146625L + "'", long83 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 72057598333118569L + "'", long85 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(methodVisitor89);
    }

    @Test
    public void test12069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12069");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L142696279", 202);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1749641217", (int) ' ');
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "L1544572272");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 10, "L1675715472", "L614568462", "L939261813");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 10, 29);
        aSMifierMethodVisitor0.visitFieldInsn(0, "L1612331813", "L117134386", "L1200596014");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
    }

    @Test
    public void test12070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12070");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        char[] charArray42 = new char[] { 'a', '#' };
        printWriter1.println(charArray42);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter46 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor47 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        aSMifierClassVisitor47.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor47.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierClassVisitor47.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor47.visitAnnotation("L666971223", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierClassVisitor47.visitAnnotation("L298663367", false);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        printWriter71.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor74 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter71);
        java.io.PrintWriter printWriter76 = printWriter71.append('#');
        printWriter76.println((double) 51966);
        char[] charArray85 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter76.write(charArray85);
        org.mockito.asm.FieldVisitor fieldVisitor87 = aSMifierClassVisitor47.visitField(3, "L967033583", "L454715523", "L237245406", (java.lang.Object) charArray85);
        printWriter45.write(charArray85);
        printWriter45.println((float) 590080);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, #]");
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(fieldVisitor87);
    }

    @Test
    public void test12071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12071");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        classWriter1.visitOuterClass("L96121905", "hi!", "L61669440");
        classWriter1.visitEnd();
        int int49 = classWriter1.newNameType("L1200596014", "L914596724");
        int int54 = classWriter1.newMethod("L960317073", "L1587148073", "L317871603", true);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 14 + "'", int49 == 14);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 20 + "'", int54 == 20);
    }

    @Test
    public void test12072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12072");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        java.util.Locale locale17 = null;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        int int47 = classReader43.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray48 = classReader43.getInterfaces();
        java.io.PrintWriter printWriter49 = printWriter6.format(locale17, "L1434348811", (java.lang.Object[]) strArray48);
        boolean boolean50 = printWriter6.checkError();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor51.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor51.visitMultiANewArrayInsn("", (int) (short) 100);
        printWriter6.println((java.lang.Object) "");
        printWriter6.println(false);
        java.io.PrintWriter printWriter71 = printWriter6.append('#');
        printWriter71.close();
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 51966 + "'", int47 == 51966);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test12073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12073");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation(4, "L1434348811", true);
        aSMifierMethodVisitor0.visitMaxs(28275, (int) (short) 10);
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test12074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12074");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
    }

    @Test
    public void test12075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12075");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor0.visitInsn(8);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor10.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor10.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor10.visitLocalVariable("hi!", "hi!", "hi!", label25, label26, 1);
        org.mockito.asm.Label label30 = new org.mockito.asm.Label();
        aSMifierMethodVisitor10.visitLineNumber(8, label30);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = classWriter33.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor48 = classWriter33.visitField(86, "", "", "", (java.lang.Object) 8532477865490146625L);
        label30.info = 86;
        aSMifierMethodVisitor0.visitLineNumber(151060480, label30);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(152, 116);
        java.util.List list55 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor48);
        org.junit.Assert.assertNotNull(list55);
    }

    @Test
    public void test12076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12076");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print((-889275714));
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label30 = null;
        int[] intArray32 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label30, intArray32, labelArray33);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label23, intArray32, labelArray44);
        java.io.PrintWriter printWriter47 = printWriter17.format(locale20, "hi!", (java.lang.Object[]) labelArray44);
        printWriter17.println((int) (short) 1);
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter52 = printWriter17.format("hi!", (java.lang.Object[]) strArray51);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter55 = printWriter17.printf("", (java.lang.Object[]) strArray54);
        org.mockito.asm.MethodVisitor methodVisitor56 = aSMifierClassVisitor1.visitMethod(57174305, "L1749641217", "L1230702653", "L326432149", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierClassVisitor1.visitAnnotation("L834812042", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor1.visitAnnotation("L1082768567", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1]");
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(methodVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor62);
    }

    @Test
    public void test12077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12077");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (short) 30313);
        aSMifierMethodVisitor0.visitMaxs(118, 4);
        org.mockito.asm.Attribute attribute18 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12078");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1689719368", 26913);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor16.visitAnnotation("", false);
        aSMifierMethodVisitor16.visitMethodInsn(6, "L994489370", "L61669440", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor26.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor26.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor41.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor41.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray56 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        aSMifierMethodVisitor41.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray56, (int) 'a', (java.lang.Object[]) labelArray67);
        aSMifierMethodVisitor26.visitTableSwitchInsn(8, (int) (byte) 1, label40, labelArray67);
        aSMifierMethodVisitor26.visitMaxs(3, 51966);
        aSMifierMethodVisitor26.visitIincInsn((-889275714), 9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor78.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor78.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor78.visitAnnotation("hi!", false);
        org.mockito.asm.Label label94 = new org.mockito.asm.Label();
        aSMifierMethodVisitor78.visitLineNumber(10, label94);
        aSMifierMethodVisitor26.visitLineNumber(4, label94);
        aSMifierMethodVisitor16.visitLineNumber((int) (short) 872, label94);
        aSMifierMethodVisitor0.visitLabel(label94);
        java.lang.Object obj99 = label94.info;
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(attributeArray56);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(annotationVisitor92);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test12079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12079");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        printWriter1.write("");
        java.io.PrintWriter printWriter13 = printWriter1.append('#');
        java.io.PrintWriter printWriter15 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        aSMifierClassVisitor16.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor16.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor37 = classWriter31.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter31.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor16.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter31);
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter52.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = classWriter52.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter52.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray65 = classWriter52.toByteArray();
        org.mockito.asm.ByteVector byteVector68 = byteVector48.putByteArray(byteArray65, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader69 = new org.mockito.asm.ClassReader(byteArray65);
        long long71 = classReader69.readLong((int) (byte) 100);
        long long73 = classReader69.readLong((int) (byte) 10);
        java.lang.String[] strArray74 = classReader69.getInterfaces();
        int int76 = classReader69.readByte((int) '#');
        long long78 = classReader69.readLong(4);
        int int79 = classReader69.header;
        byte[] byteArray80 = classReader69.b;
        org.mockito.asm.ClassReader classReader83 = new org.mockito.asm.ClassReader(byteArray80, (-1), 13);
        org.mockito.asm.ClassReader classReader84 = new org.mockito.asm.ClassReader(byteArray80);
        byte[] byteArray85 = classReader84.b;
        java.lang.String[] strArray86 = classReader84.getInterfaces();
        aSMifierClassVisitor16.visit(1751720195, 50331648, "L601661571", "L2072201856", "L659269359", strArray86);
        java.io.PrintWriter printWriter88 = printWriter13.format("L1749641217", (java.lang.Object[]) strArray86);
        char[] charArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter88.write(charArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(fieldVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 8532477865490146625L + "'", long71 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 72057598333118569L + "'", long73 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 86 + "'", int76 == 86);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 590080L + "'", long78 == 590080L);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 118 + "'", int79 == 118);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(printWriter88);
    }

    @Test
    public void test12080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12080");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label63);
        java.util.List list65 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor68.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label74 = null;
        int[] intArray76 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor68.visitLookupSwitchInsn(label74, intArray76, labelArray77);
        java.util.List list79 = aSMifierMethodVisitor68.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierMethodVisitor68.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor68.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.Label label88 = new org.mockito.asm.Label();
        java.lang.Object obj89 = label88.info;
        java.lang.String str90 = label88.toString();
        aSMifierMethodVisitor68.visitLineNumber((int) '#', label88);
        java.lang.String str92 = label88.toString();
        java.lang.Object obj93 = label88.info;
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 20, label88);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(annotationVisitor83);
        org.junit.Assert.assertNull(obj89);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "L338145681" + "'", str90, "L338145681");
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "L338145681" + "'", str92, "L338145681");
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test12081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12081");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        printWriter1.println('a');
        printWriter1.print("L1000949368");
        printWriter1.println(' ');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter25.close();
        boolean boolean27 = printWriter25.checkError();
        java.io.PrintWriter printWriter29 = printWriter25.append('a');
        printWriter29.print((double) 3);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test12082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12082");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println(false);
        printWriter1.println();
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) (short) 0);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((-889275714));
        java.util.Locale locale35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label56 = null;
        int[] intArray58 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor50.visitLookupSwitchInsn(label56, intArray58, labelArray59);
        aSMifierMethodVisitor37.visitLookupSwitchInsn(label38, intArray47, labelArray59);
        java.io.PrintWriter printWriter62 = printWriter32.format(locale35, "hi!", (java.lang.Object[]) labelArray59);
        printWriter32.println((int) (short) 1);
        java.lang.String[] strArray66 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter67 = printWriter32.format("hi!", (java.lang.Object[]) strArray66);
        java.lang.String[] strArray69 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter70 = printWriter32.printf("", (java.lang.Object[]) strArray69);
        org.mockito.asm.MethodVisitor methodVisitor71 = classWriter26.visitMethod(8, "", "L1715840275", "L1715840275", strArray69);
        int int75 = classWriter26.newField("L1000949368", "L1669980843", "");
        classWriter26.visitSource("L316026808", "L2113189186");
        int int81 = classWriter26.newNameType("L1434348811", "L911973346");
        printWriter1.println((java.lang.Object) classWriter26);
        classWriter26.visitOuterClass("L1951373725", "L477731576", "L77953979");
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = classWriter26.visitAnnotation("L1852655365", false);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1]");
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(methodVisitor71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 320 + "'", int75 == 320);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 324 + "'", int81 == 324);
        org.junit.Assert.assertNotNull(annotationVisitor89);
    }

    @Test
    public void test12083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12083");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test12084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12084");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj25);
        aSMifierMethodVisitor0.visitVarInsn(2, 256);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L344842840", 28526);
        aSMifierMethodVisitor0.visitIntInsn(118, (int) (short) 3395);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitParameterAnnotation(222523246, "L1446114095", false);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test12085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12085");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitMethodInsn(101, "L312071672", "L1861736012", "L1754345445");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((int) (short) 25929, "L956747878");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test12086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12086");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor18.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor18.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label38);
        java.lang.Object obj40 = label38.info;
        aSMifierMethodVisitor0.visitLineNumber(8, label38);
        aSMifierMethodVisitor0.visitVarInsn(28, 330);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        aSMifierClassVisitor46.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor46.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter61 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor67 = classWriter61.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter61.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor69 = aSMifierClassVisitor46.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter61);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = classWriter61.visitAnnotation("L2113189186", true);
        int int77 = classWriter61.newMethod("L326432149", "L967033583", "L61669440", false);
        classWriter61.visitSource("L265725697", "L723576843");
        int int82 = classWriter61.newClass("L697359787");
        classWriter61.visitOuterClass("L621056596", "L2099222213", "L1978431276");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L621056596");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(320, "L1426096058", "L1514525409", "L641049979");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(fieldVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 9 + "'", int77 == 9);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 12 + "'", int82 == 12);
    }

    @Test
    public void test12087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12087");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println("hi!");
        printWriter1.close();
        printWriter1.println((double) 3);
        java.util.Locale locale7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label15 = null;
        int[] intArray17 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label15, intArray17, labelArray18);
        java.io.PrintWriter printWriter20 = printWriter1.printf(locale7, "L1749641217", (java.lang.Object[]) labelArray18);
        printWriter20.print(true);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        printWriter24.print(0.0d);
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter24, false);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        char[] charArray39 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter32.print(charArray39);
        printWriter24.write(charArray39);
        printWriter20.write(charArray39);
        printWriter20.close();
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter52.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = classWriter52.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter52.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray65 = classWriter52.toByteArray();
        org.mockito.asm.ByteVector byteVector68 = byteVector48.putByteArray(byteArray65, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader69 = new org.mockito.asm.ClassReader(byteArray65);
        long long71 = classReader69.readLong((int) (byte) 100);
        long long73 = classReader69.readLong((int) (byte) 10);
        long long75 = classReader69.readLong(5);
        short short77 = classReader69.readShort((int) (byte) 100);
        short short79 = classReader69.readShort(4);
        long long81 = classReader69.readLong(0);
        java.lang.String[] strArray82 = classReader69.getInterfaces();
        java.io.PrintWriter printWriter83 = printWriter20.printf("L928755548", (java.lang.Object[]) strArray82);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor84 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter20);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[1]");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(printWriter20);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 8532477865490146625L + "'", long71 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 72057598333118569L + "'", long73 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 151060480L + "'", long75 == 151060480L);
        org.junit.Assert.assertTrue("'" + short77 + "' != '" + (short) 30313 + "'", short77 == (short) 30313);
        org.junit.Assert.assertTrue("'" + short79 + "' != '" + (short) 0 + "'", short79 == (short) 0);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-3819410108757049344L) + "'", long81 == (-3819410108757049344L));
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test12088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12088");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("L1000949368", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("L1555790481", true);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L2005779546");
        aSMifierMethodVisitor0.visitIntInsn(97, (int) (short) 28533);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test12089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12089");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = annotationVisitor32.visitArray("L559428047");
        annotationVisitor32.visitEnum("L714880249", "L2041189408", "L697610249");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test12090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12090");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        int int40 = classReader36.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray41 = classReader36.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor4.visitMethod(0, "hi!", "L994489370", "hi!", strArray41);
        aSMifierClassVisitor4.visitOuterClass("L1749641217", "L1216476214", "L666971223");
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitInnerClass("L1305827832", "L1127838997", "", 0);
        aSMifierClassVisitor4.visitOuterClass("L1608972287", "L1247828331", "L1536756937");
        java.util.List list57 = aSMifierClassVisitor4.getText();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 51966 + "'", int40 == 51966);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(list57);
    }

    @Test
    public void test12091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12091");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitIntInsn(0, 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitCode();
        aSMifierMethodVisitor16.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor16.visitEnd();
        aSMifierMethodVisitor16.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitJumpInsn(25, label26);
        aSMifierMethodVisitor0.visitJumpInsn(104, label26);
        org.mockito.asm.ByteVector byteVector30 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter36.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = classWriter36.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor48 = classWriter36.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray49 = classWriter36.toByteArray();
        org.mockito.asm.ByteVector byteVector52 = byteVector32.putByteArray(byteArray49, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray49);
        long long55 = classReader53.readLong((int) (byte) 100);
        long long57 = classReader53.readLong((int) (byte) 10);
        long long59 = classReader53.readLong(5);
        short short61 = classReader53.readShort((int) (byte) 100);
        int int62 = classReader53.header;
        java.lang.String[] strArray63 = classReader53.getInterfaces();
        label26.info = classReader53;
        java.lang.Object obj65 = label26.info;
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor48);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 8532477865490146625L + "'", long55 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 72057598333118569L + "'", long57 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 151060480L + "'", long59 == 151060480L);
        org.junit.Assert.assertTrue("'" + short61 + "' != '" + (short) 30313 + "'", short61 == (short) 30313);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 118 + "'", int62 == 118);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test12092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12092");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, 0);
        aSMifierMethodVisitor0.visitIincInsn(16780108, 1952542324);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) 18798);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 18798");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12093");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        char[] charArray42 = new char[] { 'a', '#' };
        printWriter1.println(charArray42);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter45, false);
        printWriter45.write(15);
        printWriter45.close();
        printWriter45.write("L1526656810", 101, 18);
        printWriter45.close();
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter45, false);
        printWriter45.println((long) 16777217);
        printWriter45.write("L1376319144", (-889275714), (int) (short) -16896);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, #]");
    }

    @Test
    public void test12094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12094");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter24.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        printWriter22.print((java.lang.Object) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitLineNumber((int) (byte) 10, label42);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor32.visitTableSwitchInsn((int) (byte) 0, 51966, label46, labelArray56);
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor32.visitLabel(label59);
        aSMifierMethodVisitor32.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter64.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = classWriter64.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter64.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray77 = classWriter64.toByteArray();
        aSMifierMethodVisitor32.visitLdcInsn((java.lang.Object) byteArray77);
        aSMifierMethodVisitor32.visitIincInsn(0, (int) (short) 10);
        aSMifierMethodVisitor32.visitMethodInsn((int) '4', "", "L326432149", "L326432149");
        aSMifierMethodVisitor32.visitVarInsn(86, 24942);
        printWriter22.print((java.lang.Object) 24942);
        printWriter22.print(true);
        java.lang.CharSequence charSequence93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter96 = printWriter22.append(charSequence93, 1869509376, 334);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 334");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test12095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12095");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitIntInsn(0, 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitCode();
        aSMifierMethodVisitor16.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor16.visitEnd();
        aSMifierMethodVisitor16.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label26 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitJumpInsn(25, label26);
        aSMifierMethodVisitor0.visitJumpInsn(104, label26);
        java.lang.Object obj29 = label26.info;
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test12096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12096");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.println(false);
        printWriter1.write("L1749641217");
        printWriter1.println((-91551935198396416L));
        printWriter1.println("L783115983");
        printWriter1.close();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test12097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12097");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.ClassWriter classWriter5 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor11 = classWriter5.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = fieldVisitor11.visitAnnotation("hi!", true);
        printWriter1.print((java.lang.Object) annotationVisitor14);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print((int) 'a');
        printWriter17.println("");
        java.io.PrintWriter printWriter22 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor23 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        aSMifierClassVisitor23.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierClassVisitor23.visitAnnotation("", false);
        printWriter17.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor33 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter17);
        java.io.PrintWriter printWriter35 = printWriter17.append(' ');
        printWriter17.println(true);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        char[] charArray46 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter39.print(charArray46);
        printWriter17.print(charArray46);
        printWriter1.write(charArray46);
        printWriter1.println(' ');
        org.junit.Assert.assertNotNull(fieldVisitor11);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12098");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label15 = null;
        int[] intArray17 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label15, intArray17, labelArray18);
        org.mockito.asm.FieldVisitor fieldVisitor20 = aSMifierClassVisitor1.visitField(1, "", "hi!", "", (java.lang.Object) label15);
        aSMifierClassVisitor1.visitOuterClass("L994489370", "L799304101", "L1434348811");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierClassVisitor1.visitAnnotation("L61669440", false);
        aSMifierClassVisitor1.visitSource("L2101667039", "L2036836790");
        aSMifierClassVisitor1.visitInnerClass("L1931374313", "L779142371", "L1864262327", 100);
        java.io.PrintWriter printWriter40 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        org.mockito.asm.FieldVisitor fieldVisitor47 = aSMifierClassVisitor41.visitField((int) (short) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) 0L);
        java.lang.Object obj52 = null;
        org.mockito.asm.FieldVisitor fieldVisitor53 = aSMifierClassVisitor41.visitField(8, "L1216476214", "L911973346", "L1544572272", obj52);
        java.util.List list54 = aSMifierClassVisitor41.text;
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        printWriter60.println("hi!");
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter71 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter71.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = classWriter71.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor83 = classWriter71.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray84 = classWriter71.toByteArray();
        org.mockito.asm.ByteVector byteVector87 = byteVector67.putByteArray(byteArray84, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader88 = new org.mockito.asm.ClassReader(byteArray84);
        long long90 = classReader88.readLong((int) (byte) 100);
        long long92 = classReader88.readLong((int) (byte) 10);
        java.lang.String[] strArray93 = classReader88.getInterfaces();
        java.io.PrintWriter printWriter94 = printWriter60.format("", (java.lang.Object[]) strArray93);
        org.mockito.asm.MethodVisitor methodVisitor95 = aSMifierClassVisitor41.visitMethod(2817, "L1005725320", "L695299603", "L1905158729", strArray93);
        org.mockito.asm.MethodVisitor methodVisitor96 = aSMifierClassVisitor1.visitMethod(105, "L142696279", "L1412939624", "L1111364207", strArray93);
        methodVisitor96.visitCode();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[1]");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor83);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 8532477865490146625L + "'", long90 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 72057598333118569L + "'", long92 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(printWriter94);
        org.junit.Assert.assertNotNull(methodVisitor95);
        org.junit.Assert.assertNotNull(methodVisitor96);
    }

    @Test
    public void test12099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12099");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor60 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter59);
        printWriter59.println((double) 12);
        printWriter59.println('#');
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter((java.io.Writer) printWriter59, true);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test12100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12100");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter36.print(true);
        java.io.PrintWriter printWriter40 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor41.visit(2, (int) (byte) 0, "", "", "", strArray50);
        java.io.PrintWriter printWriter52 = printWriter36.printf("", (java.lang.Object[]) strArray50);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((int) 'a');
        printWriter54.println("");
        printWriter54.print((float) 590080L);
        java.lang.Object[] objArray62 = null;
        java.io.PrintWriter printWriter63 = printWriter54.printf("hi!", objArray62);
        printWriter63.println('a');
        java.io.PrintWriter printWriter66 = new java.io.PrintWriter((java.io.Writer) printWriter63);
        printWriter66.print(false);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("hi!");
        printWriter70.print((-889275714));
        printWriter70.println((int) (short) 256);
        printWriter70.print((long) 1);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter("hi!");
        printWriter78.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor81 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter78);
        java.io.PrintWriter printWriter83 = printWriter78.append('#');
        printWriter83.println((double) 51966);
        char[] charArray92 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter83.write(charArray92);
        printWriter70.print(charArray92);
        printWriter66.println(charArray92);
        printWriter52.println(charArray92);
        java.io.PrintWriter printWriter97 = new java.io.PrintWriter((java.io.Writer) printWriter52);
        printWriter97.print((float) (-91551935198396416L));
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[ , a,  , #, #, a]");
    }

    @Test
    public void test12101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12101");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor46.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test12102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12102");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readInt(0);
        int int32 = classReader24.getAccess();
        java.lang.String[] strArray33 = classReader24.getInterfaces();
        java.lang.String str34 = classReader24.getSuperName();
        java.lang.String str35 = classReader24.getSuperName();
        long long37 = classReader24.readLong(104);
        java.lang.String[] strArray38 = classReader24.getInterfaces();
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("L1930290201");
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((-889275714));
        java.util.Locale locale46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label56 = null;
        int[] intArray58 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor50.visitLookupSwitchInsn(label56, intArray58, labelArray59);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label67 = null;
        int[] intArray69 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray70 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor61.visitLookupSwitchInsn(label67, intArray69, labelArray70);
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label49, intArray58, labelArray70);
        java.io.PrintWriter printWriter73 = printWriter43.format(locale46, "hi!", (java.lang.Object[]) labelArray70);
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter("hi!");
        char[] charArray82 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter75.print(charArray82);
        printWriter73.print(charArray82);
        printWriter41.print(charArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = classReader24.readConst(13881, charArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 13881");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-889275714) + "'", int31 == (-889275714));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 7092154844901699444L + "'", long37 == 7092154844901699444L);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1]");
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1]");
        org.junit.Assert.assertNotNull(labelArray70);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12103");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.write("L61669440");
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        printWriter21.print(0.0d);
        printWriter21.print(false);
        java.util.Locale locale28 = null;
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        java.util.List list45 = aSMifierMethodVisitor34.getText();
        printWriter31.println((java.lang.Object) list45);
        printWriter31.print((double) 10L);
        printWriter31.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor51.visitInnerClass("L1434348811", "", "L142696279", 24942);
        org.mockito.asm.ByteVector byteVector62 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter68 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter68.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = classWriter68.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor80 = classWriter68.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray81 = classWriter68.toByteArray();
        org.mockito.asm.ByteVector byteVector84 = byteVector64.putByteArray(byteArray81, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader85 = new org.mockito.asm.ClassReader(byteArray81);
        long long87 = classReader85.readLong((int) (byte) 100);
        long long89 = classReader85.readLong((int) (byte) 10);
        java.lang.String[] strArray90 = classReader85.getInterfaces();
        int int92 = classReader85.readInt(0);
        int int93 = classReader85.getAccess();
        java.lang.String[] strArray94 = classReader85.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor95 = aSMifierClassVisitor51.visitMethod((int) (byte) 100, "L142696279", "L601661571", "L1434348811", strArray94);
        java.io.PrintWriter printWriter96 = printWriter21.printf(locale28, "L723576843", (java.lang.Object[]) strArray94);
        java.io.PrintWriter printWriter97 = printWriter1.printf("L1305827832", (java.lang.Object[]) strArray94);
        printWriter97.println((long) 25);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(annotationVisitor74);
        org.junit.Assert.assertNotNull(fieldVisitor80);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 8532477865490146625L + "'", long87 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 72057598333118569L + "'", long89 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-889275714) + "'", int92 == (-889275714));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(methodVisitor95);
        org.junit.Assert.assertNotNull(printWriter96);
        org.junit.Assert.assertNotNull(printWriter97);
    }

    @Test
    public void test12104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12104");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor13.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor13.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor13.visitAnnotation("hi!", false);
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        aSMifierMethodVisitor13.visitLineNumber(10, label29);
        aSMifierMethodVisitor0.visitLineNumber(1, label29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor32.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor32.visitLocalVariable("hi!", "hi!", "hi!", label47, label48, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor52.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor52.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor52.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor52.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        aSMifierMethodVisitor52.visitLabel(label72);
        java.lang.String str74 = label72.toString();
        aSMifierMethodVisitor32.visitJumpInsn(5, label72);
        java.lang.Object obj76 = label72.info;
        label29.info = label72;
        org.mockito.asm.ByteVector byteVector79 = new org.mockito.asm.ByteVector((int) (byte) 1);
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector83 = byteVector79.putInt(9);
        org.mockito.asm.ByteVector byteVector85 = byteVector79.putUTF8("L2101667039");
        org.mockito.asm.ByteVector byteVector87 = byteVector79.putByte(0);
        org.mockito.asm.ByteVector byteVector89 = byteVector87.putUTF8("L2036836790");
        org.mockito.asm.ByteVector byteVector91 = byteVector87.putShort(22);
        org.mockito.asm.ByteVector byteVector93 = byteVector87.putShort(16);
        label29.info = byteVector93;
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor71);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L989403231" + "'", str74, "L989403231");
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector91);
        org.junit.Assert.assertNotNull(byteVector93);
    }

    @Test
    public void test12105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12105");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(0, 7);
        aSMifierMethodVisitor0.visitTypeInsn(17, "L684377782");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test12106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12106");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label21 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLineNumber(4, label21);
        java.lang.Object obj23 = label21.info;
        // The following exception was thrown during execution in test generation
        try {
            int int24 = label21.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test12107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12107");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        org.mockito.asm.ByteVector byteVector29 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector33 = byteVector31.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray48 = classWriter35.toByteArray();
        org.mockito.asm.ByteVector byteVector51 = byteVector31.putByteArray(byteArray48, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray48);
        short short54 = classReader52.readShort(8);
        short short56 = classReader52.readShort((int) (byte) 10);
        byte[] byteArray57 = classReader52.b;
        byte[] byteArray58 = classReader52.b;
        org.mockito.asm.FieldVisitor fieldVisitor59 = aSMifierClassVisitor1.visitField(0, "L1434348811", "L799304101", "L1715840275", (java.lang.Object) byteArray58);
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = fieldVisitor59.visitAnnotation("L1165593392", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = annotationVisitor62.visitArray("L30917897");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertTrue("'" + short54 + "' != '" + (short) 9 + "'", short54 == (short) 9);
        org.junit.Assert.assertTrue("'" + short56 + "' != '" + (short) 256 + "'", short56 == (short) 256);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test12108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12108");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) 28526, "L1861736012", "L1393780661", "L1413777471");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12109");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        aSMifierMethodVisitor0.visitIincInsn(5, 202);
        aSMifierMethodVisitor0.visitTypeInsn(4, "L61669440");
        aSMifierMethodVisitor0.visitIincInsn(111, (-889275714));
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "L1346842308");
        aSMifierMethodVisitor0.visitFieldInsn(0, "L75574205", "L1769388599", "L554745060");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
    }

    @Test
    public void test12110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12110");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor31.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor31.visitLineNumber((int) (byte) 10, label41);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        aSMifierMethodVisitor31.visitTableSwitchInsn((int) (byte) 0, 51966, label45, labelArray55);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor31.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor61.visitLineNumber((int) (byte) 10, label71);
        aSMifierMethodVisitor61.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor61.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label82 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(4, label82);
        aSMifierMethodVisitor31.visitLabel(label82);
        aSMifierMethodVisitor0.visitJumpInsn((int) '4', label82);
        java.util.List list86 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor0.visitAnnotation("L1761736395", false);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(list86);
        org.junit.Assert.assertNotNull(annotationVisitor89);
    }

    @Test
    public void test12111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12111");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) (short) 22113);
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("hi!");
        printWriter3.print((int) 'a');
        printWriter3.println("");
        printWriter3.print((float) 590080L);
        java.lang.Object[] objArray11 = null;
        java.io.PrintWriter printWriter12 = printWriter3.printf("hi!", objArray11);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((int) 'a');
        printWriter14.println("");
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        aSMifierClassVisitor20.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierClassVisitor20.visitAnnotation("", false);
        printWriter14.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter14);
        java.io.PrintWriter printWriter32 = printWriter14.append(' ');
        printWriter14.println(true);
        printWriter14.println(false);
        printWriter12.print((java.lang.Object) false);
        printWriter12.write("L2113189186", 0, 10);
        printWriter12.println((double) (-1L));
        int int44 = classWriter1.newConst((java.lang.Object) (-1L));
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = classWriter1.visitAnnotation("L108132274", false);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(printWriter32);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(annotationVisitor47);
    }

    @Test
    public void test12112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12112");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((int) 'a');
        printWriter40.println("");
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        aSMifierClassVisitor46.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierClassVisitor46.visitAnnotation("", false);
        printWriter40.print((java.lang.Object) false);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter40);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        java.io.PrintWriter printWriter70 = printWriter40.printf("hi!", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter71 = printWriter35.printf("L1703143512", (java.lang.Object[]) strArray68);
        printWriter35.print(true);
        printWriter35.print("L834812042");
        printWriter35.println();
        printWriter35.print(true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(printWriter71);
    }

    @Test
    public void test12113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12113");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L994489370");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        printWriter40.close();
        printWriter40.print((double) 590080L);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        char[] charArray53 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter46.print(charArray53);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        aSMifierClassVisitor55.visitEnd();
        aSMifierClassVisitor55.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor55.visitAnnotation("L326432149", false);
        java.io.PrintWriter printWriter66 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor67 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter66);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor67.visit(2, (int) (byte) 0, "", "", "", strArray76);
        aSMifierClassVisitor55.visit(12, (int) (short) 0, "L1555790481", "L2101667039", "L137501116", strArray76);
        java.io.PrintWriter printWriter79 = printWriter40.format("", (java.lang.Object[]) strArray76);
        printWriter79.println();
        printWriter79.println(false);
        java.io.PrintWriter printWriter83 = new java.io.PrintWriter((java.io.Writer) printWriter79);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter79);
    }

    @Test
    public void test12114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12114");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor36);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((-889275714));
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label63 = null;
        int[] intArray65 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label63, intArray65, labelArray66);
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label45, intArray54, labelArray66);
        java.io.PrintWriter printWriter69 = printWriter39.format(locale42, "hi!", (java.lang.Object[]) labelArray66);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        char[] charArray78 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter71.print(charArray78);
        printWriter69.print(charArray78);
        printWriter69.print(true);
        aSMifierMethodVisitor23.print(printWriter69);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor23);
        aSMifierMethodVisitor23.visitIntInsn(1, 51966);
        aSMifierMethodVisitor23.visitMaxs(18, 115);
        aSMifierMethodVisitor23.visitMaxs((-889275714), (int) (short) 29782);
        aSMifierMethodVisitor23.visitMethodInsn(69, "L836986691", "L1960331274", "L137136720");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1]");
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12115");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        printWriter1.print("L1434348811");
        java.io.PrintWriter printWriter13 = printWriter1.append((java.lang.CharSequence) "L1544572272");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierClassVisitor14.visitAnnotation("L337574950", false);
        aSMifierClassVisitor14.visitOuterClass("L821985585", "L1434348811", "L389484434");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor14.visitAnnotation("L1853824624", true);
        java.lang.Object obj29 = null;
        org.mockito.asm.FieldVisitor fieldVisitor30 = aSMifierClassVisitor14.visitField((int) (short) 257, "L160085342", "L1984018713", "L1431375207", obj29);
        org.mockito.asm.Attribute attribute31 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor30.visitAttribute(attribute31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(fieldVisitor30);
    }

    @Test
    public void test12116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12116");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1889738775", (int) (short) -16896);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12117");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        aSMifierMethodVisitor0.visitInsn(9);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 17);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitParameterAnnotation(1763771136, "L555214098", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor39.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor39.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list51 = aSMifierMethodVisitor39.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label60 = null;
        int[] intArray62 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label60, intArray62, labelArray63);
        java.util.List list65 = aSMifierMethodVisitor54.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor54.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor54.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.Label label74 = new org.mockito.asm.Label();
        java.lang.Object obj75 = label74.info;
        java.lang.String str76 = label74.toString();
        aSMifierMethodVisitor54.visitLineNumber((int) '#', label74);
        aSMifierMethodVisitor39.visitLabel(label74);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn(65539, label74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 65539");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNull(obj75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L411693152" + "'", str76, "L411693152");
    }

    @Test
    public void test12118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12118");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitSource("L1669980843", "L1669980843");
        aSMifierClassVisitor1.visitSource("L2113189186", "");
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter24.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter24.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor36 = classWriter24.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray37 = classWriter24.toByteArray();
        org.mockito.asm.ByteVector byteVector40 = byteVector20.putByteArray(byteArray37, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader41 = new org.mockito.asm.ClassReader(byteArray37);
        long long43 = classReader41.readLong((int) (byte) 100);
        long long45 = classReader41.readLong((int) (byte) 10);
        java.lang.String[] strArray46 = classReader41.getInterfaces();
        int int48 = classReader41.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader41, 0);
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter(classReader41, (int) (short) 1);
        classWriter52.visitSource("L1669980843", "L1669980843");
        int int57 = classWriter52.newUTF8("L459227517");
        org.mockito.asm.FieldVisitor fieldVisitor58 = aSMifierClassVisitor1.visitField(57174305, "L237245406", "L1216476214", "L298663367", (java.lang.Object) "L459227517");
        aSMifierClassVisitor1.visitInnerClass("L326432149", "L598840791", "", (int) (short) -326);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "L237245406", 65210);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor73.visitCode();
        aSMifierMethodVisitor73.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor73.visitAnnotation("hi!", false);
        aSMifierMethodVisitor73.visitMethodInsn(1, "L142696279", "L994489370", "L326432149");
        org.mockito.asm.FieldVisitor fieldVisitor91 = aSMifierClassVisitor1.visitField((-1161953280), "L139692246", "L994489370", "", (java.lang.Object) aSMifierMethodVisitor73);
        aSMifierMethodVisitor73.visitVarInsn(0, 19);
        org.mockito.asm.Attribute attribute95 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor73.visitAttribute(attribute95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(fieldVisitor36);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 8532477865490146625L + "'", long43 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 72057598333118569L + "'", long45 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor85);
        org.junit.Assert.assertNotNull(fieldVisitor91);
    }

    @Test
    public void test12119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12119");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        java.util.List list24 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1691870655", 24942);
        java.util.List list28 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(list28);
    }

    @Test
    public void test12120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12120");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        printWriter1.write("");
        printWriter1.write("L994489370");
        java.io.PrintWriter printWriter9 = printWriter1.append((java.lang.CharSequence) "L237245406");
        printWriter9.print((float) (short) 22113);
        printWriter9.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor13 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        printWriter9.println(16842765);
        org.junit.Assert.assertNotNull(printWriter9);
    }

    @Test
    public void test12121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12121");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor13.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor13.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor13.visitAnnotation("hi!", false);
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        aSMifierMethodVisitor13.visitLineNumber(10, label29);
        aSMifierMethodVisitor0.visitLineNumber(1, label29);
        aSMifierMethodVisitor0.visitMaxs(1536, 16779859);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor35.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor35.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor35.visitAnnotation("hi!", false);
        aSMifierMethodVisitor35.visitVarInsn(86, (int) (short) 100);
        aSMifierMethodVisitor35.visitMultiANewArrayInsn("L1906590307", 26729);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor57.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor70.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor70.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor70.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor70.visitAnnotation("hi!", false);
        org.mockito.asm.Label label86 = new org.mockito.asm.Label();
        aSMifierMethodVisitor70.visitLineNumber(10, label86);
        aSMifierMethodVisitor57.visitLineNumber(1, label86);
        java.lang.Object obj89 = label86.info;
        aSMifierMethodVisitor35.visitLineNumber(16780108, label86);
        aSMifierMethodVisitor0.visitLabel(label86);
        aSMifierMethodVisitor0.visitMaxs(0, 19);
        aSMifierMethodVisitor0.visitMethodInsn(36, "L1715840275", "L1973785860", "L929094301");
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test12122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12122");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.lang.Object[] objArray9 = null;
        java.io.PrintWriter printWriter10 = printWriter1.printf("hi!", objArray9);
        printWriter10.println('a');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        printWriter13.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        aSMifierClassVisitor16.visitSource("L821985585", "L666971223");
        aSMifierClassVisitor16.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor25.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor36.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor36.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor36.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass52 = aSMifierMethodVisitor36.getClass();
        aSMifierMethodVisitor25.visitLdcInsn((java.lang.Object) wildcardClass52);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor25.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor25.visitTypeInsn(0, "L601661571");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor25.visitParameterAnnotation((int) (byte) 10, "L1845262982", false);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        java.io.PrintWriter printWriter70 = printWriter65.append('#');
        printWriter70.write("L1105153118");
        printWriter70.write((int) 'a');
        aSMifierMethodVisitor25.print(printWriter70);
        org.mockito.asm.FieldVisitor fieldVisitor76 = aSMifierClassVisitor16.visitField(8451, "L1017243937", "L9178859", "L207321209", (java.lang.Object) printWriter70);
        aSMifierClassVisitor16.visitSource("L661313578", "L1278664853");
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
    }

    @Test
    public void test12123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12123");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor0.visitAnnotation("L454715523", true);
        aSMifierMethodVisitor0.visitMethodInsn(11, "L326432149", "L142696279", "L96121905");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(65210, 101);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12124");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1434348811", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("L1281777590", true);
        aSMifierMethodVisitor0.visitMaxs(22113, (int) (short) -326);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test12125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12125");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        aSMifierMethodVisitor0.visitVarInsn(12, 3);
        aSMifierMethodVisitor0.visitTypeInsn(12, "L648105835");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 4, "L911946641", "L1355584678", "L1431375207");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 25196, 28275);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test12126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12126");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray30 = classWriter17.toByteArray();
        org.mockito.asm.ByteVector byteVector33 = byteVector13.putByteArray(byteArray30, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray30);
        long long36 = classReader34.readLong((int) (byte) 100);
        long long38 = classReader34.readLong((int) (byte) 10);
        java.lang.String[] strArray39 = classReader34.getInterfaces();
        aSMifierClassVisitor4.visit((int) (byte) 1, (-1), "", "hi!", "", strArray39);
        aSMifierClassVisitor4.visitOuterClass("L1434348811", "L326432149", "L994489370");
        aSMifierClassVisitor4.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor4.visitAnnotation("L2113189186", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = annotationVisitor48.visitArray("L666971223");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = annotationVisitor48.visitAnnotation("L1434348811", "L1847055122");
        annotationVisitor53.visitEnum("L1769377728", "L660537423", "L1450497477");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 8532477865490146625L + "'", long36 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 72057598333118569L + "'", long38 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test12127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12127");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 1, 7);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotation("L799304101", true);
        aSMifierMethodVisitor0.visitMaxs(1, 3);
        aSMifierMethodVisitor0.visitIntInsn(14, 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs((int) ' ', 67);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test12128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12128");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor49.visitLineNumber((int) (byte) 10, label59);
        aSMifierMethodVisitor49.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor49.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        aSMifierMethodVisitor49.visitLineNumber(4, label70);
        aSMifierMethodVisitor0.visitLineNumber((-1), label70);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn(12, "L2113189186", "L407895089", "L326432149");
        aSMifierMethodVisitor0.visitTypeInsn(11, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor0.visitAnnotation("L1805888593", false);
        java.util.List list88 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor87);
        org.junit.Assert.assertNotNull(list88);
        org.junit.Assert.assertNotNull(annotationVisitor89);
    }

    @Test
    public void test12129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12129");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L994489370");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor41.visitOuterClass("L337574950", "L659269359", "L1592299270");
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter58 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter58.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = classWriter58.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor70 = classWriter58.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray71 = classWriter58.toByteArray();
        org.mockito.asm.ByteVector byteVector74 = byteVector54.putByteArray(byteArray71, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader75 = new org.mockito.asm.ClassReader(byteArray71);
        long long77 = classReader75.readLong((int) (byte) 100);
        long long79 = classReader75.readLong((int) (byte) 10);
        java.lang.String[] strArray80 = classReader75.getInterfaces();
        int int82 = classReader75.readByte((int) '#');
        long long84 = classReader75.readLong(4);
        int int86 = classReader75.readInt((int) (short) 9);
        long long88 = classReader75.readLong((int) '4');
        java.lang.String str89 = classReader75.getSuperName();
        int int91 = classReader75.getItem((int) (byte) 1);
        java.lang.String[] strArray92 = classReader75.getInterfaces();
        aSMifierClassVisitor41.visit((int) '#', 1853118049, "L1929462322", "L1003926609", "L1520643123", strArray92);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 8532477865490146625L + "'", long77 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 72057598333118569L + "'", long79 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 86 + "'", int82 == 86);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 590080L + "'", long84 == 590080L);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 151060480 + "'", int86 == 151060480);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 72068947506459235L + "'", long88 == 72068947506459235L);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 11 + "'", int91 == 11);
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test12130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12130");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter9.println('#');
        printWriter9.write("L298663367");
        java.io.PrintWriter printWriter81 = printWriter9.append((java.lang.CharSequence) "L1085773562");
        printWriter81.println((long) (short) 28275);
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter((java.io.Writer) printWriter81);
        printWriter84.print(27745);
        printWriter84.print((long) 27);
        java.io.PrintWriter printWriter90 = printWriter84.append('a');
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test12131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12131");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print(9);
        printWriter1.println('4');
        printWriter1.println((double) 13);
        printWriter1.print((double) 0.0f);
        printWriter1.println((long) (short) 872);
    }

    @Test
    public void test12132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12132");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.ClassWriter classWriter5 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor11 = classWriter5.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = fieldVisitor11.visitAnnotation("hi!", true);
        printWriter1.print((java.lang.Object) annotationVisitor14);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor17.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putByte(2);
        annotationVisitor29.visit("", (java.lang.Object) byteVector32);
        org.mockito.asm.ByteVector byteVector39 = byteVector32.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector41 = byteVector32.putByte(3);
        org.mockito.asm.ByteVector byteVector43 = byteVector32.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter51 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter51.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = classWriter51.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor63 = classWriter51.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray64 = classWriter51.toByteArray();
        org.mockito.asm.ByteVector byteVector67 = byteVector47.putByteArray(byteArray64, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader68 = new org.mockito.asm.ClassReader(byteArray64);
        org.mockito.asm.ClassReader classReader69 = new org.mockito.asm.ClassReader(byteArray64);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray64);
        byte[] byteArray71 = classReader70.b;
        org.mockito.asm.ByteVector byteVector74 = byteVector43.putByteArray(byteArray71, 0, 5);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putLong(6224375411464273929L);
        org.mockito.asm.ByteVector byteVector78 = byteVector74.putByte(256);
        annotationVisitor14.visit("L523399549", (java.lang.Object) 256);
        org.junit.Assert.assertNotNull(fieldVisitor11);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
    }

    @Test
    public void test12133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12133");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor50.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor50.visitAnnotation("hi!", false);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLineNumber(10, label66);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 9, label66);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor0.visitAnnotation("L623141356", false);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor71);
    }

    @Test
    public void test12134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12134");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        int[] intArray19 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label17, intArray19, labelArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label28 = null;
        int[] intArray30 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray31 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label28, intArray30, labelArray31);
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label10, intArray19, labelArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label8, intArray19, labelArray56);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "L326432149", "L326432149", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(186, 0);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(97, 118);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1]");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1]");
        org.junit.Assert.assertNotNull(labelArray31);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
    }

    @Test
    public void test12135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12135");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor10.visitAnnotation("L1555790481", false);
        aSMifierClassVisitor10.visitOuterClass("L406814154", "L337574950", "L1847055122");
        aSMifierClassVisitor10.visitEnd();
        java.lang.String[] strArray24 = null;
        aSMifierClassVisitor10.visit((int) (short) 27745, (int) (short) -326, "L955027613", "", "L1108808500", strArray24);
        aSMifierClassVisitor10.visitEnd();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test12136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12136");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.util.Locale locale8 = null;
        org.mockito.asm.ClassWriter classWriter11 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter11.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter39.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter39.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter64 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor65.visit(2, (int) (byte) 0, "", "", "", strArray74);
        classWriter39.visit((int) 'a', (int) '#', "", "", "hi!", strArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label84 = null;
        int[] intArray86 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor78.visitLookupSwitchInsn(label84, intArray86, labelArray87);
        aSMifierMethodVisitor23.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray74, (int) (short) 100, (java.lang.Object[]) labelArray87);
        classWriter11.visit(7, (-889275714), "", "hi!", "hi!", strArray74);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale8, "hi!", (java.lang.Object[]) strArray74);
        printWriter1.print((double) 24942);
        printWriter1.print((double) '#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor96 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor96.visitSource("L761335155", "L1518460396");
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test12137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12137");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor9.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor9.visitLineNumber((int) (byte) 10, label19);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor9.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label30 = new org.mockito.asm.Label();
        aSMifierMethodVisitor9.visitLineNumber(4, label30);
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label30);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 100, 9);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (short) 26913, 1634628694);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 26913");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12138");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitInsn(30);
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test12139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12139");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        boolean boolean23 = printWriter19.checkError();
        java.io.PrintWriter printWriter25 = printWriter19.append((java.lang.CharSequence) "L1695791093");
        printWriter25.print((int) (byte) -1);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(printWriter25);
    }

    @Test
    public void test12140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12140");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        long long47 = classReader43.readLong((int) (byte) 10);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter(classReader43, (int) (short) 30313);
        int int51 = classReader43.getItem(4);
        byte[] byteArray52 = classReader43.b;
        printWriter1.println((java.lang.Object) classReader43);
        printWriter1.print((double) 28);
        char[] charArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write(charArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 72057598333118569L + "'", long47 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 25 + "'", int51 == 25);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test12141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12141");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((int) '4');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter21.visitEnd();
        classWriter21.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter21.visitSource("hi!", "hi!");
        byte[] byteArray43 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector46 = byteVector15.putByteArray(byteArray43, (int) (short) 10, (int) '4');
        annotationVisitor10.visit("L598840791", (java.lang.Object) byteArray43);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray43);
        byte[] byteArray49 = classReader48.b;
        java.lang.String str50 = classReader48.getSuperName();
        java.lang.String[] strArray51 = classReader48.getInterfaces();
        // The following exception was thrown during execution in test generation
        try {
            int int53 = classReader48.readInt(22113);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test12142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12142");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println(false);
        printWriter1.println();
        printWriter1.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor26.visitInnerClass("", "L723576843", "", 16);
        aSMifierClassVisitor26.visitEnd();
        java.util.List list33 = aSMifierClassVisitor26.text;
        aSMifierClassVisitor26.visitInnerClass("L117625955", "L2113189186", "L1303822811", 36);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test12143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12143");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.Writer) printWriter19, true);
        printWriter24.print(false);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter27.println((double) 8386111977330471680L);
        printWriter27.print(false);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((-889275714));
        printWriter33.write("");
        boolean boolean38 = printWriter33.checkError();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label49 = null;
        int[] intArray51 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor43.visitLookupSwitchInsn(label49, intArray51, labelArray52);
        java.util.List list54 = aSMifierMethodVisitor43.getText();
        printWriter40.println((java.lang.Object) list54);
        printWriter40.write((-889275714));
        printWriter40.println('a');
        printWriter40.print("L1000949368");
        printWriter40.println(' ');
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter((java.io.Writer) printWriter40);
        printWriter64.write(16);
        printWriter64.write("L1236963294");
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter64);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        printWriter71.print((-889275714));
        printWriter71.print(0.0d);
        java.io.PrintWriter printWriter77 = new java.io.PrintWriter((java.io.Writer) printWriter71, false);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter("hi!");
        char[] charArray86 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter79.print(charArray86);
        printWriter71.write(charArray86);
        printWriter64.write(charArray86);
        printWriter33.println(charArray86);
        printWriter27.println(charArray86);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12144");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("hi!", true);
        aSMifierClassVisitor1.visitSource("L519300220", "L978789454");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((-889275714));
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        java.io.PrintWriter printWriter59 = printWriter29.format(locale32, "hi!", (java.lang.Object[]) labelArray56);
        printWriter59.print((int) '4');
        java.io.PrintWriter printWriter63 = printWriter59.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter63, false);
        printWriter63.println("L1479479862");
        org.mockito.asm.FieldVisitor fieldVisitor68 = aSMifierClassVisitor1.visitField(123, "L261648562", "L671482438", "L326432149", (java.lang.Object) printWriter63);
        aSMifierClassVisitor1.visitOuterClass("L964051540", "L432974808", "L1929462322");
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(fieldVisitor68);
    }

    @Test
    public void test12145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12145");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L142696279", 13);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1977427665", (int) (short) -16896);
    }

    @Test
    public void test12146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12146");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor31.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label41 = null;
        aSMifierMethodVisitor31.visitLineNumber((int) (byte) 10, label41);
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        aSMifierMethodVisitor31.visitTableSwitchInsn((int) (byte) 0, 51966, label45, labelArray55);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor31.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor61.visitLineNumber((int) (byte) 10, label71);
        aSMifierMethodVisitor61.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor61.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label82 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(4, label82);
        aSMifierMethodVisitor31.visitLabel(label82);
        aSMifierMethodVisitor0.visitJumpInsn((int) '4', label82);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1321861150", (int) (byte) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 1, 6);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test12147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12147");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        classWriter1.visitOuterClass("hi!", "", "hi!");
        classWriter1.visitEnd();
        classWriter1.visitEnd();
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label24 = null;
        int[] intArray26 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label24, intArray26, labelArray27);
        java.util.List list29 = aSMifierMethodVisitor18.getText();
        printWriter15.println((java.lang.Object) list29);
        printWriter15.print((double) 10L);
        printWriter15.print('4');
        printWriter15.print("");
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        java.util.List list52 = aSMifierMethodVisitor41.getText();
        printWriter38.println((java.lang.Object) list52);
        printWriter38.print((double) 10L);
        printWriter38.print(false);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierClassVisitor59.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierClassVisitor59.visitAnnotation("hi!", false);
        printWriter38.println((java.lang.Object) aSMifierClassVisitor59);
        printWriter15.print((java.lang.Object) printWriter38);
        printWriter15.print((double) (short) 1);
        java.io.PrintWriter printWriter81 = printWriter15.append('#');
        java.io.PrintWriter printWriter83 = printWriter15.append('a');
        int int84 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitSource("L1619590163", "L1734603415");
        org.mockito.asm.Attribute attribute88 = null;
        // The following exception was thrown during execution in test generation
        try {
            classWriter1.visitAttribute(attribute88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1]");
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 5 + "'", int84 == 5);
    }

    @Test
    public void test12148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12148");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("", true);
        classWriter1.visitSource("", "");
        classWriter1.visitEnd();
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitOuterClass("hi!", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter20.visitAnnotation("", true);
        classWriter20.visitOuterClass("L142696279", "", "hi!");
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter1.visitField((-889275714), "L142696279", "hi!", "L326432149", (java.lang.Object) "");
        classWriter1.visitSource("L285151538", "L139692246");
        int int37 = classWriter1.newUTF8("L1855853747");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor42.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor42.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor42.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor42.visitEnd();
        aSMifierMethodVisitor42.visitCode();
        aSMifierMethodVisitor42.visitMethodInsn(6, "L1749641217", "L2113189186", "L834812042");
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("L1083567291", 11);
        aSMifierMethodVisitor42.visitEnd();
        aSMifierMethodVisitor42.visitMaxs(19, 115);
        aSMifierMethodVisitor42.visitTypeInsn((int) ' ', "L25251448");
        org.mockito.asm.FieldVisitor fieldVisitor81 = classWriter1.visitField((int) (short) 100, "L1527821892", "L1991050711", "L870080724", (java.lang.Object) "L25251448");
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(fieldVisitor81);
    }

    @Test
    public void test12149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitVarInsn(0, 22);
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotation("L1668224641", true);
        aSMifierMethodVisitor0.visitIincInsn(28276, 14);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test12150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12150");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.flush();
        java.io.PrintWriter printWriter8 = printWriter1.append((java.lang.CharSequence) "L61669440");
        printWriter8.close();
        printWriter8.print((float) 16779859);
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor14.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray29 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor14.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray29, (int) 'a', (java.lang.Object[]) labelArray40);
        org.mockito.asm.Attribute[] attributeArray45 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor47.visitLineNumber((int) (byte) 10, label57);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        int[] intArray70 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label68, intArray70, labelArray71);
        aSMifierMethodVisitor47.visitTableSwitchInsn((int) (byte) 0, 51966, label61, labelArray71);
        aSMifierMethodVisitor14.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray45, (int) '4', (java.lang.Object[]) labelArray71);
        java.io.PrintWriter printWriter75 = printWriter8.format(locale12, "L1067926277", (java.lang.Object[]) attributeArray45);
        printWriter8.println(' ');
        printWriter8.print((double) 0.0f);
        org.junit.Assert.assertNotNull(printWriter8);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(attributeArray29);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(attributeArray45);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test12151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12151");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print((-889275714));
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label30 = null;
        int[] intArray32 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label30, intArray32, labelArray33);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label23, intArray32, labelArray44);
        java.io.PrintWriter printWriter47 = printWriter17.format(locale20, "hi!", (java.lang.Object[]) labelArray44);
        printWriter17.println((int) (short) 1);
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter52 = printWriter17.format("hi!", (java.lang.Object[]) strArray51);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter55 = printWriter17.printf("", (java.lang.Object[]) strArray54);
        org.mockito.asm.MethodVisitor methodVisitor56 = aSMifierClassVisitor1.visitMethod(57174305, "L1749641217", "L1230702653", "L326432149", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierClassVisitor1.visitAnnotation("L834812042", false);
        org.mockito.asm.ClassWriter classWriter65 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter65.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = classWriter65.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor77 = classWriter65.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter65.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = classWriter65.visitAnnotation("hi!", true);
        classWriter65.visitEnd();
        classWriter65.visitSource("L61669440", "L666971223");
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = classWriter65.visitAnnotation("L2113189186", false);
        org.mockito.asm.FieldVisitor fieldVisitor89 = aSMifierClassVisitor1.visitField((int) (short) 27745, "L2101667039", "L598840791", "L2018459260", (java.lang.Object) "L2113189186");
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = fieldVisitor89.visitAnnotation("L1070167885", false);
        org.mockito.asm.Attribute attribute93 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor89.visitAttribute(attribute93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1]");
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(methodVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(fieldVisitor89);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test12152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12152");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list18 = aSMifierMethodVisitor0.text;
        java.util.List list19 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor21.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor21.visitLocalVariable("hi!", "hi!", "hi!", label36, label37, 1);
        org.mockito.asm.Label label41 = new org.mockito.asm.Label();
        aSMifierMethodVisitor21.visitLineNumber(8, label41);
        aSMifierMethodVisitor0.visitLineNumber(1634628694, label41);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(annotationVisitor44);
    }

    @Test
    public void test12153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12153");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        classWriter16.visitEnd();
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitInnerClass("L298663367", "L1715840275", "L614568462", 18);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter50.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = classWriter50.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter50.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray63 = classWriter50.toByteArray();
        org.mockito.asm.ByteVector byteVector66 = byteVector46.putByteArray(byteArray63, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader67 = new org.mockito.asm.ClassReader(byteArray63);
        long long69 = classReader67.readLong((int) (byte) 100);
        long long71 = classReader67.readLong((int) (byte) 10);
        java.lang.String str72 = classReader67.getSuperName();
        java.lang.String[] strArray73 = classReader67.getInterfaces();
        classWriter32.visit((int) (byte) 1, 1869480192, "L1911123705", "L173581797", "", strArray73);
        classWriter16.visit(104, 0, "L1668224641", "L1228713414", "L590041901", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor80 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor80.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor80.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor80.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.FieldVisitor fieldVisitor91 = classWriter16.visitField(34, "L43786096", "L447192223", "L735954115", (java.lang.Object) "L799304101");
        int int96 = classWriter16.newMethod("L1284973471", "", "L1651106531", true);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 8532477865490146625L + "'", long69 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 72057598333118569L + "'", long71 == 72057598333118569L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(annotationVisitor90);
        org.junit.Assert.assertNotNull(fieldVisitor91);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 17 + "'", int96 == 17);
    }

    @Test
    public void test12154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12154");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitInsn((int) (short) 1);
        java.util.List list45 = aSMifierMethodVisitor24.getText();
        aSMifierMethodVisitor24.visitTypeInsn((int) '#', "L1216476214");
        aSMifierMethodVisitor24.visitEnd();
        aSMifierMethodVisitor24.visitVarInsn(118, 16779859);
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor24.visitLabel(label53);
        aSMifierMethodVisitor24.visitMaxs(4, 1699311222);
        aSMifierMethodVisitor24.visitCode();
        java.lang.Class<?> wildcardClass59 = aSMifierMethodVisitor24.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test12155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12155");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        boolean boolean38 = printWriter37.checkError();
        boolean boolean39 = printWriter37.checkError();
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter42.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray48);
        java.io.PrintWriter printWriter50 = printWriter37.format("L1669980843", (java.lang.Object[]) strArray48);
        printWriter50.print(190);
        printWriter50.print(true);
        printWriter50.print("L767403187");
        printWriter50.print('a');
        printWriter50.write(66);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test12156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12156");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(17);
        int int3 = classWriter1.newClass("L1555790481");
        classWriter1.visitEnd();
        int int9 = classWriter1.newMethod("L1085773562", "L365115101", "L1837291041", false);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label24 = null;
        int[] intArray26 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label24, intArray26, labelArray27);
        java.util.List list29 = aSMifierMethodVisitor18.getText();
        printWriter15.println((java.lang.Object) list29);
        printWriter15.print((double) 10L);
        printWriter15.print(false);
        java.io.PrintWriter printWriter35 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter35);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor36.visit(2, (int) (byte) 0, "", "", "", strArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor36.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor36.visitAnnotation("hi!", false);
        printWriter15.println((java.lang.Object) aSMifierClassVisitor36);
        aSMifierClassVisitor36.visitOuterClass("L237245406", "L1703143512", "L1669980843");
        aSMifierClassVisitor36.visitSource("L454715523", "L1556230913");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierClassVisitor36.visitAnnotation("L365115101", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter1.visitField((-1107296256), "L799304101", "L48323983", "L614568462", (java.lang.Object) true);
        java.lang.Object obj69 = null;
        org.mockito.asm.FieldVisitor fieldVisitor70 = classWriter1.visitField(2305, "L615340472", "L1278664853", "L1453527686", obj69);
        classWriter1.visitEnd();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1]");
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor70);
    }

    @Test
    public void test12157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12157");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor34.visitAnnotation("", true);
        aSMifierClassVisitor34.visitEnd();
        aSMifierClassVisitor34.visitOuterClass("L614568462", "L139692246", "L659269359");
        aSMifierClassVisitor34.visitInnerClass("L1305827832", "L371352799", "L371352799", 0);
        java.util.List list48 = aSMifierClassVisitor34.getText();
        java.lang.Class<?> wildcardClass49 = list48.getClass();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test12158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12158");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.lang.Object[] objArray9 = null;
        java.io.PrintWriter printWriter10 = printWriter1.printf("hi!", objArray9);
        printWriter10.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor13.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor13.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor13.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor13.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        aSMifierMethodVisitor13.visitLabel(label33);
        aSMifierMethodVisitor13.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor37.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor37.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor37.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor37.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        aSMifierMethodVisitor37.visitLabel(label57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor59.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor59.visitIincInsn(1, 0);
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor59.visitLabel(label71);
        label57.info = aSMifierMethodVisitor59;
        aSMifierMethodVisitor13.visitLineNumber(24942, label57);
        java.lang.Object obj75 = label57.info;
        printWriter10.print((java.lang.Object) label57);
        java.lang.Object obj77 = label57.info;
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test12159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12159");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor19.visitLineNumber((int) (byte) 10, label29);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor19.visitTableSwitchInsn((int) (byte) 0, 51966, label33, labelArray43);
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor19.visitLabel(label46);
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        aSMifierMethodVisitor19.visitLabel(label48);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label48);
        java.io.PrintWriter printWriter51 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor52 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        aSMifierClassVisitor52.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor52.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitParameterAnnotation(1, "L298663367", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "L1434348811", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "L1962374298");
        aSMifierMethodVisitor0.visitMaxs(27745, 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn(13, "L2146012452");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test12160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12160");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitVarInsn(12, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn(28, "L215000262");
        aSMifierMethodVisitor0.visitCode();
    }

    @Test
    public void test12161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12161");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println(142);
        printWriter1.print(123);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write("L1728871576", 1869898100, (int) (short) 28526);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 1869906273");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test12162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12162");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -13570, "L1675715472", false);
        aSMifierMethodVisitor0.visitTypeInsn(15, "L267810866");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1930290201", (int) (short) 20);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test12163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12163");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.io.PrintWriter printWriter21 = printWriter1.append(' ');
        printWriter21.write(24942);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.print((-889275714));
        java.util.Locale locale29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor44.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label50 = null;
        int[] intArray52 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray53 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label50, intArray52, labelArray53);
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label32, intArray41, labelArray53);
        java.io.PrintWriter printWriter56 = printWriter26.format(locale29, "hi!", (java.lang.Object[]) labelArray53);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter("hi!");
        char[] charArray65 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter58.print(charArray65);
        printWriter56.print(charArray65);
        printWriter21.println(charArray65);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        printWriter21.write("L371187565");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[1]");
        org.junit.Assert.assertNotNull(labelArray53);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12164");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        java.io.PrintWriter printWriter67 = printWriter1.append('#');
        java.io.PrintWriter printWriter69 = printWriter1.append('a');
        printWriter1.write(10);
        printWriter1.println((double) 28526);
        printWriter1.print(true);
        printWriter1.write("L1056201301");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter69);
    }

    @Test
    public void test12165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12165");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitSource("L1669980843", "L1669980843");
        aSMifierClassVisitor1.visitSource("L2113189186", "");
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter24.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter24.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor36 = classWriter24.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray37 = classWriter24.toByteArray();
        org.mockito.asm.ByteVector byteVector40 = byteVector20.putByteArray(byteArray37, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader41 = new org.mockito.asm.ClassReader(byteArray37);
        long long43 = classReader41.readLong((int) (byte) 100);
        long long45 = classReader41.readLong((int) (byte) 10);
        java.lang.String[] strArray46 = classReader41.getInterfaces();
        int int48 = classReader41.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader41, 0);
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter(classReader41, (int) (short) 1);
        classWriter52.visitSource("L1669980843", "L1669980843");
        int int57 = classWriter52.newUTF8("L459227517");
        org.mockito.asm.FieldVisitor fieldVisitor58 = aSMifierClassVisitor1.visitField(57174305, "L237245406", "L1216476214", "L298663367", (java.lang.Object) "L459227517");
        aSMifierClassVisitor1.visitOuterClass("L750884848", "L1968448721", "L136332369");
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(fieldVisitor36);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 8532477865490146625L + "'", long43 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 72057598333118569L + "'", long45 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertNotNull(fieldVisitor58);
    }

    @Test
    public void test12166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12166");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.print("L1555790481");
        java.io.PrintWriter printWriter92 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
    }

    @Test
    public void test12167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12167");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        printWriter1.close();
        printWriter1.println((float) 18);
        printWriter1.println(false);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter74 = printWriter1.append((java.lang.CharSequence) "L1177558162", (int) (short) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test12168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12168");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor50.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor50.visitAnnotation("hi!", false);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLineNumber(10, label66);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 9, label66);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor72.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test12169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12169");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        long long47 = classReader43.readLong((int) (byte) 10);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter(classReader43, (int) (short) 30313);
        int int51 = classReader43.getItem(4);
        byte[] byteArray52 = classReader43.b;
        printWriter1.println((java.lang.Object) classReader43);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter55.println((double) (short) 256);
        printWriter55.write(1698981218);
        printWriter55.print(28526);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 72057598333118569L + "'", long47 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 25 + "'", int51 == 25);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test12170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12170");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((int) 'a');
        printWriter35.println("");
        java.io.PrintWriter printWriter40 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        aSMifierClassVisitor41.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor41.visitAnnotation("", false);
        printWriter35.print((java.lang.Object) false);
        printWriter35.print((double) 10.0f);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter((java.io.Writer) printWriter35);
        boolean boolean54 = printWriter53.checkError();
        printWriter53.println('4');
        printWriter1.print((java.lang.Object) printWriter53);
        // The following exception was thrown during execution in test generation
        try {
            printWriter53.write("L1628955470", 16778088, 190);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 16778278");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test12171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12171");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 256);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation((-1107296256), "L939261813", true);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Attribute attribute30 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test12172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12172");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = annotationVisitor13.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor13.visitAnnotation("", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor20.visitParameterAnnotation(25929, "L799304101", false);
        aSMifierMethodVisitor20.visitEnd();
        annotationVisitor13.visit("L1009311081", (java.lang.Object) aSMifierMethodVisitor20);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor20.visitParameterAnnotation(50331648, "L1276244777", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor20.visitParameterAnnotation((int) (short) 10, "L1492698303", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor20.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor20.visitParameterAnnotation(16779859, "L1454236833", false);
        aSMifierMethodVisitor20.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor20.visitParameterAnnotation(24, "L1737005341", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor20.visitParameterAnnotation(47806, "L1579492813", true);
        annotationVisitor54.visitEnd();
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test12173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12173");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), 9);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor55.visitLabel(label61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor64.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor64.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor64.visitLineNumber((int) (byte) 10, label74);
        aSMifierMethodVisitor64.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor64.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label85 = new org.mockito.asm.Label();
        aSMifierMethodVisitor64.visitLineNumber(4, label85);
        aSMifierMethodVisitor55.visitLineNumber((int) (short) 10, label85);
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label85);
        aSMifierMethodVisitor0.visitMaxs(12, 321);
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(254, 1751720195);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 254");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
    }

    @Test
    public void test12174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12174");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        aSMifierMethodVisitor34.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list64 = aSMifierMethodVisitor34.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor34.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor34.visitAnnotation("L1434348811", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor34);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 30313, "", true);
        aSMifierMethodVisitor0.visitIincInsn(50331648, 13);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 2534374302089219L);
        aSMifierMethodVisitor0.visitTypeInsn(30, "L1960608380");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test12175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12175");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitVarInsn(5, 0);
        aSMifierMethodVisitor0.visitMaxs(100, 13);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test12176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12176");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray53 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor38.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray53, (int) 'a', (java.lang.Object[]) labelArray64);
        aSMifierMethodVisitor23.visitTableSwitchInsn(8, (int) (byte) 1, label37, labelArray64);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-889275714), (int) '#', label22, labelArray64);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 1, "L1434348811", "L1441782014", "L1749641217");
        java.util.List list74 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) (short) 872, (-1161953280));
        aSMifierMethodVisitor0.visitInsn(118);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L365115101", 116);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(attributeArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(list74);
    }

    @Test
    public void test12177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12177");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label24.info = classWriter26;
        java.lang.Object obj40 = label24.info;
        aSMifierMethodVisitor0.visitLabel(label24);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitParameterAnnotation(320, "L407895089", false);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test12178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12178");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) '#');
        long long33 = classReader24.readLong(4);
        int int34 = classReader24.header;
        int int36 = classReader24.readUnsignedShort(11);
        java.lang.String[] strArray37 = classReader24.getInterfaces();
        java.lang.String str38 = classReader24.getSuperName();
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((int) 'a');
        printWriter41.println("");
        java.io.PrintWriter printWriter46 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor47 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        aSMifierClassVisitor47.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierClassVisitor47.visitAnnotation("", false);
        printWriter41.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        java.io.PrintWriter printWriter59 = printWriter41.append(' ');
        printWriter41.println(true);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter("hi!");
        char[] charArray70 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter63.print(charArray70);
        printWriter41.print(charArray70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = classReader24.readConst((int) (byte) -1, charArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 86 + "'", int31 == 86);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 590080L + "'", long33 == 590080L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 118 + "'", int34 == 118);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12179");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        boolean boolean34 = printWriter31.checkError();
        printWriter31.print("L1105153118");
        printWriter31.println(' ');
        printWriter31.print("L2063102727");
        printWriter31.print((double) 7575339346748768513L);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test12180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12180");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 1, 7);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotation("L799304101", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor0.visitAnnotation("L2112385861", false);
        aSMifierMethodVisitor0.visitIincInsn(0, 254);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) 872, "L580350571", "L96121905", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor44);
    }

    @Test
    public void test12181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12181");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        aSMifierMethodVisitor0.visitInsn(0);
        java.util.List list31 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMaxs((int) (short) 30313, 1);
        java.util.List list35 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(list35);
    }

    @Test
    public void test12182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12182");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        java.util.List list42 = aSMifierMethodVisitor24.text;
        aSMifierMethodVisitor24.visitIincInsn(24942, (int) '#');
        aSMifierMethodVisitor24.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor24.visitAnnotation("L679540244", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list42);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test12183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12183");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor22 = aSMifierClassVisitor1.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierClassVisitor1.visitAnnotation("L2099222213", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test12184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12184");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L174478886", 33);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "L1340859678", false);
        aSMifierMethodVisitor0.visitInsn(186);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test12185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12185");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1703143512");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        boolean boolean3 = printWriter1.checkError();
        printWriter1.println(1634497893);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test12186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12186");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print((float) 10L);
        printWriter31.println();
        printWriter31.println((double) 22113);
        printWriter31.flush();
        printWriter31.print(0);
        printWriter31.println('a');
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12187");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L601661571");
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitTypeInsn(100, "L666971223");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 100, "L96121905");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test12188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12188");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitOuterClass("hi!", "", "");
        classWriter1.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = classWriter1.visitAnnotation("L1592299270", true);
        byte[] byteArray80 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader81 = new org.mockito.asm.ClassReader(byteArray80);
        long long83 = classReader81.readLong((int) (short) 100);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 72068947506459235L + "'", long83 == 72068947506459235L);
    }

    @Test
    public void test12189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12189");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        aSMifierMethodVisitor0.visitIincInsn(5, 202);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotation("L298663367", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1675715472", 24);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 29556, (int) (short) 256);
        aSMifierMethodVisitor0.visitIntInsn(11, 7);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test12190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12190");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L943959020", "L1000949368", "L1200350890", (int) (short) -13570);
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter(86);
        java.io.PrintWriter printWriter29 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        org.mockito.asm.ClassWriter classWriter37 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter37.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter37.visitEnd();
        org.mockito.asm.ClassWriter classWriter51 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter51.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = classWriter51.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor63 = classWriter51.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter51.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor70 = classWriter51.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter76 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor77 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter76);
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor77.visit(2, (int) (byte) 0, "", "", "", strArray86);
        classWriter51.visit((int) 'a', (int) '#', "", "", "hi!", strArray86);
        classWriter37.visit(100, 100, "L326432149", "L1434348811", "", strArray86);
        aSMifierClassVisitor30.visit(590080, 256, "L994489370", "L237245406", "L1749641217", strArray86);
        classWriter23.visit(116, 152, "L1321861150", "L344842840", "L1278664853", strArray86);
        org.mockito.asm.MethodVisitor methodVisitor92 = aSMifierClassVisitor1.visitMethod(0, "L1556845882", "L704540978", "L1527711418", strArray86);
        org.mockito.asm.Attribute attribute93 = null;
        // The following exception was thrown during execution in test generation
        try {
            methodVisitor92.visitAttribute(attribute93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor70);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(methodVisitor92);
    }

    @Test
    public void test12191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12191");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.lang.Object[] objArray9 = null;
        java.io.PrintWriter printWriter10 = printWriter1.printf("hi!", objArray9);
        printWriter10.println('a');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter((java.io.Writer) printWriter10, false);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter23.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = classWriter23.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter23.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray36 = classWriter23.toByteArray();
        org.mockito.asm.ByteVector byteVector39 = byteVector19.putByteArray(byteArray36, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray36);
        long long42 = classReader40.readLong((int) (byte) 100);
        long long44 = classReader40.readLong((int) (byte) 10);
        java.lang.String[] strArray45 = classReader40.getInterfaces();
        int int47 = classReader40.readInt(0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter(classReader40, (int) '4');
        classWriter49.visitOuterClass("L2113189186", "hi!", "L1669980843");
        byte[] byteArray54 = classWriter49.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor59.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor59.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor59.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor59.visitFieldInsn(6, "L326432149", "L1434348811", "");
        org.mockito.asm.FieldVisitor fieldVisitor81 = classWriter49.visitField((int) (byte) 0, "L601661571", "L454715523", "L601661571", (java.lang.Object) "L326432149");
        int int86 = classWriter49.newMethod("L477731576", "L911973346", "L1321861150", false);
        int int89 = classWriter49.newNameType("L1770505064", "L836986691");
        classWriter49.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = classWriter49.visitAnnotation("L2106184417", false);
        printWriter10.println((java.lang.Object) annotationVisitor93);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 8532477865490146625L + "'", long42 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 72057598333118569L + "'", long44 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-889275714) + "'", int47 == (-889275714));
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 14, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 11, 76, 50, 49, 49, 51, 49, 56, 57, 49, 56, 54, 7, 0, 9, 1, 0, 11, 76, 49, 54, 54, 57, 57, 56, 48, 56, 52, 51, 12, 0, 2, 0, 11, 1, 0, 15, 69, 110, 99, 108, 111, 115, 105, 110, 103, 77, 101, 116, 104, 111, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 13, 0, 0, 0, 4, 0, 10, 0, 12]");
        org.junit.Assert.assertNotNull(fieldVisitor81);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 23 + "'", int86 == 23);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 26 + "'", int89 == 26);
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test12192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12192");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.println((int) (short) 256);
        printWriter51.print((long) 1);
        aSMifierMethodVisitor0.print(printWriter51);
        printWriter51.println((long) 0);
        java.io.PrintWriter printWriter62 = printWriter51.append(' ');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor63.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label73 = null;
        aSMifierMethodVisitor63.visitLineNumber((int) (byte) 10, label73);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor63.visitAnnotation("hi!", true);
        aSMifierMethodVisitor63.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor63.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor63.visitCode();
        java.util.List list85 = aSMifierMethodVisitor63.getText();
        printWriter51.println((java.lang.Object) list85);
        printWriter51.print((float) 28);
        char[] charArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            printWriter51.println(charArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(list85);
    }

    @Test
    public void test12193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12193");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotation("L1808073265", true);
        aSMifierMethodVisitor0.visitMaxs(17, 6);
        aSMifierMethodVisitor0.visitIincInsn(202, 3);
        aSMifierMethodVisitor0.visitTypeInsn(3, "L133657978");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test12194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12194");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitAnnotation("L1105153118", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label60 = null;
        int[] intArray62 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label60, intArray62, labelArray63);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor54.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor54.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor54);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L1124725269");
        aSMifierMethodVisitor0.visitInsn(25);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L1526989973");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test12195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12195");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println(0.0d);
        printWriter1.print('4');
        printWriter1.write(111);
        java.io.PrintWriter printWriter12 = printWriter1.append((java.lang.CharSequence) "L237245406");
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((-889275714));
        java.util.Locale locale17 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label27 = null;
        int[] intArray29 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray30 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor21.visitLookupSwitchInsn(label27, intArray29, labelArray30);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label20, intArray29, labelArray41);
        java.io.PrintWriter printWriter44 = printWriter14.format(locale17, "hi!", (java.lang.Object[]) labelArray41);
        printWriter44.print((int) '4');
        java.io.PrintWriter printWriter48 = printWriter44.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label60 = null;
        int[] intArray62 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label60, intArray62, labelArray63);
        java.util.List list65 = aSMifierMethodVisitor54.getText();
        printWriter51.println((java.lang.Object) list65);
        printWriter51.print((double) 10L);
        printWriter51.print(false);
        java.io.PrintWriter printWriter71 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter71);
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor72.visit(2, (int) (byte) 0, "", "", "", strArray81);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierClassVisitor72.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierClassVisitor72.visitAnnotation("hi!", false);
        printWriter51.println((java.lang.Object) aSMifierClassVisitor72);
        char[] charArray92 = new char[] { 'a', '#' };
        printWriter51.println(charArray92);
        printWriter44.print(charArray92);
        printWriter1.print(charArray92);
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.junit.Assert.assertNotNull(printWriter12);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1]");
        org.junit.Assert.assertNotNull(labelArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(list65);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(annotationVisitor85);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[a, #]");
    }

    @Test
    public void test12196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12196");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitCode();
        aSMifierMethodVisitor26.visitFieldInsn(100, "L1749641217", "", "L137501116");
        aSMifierMethodVisitor26.visitFieldInsn(0, "L1691870655", "L659269359", "L814836869");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor26.visitMaxs((int) 'a', 8);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test12197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12197");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor49.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putByte(2);
        annotationVisitor61.visit("", (java.lang.Object) byteVector64);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor61);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotation("L601661571", true);
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((-1), "L964051540", "L1124725269", "L323273553");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test12198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12198");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(4, "L994489370", "", "L326432149");
        aSMifierMethodVisitor0.visitIincInsn(16842765, 25);
        java.util.List list19 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(list19);
    }

    @Test
    public void test12199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12199");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (short) 30313);
        aSMifierMethodVisitor0.visitMaxs(118, 4);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(16780108, "L510949655");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test12200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12200");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(0, 151060480);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMethodInsn(21, "L939261813", "L1764179183", "L459227517");
        aSMifierMethodVisitor0.visitFieldInsn((int) ' ', "L1722902851", "L1579098349", "L1775421725");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1232938969", true);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test12201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12201");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.ClassWriter classWriter5 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor11 = classWriter5.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = fieldVisitor11.visitAnnotation("hi!", true);
        printWriter1.print((java.lang.Object) annotationVisitor14);
        printWriter1.println((float) (byte) 1);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter18);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter((java.io.Writer) printWriter18, true);
        java.io.PrintWriter printWriter23 = printWriter21.append((java.lang.CharSequence) "L801849928");
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) (short) -326);
        classWriter26.visitSource("L1715840275", "L459227517");
        classWriter26.visitOuterClass("L1852655365", "L1281777590", "L97937772");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((-889275714));
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label46, intArray55, labelArray67);
        java.io.PrintWriter printWriter70 = printWriter40.format(locale43, "hi!", (java.lang.Object[]) labelArray67);
        printWriter70.print((int) '4');
        java.io.PrintWriter printWriter74 = printWriter70.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter70);
        aSMifierClassVisitor75.visitSource("hi!", "L142696279");
        aSMifierClassVisitor75.visitSource("L601661571", "L326432149");
        java.lang.String[] strArray86 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        org.mockito.asm.MethodVisitor methodVisitor87 = aSMifierClassVisitor75.visitMethod(0, "L1532047758", "L326432149", "L1479479862", strArray86);
        classWriter26.visit(0, 66, "L1541482702", "L1012945192", "L1127838997", strArray86);
        java.io.PrintWriter printWriter89 = printWriter21.printf("L4743655", (java.lang.Object[]) strArray86);
        org.junit.Assert.assertNotNull(fieldVisitor11);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(methodVisitor87);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test12202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12202");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        printWriter1.write("");
        printWriter1.write("L994489370");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.FieldVisitor fieldVisitor14 = aSMifierClassVisitor8.visitField((int) 'a', "L1544572272", "L2113189186", "L1703143512", (java.lang.Object) "L1715840275");
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        int int47 = classReader43.readUnsignedShort((int) (short) 0);
        int int49 = classReader43.readUnsignedShort((int) 'a');
        java.lang.String[] strArray50 = classReader43.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor51 = aSMifierClassVisitor8.visitMethod(4, "L799304101", "hi!", "L316026808", strArray50);
        aSMifierClassVisitor8.visitInnerClass("L2036836790", "L799304101", "L779142371", 186);
        aSMifierClassVisitor8.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor8.visitAnnotation("L1931374313", true);
        org.mockito.asm.FieldVisitor fieldVisitor66 = aSMifierClassVisitor8.visitField(28275, "L1841177960", "L799304101", "L1940237921", (java.lang.Object) "L2095066844");
        org.junit.Assert.assertNotNull(fieldVisitor14);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 51966 + "'", int47 == 51966);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 25929 + "'", int49 == 25929);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(methodVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
    }

    @Test
    public void test12203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12203");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = annotationVisitor13.visitAnnotation("L1199538687", "L695299603");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test12204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12204");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor16.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor16.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLabel(label36);
        aSMifierMethodVisitor16.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor40.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        aSMifierMethodVisitor40.visitLabel(label60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor62.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor62.visitIincInsn(1, 0);
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor62.visitLabel(label74);
        label60.info = aSMifierMethodVisitor62;
        aSMifierMethodVisitor16.visitLineNumber(24942, label60);
        aSMifierMethodVisitor0.visitJumpInsn(6, label60);
        java.lang.Object obj79 = label60.info;
        java.lang.String str80 = label60.toString();
        java.lang.String str81 = label60.toString();
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(obj79);
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L1402540955" + "'", str80, "L1402540955");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L1402540955" + "'", str81, "L1402540955");
    }

    @Test
    public void test12205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12205");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), 17);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label32 = null;
        int[] intArray34 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray35 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label32, intArray34, labelArray35);
        java.util.List list37 = aSMifierMethodVisitor26.getText();
        printWriter23.println((java.lang.Object) list37);
        printWriter23.print((long) (byte) 10);
        boolean boolean41 = printWriter23.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor42 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter23);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor42);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierClassVisitor42.visitAnnotation("L1003926609", true);
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter58 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter58.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = classWriter58.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor70 = classWriter58.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray71 = classWriter58.toByteArray();
        org.mockito.asm.ByteVector byteVector74 = byteVector54.putByteArray(byteArray71, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader75 = new org.mockito.asm.ClassReader(byteArray71);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray71);
        int int77 = classReader76.header;
        byte[] byteArray78 = classReader76.b;
        java.lang.String str79 = classReader76.getSuperName();
        int int80 = classReader76.header;
        org.mockito.asm.ClassWriter classWriter82 = new org.mockito.asm.ClassWriter(classReader76, (int) (short) -326);
        java.lang.String[] strArray83 = classReader76.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor84 = aSMifierClassVisitor42.visitMethod(21, "L954744343", "L1757074100", "L1852655365", strArray83);
        aSMifierClassVisitor42.visitSource("L723576843", "");
        aSMifierClassVisitor42.visitInnerClass("L1526656810", "L1200350890", "L1808073265", 222523246);
        org.mockito.asm.ClassWriter classWriter98 = new org.mockito.asm.ClassWriter(2817);
        org.mockito.asm.FieldVisitor fieldVisitor99 = aSMifierClassVisitor42.visitField(254, "L1407330455", "L1241925862", "L1012157294", (java.lang.Object) 2817);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[1]");
        org.junit.Assert.assertNotNull(labelArray35);
        org.junit.Assert.assertNotNull(list37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 118 + "'", int77 == 118);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 118 + "'", int80 == 118);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(methodVisitor84);
        org.junit.Assert.assertNotNull(fieldVisitor99);
    }

    @Test
    public void test12206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12206");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1703143512", 0);
        aSMifierMethodVisitor0.visitIntInsn(10, (int) (short) 28275);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test12207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12207");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        boolean boolean38 = printWriter37.checkError();
        boolean boolean39 = printWriter37.checkError();
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter42.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray48);
        java.io.PrintWriter printWriter50 = printWriter37.format("L1669980843", (java.lang.Object[]) strArray48);
        printWriter37.println(26729);
        printWriter37.println();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter50);
    }

    @Test
    public void test12208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12208");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.println("L943959020");
        java.util.Locale locale23 = null;
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.io.PrintWriter printWriter31 = printWriter26.append('#');
        printWriter31.print((float) ' ');
        printWriter31.println('4');
        java.util.Locale locale36 = null;
        org.mockito.asm.ByteVector byteVector39 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter45 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter45.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = classWriter45.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter45.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray58 = classWriter45.toByteArray();
        org.mockito.asm.ByteVector byteVector61 = byteVector41.putByteArray(byteArray58, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray58);
        long long64 = classReader62.readLong((int) (byte) 100);
        long long66 = classReader62.readLong((int) (byte) 10);
        java.lang.String[] strArray67 = classReader62.getInterfaces();
        int int69 = classReader62.readByte((int) '#');
        long long71 = classReader62.readLong(4);
        int int73 = classReader62.readInt((int) (short) 9);
        long long75 = classReader62.readLong((int) '4');
        java.lang.String str76 = classReader62.getSuperName();
        int int78 = classReader62.readByte((int) (byte) 1);
        org.mockito.asm.ClassWriter classWriter80 = new org.mockito.asm.ClassWriter(classReader62, 0);
        java.lang.String[] strArray81 = classReader62.getInterfaces();
        java.io.PrintWriter printWriter82 = printWriter31.format(locale36, "L1962766465", (java.lang.Object[]) strArray81);
        java.io.PrintWriter printWriter83 = printWriter1.format(locale23, "L465488266", (java.lang.Object[]) strArray81);
        printWriter1.print(' ');
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 8532477865490146625L + "'", long64 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 72057598333118569L + "'", long66 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 86 + "'", int69 == 86);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 590080L + "'", long71 == 590080L);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 151060480 + "'", int73 == 151060480);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 72068947506459235L + "'", long75 == 72068947506459235L);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 254 + "'", int78 == 254);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test12209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12209");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print(9);
        java.util.Locale locale9 = null;
        org.mockito.asm.ClassWriter classWriter12 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor18 = classWriter12.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor24.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list36 = aSMifierMethodVisitor24.text;
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter40.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter40.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter40.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter40.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter40.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter65 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor66.visit(2, (int) (byte) 0, "", "", "", strArray75);
        classWriter40.visit((int) 'a', (int) '#', "", "", "hi!", strArray75);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor79.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label85 = null;
        int[] intArray87 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray88 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor79.visitLookupSwitchInsn(label85, intArray87, labelArray88);
        aSMifierMethodVisitor24.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray75, (int) (short) 100, (java.lang.Object[]) labelArray88);
        classWriter12.visit(7, (-889275714), "", "hi!", "hi!", strArray75);
        java.io.PrintWriter printWriter92 = printWriter1.format(locale9, "L1434348811", (java.lang.Object[]) strArray75);
        printWriter1.println((float) (-3819410108757049344L));
        printWriter1.flush();
        org.junit.Assert.assertNotNull(fieldVisitor18);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1]");
        org.junit.Assert.assertNotNull(labelArray88);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test12210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12210");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor22.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor22.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor22.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((-889275714));
        java.util.Locale locale46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label56 = null;
        int[] intArray58 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor50.visitLookupSwitchInsn(label56, intArray58, labelArray59);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label67 = null;
        int[] intArray69 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray70 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor61.visitLookupSwitchInsn(label67, intArray69, labelArray70);
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label49, intArray58, labelArray70);
        java.io.PrintWriter printWriter73 = printWriter43.format(locale46, "hi!", (java.lang.Object[]) labelArray70);
        printWriter43.print(false);
        printWriter43.println((long) (-889275714));
        aSMifierMethodVisitor22.visitLdcInsn((java.lang.Object) printWriter43);
        printWriter43.println("L1669980843");
        printWriter43.println(22113);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor83 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter43);
        org.mockito.asm.FieldVisitor fieldVisitor84 = aSMifierClassVisitor1.visitField((int) (short) 256, "L1111263690", "L1182941977", "L1363288052", (java.lang.Object) printWriter43);
        printWriter43.println('4');
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1]");
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1]");
        org.junit.Assert.assertNotNull(labelArray70);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(fieldVisitor84);
    }

    @Test
    public void test12211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12211");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "L169779857");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(223337, "L1595613176", "L25251448", "L1797243969");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 223337");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test12212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12212");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor10.visitAnnotation("L1675715472", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierClassVisitor10.visitAnnotation("L2032501860", true);
        aSMifierClassVisitor10.visitOuterClass("L439085451", "L809514489", "L2018459260");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test12213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12213");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = printWriter31.append('a');
        java.util.Locale locale57 = null;
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        printWriter60.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.io.PrintWriter printWriter65 = printWriter60.append('#');
        printWriter65.println((double) 51966);
        char[] charArray74 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter65.write(charArray74);
        org.mockito.asm.Attribute[] attributeArray77 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter78 = printWriter65.format("L142696279", (java.lang.Object[]) attributeArray77);
        java.io.PrintWriter printWriter79 = printWriter31.printf(locale57, "", (java.lang.Object[]) attributeArray77);
        printWriter31.println();
        printWriter31.print(0.0d);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor83 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L1531629739");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(attributeArray77);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(printWriter79);
    }

    @Test
    public void test12214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12214");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(25, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor22.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test12215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12215");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println(false);
        java.io.PrintWriter printWriter25 = printWriter1.append((java.lang.CharSequence) "L1669980843");
        java.lang.Object obj26 = null;
        printWriter25.println(obj26);
        printWriter25.print('a');
        printWriter25.println((long) 12);
        java.io.PrintWriter printWriter35 = printWriter25.append((java.lang.CharSequence) "L2058942103", (int) (short) 1, 2);
        boolean boolean36 = printWriter35.checkError();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test12216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12216");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor22 = aSMifierClassVisitor1.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        aSMifierClassVisitor1.visitInnerClass("L2036836790", "L779142371", "L231657813", (int) (short) 0);
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray55 = classWriter42.toByteArray();
        org.mockito.asm.ByteVector byteVector58 = byteVector38.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray55);
        long long61 = classReader59.readLong((int) (byte) 100);
        long long63 = classReader59.readLong((int) (byte) 10);
        java.lang.String[] strArray64 = classReader59.getInterfaces();
        int int66 = classReader59.readByte((int) '#');
        long long68 = classReader59.readLong(4);
        int int70 = classReader59.readInt((int) (short) 9);
        long long72 = classReader59.readLong((int) '4');
        long long74 = classReader59.readLong((int) '4');
        java.lang.String[] strArray75 = classReader59.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor76 = aSMifierClassVisitor1.visitMethod((int) (short) 30313, "L247779944", "L389484434", "L1576898305", strArray75);
        aSMifierClassVisitor1.visitSource("L674352908", "L1198406086");
        aSMifierClassVisitor1.visitOuterClass("L166496538", "L1426096058", "L1815018994");
        aSMifierClassVisitor1.visitOuterClass("L1936863555", "L277120252", "L1344346170");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 8532477865490146625L + "'", long61 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 72057598333118569L + "'", long63 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 86 + "'", int66 == 86);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 590080L + "'", long68 == 590080L);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 151060480 + "'", int70 == 151060480);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 72068947506459235L + "'", long72 == 72068947506459235L);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 72068947506459235L + "'", long74 == 72068947506459235L);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(methodVisitor76);
    }

    @Test
    public void test12217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12217");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor19.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list31 = aSMifierMethodVisitor19.text;
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter35.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter35.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter60 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor61.visit(2, (int) (byte) 0, "", "", "", strArray70);
        classWriter35.visit((int) 'a', (int) '#', "", "", "hi!", strArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor74.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label80 = null;
        int[] intArray82 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor74.visitLookupSwitchInsn(label80, intArray82, labelArray83);
        aSMifierMethodVisitor19.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray70, (int) (short) 100, (java.lang.Object[]) labelArray83);
        classWriter1.visit((int) 'a', (int) (short) 30313, "hi!", "hi!", "", strArray70);
        int int90 = classWriter1.newField("L1808073265", "L994489370", "L1434348811");
        int int94 = classWriter1.newField("L1271688136", "L1788074348", "L237245406");
        int int98 = classWriter1.newField("L1320473481", "L972180261", "L917265559");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1]");
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 11 + "'", int90 == 11);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 17 + "'", int94 == 17);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 23 + "'", int98 == 23);
    }

    @Test
    public void test12218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12218");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) '4');
        int int6 = classWriter1.newMethod("hi!", "L326432149", "hi!", true);
        int int11 = classWriter1.newMethod("L142696279", "L1434348811", "L1441782014", true);
        classWriter1.visitOuterClass("L246301320", "", "L117134386");
        int int17 = classWriter1.newUTF8("");
        byte[] byteArray18 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader19 = new org.mockito.asm.ClassReader(byteArray18);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((int) 'a');
        printWriter22.println("");
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        aSMifierClassVisitor28.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierClassVisitor28.visitAnnotation("", false);
        printWriter22.print((java.lang.Object) false);
        printWriter22.print((double) 10.0f);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter22);
        printWriter22.println(false);
        java.io.PrintWriter printWriter44 = printWriter22.append(' ');
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("L1289682213");
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        java.util.List list62 = aSMifierMethodVisitor51.getText();
        printWriter48.println((java.lang.Object) list62);
        printWriter48.print((double) 10L);
        printWriter48.println(false);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        printWriter69.print(0.0d);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter("hi!");
        char[] charArray83 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter76.print(charArray83);
        printWriter69.write(charArray83);
        printWriter48.print(charArray83);
        printWriter46.println(charArray83);
        printWriter44.println(charArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = classReader19.readUTF8(145, charArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 19813");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 11 + "'", int11 == 11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 14 + "'", int17 == 14);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 18, 1, 0, 3, 104, 105, 33, 7, 0, 1, 1, 0, 10, 76, 51, 50, 54, 52, 51, 50, 49, 52, 57, 12, 0, 3, 0, 1, 11, 0, 2, 0, 4, 1, 0, 10, 76, 49, 52, 50, 54, 57, 54, 50, 55, 57, 7, 0, 6, 1, 0, 11, 76, 49, 52, 51, 52, 51, 52, 56, 56, 49, 49, 1, 0, 11, 76, 49, 52, 52, 49, 55, 56, 50, 48, 49, 52, 12, 0, 8, 0, 9, 11, 0, 7, 0, 10, 1, 0, 10, 76, 50, 52, 54, 51, 48, 49, 51, 50, 48, 7, 0, 12, 1, 0, 0, 1, 0, 10, 76, 49, 49, 55, 49, 51, 52, 51, 56, 54, 12, 0, 14, 0, 15, 1, 0, 15, 69, 110, 99, 108, 111, 115, 105, 110, 103, 77, 101, 116, 104, 111, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 17, 0, 0, 0, 4, 0, 13, 0, 16]");
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12219");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putByte(6);
        org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter((int) 'a');
        byte[] byteArray14 = classWriter13.toByteArray();
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putByteArray(byteArray14, 5, (int) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putByte(2);
        annotationVisitor30.visit("", (java.lang.Object) byteVector33);
        org.mockito.asm.ByteVector byteVector40 = byteVector33.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector42 = byteVector33.putByte(3);
        org.mockito.asm.ByteVector byteVector44 = byteVector33.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter52.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = classWriter52.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter52.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray65 = classWriter52.toByteArray();
        org.mockito.asm.ByteVector byteVector68 = byteVector48.putByteArray(byteArray65, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader69 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray65);
        byte[] byteArray72 = classReader71.b;
        org.mockito.asm.ByteVector byteVector75 = byteVector44.putByteArray(byteArray72, 0, 5);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ByteVector byteVector79 = byteVector17.putByteArray(byteArray72, 25, (int) (short) 0);
        org.mockito.asm.ByteVector byteVector81 = byteVector79.putInt(151060480);
        org.mockito.asm.ByteVector byteVector83 = byteVector79.putByte(47806);
        org.mockito.asm.ByteVector byteVector85 = byteVector83.putInt(0);
        org.mockito.asm.ByteVector byteVector87 = byteVector83.putLong((long) 86);
        org.mockito.asm.ByteVector byteVector89 = byteVector83.putLong((long) (-1));
        org.mockito.asm.ByteVector byteVector91 = byteVector83.putByte(131328);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertNotNull(byteVector81);
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertNotNull(byteVector85);
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertNotNull(byteVector89);
        org.junit.Assert.assertNotNull(byteVector91);
    }

    @Test
    public void test12220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12220");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1434348811", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("L1281777590", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor38.visitEnum("L1766468458", "L1520643123", "L8325504");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test12221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12221");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitEnd();
        aSMifierMethodVisitor24.visitIntInsn(0, 590080);
        java.util.List list46 = aSMifierMethodVisitor24.getText();
        aSMifierMethodVisitor24.visitIincInsn(202, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor24.visitAnnotation("L978789454", false);
        aSMifierMethodVisitor24.visitMaxs((int) (short) -1, (int) (short) 27745);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitIntInsn(332, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test12222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12222");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(33, 16778088);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 3, 2);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
    }

    @Test
    public void test12223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12223");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((int) 'a');
        printWriter13.println("");
        printWriter13.print((long) 86);
        aSMifierClassVisitor1.print(printWriter13);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((-889275714));
        java.util.Locale locale26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        int[] intArray38 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label36, intArray38, labelArray39);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label29, intArray38, labelArray50);
        java.io.PrintWriter printWriter53 = printWriter23.format(locale26, "hi!", (java.lang.Object[]) labelArray50);
        printWriter23.println((int) (short) 1);
        java.lang.String[] strArray57 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter58 = printWriter23.format("hi!", (java.lang.Object[]) strArray57);
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter61 = printWriter23.printf("", (java.lang.Object[]) strArray60);
        java.io.PrintWriter printWriter62 = printWriter13.format("L1441782014", (java.lang.Object[]) strArray60);
        printWriter13.print(0L);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1]");
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(printWriter58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(printWriter61);
        org.junit.Assert.assertNotNull(printWriter62);
    }

    @Test
    public void test12224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12224");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label75 = null;
        int[] intArray77 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor69.visitLookupSwitchInsn(label75, intArray77, labelArray78);
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label57, intArray66, labelArray78);
        aSMifierMethodVisitor56.visitMaxs((int) (short) 1, 86);
        printWriter31.print((java.lang.Object) 86);
        printWriter31.print((long) 590080);
        printWriter31.close();
        printWriter31.print(true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor90 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[1]");
        org.junit.Assert.assertNotNull(labelArray78);
    }

    @Test
    public void test12225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12225");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        printWriter19.print(0.0d);
        printWriter19.print((double) (byte) 10);
        printWriter19.print(10.0f);
        printWriter19.println('a');
        printWriter19.print('a');
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test12226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12226");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        classWriter1.visitSource("L1000949368", "L1441782014");
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((-889275714));
        java.util.Locale locale55 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor70.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label76 = null;
        int[] intArray78 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor70.visitLookupSwitchInsn(label76, intArray78, labelArray79);
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label58, intArray67, labelArray79);
        java.io.PrintWriter printWriter82 = printWriter52.format(locale55, "hi!", (java.lang.Object[]) labelArray79);
        printWriter82.write("L61669440", 33, 0);
        int int87 = classWriter1.newConst((java.lang.Object) "L61669440");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1]");
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 17 + "'", int87 == 17);
    }

    @Test
    public void test12227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12227");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation(3, "L61669440", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1418438756", (int) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 2);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 24942, 101);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test12228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12228");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor46.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor46.visitLineNumber((int) (byte) 10, label56);
        org.mockito.asm.FieldVisitor fieldVisitor58 = aSMifierClassVisitor1.visitField(51966, "", "L61669440", "L142696279", (java.lang.Object) label56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label69 = null;
        int[] intArray71 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray72 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor63.visitLookupSwitchInsn(label69, intArray71, labelArray72);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor63.visitAnnotation("L1544572272", false);
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor1.visitField(18, "L799304101", "L1691870655", "L1000949368", (java.lang.Object) "L1544572272");
        aSMifierClassVisitor1.visitOuterClass("L1017243937", "L981073027", "L389484434");
        aSMifierClassVisitor1.visitOuterClass("L768432089", "L2099247511", "L1626087998");
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierClassVisitor1.visitAnnotation("L1461066057", true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[1]");
        org.junit.Assert.assertNotNull(labelArray72);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor88);
    }

    @Test
    public void test12229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12229");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        printWriter13.println(0.0d);
        printWriter13.print(false);
        aSMifierClassVisitor1.print(printWriter13);
        java.io.PrintWriter printWriter23 = printWriter13.append((java.lang.CharSequence) "L298663367");
        printWriter13.flush();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor25.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor25.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor25.visitParameterAnnotation((int) (short) 100, "L836986691", true);
        printWriter13.print((java.lang.Object) aSMifierMethodVisitor25);
        java.io.PrintWriter printWriter44 = printWriter13.append((java.lang.CharSequence) "");
        java.io.PrintWriter printWriter46 = printWriter13.append('#');
        printWriter46.print((double) 6);
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter46);
    }

    @Test
    public void test12230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12230");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        aSMifierMethodVisitor0.visitInsn(9);
        aSMifierMethodVisitor0.visitInsn((int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor0.visitAnnotation("L316026808", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = annotationVisitor63.visitArray("L200699152");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor65);
    }

    @Test
    public void test12231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12231");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        aSMifierMethodVisitor0.visitTypeInsn(14, "L326432149");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1297264300", (int) (byte) 0);
        aSMifierMethodVisitor0.visitMaxs(186, 222523246);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test12232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12232");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter8 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        aSMifierClassVisitor9.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor9.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor7.visitLdcInsn((java.lang.Object) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLineNumber((int) (byte) 10, label32);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label43 = null;
        int[] intArray45 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray46 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor37.visitLookupSwitchInsn(label43, intArray45, labelArray46);
        aSMifierMethodVisitor22.visitTableSwitchInsn((int) (byte) 0, 51966, label36, labelArray46);
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor22.visitLabel(label49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor54.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor67.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor67.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor67.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor67.visitAnnotation("hi!", false);
        org.mockito.asm.Label label83 = new org.mockito.asm.Label();
        aSMifierMethodVisitor67.visitLineNumber(10, label83);
        aSMifierMethodVisitor54.visitLineNumber(1, label83);
        org.mockito.asm.Label label86 = new org.mockito.asm.Label();
        aSMifierMethodVisitor22.visitLocalVariable("hi!", "L1434348811", "L326432149", label83, label86, 9);
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label86);
        java.lang.Object obj90 = label86.info;
        aSMifierMethodVisitor0.visitJumpInsn(13, label86);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn(5, "");
        java.util.List list96 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L170780603", (int) (short) 25929);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1]");
        org.junit.Assert.assertNotNull(labelArray46);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(list96);
    }

    @Test
    public void test12233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12233");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        printWriter35.print(118);
        printWriter35.println((long) (-889275714));
        printWriter35.println();
        printWriter35.print("L237245406");
        org.mockito.asm.ClassWriter classWriter46 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter46.visitSource("", "");
        classWriter46.visitInnerClass("hi!", "", "", 3);
        classWriter46.visitSource("L994489370", "L1669980843");
        int int60 = classWriter46.newNameType("L326432149", "");
        int int64 = classWriter46.newField("L834812042", "L1749641217", "L1105153118");
        classWriter46.visitInnerClass("L1544572272", "L801849928", "L911973346", 3);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = classWriter46.visitAnnotation("", true);
        printWriter35.print((java.lang.Object) true);
        printWriter35.close();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 7 + "'", int60 == 7);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 13 + "'", int64 == 13);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test12234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12234");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor13.visitIntInsn(15, 25929);
        aSMifierMethodVisitor13.visitTypeInsn(115, "L285151538");
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor13.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor13.visitFieldInsn(28275, "L448733331", "L601882898", "L1504370299");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 28275");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test12235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12235");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray54 = classReader53.b;
        org.mockito.asm.ByteVector byteVector57 = byteVector26.putByteArray(byteArray54, 0, 5);
        org.mockito.asm.ClassReader classReader58 = new org.mockito.asm.ClassReader(byteArray54);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray54);
        byte[] byteArray60 = classReader59.b;
        int int62 = classReader59.readByte(6);
        int int63 = classReader59.header;
        int int64 = classReader59.getAccess();
        java.lang.String str65 = classReader59.getSuperName();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 118 + "'", int63 == 118);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test12236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12236");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        boolean boolean23 = printWriter19.checkError();
        printWriter19.write("L666971223");
        printWriter19.println((long) 8);
        printWriter19.flush();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test12237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12237");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        printWriter1.println('a');
        printWriter1.print("L1000949368");
        printWriter1.println(' ');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter25.write(16);
        printWriter25.write("L1236963294");
        java.io.PrintWriter printWriter30 = new java.io.PrintWriter((java.io.Writer) printWriter25);
        printWriter30.println(0.0f);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test12238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12238");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(66);
        org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector16 = byteVector12.putShort((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor17.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putByte(2);
        annotationVisitor29.visit("", (java.lang.Object) byteVector32);
        org.mockito.asm.ByteVector byteVector39 = byteVector32.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector41 = byteVector32.putByte(3);
        org.mockito.asm.ByteVector byteVector43 = byteVector32.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter51 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter51.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = classWriter51.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor63 = classWriter51.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray64 = classWriter51.toByteArray();
        org.mockito.asm.ByteVector byteVector67 = byteVector47.putByteArray(byteArray64, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader68 = new org.mockito.asm.ClassReader(byteArray64);
        org.mockito.asm.ClassReader classReader69 = new org.mockito.asm.ClassReader(byteArray64);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray64);
        byte[] byteArray71 = classReader70.b;
        org.mockito.asm.ByteVector byteVector74 = byteVector43.putByteArray(byteArray71, 0, 5);
        org.mockito.asm.ByteVector byteVector77 = byteVector12.putByteArray(byteArray71, (int) '#', 1);
        org.mockito.asm.ClassReader classReader78 = new org.mockito.asm.ClassReader(byteArray71);
        org.mockito.asm.ClassReader classReader79 = new org.mockito.asm.ClassReader(byteArray71);
        java.lang.String[] strArray80 = classReader79.getInterfaces();
        classWriter1.visit((int) (short) -13570, (int) (short) 1280, "L1569615272", "L1977427665", "L928755548", strArray80);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = classWriter1.visitAnnotation("L371765247", false);
        org.junit.Assert.assertNotNull(byteVector10);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor63);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(annotationVisitor84);
    }

    @Test
    public void test12239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12239");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = printWriter31.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor57.visitInnerClass("", "L237245406", "", 15);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierClassVisitor57.visitAnnotation("L1749641217", true);
        aSMifierClassVisitor57.visitOuterClass("L744095971", "L1911123705", "L2102371386");
        aSMifierClassVisitor57.visitInnerClass("L1813264043", "L192302291", "", 24942);
        aSMifierClassVisitor57.visitEnd();
        aSMifierClassVisitor57.visitEnd();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(annotationVisitor65);
    }

    @Test
    public void test12240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12240");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIntInsn(0, 57174305);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((int) (short) 26995, "L1719894901");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test12241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12241");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor47.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label62 = null;
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor47.visitLocalVariable("hi!", "hi!", "hi!", label62, label63, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor67.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor67.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor67.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor67.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor86 = aSMifierMethodVisitor67.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label87 = new org.mockito.asm.Label();
        aSMifierMethodVisitor67.visitLabel(label87);
        java.lang.String str89 = label87.toString();
        aSMifierMethodVisitor47.visitJumpInsn(5, label87);
        java.lang.String str91 = label87.toString();
        java.lang.String str92 = label87.toString();
        java.lang.Object obj93 = label87.info;
        aSMifierMethodVisitor0.visitJumpInsn(21, label87);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(223337, "L1960331274", "L619486509", "L514140742");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 223337");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(annotationVisitor86);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L1354305286" + "'", str89, "L1354305286");
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "L1354305286" + "'", str91, "L1354305286");
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "L1354305286" + "'", str92, "L1354305286");
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test12242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12242");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        java.io.PrintWriter printWriter89 = printWriter1.format(locale20, "hi!", (java.lang.Object[]) labelArray86);
        printWriter1.print("L459227517");
        printWriter1.println(' ');
        printWriter1.write(66);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor96 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println(69);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test12243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12243");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print((float) 10L);
        printWriter31.print(25);
        printWriter31.println();
        printWriter31.println("L723576843");
        printWriter31.flush();
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter54 = printWriter31.append((java.lang.CharSequence) "L852338205", (int) (short) 4, 36);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 36");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12244");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        printWriter1.write("");
        printWriter1.write("L994489370");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.FieldVisitor fieldVisitor14 = aSMifierClassVisitor8.visitField((int) 'a', "L1544572272", "L2113189186", "L1703143512", (java.lang.Object) "L1715840275");
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        long long47 = classReader43.readLong((int) (byte) 10);
        java.lang.String[] strArray48 = classReader43.getInterfaces();
        int int50 = classReader43.readByte((int) '#');
        long long52 = classReader43.readLong(4);
        int int54 = classReader43.readInt((int) (short) 9);
        long long56 = classReader43.readLong((int) '4');
        long long58 = classReader43.readLong((int) '4');
        java.lang.String[] strArray59 = classReader43.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor60 = aSMifierClassVisitor8.visitMethod(2, "L1216476214", "L459227517", "L1715840275", strArray59);
        java.io.PrintWriter printWriter65 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        aSMifierClassVisitor66.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor66.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierClassVisitor66.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierClassVisitor66.visitAnnotation("L666971223", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierClassVisitor66.visitAnnotation("L298663367", false);
        org.mockito.asm.FieldVisitor fieldVisitor85 = aSMifierClassVisitor8.visitField(5, "L1271688136", "L1651106531", "L767403187", (java.lang.Object) aSMifierClassVisitor66);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierClassVisitor8.visitAnnotation("L607677620", true);
        java.lang.Class<?> wildcardClass89 = annotationVisitor88.getClass();
        org.junit.Assert.assertNotNull(fieldVisitor14);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 72057598333118569L + "'", long47 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 86 + "'", int50 == 86);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 590080L + "'", long52 == 590080L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 151060480 + "'", int54 == 151060480);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 72068947506459235L + "'", long56 == 72068947506459235L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 72068947506459235L + "'", long58 == 72068947506459235L);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(methodVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(fieldVisitor85);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test12245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12245");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        boolean boolean4 = printWriter1.checkError();
        printWriter1.write("L615939697");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierClassVisitor7.visitAnnotation("L888698528", false);
        org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter13.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = classWriter13.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor25 = classWriter13.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter13.visitEnd();
        classWriter13.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter13.visitSource("hi!", "hi!");
        byte[] byteArray35 = classWriter13.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor40.visitLabel(label46);
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor40.visitLineNumber((int) '4', label49);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter13.visitField((-1), "hi!", "", "", (java.lang.Object) label49);
        classWriter13.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = classWriter13.visitAnnotation("L1434348811", true);
        byte[] byteArray58 = classWriter13.toByteArray();
        byte[] byteArray59 = classWriter13.toByteArray();
        org.mockito.asm.ClassReader classReader60 = new org.mockito.asm.ClassReader(byteArray59);
        byte[] byteArray61 = classReader60.b;
        byte[] byteArray62 = classReader60.b;
        int int63 = classReader60.header;
        byte[] byteArray64 = classReader60.b;
        int int65 = classReader60.getAccess();
        int int66 = classReader60.header;
        annotationVisitor10.visit("L2112385861", (java.lang.Object) int66);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(fieldVisitor25);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 203 + "'", int63 == 203);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 203 + "'", int66 == 203);
    }

    @Test
    public void test12246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12246");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        classWriter16.visitEnd();
        classWriter16.visitInnerClass("L316026808", "L2114156461", "L1960608380", 57174305);
        byte[] byteArray31 = classWriter16.toByteArray();
        org.mockito.asm.ClassReader classReader32 = new org.mockito.asm.ClassReader(byteArray31);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 3, 0, 0, 0, 0, 1, 0, 10, 76, 51, 49, 54, 48, 50, 54, 56, 48, 56, 7, 0, 3, 1, 0, 11, 76, 50, 49, 49, 52, 49, 53, 54, 52, 54, 49, 7, 0, 5, 1, 0, 11, 76, 49, 57, 54, 48, 54, 48, 56, 51, 56, 48, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 0, 1, 0, 2, 0, 8, 0, 0, 0, 2, 0, 2, 0, 9, 0, 0, 0, 2, 0, 1, 0, 0, 0, 1, 0, 10, 0, 0, 0, 10, 0, 1, 0, 4, 0, 6, 0, 7, 105, 33]");
    }

    @Test
    public void test12247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12247");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (short) 30313);
        aSMifierMethodVisitor0.visitMaxs(118, 4);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 1, 203);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 257, 330);
        aSMifierMethodVisitor0.visitVarInsn(73, 25);
    }

    @Test
    public void test12248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12248");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitIincInsn(1986622313, 254);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1675913995", (int) (short) 872);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(1952543849);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1952543849");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test12249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12249");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.println((int) (short) 256);
        printWriter51.print((long) 1);
        aSMifierMethodVisitor0.print(printWriter51);
        printWriter51.println('a');
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test12250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12250");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor36);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((-889275714));
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label63 = null;
        int[] intArray65 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label63, intArray65, labelArray66);
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label45, intArray54, labelArray66);
        java.io.PrintWriter printWriter69 = printWriter39.format(locale42, "hi!", (java.lang.Object[]) labelArray66);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        char[] charArray78 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter71.print(charArray78);
        printWriter69.print(charArray78);
        printWriter69.print(true);
        aSMifierMethodVisitor23.print(printWriter69);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor23);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor0.visitAnnotation("L61669440", true);
        org.mockito.asm.Attribute attribute88 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1]");
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor87);
    }

    @Test
    public void test12251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12251");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list15 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor16.visitLineNumber((int) (byte) 10, label26);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor16.visitTableSwitchInsn((int) (byte) 0, 51966, label30, labelArray40);
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor16.visitLabel(label43);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor48.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor61.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor61.visitAnnotation("hi!", false);
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(10, label77);
        aSMifierMethodVisitor48.visitLineNumber(1, label77);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLocalVariable("hi!", "L1434348811", "L326432149", label77, label80, 9);
        java.lang.String str83 = label80.toString();
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L994489370", 47806);
        aSMifierMethodVisitor0.visitVarInsn(20, 326);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (short) 1280, 203);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1280");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor75);
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L1909093047" + "'", str83, "L1909093047");
    }

    @Test
    public void test12252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12252");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.print(0.0f);
        printWriter1.print((double) 57174305);
        printWriter1.print(3);
        printWriter1.flush();
        java.io.PrintWriter printWriter45 = printWriter1.append('4');
        printWriter1.flush();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(printWriter45);
    }

    @Test
    public void test12253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12253");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        long long30 = classReader24.readLong(5);
        int int31 = classReader24.getAccess();
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("L459227517");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        printWriter34.println((double) 1L);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor38 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        printWriter34.println((long) 1634628694);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter((java.io.Writer) printWriter34, false);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        printWriter44.print((int) 'a');
        printWriter44.println("");
        printWriter44.flush();
        printWriter44.println("L1694926691");
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label62 = null;
        int[] intArray64 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray65 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label62, intArray64, labelArray65);
        java.util.List list67 = aSMifierMethodVisitor56.getText();
        printWriter53.println((java.lang.Object) list67);
        printWriter53.print((double) 10L);
        printWriter53.print(false);
        java.io.PrintWriter printWriter73 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor74 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter73);
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor74.visit(2, (int) (byte) 0, "", "", "", strArray83);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierClassVisitor74.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierClassVisitor74.visitAnnotation("hi!", false);
        printWriter53.println((java.lang.Object) aSMifierClassVisitor74);
        char[] charArray94 = new char[] { 'a', '#' };
        printWriter53.println(charArray94);
        printWriter44.println(charArray94);
        printWriter34.write(charArray94);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = classReader24.readClass(152, charArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 151060480L + "'", long30 == 151060480L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1]");
        org.junit.Assert.assertNotNull(labelArray65);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(annotationVisitor87);
        org.junit.Assert.assertNotNull(annotationVisitor90);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[a, #]");
    }

    @Test
    public void test12254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12254");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list15 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor16.visitLineNumber((int) (byte) 10, label26);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor16.visitTableSwitchInsn((int) (byte) 0, 51966, label30, labelArray40);
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor16.visitLabel(label43);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor48.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor61.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor61.visitAnnotation("hi!", false);
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(10, label77);
        aSMifierMethodVisitor48.visitLineNumber(1, label77);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLocalVariable("hi!", "L1434348811", "L326432149", label77, label80, 9);
        java.lang.String str83 = label80.toString();
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L994489370", 47806);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 4, "L1625776434", "L1391024490", "L1911123705");
        aSMifierMethodVisitor0.visitMethodInsn(186, "L684377782", "L644390938", "L1523593098");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor75);
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L2097217225" + "'", str83, "L2097217225");
    }

    @Test
    public void test12255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12255");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter75.println(10);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter("hi!");
        printWriter79.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor82 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter79);
        printWriter79.print(0.0d);
        java.io.PrintWriter printWriter86 = new java.io.PrintWriter("hi!");
        char[] charArray93 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter86.print(charArray93);
        printWriter79.write(charArray93);
        printWriter75.println(charArray93);
        printWriter75.flush();
        java.io.PrintWriter printWriter99 = new java.io.PrintWriter((java.io.Writer) printWriter75, false);
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12256");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor49.visitLineNumber((int) (byte) 10, label59);
        aSMifierMethodVisitor49.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor49.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        aSMifierMethodVisitor49.visitLineNumber(4, label70);
        aSMifierMethodVisitor0.visitLineNumber((-1), label70);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor0.visitParameterAnnotation(67, "L939261813", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((-21316096), 182);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -21316096");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor80);
    }

    @Test
    public void test12257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12257");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.println('a');
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((-889275714));
        printWriter10.write("");
        printWriter10.write("L994489370");
        java.io.PrintWriter printWriter18 = printWriter10.append((java.lang.CharSequence) "L237245406");
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        java.io.PrintWriter printWriter50 = printWriter10.format(locale19, "L326432149", (java.lang.Object[]) attributeArray36);
        java.io.PrintWriter printWriter51 = printWriter1.printf("L2146012452", (java.lang.Object[]) attributeArray36);
        printWriter1.write(67);
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test12258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12258");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor10.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor10.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putByte(2);
        annotationVisitor22.visit("", (java.lang.Object) byteVector25);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector34 = byteVector25.putByte(3);
        org.mockito.asm.ByteVector byteVector36 = byteVector25.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader63 = new org.mockito.asm.ClassReader(byteArray57);
        byte[] byteArray64 = classReader63.b;
        org.mockito.asm.ByteVector byteVector67 = byteVector36.putByteArray(byteArray64, 0, 5);
        org.mockito.asm.ByteVector byteVector70 = byteVector5.putByteArray(byteArray64, (int) '#', 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putShort(0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putByte(24942);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putByte(33);
        org.mockito.asm.ByteVector byteVector78 = byteVector76.putShort(2);
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putInt((int) (short) 29793);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
    }

    @Test
    public void test12259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12259");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L237245406");
        printWriter1.println();
        boolean boolean3 = printWriter1.checkError();
        java.util.Locale locale4 = null;
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = classWriter7.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter17 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter17);
        aSMifierClassVisitor18.visitSource("", "hi!");
        int int22 = classWriter7.newConst((java.lang.Object) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor28.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor28.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list40 = aSMifierMethodVisitor28.text;
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter44.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor63 = classWriter44.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter69 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor70.visit(2, (int) (byte) 0, "", "", "", strArray79);
        classWriter44.visit((int) 'a', (int) '#', "", "", "hi!", strArray79);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor83 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor83.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label89 = null;
        int[] intArray91 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray92 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor83.visitLookupSwitchInsn(label89, intArray91, labelArray92);
        aSMifierMethodVisitor28.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray79, (int) (short) 100, (java.lang.Object[]) labelArray92);
        classWriter7.visit((int) ' ', 9, "", "", "", strArray79);
        java.io.PrintWriter printWriter96 = printWriter1.format(locale4, "L326432149", (java.lang.Object[]) strArray79);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor63);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1]");
        org.junit.Assert.assertNotNull(labelArray92);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test12260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12260");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("hi!", true);
        aSMifierClassVisitor1.visitInnerClass("L142696279", "L1434348811", "", 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        int[] intArray38 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label36, intArray38, labelArray39);
        java.util.List list41 = aSMifierMethodVisitor30.getText();
        aSMifierMethodVisitor30.visitMethodInsn((int) (byte) 100, "L326432149", "", "L142696279");
        aSMifierMethodVisitor30.visitCode();
        org.mockito.asm.FieldVisitor fieldVisitor48 = aSMifierClassVisitor1.visitField(4, "L723576843", "L1651106531", "L1556230913", (java.lang.Object) aSMifierMethodVisitor30);
        aSMifierClassVisitor1.visitSource("L1523593098", "L1592299270");
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1]");
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(fieldVisitor48);
    }

    @Test
    public void test12261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12261");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray34 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector37 = byteVector17.putByteArray(byteArray34, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader38 = new org.mockito.asm.ClassReader(byteArray34);
        long long40 = classReader38.readLong((int) (byte) 100);
        long long42 = classReader38.readLong((int) (byte) 10);
        java.lang.String[] strArray43 = classReader38.getInterfaces();
        int int45 = classReader38.readByte((int) '#');
        long long47 = classReader38.readLong(4);
        int int48 = classReader38.header;
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader38, (int) (byte) 0);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classWriter50);
        classWriter50.visitSource("L1479479862", "L1284973471");
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter66.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = classWriter66.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor78 = classWriter66.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray79 = classWriter66.toByteArray();
        org.mockito.asm.ByteVector byteVector82 = byteVector62.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader83 = new org.mockito.asm.ClassReader(byteArray79);
        long long85 = classReader83.readLong((int) (byte) 100);
        long long87 = classReader83.readLong((int) (byte) 10);
        java.lang.String[] strArray88 = classReader83.getInterfaces();
        int int90 = classReader83.readByte((int) '#');
        long long92 = classReader83.readLong(4);
        java.lang.String[] strArray93 = classReader83.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor94 = classWriter50.visitMethod((int) '#', "L977002934", "L2040887363", "L2106184417", strArray93);
        int int96 = classWriter50.newClass("L196981898");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 8532477865490146625L + "'", long40 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 72057598333118569L + "'", long42 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 86 + "'", int45 == 86);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 590080L + "'", long47 == 590080L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 118 + "'", int48 == 118);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 8532477865490146625L + "'", long85 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 72057598333118569L + "'", long87 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 86 + "'", int90 == 86);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 590080L + "'", long92 == 590080L);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(methodVisitor94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 13 + "'", int96 == 13);
    }

    @Test
    public void test12262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12262");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1689719368", 26913);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotation("L1647649528", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor21.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor36.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor36.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray51 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label59 = null;
        int[] intArray61 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor53.visitLookupSwitchInsn(label59, intArray61, labelArray62);
        aSMifierMethodVisitor36.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray51, (int) 'a', (java.lang.Object[]) labelArray62);
        aSMifierMethodVisitor21.visitTableSwitchInsn(8, (int) (byte) 1, label35, labelArray62);
        aSMifierMethodVisitor21.visitCode();
        org.mockito.asm.Label label68 = new org.mockito.asm.Label();
        java.lang.Object obj69 = label68.info;
        java.lang.String str70 = label68.toString();
        aSMifierMethodVisitor21.visitJumpInsn(15, label68);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor72.visitCode();
        aSMifierMethodVisitor72.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor72.visitEnd();
        aSMifierMethodVisitor72.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label82 = new org.mockito.asm.Label();
        aSMifierMethodVisitor72.visitJumpInsn(25, label82);
        java.lang.Object obj84 = label82.info;
        java.lang.String str85 = label82.toString();
        java.lang.String str86 = label82.toString();
        java.lang.String str87 = label82.toString();
        java.lang.String str88 = label82.toString();
        aSMifierMethodVisitor0.visitLocalVariable("L1289682213", "L1705566046", "L1716111915", label68, label82, 257);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(attributeArray51);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNull(obj69);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L1061045677" + "'", str70, "L1061045677");
        org.junit.Assert.assertNull(obj84);
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "L1386219912" + "'", str85, "L1386219912");
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "L1386219912" + "'", str86, "L1386219912");
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "L1386219912" + "'", str87, "L1386219912");
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "L1386219912" + "'", str88, "L1386219912");
    }

    @Test
    public void test12263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12263");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        java.io.PrintWriter printWriter59 = printWriter57.append((java.lang.CharSequence) "L1579141229");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test12264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12264");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter25 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter25.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = classWriter25.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor37 = classWriter25.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label23.info = classWriter25;
        java.lang.Object obj39 = label23.info;
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter47 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter47.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = classWriter47.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter47.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray60 = classWriter47.toByteArray();
        org.mockito.asm.ByteVector byteVector63 = byteVector43.putByteArray(byteArray60, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader64 = new org.mockito.asm.ClassReader(byteArray60);
        long long66 = classReader64.readLong((int) (byte) 100);
        long long68 = classReader64.readLong((int) (byte) 10);
        java.lang.String[] strArray69 = classReader64.getInterfaces();
        int int71 = classReader64.readByte((int) '#');
        int int73 = classReader64.readUnsignedShort((int) (short) 100);
        int int74 = classReader64.getAccess();
        label23.info = classReader64;
        aSMifierMethodVisitor0.visitLineNumber(47806, label23);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1441782014", 320);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 4, "L459227517", "L459227517", "L344842840");
        java.util.List list85 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(fieldVisitor37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 8532477865490146625L + "'", long66 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 72057598333118569L + "'", long68 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 86 + "'", int71 == 86);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 30313 + "'", int73 == 30313);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(list85);
    }

    @Test
    public void test12265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12265");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L142696279", 202);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1749641217", (int) ' ');
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "L1544572272");
        java.util.List list60 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor0.visitAnnotation("L801849928", true);
        aSMifierMethodVisitor0.visitFieldInsn(1, "L317871603", "L993028827", "L615188845");
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(annotationVisitor69);
    }

    @Test
    public void test12266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12266");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println("hi!");
        printWriter1.close();
        java.io.PrintWriter printWriter6 = printWriter1.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        java.io.PrintWriter printWriter9 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor10.visit(2, (int) (byte) 0, "", "", "", strArray19);
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor31 = aSMifierClassVisitor10.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        aSMifierClassVisitor10.visitInnerClass("L2113189186", "L326432149", "L61669440", 51966);
        org.mockito.asm.FieldVisitor fieldVisitor42 = aSMifierClassVisitor10.visitField((int) (short) 100, "L139692246", "hi!", "L598840791", (java.lang.Object) 16777217);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        int int75 = classReader71.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        org.mockito.asm.ClassWriter classWriter78 = new org.mockito.asm.ClassWriter(classReader71, 2);
        int int80 = classReader71.readUnsignedShort((int) ' ');
        java.lang.String[] strArray81 = classReader71.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor10.visitMethod(25929, "L978789454", "L1694926691", "L1845262982", strArray81);
        java.io.PrintWriter printWriter83 = printWriter6.format("L1714647436", (java.lang.Object[]) strArray81);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 51966 + "'", int75 == 51966);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 24942 + "'", int80 == 24942);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(methodVisitor82);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test12267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12267");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        char[] charArray42 = new char[] { 'a', '#' };
        printWriter1.println(charArray42);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.Writer) printWriter45);
        printWriter46.print("L1634458015");
        printWriter46.print("L721189988");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, #]");
    }

    @Test
    public void test12268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12268");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L142696279", 202);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1749641217", (int) ' ');
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "L1544572272");
        aSMifierMethodVisitor0.visitMaxs(0, 218169344);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
    }

    @Test
    public void test12269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12269");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitSource("", "hi!");
        int int16 = classWriter1.newConst((java.lang.Object) "");
        classWriter1.visitInnerClass("L834812042", "L459227517", "", 30313);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter1.visitAnnotation("L1691870655", true);
        classWriter1.visitInnerClass("L858787082", "", "L994489370", 324);
        classWriter1.visitSource("L1421508585", "L943959020");
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) (short) -326);
        int int38 = classWriter34.newField("L1749641217", "L1544572272", "L1284973471");
        int int40 = classWriter34.newUTF8("L659269359");
        classWriter34.visitInnerClass("L237245406", "L1784767575", "L1518460396", 22);
        int int46 = classWriter1.newConst((java.lang.Object) "L1784767575");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 6 + "'", int38 == 6);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 15 + "'", int46 == 15);
    }

    @Test
    public void test12270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12270");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter75.println((double) 100);
        printWriter75.write("L1960608380", (int) (short) 25196, (-1107296256));
        printWriter75.print(false);
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test12271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12271");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((int) '4');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter21.visitEnd();
        classWriter21.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter21.visitSource("hi!", "hi!");
        byte[] byteArray43 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector46 = byteVector15.putByteArray(byteArray43, (int) (short) 10, (int) '4');
        annotationVisitor10.visit("L598840791", (java.lang.Object) byteArray43);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray43);
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader48, 0);
        int int51 = classReader48.getAccess();
        org.mockito.asm.ByteVector byteVector53 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter59 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter59.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = classWriter59.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor71 = classWriter59.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray72 = classWriter59.toByteArray();
        org.mockito.asm.ByteVector byteVector75 = byteVector55.putByteArray(byteArray72, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72);
        long long78 = classReader76.readLong((int) (byte) 100);
        long long80 = classReader76.readLong((int) (byte) 10);
        java.lang.String[] strArray81 = classReader76.getInterfaces();
        int int83 = classReader76.readByte((int) '#');
        long long85 = classReader76.readLong(4);
        int int87 = classReader76.readInt((int) (short) 9);
        long long89 = classReader76.readLong((int) '4');
        java.lang.String[] strArray90 = classReader76.getInterfaces();
        org.mockito.asm.ClassWriter classWriter92 = new org.mockito.asm.ClassWriter(classReader76, (int) (short) 0);
        classWriter92.visitInnerClass("L555214098", "L1000949368", "hi!", 0);
        // The following exception was thrown during execution in test generation
        try {
            classReader48.accept((org.mockito.asm.ClassVisitor) classWriter92, 34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(fieldVisitor71);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 8532477865490146625L + "'", long78 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 72057598333118569L + "'", long80 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 86 + "'", int83 == 86);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 590080L + "'", long85 == 590080L);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 151060480 + "'", int87 == 151060480);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 72068947506459235L + "'", long89 == 72068947506459235L);
        org.junit.Assert.assertNotNull(strArray90);
    }

    @Test
    public void test12272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12272");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putByte(6);
        org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter((int) 'a');
        byte[] byteArray14 = classWriter13.toByteArray();
        org.mockito.asm.ByteVector byteVector17 = byteVector11.putByteArray(byteArray14, 5, (int) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector33.putByte(2);
        annotationVisitor30.visit("", (java.lang.Object) byteVector33);
        org.mockito.asm.ByteVector byteVector40 = byteVector33.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector42 = byteVector33.putByte(3);
        org.mockito.asm.ByteVector byteVector44 = byteVector33.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector46 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter52.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = classWriter52.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter52.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray65 = classWriter52.toByteArray();
        org.mockito.asm.ByteVector byteVector68 = byteVector48.putByteArray(byteArray65, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader69 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray65);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray65);
        byte[] byteArray72 = classReader71.b;
        org.mockito.asm.ByteVector byteVector75 = byteVector44.putByteArray(byteArray72, 0, 5);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ByteVector byteVector79 = byteVector17.putByteArray(byteArray72, 25, (int) (short) 0);
        org.mockito.asm.ClassReader classReader80 = new org.mockito.asm.ClassReader(byteArray72);
        short short82 = classReader80.readShort(152);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = classReader80.getItem(590080);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 590080");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector75);
        org.junit.Assert.assertNotNull(byteVector79);
        org.junit.Assert.assertTrue("'" + short82 + "' != '" + (short) 0 + "'", short82 == (short) 0);
    }

    @Test
    public void test12273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12273");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierClassVisitor22.visitAnnotation("L1734603415", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = annotationVisitor42.visitAnnotation("L76603429", "L2114156461");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test12274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12274");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray54 = classReader53.b;
        org.mockito.asm.ByteVector byteVector57 = byteVector26.putByteArray(byteArray54, 0, 5);
        org.mockito.asm.ByteVector byteVector59 = byteVector26.putUTF8("L666971223");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putInt(4);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putByte(254);
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((int) (short) 22113);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putByte(116);
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putByte(190);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
    }

    @Test
    public void test12275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12275");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1805444800", (int) (short) 9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor39.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor48.visitLabel(label54);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label67 = null;
        aSMifierMethodVisitor57.visitLineNumber((int) (byte) 10, label67);
        aSMifierMethodVisitor57.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor57.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label78 = new org.mockito.asm.Label();
        aSMifierMethodVisitor57.visitLineNumber(4, label78);
        aSMifierMethodVisitor48.visitLineNumber((int) (short) 10, label78);
        aSMifierMethodVisitor39.visitLabel(label78);
        java.lang.String str82 = label78.toString();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn(1952542324, label78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1952542324");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "L571130166" + "'", str82, "L571130166");
    }

    @Test
    public void test12276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12276");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.println('#');
        printWriter1.print(1.0d);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter41.print('a');
        printWriter41.print(7958832928307566177L);
        printWriter41.write((-1107296256));
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter((java.io.Writer) printWriter41, false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test12277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12277");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L994489370");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor41.visitOuterClass("L337574950", "L659269359", "L1592299270");
        aSMifierClassVisitor41.visitOuterClass("L978789454", "L2113189186", "L967033583");
        org.mockito.asm.ClassWriter classWriter55 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter55.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = classWriter55.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = annotationVisitor61.visitArray("hi!");
        annotationVisitor61.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor65 = aSMifierClassVisitor41.visitField((int) (short) 256, "L659269359", "L96121905", "L704540978", (java.lang.Object) annotationVisitor61);
        aSMifierClassVisitor41.visitOuterClass("L4743655", "L1062074562", "L1526656810");
        aSMifierClassVisitor41.visitOuterClass("L1911123705", "L1441782014", "L272810036");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor65);
    }

    @Test
    public void test12278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12278");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1302512668", 2305);
    }

    @Test
    public void test12279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12279");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor36.visitOuterClass("L298663367", "L994489370", "L1749641217");
        org.mockito.asm.FieldVisitor fieldVisitor46 = aSMifierClassVisitor36.visitField(51966, "L2134601525", "L2072201856", "", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = fieldVisitor46.visitAnnotation("L395265253", false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test12280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12280");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = annotationVisitor13.visitArray("L237245406");
        annotationVisitor13.visitEnum("", "", "L1715840275");
        annotationVisitor13.visitEnum("L2038596437", "L108132274", "L836986691");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test12281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12281");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print((float) 10L);
        printWriter31.println();
        printWriter31.write("L1669980843");
        java.io.PrintWriter printWriter49 = printWriter31.append((java.lang.CharSequence) "L1691870655");
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor54 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        java.io.PrintWriter printWriter56 = printWriter51.append('#');
        printWriter56.println((double) 51966);
        char[] charArray65 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter56.write(charArray65);
        printWriter31.print(charArray65);
        printWriter31.close();
        printWriter31.println(false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[ , a,  , #, #, a]");
    }

    @Test
    public void test12282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12282");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray53 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor38.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray53, (int) 'a', (java.lang.Object[]) labelArray64);
        aSMifierMethodVisitor23.visitTableSwitchInsn(8, (int) (byte) 1, label37, labelArray64);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-889275714), (int) '#', label22, labelArray64);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L96121905", (int) (short) -1);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 10, 6);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((-889275714), "L1784767575", "L480584989", "L743230707");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(attributeArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
    }

    @Test
    public void test12283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12283");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readInt(0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, (int) '4');
        short short35 = classReader24.readShort(7);
        short short37 = classReader24.readShort(1);
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter(classReader24, (int) (byte) 10);
        java.lang.String[] strArray40 = classReader24.getInterfaces();
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter(classReader24, 22113);
        byte[] byteArray43 = classReader24.b;
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        aSMifierClassVisitor45.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor45.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("hi!");
        printWriter57.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor60 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter57);
        printWriter57.println(0.0d);
        printWriter57.print(false);
        aSMifierClassVisitor45.print(printWriter57);
        // The following exception was thrown during execution in test generation
        try {
            classReader24.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor45, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-889275714) + "'", int31 == (-889275714));
        org.junit.Assert.assertTrue("'" + short35 + "' != '" + (short) 0 + "'", short35 == (short) 0);
        org.junit.Assert.assertTrue("'" + short37 + "' != '" + (short) -326 + "'", short37 == (short) -326);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test12284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12284");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((int) 'a');
        printWriter40.println("");
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        aSMifierClassVisitor46.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierClassVisitor46.visitAnnotation("", false);
        printWriter40.print((java.lang.Object) false);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter40);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        java.io.PrintWriter printWriter70 = printWriter40.printf("hi!", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter71 = printWriter35.printf("L1703143512", (java.lang.Object[]) strArray68);
        java.io.PrintWriter printWriter73 = printWriter71.append('#');
        boolean boolean74 = printWriter73.checkError();
        printWriter73.println((double) (short) 0);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(printWriter71);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test12285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12285");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitOuterClass("hi!", "", "");
        classWriter1.visitEnd();
        classWriter1.visitSource("L723576843", "L1644755393");
        classWriter1.visitOuterClass("L888698528", "L2099222213", "L678501427");
        classWriter1.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
    }

    @Test
    public void test12286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12286");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor15.visitLocalVariable("", "hi!", "", label31, label32, 8);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.print((-889275714));
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label49 = null;
        int[] intArray51 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor43.visitLookupSwitchInsn(label49, intArray51, labelArray52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label60 = null;
        int[] intArray62 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label60, intArray62, labelArray63);
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label42, intArray51, labelArray63);
        java.io.PrintWriter printWriter66 = printWriter36.format(locale39, "hi!", (java.lang.Object[]) labelArray63);
        printWriter66.print((int) '4');
        aSMifierMethodVisitor15.print(printWriter66);
        printWriter66.println((long) 1986622313);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter66);
        org.mockito.asm.FieldVisitor fieldVisitor73 = aSMifierClassVisitor10.visitField((int) (byte) -1, "L407895089", "L978789454", "L1532047758", (java.lang.Object) aSMifierClassVisitor72);
        aSMifierClassVisitor10.visitInnerClass("L1601501049", "L1097906296", "L394842588", 9);
        java.lang.String[] strArray83 = null;
        org.mockito.asm.MethodVisitor methodVisitor84 = aSMifierClassVisitor10.visitMethod(27765, "L420329685", "L756693488", "L1077931653", strArray83);
        aSMifierClassVisitor10.visitInnerClass("L1570018250", "L1805444800", "L1326685820", 34);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(methodVisitor84);
    }

    @Test
    public void test12287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12287");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        int int40 = classReader36.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray41 = classReader36.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor4.visitMethod(0, "hi!", "L994489370", "hi!", strArray41);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("L1703143512");
        org.mockito.asm.FieldVisitor fieldVisitor49 = aSMifierClassVisitor4.visitField(86, "L799304101", "L1321861150", "L801849928", (java.lang.Object) "L1703143512");
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = fieldVisitor49.visitAnnotation("", true);
        fieldVisitor49.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = fieldVisitor49.visitAnnotation("L1884432389", true);
        fieldVisitor49.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 51966 + "'", int40 == 51966);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor56);
    }

    @Test
    public void test12288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12288");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray6 = null;
        org.mockito.asm.MethodVisitor methodVisitor7 = aSMifierClassVisitor1.visitMethod((-1), "", "hi!", "", strArray6);
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray33 = classWriter20.toByteArray();
        org.mockito.asm.ByteVector byteVector36 = byteVector16.putByteArray(byteArray33, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader37 = new org.mockito.asm.ClassReader(byteArray33);
        long long39 = classReader37.readLong((int) (byte) 100);
        long long41 = classReader37.readLong((int) (byte) 10);
        java.lang.String[] strArray42 = classReader37.getInterfaces();
        int int44 = classReader37.readInt(0);
        int int45 = classReader37.getAccess();
        int int47 = classReader37.getItem(2);
        java.lang.String[] strArray48 = classReader37.getInterfaces();
        aSMifierClassVisitor1.visit(51966, (int) '4', "L2113189186", "", "L326432149", strArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor1.visitAnnotation("L1418438756", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierClassVisitor1.visitAnnotation("L1660256717", false);
        org.junit.Assert.assertNotNull(methodVisitor7);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 8532477865490146625L + "'", long39 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 72057598333118569L + "'", long41 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-889275714) + "'", int44 == (-889275714));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 14 + "'", int47 == 14);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor55);
    }

    @Test
    public void test12289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12289");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitSource("L1669980843", "L1669980843");
        aSMifierClassVisitor1.visitSource("L2113189186", "");
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter24.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter24.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor36 = classWriter24.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray37 = classWriter24.toByteArray();
        org.mockito.asm.ByteVector byteVector40 = byteVector20.putByteArray(byteArray37, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader41 = new org.mockito.asm.ClassReader(byteArray37);
        long long43 = classReader41.readLong((int) (byte) 100);
        long long45 = classReader41.readLong((int) (byte) 10);
        java.lang.String[] strArray46 = classReader41.getInterfaces();
        int int48 = classReader41.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader41, 0);
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter(classReader41, (int) (short) 1);
        classWriter52.visitSource("L1669980843", "L1669980843");
        int int57 = classWriter52.newUTF8("L459227517");
        org.mockito.asm.FieldVisitor fieldVisitor58 = aSMifierClassVisitor1.visitField(57174305, "L237245406", "L1216476214", "L298663367", (java.lang.Object) "L459227517");
        aSMifierClassVisitor1.visitInnerClass("L326432149", "L598840791", "", (int) (short) -326);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "L237245406", 65210);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor73.visitCode();
        aSMifierMethodVisitor73.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor73.visitAnnotation("hi!", false);
        aSMifierMethodVisitor73.visitMethodInsn(1, "L142696279", "L994489370", "L326432149");
        org.mockito.asm.FieldVisitor fieldVisitor91 = aSMifierClassVisitor1.visitField((-1161953280), "L139692246", "L994489370", "", (java.lang.Object) aSMifierMethodVisitor73);
        aSMifierMethodVisitor73.visitMultiANewArrayInsn("L1770505064", 1818575214);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor73.visitTypeInsn(29793, "L1463507864");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(fieldVisitor36);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 8532477865490146625L + "'", long43 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 72057598333118569L + "'", long45 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor85);
        org.junit.Assert.assertNotNull(fieldVisitor91);
    }

    @Test
    public void test12290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12290");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        boolean boolean34 = printWriter31.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L1728871576");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test12291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12291");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        int int40 = classReader36.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray41 = classReader36.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor4.visitMethod(0, "hi!", "L994489370", "hi!", strArray41);
        aSMifierClassVisitor4.visitSource("L2113189186", "L142696279");
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter58 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter58.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = classWriter58.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor70 = classWriter58.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray71 = classWriter58.toByteArray();
        org.mockito.asm.ByteVector byteVector74 = byteVector54.putByteArray(byteArray71, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader75 = new org.mockito.asm.ClassReader(byteArray71);
        long long77 = classReader75.readLong((int) (byte) 100);
        int int79 = classReader75.readUnsignedShort((int) (short) 0);
        int int81 = classReader75.readUnsignedShort((int) 'a');
        java.lang.String[] strArray82 = classReader75.getInterfaces();
        aSMifierClassVisitor4.visit((int) (short) 100, 28526, "L1931374313", "L1216476214", "L1853824624", strArray82);
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 51966 + "'", int40 == 51966);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 8532477865490146625L + "'", long77 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 51966 + "'", int79 == 51966);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 25929 + "'", int81 == 25929);
        org.junit.Assert.assertNotNull(strArray82);
    }

    @Test
    public void test12292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12292");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 9);
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        java.lang.Object obj36 = label35.info;
        aSMifierMethodVisitor0.visitLineNumber(20, label35);
        aSMifierMethodVisitor0.visitIincInsn(15, 3);
        aSMifierMethodVisitor0.visitMethodInsn(24, "", "L326432149", "L1005725320");
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("L1669980843");
        printWriter47.print((long) 16779859);
        printWriter47.flush();
        aSMifierMethodVisitor0.print(printWriter47);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) 29793);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 29793");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test12293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12293");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        int int52 = classReader48.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        java.io.PrintWriter printWriter54 = printWriter1.printf("", (java.lang.Object[]) strArray53);
        printWriter54.print("L61669440");
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter54, false);
        printWriter54.println("L967033583");
        printWriter54.write(12);
        printWriter54.write("L1230702653");
        printWriter54.print(true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 51966 + "'", int52 == 51966);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test12294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12294");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        org.mockito.asm.ByteVector byteVector10 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector12 = byteVector10.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter16.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = classWriter16.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor28 = classWriter16.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray29 = classWriter16.toByteArray();
        org.mockito.asm.ByteVector byteVector32 = byteVector12.putByteArray(byteArray29, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader33 = new org.mockito.asm.ClassReader(byteArray29);
        long long35 = classReader33.readLong((int) (byte) 100);
        byte[] byteArray36 = classReader33.b;
        org.mockito.asm.ClassReader classReader37 = new org.mockito.asm.ClassReader(byteArray36);
        printWriter8.print((java.lang.Object) byteArray36);
        printWriter8.print((long) 1952542324);
        org.junit.Assert.assertNotNull(byteVector12);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 8532477865490146625L + "'", long35 == 8532477865490146625L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test12295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12295");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor36);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((-889275714));
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label63 = null;
        int[] intArray65 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label63, intArray65, labelArray66);
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label45, intArray54, labelArray66);
        java.io.PrintWriter printWriter69 = printWriter39.format(locale42, "hi!", (java.lang.Object[]) labelArray66);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        char[] charArray78 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter71.print(charArray78);
        printWriter69.print(charArray78);
        printWriter69.print(true);
        aSMifierMethodVisitor23.print(printWriter69);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor23);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(0, (int) (short) 25196);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(22113, 256);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1]");
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor85);
    }

    @Test
    public void test12296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12296");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor12.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor12.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor12.visitInsn(8);
        aSMifierMethodVisitor12.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor25.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor25.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor25.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor25.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label45 = new org.mockito.asm.Label();
        aSMifierMethodVisitor25.visitLabel(label45);
        aSMifierMethodVisitor12.visitLineNumber(57174305, label45);
        java.io.PrintWriter printWriter48 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor49.visit(2, (int) (byte) 0, "", "", "", strArray58);
        org.mockito.asm.ClassWriter classWriter65 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter65.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor70 = aSMifierClassVisitor49.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        label45.info = "";
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) -1, label45);
        java.lang.String str73 = label45.toString();
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(fieldVisitor70);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L1175345445" + "'", str73, "L1175345445");
    }

    @Test
    public void test12297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12297");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 2, "L1892091981", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test12298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12298");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        char[] charArray42 = new char[] { 'a', '#' };
        printWriter1.println(charArray42);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter45, false);
        printWriter45.write(15);
        printWriter45.close();
        printWriter45.write("L1526656810", 101, 18);
        printWriter45.close();
        printWriter45.write("L1320473481");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, #]");
    }

    @Test
    public void test12299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12299");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        int int40 = classReader36.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray41 = classReader36.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor4.visitMethod(0, "hi!", "L994489370", "hi!", strArray41);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        printWriter49.print((-889275714));
        java.util.Locale locale52 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label62 = null;
        int[] intArray64 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray65 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label62, intArray64, labelArray65);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor67.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label73 = null;
        int[] intArray75 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor67.visitLookupSwitchInsn(label73, intArray75, labelArray76);
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label55, intArray64, labelArray76);
        java.io.PrintWriter printWriter79 = printWriter49.format(locale52, "hi!", (java.lang.Object[]) labelArray76);
        printWriter49.println((int) (short) 1);
        java.lang.String[] strArray83 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter84 = printWriter49.format("hi!", (java.lang.Object[]) strArray83);
        aSMifierClassVisitor4.visit(590080, (int) (byte) 1, "L601661571", "L994489370", "L142696279", strArray83);
        java.util.List list86 = aSMifierClassVisitor4.text;
        java.util.List list87 = aSMifierClassVisitor4.text;
        aSMifierClassVisitor4.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierClassVisitor4.visitAnnotation("L267810866", true);
        aSMifierClassVisitor4.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 51966 + "'", int40 == 51966);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1]");
        org.junit.Assert.assertNotNull(labelArray65);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1]");
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(list86);
        org.junit.Assert.assertNotNull(list87);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test12300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12300");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "L1434348811", "L454715523", "L1284973471");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.print((-889275714));
        java.util.Locale locale40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor44.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label50 = null;
        int[] intArray52 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray53 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label50, intArray52, labelArray53);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor42.visitLookupSwitchInsn(label43, intArray52, labelArray64);
        java.io.PrintWriter printWriter67 = printWriter37.format(locale40, "hi!", (java.lang.Object[]) labelArray64);
        printWriter67.print((int) '4');
        printWriter67.print('a');
        java.io.PrintWriter printWriter73 = printWriter67.append('#');
        java.io.PrintWriter printWriter75 = printWriter67.append(' ');
        aSMifierMethodVisitor0.print(printWriter75);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotation("L165832577", true);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[1]");
        org.junit.Assert.assertNotNull(labelArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(printWriter67);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test12301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12301");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitFieldInsn(13, "L1720168318", "L200699152", "L2061883402");
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test12302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12302");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print((float) 10L);
        printWriter31.println();
        printWriter31.println((double) 22113);
        printWriter31.println(1634628694);
        printWriter31.write(326);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12303");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        boolean boolean19 = printWriter1.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor20.visitEnd();
        aSMifierClassVisitor20.visitEnd();
        org.mockito.asm.Attribute attribute23 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor20.visitAttribute(attribute23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test12304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12304");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        printWriter31.write("L2113189186");
        printWriter31.print((double) 16);
        printWriter31.print(false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label67 = null;
        int[] intArray69 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray70 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor61.visitLookupSwitchInsn(label67, intArray69, labelArray70);
        java.util.List list72 = aSMifierMethodVisitor61.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor61.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor61.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        aSMifierMethodVisitor61.visitIincInsn((-889275714), 17);
        org.mockito.asm.Label label83 = null;
        aSMifierMethodVisitor61.visitLabel(label83);
        aSMifierMethodVisitor61.visitCode();
        aSMifierMethodVisitor61.visitMultiANewArrayInsn("L1397245077", (int) (short) 3395);
        printWriter31.print((java.lang.Object) (short) 3395);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1]");
        org.junit.Assert.assertNotNull(labelArray70);
        org.junit.Assert.assertNotNull(list72);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test12305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12305");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation(5, "L1434348811", true);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -326, (int) (short) -326);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L614568462", (int) (short) 4);
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter46 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter46.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = classWriter46.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter46.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray59 = classWriter46.toByteArray();
        org.mockito.asm.ByteVector byteVector62 = byteVector42.putByteArray(byteArray59, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader63 = new org.mockito.asm.ClassReader(byteArray59);
        long long65 = classReader63.readLong((int) (byte) 100);
        long long67 = classReader63.readLong((int) (byte) 10);
        java.lang.String[] strArray68 = classReader63.getInterfaces();
        int int70 = classReader63.readByte((int) '#');
        long long72 = classReader63.readLong(4);
        java.lang.String[] strArray73 = classReader63.getInterfaces();
        int int75 = classReader63.getItem(0);
        java.lang.String[] strArray76 = classReader63.getInterfaces();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classReader63);
        java.lang.String str78 = classReader63.getSuperName();
        java.lang.String[] strArray79 = classReader63.getInterfaces();
        short short81 = classReader63.readShort(0);
        int int82 = classReader63.getAccess();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 8532477865490146625L + "'", long65 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 72057598333118569L + "'", long67 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 86 + "'", int70 == 86);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 590080L + "'", long72 == 590080L);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + short81 + "' != '" + (short) -13570 + "'", short81 == (short) -13570);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test12306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12306");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.lang.Object[] objArray33 = null;
        java.io.PrintWriter printWriter34 = printWriter1.printf("", objArray33);
        printWriter34.println((int) (byte) 100);
        printWriter34.println((int) (short) 1);
        java.io.PrintWriter printWriter40 = printWriter34.append('a');
        printWriter34.write(324);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor48.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor48.visitAnnotationDefault();
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor48.visitLabel(label62);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor48.visitAnnotation("L265725697", true);
        aSMifierMethodVisitor48.visitMultiANewArrayInsn("L1083567291", 8);
        org.mockito.asm.FieldVisitor fieldVisitor70 = aSMifierClassVisitor43.visitField(1699311222, "L1837291041", "L1754345445", "", (java.lang.Object) "L1083567291");
        fieldVisitor70.visitEnd();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(fieldVisitor70);
    }

    @Test
    public void test12307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12307");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter61 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter61.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = classWriter61.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor73 = classWriter61.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray74 = classWriter61.toByteArray();
        org.mockito.asm.ByteVector byteVector77 = byteVector57.putByteArray(byteArray74, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader78 = new org.mockito.asm.ClassReader(byteArray74);
        long long80 = classReader78.readLong((int) (byte) 100);
        long long82 = classReader78.readLong((int) (byte) 10);
        java.lang.String[] strArray83 = classReader78.getInterfaces();
        int int85 = classReader78.readByte((int) '#');
        org.mockito.asm.ClassWriter classWriter87 = new org.mockito.asm.ClassWriter(classReader78, 590080);
        org.mockito.asm.ClassWriter classWriter89 = new org.mockito.asm.ClassWriter(classReader78, 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = classWriter89.visitAnnotation("L1254755410", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor92);
        org.mockito.asm.AnnotationVisitor annotationVisitor96 = annotationVisitor92.visitAnnotation("L451668498", "L1070167885");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 8532477865490146625L + "'", long80 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 72057598333118569L + "'", long82 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 86 + "'", int85 == 86);
        org.junit.Assert.assertNotNull(annotationVisitor92);
        org.junit.Assert.assertNotNull(annotationVisitor96);
    }

    @Test
    public void test12308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12308");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (short) 0);
        aSMifierMethodVisitor0.visitTypeInsn((int) ' ', "L1845262982");
        aSMifierMethodVisitor0.visitIincInsn(86, 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 2, "L1608560463", false);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test12309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12309");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.lang.Object[] objArray33 = null;
        java.io.PrintWriter printWriter34 = printWriter1.printf("", objArray33);
        printWriter34.println("L1669980843");
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter34, true);
        java.util.Locale locale39 = null;
        java.lang.Object[] objArray41 = null;
        java.io.PrintWriter printWriter42 = printWriter38.printf(locale39, "L174478886", objArray41);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(printWriter42);
    }

    @Test
    public void test12310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12310");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(25, (int) (short) 10);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 22113);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitParameterAnnotation(29, "L1430933554", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitParameterAnnotation(142, "L1133749595", true);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test12311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12311");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMethodInsn(9, "L1808073265", "L96121905", "L139692246");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(26, 104);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotation("L1700715189", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = annotationVisitor36.visitAnnotation("L1398906509", "L169779857");
        annotationVisitor39.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test12312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12312");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.ClassWriter classWriter5 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor11 = classWriter5.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = fieldVisitor11.visitAnnotation("hi!", true);
        printWriter1.print((java.lang.Object) annotationVisitor14);
        printWriter1.println((float) (byte) 1);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter18);
        java.io.PrintWriter printWriter21 = printWriter18.append((java.lang.CharSequence) "L894790251");
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.println("hi!");
        printWriter23.close();
        printWriter23.println((int) (byte) 0);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter23);
        printWriter23.print(17);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((-889275714));
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        java.io.PrintWriter printWriter63 = printWriter33.format(locale36, "hi!", (java.lang.Object[]) labelArray60);
        printWriter33.println(7);
        printWriter33.write("L834812042");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("hi!");
        printWriter70.print((-889275714));
        printWriter70.println((int) (short) 256);
        printWriter70.print((long) 1);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter("hi!");
        printWriter78.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor81 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter78);
        java.io.PrintWriter printWriter83 = printWriter78.append('#');
        printWriter83.println((double) 51966);
        char[] charArray92 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter83.write(charArray92);
        printWriter70.print(charArray92);
        printWriter33.print(charArray92);
        printWriter23.println(charArray92);
        // The following exception was thrown during execution in test generation
        try {
            printWriter21.write(charArray92, 1, 123);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor11);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[ , a,  , #, #, a]");
    }

    @Test
    public void test12313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12313");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        printWriter13.println(0.0d);
        printWriter13.print(false);
        aSMifierClassVisitor1.print(printWriter13);
        java.io.PrintWriter printWriter23 = printWriter13.append((java.lang.CharSequence) "L298663367");
        printWriter23.close();
        printWriter23.print((double) 8);
        printWriter23.write("L1700715189");
        printWriter23.println(65210);
        org.junit.Assert.assertNotNull(printWriter23);
    }

    @Test
    public void test12314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12314");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        int int52 = classReader48.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        java.io.PrintWriter printWriter54 = printWriter1.printf("", (java.lang.Object[]) strArray53);
        printWriter54.print("L61669440");
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter54, false);
        printWriter58.flush();
        printWriter58.println(' ');
        printWriter58.println((double) 7958704966493798400L);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 51966 + "'", int52 == 51966);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test12315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12315");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray53 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor38.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray53, (int) 'a', (java.lang.Object[]) labelArray64);
        aSMifierMethodVisitor23.visitTableSwitchInsn(8, (int) (byte) 1, label37, labelArray64);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-889275714), (int) '#', label22, labelArray64);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor0.visitParameterAnnotation(6, "L1749641217", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs((int) (short) -1, (int) (byte) 100);
        org.mockito.asm.Attribute attribute77 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(attributeArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test12316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12316");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitCode();
        aSMifierMethodVisitor14.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label24 = null;
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor14.visitTryCatchBlock(label24, label25, label26, "hi!");
        aSMifierMethodVisitor14.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitLineNumber((int) (byte) 10, label42);
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor32.visitTableSwitchInsn((int) (byte) 0, 51966, label46, labelArray56);
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor32.visitLabel(label59);
        org.mockito.asm.Label label61 = new org.mockito.asm.Label();
        aSMifierMethodVisitor32.visitLabel(label61);
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor64.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor64.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor64.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor64.visitAnnotation("hi!", false);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor64.visitLineNumber(10, label80);
        aSMifierMethodVisitor14.visitTryCatchBlock(label61, label63, label80, "L1434348811");
        java.lang.Object obj84 = label80.info;
        java.lang.String str85 = label80.toString();
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 9, label80);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = aSMifierMethodVisitor0.visitParameterAnnotation(872, "L880088992", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((-21316096), (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -21316096");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNull(obj84);
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "L1964279284" + "'", str85, "L1964279284");
        org.junit.Assert.assertNotNull(annotationVisitor90);
    }

    @Test
    public void test12317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12317");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray33 = null;
        org.mockito.asm.MethodVisitor methodVisitor34 = aSMifierClassVisitor28.visitMethod((-1), "", "hi!", "", strArray33);
        org.mockito.asm.FieldVisitor fieldVisitor35 = aSMifierClassVisitor1.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        aSMifierClassVisitor1.visitInnerClass("L1669980843", "L142696279", "", (int) (byte) 100);
        aSMifierClassVisitor1.visitSource("L326432149", "L1715840275");
        aSMifierClassVisitor1.visitSource("L142696279", "L666971223");
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((-889275714));
        printWriter52.write("");
        printWriter52.write("L994489370");
        java.io.PrintWriter printWriter60 = printWriter52.append((java.lang.CharSequence) "L237245406");
        org.mockito.asm.FieldVisitor fieldVisitor61 = aSMifierClassVisitor1.visitField((int) 'a', "L2113189186", "L142696279", "L1691870655", (java.lang.Object) printWriter52);
        java.io.PrintWriter printWriter63 = new java.io.PrintWriter((java.io.Writer) printWriter52, true);
        printWriter63.write(0);
        printWriter63.print(0L);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(fieldVisitor61);
    }

    @Test
    public void test12318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12318");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.println("L943959020");
        printWriter1.println("L117134386");
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test12319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12319");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label2, label3, label4, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation(26, "L1556845882", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("L2114156461", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(131328, "L1570018250", "L969541281", "L838424803");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test12320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12320");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitOuterClass("L1691870655", "L96121905", "L994489370");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        java.io.PrintWriter printWriter29 = printWriter24.append('#');
        printWriter29.print((float) ' ');
        printWriter29.println('4');
        java.util.Locale locale34 = null;
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter43.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter43.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor55 = classWriter43.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray56 = classWriter43.toByteArray();
        org.mockito.asm.ByteVector byteVector59 = byteVector39.putByteArray(byteArray56, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader60 = new org.mockito.asm.ClassReader(byteArray56);
        long long62 = classReader60.readLong((int) (byte) 100);
        long long64 = classReader60.readLong((int) (byte) 10);
        java.lang.String[] strArray65 = classReader60.getInterfaces();
        int int67 = classReader60.readByte((int) '#');
        long long69 = classReader60.readLong(4);
        int int71 = classReader60.readInt((int) (short) 9);
        long long73 = classReader60.readLong((int) '4');
        java.lang.String str74 = classReader60.getSuperName();
        int int76 = classReader60.readByte((int) (byte) 1);
        org.mockito.asm.ClassWriter classWriter78 = new org.mockito.asm.ClassWriter(classReader60, 0);
        java.lang.String[] strArray79 = classReader60.getInterfaces();
        java.io.PrintWriter printWriter80 = printWriter29.format(locale34, "L1962766465", (java.lang.Object[]) strArray79);
        org.mockito.asm.MethodVisitor methodVisitor81 = aSMifierClassVisitor1.visitMethod(57174305, "L121647365", "L1556230913", "L523399549", strArray79);
        methodVisitor81.visitMultiANewArrayInsn("L601661571", 1869509492);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 8532477865490146625L + "'", long62 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 72057598333118569L + "'", long64 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 86 + "'", int67 == 86);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 590080L + "'", long69 == 590080L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 151060480 + "'", int71 == 151060480);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 72068947506459235L + "'", long73 == 72068947506459235L);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 254 + "'", int76 == 254);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(methodVisitor81);
    }

    @Test
    public void test12321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12321");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        int int10 = classWriter1.newNameType("L1434348811", "L1434348811");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor11.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor11.visitAnnotation("hi!", false);
        annotationVisitor25.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor31.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor31.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor31.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor31.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label51 = new org.mockito.asm.Label();
        aSMifierMethodVisitor31.visitLabel(label51);
        aSMifierMethodVisitor31.visitCode();
        annotationVisitor25.visit("hi!", (java.lang.Object) aSMifierMethodVisitor31);
        int int55 = classWriter1.newConst((java.lang.Object) "hi!");
        int int57 = classWriter1.newClass("L1284973471");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter1.visitAnnotation("L756219730", true);
        int int65 = classWriter1.newMethod("L1174303418", "L721189988", "L1121272190", true);
        byte[] byteArray66 = classWriter1.toByteArray();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 7 + "'", int57 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 14 + "'", int65 == 14);
        org.junit.Assert.assertNotNull(byteArray66);
    }

    @Test
    public void test12322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12322");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(2, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 2817);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation(7, "L1284973471", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = annotationVisitor28.visitAnnotation("L1784767575", "L883364809");
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((-889275714));
        java.util.Locale locale37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        java.io.PrintWriter printWriter64 = printWriter34.format(locale37, "hi!", (java.lang.Object[]) labelArray61);
        printWriter64.print((int) '4');
        java.io.PrintWriter printWriter68 = printWriter64.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor69 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        printWriter64.write("L994489370");
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter64, true);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor74 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        aSMifierClassVisitor74.visitOuterClass("L337574950", "L659269359", "L1592299270");
        aSMifierClassVisitor74.visitOuterClass("L978789454", "L2113189186", "L967033583");
        org.mockito.asm.ClassWriter classWriter88 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter88.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = classWriter88.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor96 = annotationVisitor94.visitArray("hi!");
        annotationVisitor94.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor98 = aSMifierClassVisitor74.visitField((int) (short) 256, "L659269359", "L96121905", "L704540978", (java.lang.Object) annotationVisitor94);
        annotationVisitor31.visit("L1734603415", (java.lang.Object) annotationVisitor94);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(annotationVisitor94);
        org.junit.Assert.assertNotNull(annotationVisitor96);
        org.junit.Assert.assertNotNull(fieldVisitor98);
    }

    @Test
    public void test12323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12323");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, 151060480);
        aSMifierMethodVisitor0.visitFieldInsn(115, "L2112385861", "L1722902851", "L1544572272");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1847055122", 17);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test12324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12324");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        printWriter1.println((int) (short) 9);
        printWriter1.print((long) (-1));
        java.io.PrintWriter printWriter96 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter96.println();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test12325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12325");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        java.lang.Object obj42 = new java.lang.Object();
        aSMifierMethodVisitor0.visitLdcInsn(obj42);
        java.util.List list44 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn(202, 15);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 9, "L2036836790", "L2112385861", "L96121905");
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "L137501116");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L1654109497", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(16780108);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 16780108");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test12326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12326");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print((float) 10L);
        printWriter31.print(25);
        printWriter31.println();
        printWriter31.println();
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        java.io.PrintWriter printWriter52 = printWriter50.append((java.lang.CharSequence) "L231657813");
        printWriter52.println(true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter52);
    }

    @Test
    public void test12327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12327");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor49.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putByte(2);
        annotationVisitor61.visit("", (java.lang.Object) byteVector64);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor61);
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        java.lang.Object obj73 = label72.info;
        aSMifierMethodVisitor0.visitJumpInsn(25, label72);
        aSMifierMethodVisitor0.visitMaxs(3, 8);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = annotationVisitor79.visitAnnotation("L1984018713", "L177207767");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test12328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12328");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        classWriter1.visitSource("L575352164", "L1544572272");
        classWriter1.visitOuterClass("L2072201856", "L237245406", "hi!");
        int int56 = classWriter1.newClass("L1000949368");
        classWriter1.visitInnerClass("L1271688136", "L799304101", "L2072201856", (int) (short) 256);
        classWriter1.visitSource("L1866436761", "L247779944");
        org.mockito.asm.Attribute attribute65 = null;
        // The following exception was thrown during execution in test generation
        try {
            classWriter1.visitAttribute(attribute65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 21 + "'", int56 == 21);
    }

    @Test
    public void test12329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12329");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor36);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((-889275714));
        java.util.Locale locale42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label63 = null;
        int[] intArray65 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label63, intArray65, labelArray66);
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label45, intArray54, labelArray66);
        java.io.PrintWriter printWriter69 = printWriter39.format(locale42, "hi!", (java.lang.Object[]) labelArray66);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter("hi!");
        char[] charArray78 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter71.print(charArray78);
        printWriter69.print(charArray78);
        printWriter69.print(true);
        aSMifierMethodVisitor23.print(printWriter69);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor23);
        org.mockito.asm.AnnotationVisitor annotationVisitor87 = aSMifierMethodVisitor0.visitAnnotation("L61669440", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1284973471", (int) ' ');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1528647597", 51966);
        aSMifierMethodVisitor0.visitMethodInsn(140, "L1032566033", "L1143644228", "L98646550");
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1]");
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor87);
    }

    @Test
    public void test12330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12330");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.println();
        printWriter1.println(true);
        java.io.PrintWriter printWriter11 = printWriter1.append((java.lang.CharSequence) "L1520643123");
        org.junit.Assert.assertNotNull(printWriter11);
    }

    @Test
    public void test12331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12331");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        int int40 = classReader36.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray41 = classReader36.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor4.visitMethod(0, "hi!", "L994489370", "hi!", strArray41);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        long long75 = classReader71.readLong((int) (byte) 10);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        int int78 = classReader71.readByte((int) '#');
        long long80 = classReader71.readLong(4);
        int int81 = classReader71.header;
        byte[] byteArray82 = classReader71.b;
        org.mockito.asm.ClassReader classReader85 = new org.mockito.asm.ClassReader(byteArray82, (-1), 13);
        org.mockito.asm.FieldVisitor fieldVisitor86 = aSMifierClassVisitor4.visitField(5, "L2113189186", "L666971223", "L666971223", (java.lang.Object) (-1));
        aSMifierClassVisitor4.visitSource("L1749641217", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierClassVisitor4.visitAnnotation("L1592299270", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor95 = aSMifierClassVisitor4.visitAnnotation("L1414972540", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor98 = annotationVisitor95.visitAnnotation("L8751547", "L621056596");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 51966 + "'", int40 == 51966);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 72057598333118569L + "'", long75 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 86 + "'", int78 == 86);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 590080L + "'", long80 == 590080L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 118 + "'", int81 == 118);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor86);
        org.junit.Assert.assertNotNull(annotationVisitor92);
        org.junit.Assert.assertNotNull(annotationVisitor95);
        org.junit.Assert.assertNotNull(annotationVisitor98);
    }

    @Test
    public void test12332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12332");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print((-889275714));
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label30 = null;
        int[] intArray32 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label30, intArray32, labelArray33);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label23, intArray32, labelArray44);
        java.io.PrintWriter printWriter47 = printWriter17.format(locale20, "hi!", (java.lang.Object[]) labelArray44);
        printWriter17.println((int) (short) 1);
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter52 = printWriter17.format("hi!", (java.lang.Object[]) strArray51);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter55 = printWriter17.printf("", (java.lang.Object[]) strArray54);
        org.mockito.asm.MethodVisitor methodVisitor56 = aSMifierClassVisitor1.visitMethod(57174305, "L1749641217", "L1230702653", "L326432149", strArray54);
        aSMifierClassVisitor1.visitOuterClass("L1200350890", "L97937772", "L1962067231");
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor72 = classWriter66.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        fieldVisitor72.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = fieldVisitor72.visitAnnotation("L1669980843", true);
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor1.visitField(26729, "L1985557894", "L1960608380", "L1271688136", (java.lang.Object) fieldVisitor72);
        fieldVisitor77.visitEnd();
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1]");
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(methodVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(fieldVisitor77);
    }

    @Test
    public void test12333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12333");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor22 = aSMifierClassVisitor1.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        aSMifierClassVisitor1.visitInnerClass("L2113189186", "L326432149", "L61669440", 51966);
        aSMifierClassVisitor1.visitInnerClass("L1441782014", "L1749641217", "", (-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label56 = null;
        int[] intArray58 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray59 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor50.visitLookupSwitchInsn(label56, intArray58, labelArray59);
        aSMifierMethodVisitor37.visitLookupSwitchInsn(label38, intArray47, labelArray59);
        aSMifierMethodVisitor37.visitMethodInsn(4, "", "hi!", "");
        aSMifierMethodVisitor37.visitIntInsn(3, 0);
        aSMifierMethodVisitor37.visitCode();
        aSMifierMethodVisitor37.visitMaxs(0, 254);
        org.mockito.asm.FieldVisitor fieldVisitor74 = aSMifierClassVisitor1.visitField(25, "L1749641217", "L1703143512", "L174478886", (java.lang.Object) 0);
        aSMifierClassVisitor1.visitInnerClass("L1305827832", "L834812042", "L142696279", 6);
        aSMifierClassVisitor1.visitSource("L458514122", "L894790251");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[1]");
        org.junit.Assert.assertNotNull(labelArray59);
        org.junit.Assert.assertNotNull(fieldVisitor74);
    }

    @Test
    public void test12334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12334");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter17.visitEnd();
        classWriter17.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter17.visitSource("hi!", "hi!");
        classWriter17.visitSource("", "");
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter64.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = classWriter64.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter64.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray77 = classWriter64.toByteArray();
        org.mockito.asm.ByteVector byteVector80 = byteVector60.putByteArray(byteArray77, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader81 = new org.mockito.asm.ClassReader(byteArray77);
        long long83 = classReader81.readLong((int) (byte) 100);
        long long85 = classReader81.readLong((int) (byte) 10);
        java.lang.String[] strArray86 = classReader81.getInterfaces();
        aSMifierClassVisitor51.visit((int) (byte) 1, (-1), "", "hi!", "", strArray86);
        classWriter17.visit(10, 202, "L601661571", "L1669980843", "L1669980843", strArray86);
        org.mockito.asm.MethodVisitor methodVisitor89 = aSMifierClassVisitor1.visitMethod(1986622313, "", "L142696279", "L659269359", strArray86);
        methodVisitor89.visitMaxs(320, 1);
        // The following exception was thrown during execution in test generation
        try {
            methodVisitor89.visitIntInsn(320, 53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 8532477865490146625L + "'", long83 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 72057598333118569L + "'", long85 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(methodVisitor89);
    }

    @Test
    public void test12335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12335");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(33, 16778088);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotation("L1526656810", true);
        aSMifierMethodVisitor0.visitMethodInsn(10, "L514140742", "L34197324", "");
        aSMifierMethodVisitor0.visitIincInsn(0, 22113);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test12336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12336");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        printWriter35.print("L1549311922");
        printWriter35.println();
        printWriter35.println(true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test12337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12337");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        byte[] byteArray39 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray39);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((int) 'a');
        printWriter42.println("");
        printWriter42.print((float) 590080L);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter((java.io.Writer) printWriter42, true);
        printWriter42.print((float) (short) 30313);
        java.util.Locale locale53 = null;
        java.lang.Object[] objArray55 = null;
        java.io.PrintWriter printWriter56 = printWriter42.printf(locale53, "", objArray55);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter42);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter57);
        classReader40.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor58, (int) '#');
        java.lang.String str61 = classReader40.getClassName();
        int int62 = classReader40.getAccess();
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        printWriter64.print((int) 'a');
        printWriter64.println("");
        java.io.PrintWriter printWriter69 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        aSMifierClassVisitor70.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierClassVisitor70.visitAnnotation("", false);
        printWriter64.print((java.lang.Object) false);
        printWriter64.print((double) 10.0f);
        java.io.PrintWriter printWriter82 = new java.io.PrintWriter((java.io.Writer) printWriter64);
        printWriter82.print((long) 1);
        java.io.PrintWriter printWriter85 = new java.io.PrintWriter((java.io.Writer) printWriter82);
        boolean boolean86 = printWriter82.checkError();
        java.io.PrintWriter printWriter88 = printWriter82.append((java.lang.CharSequence) "L2113189186");
        java.io.PrintWriter printWriter90 = printWriter88.append('#');
        printWriter90.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor92 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter90);
        aSMifierClassVisitor92.visitEnd();
        classReader40.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor92, 22);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 35 + "'", int62 == 35);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test12338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12338");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        byte[] byteArray72 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader73 = new org.mockito.asm.ClassReader(byteArray72);
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray72, (int) (byte) 0, 0);
        org.mockito.asm.ClassWriter classWriter78 = new org.mockito.asm.ClassWriter(classReader76, 110);
        org.mockito.asm.ByteVector byteVector80 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector82 = byteVector80.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector86 = byteVector82.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector88 = byteVector86.putUTF8("");
        org.mockito.asm.ByteVector byteVector90 = byteVector86.putInt((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector92 = byteVector90.putShort((int) (short) 30313);
        org.mockito.asm.ByteVector byteVector94 = byteVector92.putByte((int) (short) 22113);
        org.mockito.asm.ByteVector byteVector96 = byteVector94.putInt(26);
        org.mockito.asm.ByteVector byteVector98 = byteVector94.putShort(234);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = classWriter78.newConst((java.lang.Object) byteVector98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.ByteVector@15fe6802");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 15, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 12, 0, 1, 0, 1, 3, 0, 0, 0, 97, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 9, 0, 0, 0, 2, 0, 3, 0, 10, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 9, 0, 0, 0, 2, 0, 4, 0, 11, 0, 0, 0, 0, 0, 10, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 10, 0, 0, 0, 2, 0, 1, 0, 12, 0, 0, 0, 2, 0, 1, 0, 13, 0, 0, 0, 0, 0, 14, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
        org.junit.Assert.assertNotNull(byteVector86);
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertNotNull(byteVector90);
        org.junit.Assert.assertNotNull(byteVector92);
        org.junit.Assert.assertNotNull(byteVector94);
        org.junit.Assert.assertNotNull(byteVector96);
        org.junit.Assert.assertNotNull(byteVector98);
    }

    @Test
    public void test12339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12339");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.util.Locale locale23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector32 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putInt((int) 'a');
        aSMifierMethodVisitor25.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label40 = null;
        int[] intArray46 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor47.visitLineNumber((int) (byte) 10, label57);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        int[] intArray70 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label68, intArray70, labelArray71);
        aSMifierMethodVisitor47.visitTableSwitchInsn((int) (byte) 0, 51966, label61, labelArray71);
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label40, intArray46, labelArray71);
        java.io.PrintWriter printWriter75 = printWriter1.printf(locale23, "L1669980843", (java.lang.Object[]) labelArray71);
        printWriter75.println("L994489370");
        java.util.Locale locale78 = null;
        java.lang.String[] strArray80 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter81 = printWriter75.printf(locale78, "L459227517", (java.lang.Object[]) strArray80);
        char[] charArray86 = new char[] { ' ', 'a', '#', '#' };
        printWriter75.println(charArray86);
        // The following exception was thrown during execution in test generation
        try {
            printWriter75.write("L1890580259", 872, (int) (short) 28533);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 8872");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), " a##");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), " a##");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[ , a, #, #]");
    }

    @Test
    public void test12340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12340");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 1, 10);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((-889275714));
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label46, intArray55, labelArray67);
        java.io.PrintWriter printWriter70 = printWriter40.format(locale43, "hi!", (java.lang.Object[]) labelArray67);
        printWriter70.println("L799304101");
        java.io.PrintWriter printWriter74 = printWriter70.append('#');
        java.io.PrintWriter printWriter76 = printWriter70.append('a');
        printWriter70.write("L2113189186");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter70);
        printWriter70.print((-1.0d));
        java.io.PrintWriter printWriter83 = printWriter70.append('4');
        printWriter83.write("L277120252");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(printWriter74);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test12341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12341");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitVarInsn(86, 1);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(26729, "L1135610391");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12342");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label15 = null;
        int[] intArray21 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLineNumber((int) (byte) 10, label32);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label43 = null;
        int[] intArray45 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray46 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor37.visitLookupSwitchInsn(label43, intArray45, labelArray46);
        aSMifierMethodVisitor22.visitTableSwitchInsn((int) (byte) 0, 51966, label36, labelArray46);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label15, intArray21, labelArray46);
        aSMifierMethodVisitor0.visitMaxs(0, 9);
        aSMifierMethodVisitor0.visitIincInsn(26, 30313);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 872, (-889275714));
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1]");
        org.junit.Assert.assertNotNull(labelArray46);
    }

    @Test
    public void test12343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12343");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor0.visitAnnotation("L454715523", true);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label62 = null;
        int[] intArray64 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray65 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label62, intArray64, labelArray65);
        java.util.List list67 = aSMifierMethodVisitor56.getText();
        printWriter53.println((java.lang.Object) list67);
        printWriter53.print((long) (byte) 10);
        boolean boolean71 = printWriter53.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter53);
        aSMifierClassVisitor72.visitEnd();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor72);
        aSMifierMethodVisitor0.visitMaxs(9, 30313);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(16778088, 1699311222);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(1536, "L1285739482", "", "L998472006");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1]");
        org.junit.Assert.assertNotNull(labelArray65);
        org.junit.Assert.assertNotNull(list67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test12344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12344");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation(151060480, "hi!", false);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 0, (int) 'a');
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn(16, "L454715523");
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor27.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = annotationVisitor27.visitAnnotation("L2003594704", "L838424803");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test12345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12345");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor16.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor16.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLabel(label36);
        aSMifierMethodVisitor16.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor40.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        aSMifierMethodVisitor40.visitLabel(label60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor62.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor62.visitIincInsn(1, 0);
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor62.visitLabel(label74);
        label60.info = aSMifierMethodVisitor62;
        aSMifierMethodVisitor16.visitLineNumber(24942, label60);
        java.lang.Object obj78 = label60.info;
        aSMifierMethodVisitor0.visitLineNumber((-1107296256), label60);
        java.lang.String str80 = label60.toString();
        java.lang.String str81 = label60.toString();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(obj78);
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "L123314814" + "'", str80, "L123314814");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "L123314814" + "'", str81, "L123314814");
    }

    @Test
    public void test12346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12346");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor0.visitAnnotation("L454715523", true);
        aSMifierMethodVisitor0.visitMethodInsn(11, "L326432149", "L142696279", "L96121905");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn(1, "L648105835", "L928755548", "L735954115");
        aSMifierMethodVisitor0.visitMethodInsn(115, "L139692246", "L294838978", "L603155286");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L725680010", 36);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12347");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label15 = null;
        aSMifierMethodVisitor9.visitLabel(label15);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor18.visitLineNumber((int) (byte) 10, label28);
        aSMifierMethodVisitor18.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor18.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLineNumber(4, label39);
        aSMifierMethodVisitor9.visitLineNumber((int) (short) 10, label39);
        aSMifierMethodVisitor0.visitLabel(label39);
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 27745, 47806);
    }

    @Test
    public void test12348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12348");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor28.visit(2, (int) (byte) 0, "", "", "", strArray37);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "L1434348811");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        aSMifierMethodVisitor0.visitFieldInsn(14, "L1434348811", "L61669440", "L1434348811");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "L1284973471", false);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test12349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12349");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitAnnotation("L1105153118", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label60 = null;
        int[] intArray62 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label60, intArray62, labelArray63);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor54.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor54.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor54);
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor70);
    }

    @Test
    public void test12350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12350");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor26.visitLabel(label32);
        aSMifierMethodVisitor26.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor26.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor21.visitField(8, "L994489370", "L1703143512", "L1434348811", (java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitMultiANewArrayInsn("L1646774915", 57174305);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor43);
    }

    @Test
    public void test12351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12351");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitInnerClass("", "hi!", "hi!", 100);
        int int10 = classWriter1.newField("", "hi!", "L994489370");
        int int14 = classWriter1.newField("", "L555214098", "L659269359");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor19.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor19.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor19.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor19.visitEnd();
        aSMifierMethodVisitor19.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor19.visitAnnotation("hi!", false);
        aSMifierMethodVisitor19.visitFieldInsn((int) (byte) 100, "L1434348811", "L454715523", "L1284973471");
        java.util.List list51 = aSMifierMethodVisitor19.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor19.visitParameterAnnotation(3, "L1421508585", false);
        java.util.List list56 = aSMifierMethodVisitor19.getText();
        aSMifierMethodVisitor19.visitEnd();
        aSMifierMethodVisitor19.visitMaxs(1853030400, 0);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter1.visitField((int) (short) 24942, "L1610282393", "L664055953", "L744095971", (java.lang.Object) 0);
        int int66 = classWriter1.newMethod("L1544572272", "L989403231", "L1601831013", false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 11 + "'", int14 == 11);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 21 + "'", int66 == 21);
    }

    @Test
    public void test12352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12352");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        printWriter1.print(0.0d);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print((int) 'a');
        printWriter9.println("");
        printWriter9.print((float) 590080L);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter9, true);
        printWriter17.println('a');
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter((java.io.Writer) printWriter17);
        java.util.Locale locale21 = null;
        java.io.PrintWriter printWriter23 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter23);
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor37 = classWriter31.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter31.visitEnd();
        org.mockito.asm.ClassWriter classWriter45 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter45.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = classWriter45.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter45.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter45.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter45.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter70 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor71 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter70);
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor71.visit(2, (int) (byte) 0, "", "", "", strArray80);
        classWriter45.visit((int) 'a', (int) '#', "", "", "hi!", strArray80);
        classWriter31.visit(100, 100, "L326432149", "L1434348811", "", strArray80);
        aSMifierClassVisitor24.visit(590080, 256, "L994489370", "L237245406", "L1749641217", strArray80);
        java.io.PrintWriter printWriter85 = printWriter20.format(locale21, "L2036836790", (java.lang.Object[]) strArray80);
        printWriter20.println();
        printWriter20.println();
        printWriter1.println((java.lang.Object) printWriter20);
        java.io.PrintWriter printWriter90 = new java.io.PrintWriter((java.io.Writer) printWriter20, true);
        java.io.PrintWriter printWriter92 = printWriter20.append((java.lang.CharSequence) "L736029200");
        org.junit.Assert.assertNotNull(fieldVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test12353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12353");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIntInsn(0, 57174305);
        aSMifierMethodVisitor0.visitMaxs(100, 136);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 1, "L1165266040", false);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 9, "L1034948649", "L117134386", "L328077442");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test12354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12354");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor34.visitEnd();
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter48 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter48.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = classWriter48.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor60 = classWriter48.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray61 = classWriter48.toByteArray();
        org.mockito.asm.ByteVector byteVector64 = byteVector44.putByteArray(byteArray61, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader65 = new org.mockito.asm.ClassReader(byteArray61);
        long long67 = classReader65.readLong((int) (byte) 100);
        long long69 = classReader65.readLong((int) (byte) 10);
        java.lang.String[] strArray70 = classReader65.getInterfaces();
        int int72 = classReader65.readInt(0);
        int int73 = classReader65.getAccess();
        java.lang.String[] strArray74 = classReader65.getInterfaces();
        aSMifierClassVisitor34.visit((int) (short) -1, (int) (short) 22113, "L142696279", "L666971223", "L326432149", strArray74);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierClassVisitor34.visitAnnotation("L607677620", false);
        aSMifierClassVisitor34.visitSource("L23254251", "L1544572272");
        aSMifierClassVisitor34.visitOuterClass("L30917897", "L2032501860", "L1393780661");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 8532477865490146625L + "'", long67 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 72057598333118569L + "'", long69 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-889275714) + "'", int72 == (-889275714));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test12355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12355");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        java.util.List list30 = aSMifierMethodVisitor19.getText();
        printWriter16.println((java.lang.Object) list30);
        printWriter16.print((double) 10L);
        printWriter16.print(false);
        printWriter16.println(false);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter16);
        org.mockito.asm.ByteVector byteVector41 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector45 = byteVector43.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter47 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter47.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = classWriter47.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter47.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray60 = classWriter47.toByteArray();
        org.mockito.asm.ByteVector byteVector63 = byteVector43.putByteArray(byteArray60, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader64 = new org.mockito.asm.ClassReader(byteArray60);
        long long66 = classReader64.readLong((int) (byte) 100);
        long long68 = classReader64.readLong((int) (byte) 10);
        java.lang.String[] strArray69 = classReader64.getInterfaces();
        java.io.PrintWriter printWriter70 = printWriter16.printf("L2099222213", (java.lang.Object[]) strArray69);
        java.io.PrintWriter printWriter71 = new java.io.PrintWriter((java.io.Writer) printWriter16);
        printWriter71.print((long) 4);
        printWriter71.print(true);
        java.lang.Object obj76 = null;
        printWriter71.println(obj76);
        org.mockito.asm.FieldVisitor fieldVisitor78 = aSMifierClassVisitor1.visitField(26913, "L607677620", "L1601831013", "L1837291041", (java.lang.Object) printWriter71);
        java.io.PrintWriter printWriter80 = printWriter71.append((java.lang.CharSequence) "L128274680");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor81 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter71);
        printWriter71.println();
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 8532477865490146625L + "'", long66 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 72057598333118569L + "'", long68 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(printWriter80);
    }

    @Test
    public void test12356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12356");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println(false);
        java.io.PrintWriter printWriter25 = printWriter1.append((java.lang.CharSequence) "L1669980843");
        printWriter1.print("L1138164648");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter25);
    }

    @Test
    public void test12357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12357");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L659269359", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label26 = null;
        int[] intArray28 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray29 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label26, intArray28, labelArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label19, intArray28, labelArray40);
        aSMifierMethodVisitor18.visitCode();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor18);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor18.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor18.visitIntInsn(223337, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1]");
        org.junit.Assert.assertNotNull(labelArray29);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test12358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12358");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(6, "hi!", false);
        annotationVisitor26.visitEnum("L1714647436", "", "L880088992");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test12359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12359");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 100, (-1));
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
    }

    @Test
    public void test12360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12360");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(2, (int) (short) -1);
        aSMifierMethodVisitor0.visitVarInsn(86, 10);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 0, "L326432149", "L1083567291", "L644390938");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor26.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor26.visitLineNumber((int) (byte) 10, label36);
        aSMifierMethodVisitor26.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor26.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor43.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor43.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor43.visitLocalVariable("hi!", "hi!", "hi!", label58, label59, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor63.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor63.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor63.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor63.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label83 = new org.mockito.asm.Label();
        aSMifierMethodVisitor63.visitLabel(label83);
        java.lang.String str85 = label83.toString();
        aSMifierMethodVisitor43.visitJumpInsn(5, label83);
        java.lang.Object obj87 = label83.info;
        aSMifierMethodVisitor26.visitJumpInsn((int) (short) 1, label83);
        java.lang.String str89 = label83.toString();
        aSMifierMethodVisitor0.visitLabel(label83);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor82);
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "L538594135" + "'", str85, "L538594135");
        org.junit.Assert.assertNull(obj87);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "L538594135" + "'", str89, "L538594135");
    }

    @Test
    public void test12361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12361");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.print(0.0f);
        printWriter1.print((double) 57174305);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.print((float) 1869480192);
        printWriter1.print(' ');
        printWriter1.print(false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test12362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12362");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIincInsn(100, (int) (short) 872);
        aSMifierMethodVisitor0.visitFieldInsn(27, "L1605751355", "L1706222126", "L1418438756");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation(67, "L420944350", false);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test12363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12363");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        aSMifierClassVisitor1.visitOuterClass("L1434348811", "hi!", "L666971223");
        java.io.PrintWriter printWriter20 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter20);
        aSMifierClassVisitor21.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor21.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        printWriter33.println(0.0d);
        printWriter33.print(false);
        aSMifierClassVisitor21.print(printWriter33);
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter53 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter53.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = classWriter53.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter53.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray66 = classWriter53.toByteArray();
        org.mockito.asm.ByteVector byteVector69 = byteVector49.putByteArray(byteArray66, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray66);
        long long72 = classReader70.readLong((int) (byte) 100);
        int int74 = classReader70.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray75 = classReader70.getInterfaces();
        org.mockito.asm.ClassWriter classWriter77 = new org.mockito.asm.ClassWriter(classReader70, 2);
        int int79 = classReader70.readUnsignedShort((int) ' ');
        java.lang.String[] strArray80 = classReader70.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor81 = aSMifierClassVisitor21.visitMethod(86, "L1715840275", "L598840791", "L454715523", strArray80);
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor1.visitMethod(22, "L666971223", "L406814154", "L997959795", strArray80);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierClassVisitor1.visitAnnotation("L914596724", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 8532477865490146625L + "'", long72 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 51966 + "'", int74 == 51966);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 24942 + "'", int79 == 24942);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(methodVisitor81);
        org.junit.Assert.assertNotNull(methodVisitor82);
        org.junit.Assert.assertNotNull(annotationVisitor85);
    }

    @Test
    public void test12364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12364");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter8.write("L142696279");
        java.util.Locale locale11 = null;
        java.lang.String[] strArray13 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter14 = printWriter8.printf(locale11, "L1105153118", (java.lang.Object[]) strArray13);
        java.io.PrintWriter printWriter16 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter16);
        org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter24.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter24.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor36 = classWriter24.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter24.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter24.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter49 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter49);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor50.visit(2, (int) (byte) 0, "", "", "", strArray59);
        classWriter24.visit((int) 'a', (int) '#', "", "", "hi!", strArray59);
        aSMifierClassVisitor17.visit((int) (byte) -1, 1, "hi!", "hi!", "hi!", strArray59);
        java.io.PrintWriter printWriter63 = printWriter8.format("", (java.lang.Object[]) strArray59);
        printWriter63.write("L871879646");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(printWriter14);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(fieldVisitor36);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(printWriter63);
    }

    @Test
    public void test12365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12365");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = annotationVisitor12.visitAnnotation("L1200350890", "L2036836790");
        annotationVisitor15.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = annotationVisitor15.visitAnnotation("L571926043", "L1284973471");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test12366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12366");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitVarInsn(86, 1);
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print((-889275714));
        java.util.Locale locale18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label28 = null;
        int[] intArray30 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray31 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label28, intArray30, labelArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label21, intArray30, labelArray42);
        java.io.PrintWriter printWriter45 = printWriter15.format(locale18, "hi!", (java.lang.Object[]) labelArray42);
        printWriter45.print((int) '4');
        java.io.PrintWriter printWriter49 = printWriter45.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        printWriter45.write("L994489370");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter45, true);
        printWriter54.close();
        printWriter54.print((double) 590080L);
        printWriter54.write("L78149900");
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.Writer) printWriter54, false);
        java.io.PrintWriter printWriter63 = printWriter54.append((java.lang.CharSequence) "L1715840275");
        aSMifierMethodVisitor0.print(printWriter63);
        printWriter63.write("L1736155405");
        printWriter63.print((double) 1);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1]");
        org.junit.Assert.assertNotNull(labelArray31);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(printWriter63);
    }

    @Test
    public void test12367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12367");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "L298663367");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor16.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor16.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor16.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor16.visitIincInsn(86, (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor42.visitAnnotation("", true);
        java.util.List list54 = aSMifierMethodVisitor42.text;
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("", 3);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierMethodVisitor42.visitAnnotation("L1434348811", false);
        aSMifierMethodVisitor42.visitIntInsn(17, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor65.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor65.visitLineNumber((int) (byte) 10, label75);
        aSMifierMethodVisitor65.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor65.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label86 = new org.mockito.asm.Label();
        aSMifierMethodVisitor65.visitLineNumber(4, label86);
        java.lang.String str88 = label86.toString();
        aSMifierMethodVisitor42.visitJumpInsn((int) '#', label86);
        aSMifierMethodVisitor16.visitLabel(label86);
        aSMifierMethodVisitor0.visitJumpInsn(0, label86);
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(annotationVisitor60);
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "L1953477782" + "'", str88, "L1953477782");
    }

    @Test
    public void test12368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12368");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label12, label13, label14, "");
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter24.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter24.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor36 = classWriter24.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray37 = classWriter24.toByteArray();
        org.mockito.asm.ByteVector byteVector40 = byteVector20.putByteArray(byteArray37, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader41 = new org.mockito.asm.ClassReader(byteArray37);
        long long43 = classReader41.readLong((int) (byte) 100);
        long long45 = classReader41.readLong((int) (byte) 10);
        java.lang.String[] strArray46 = classReader41.getInterfaces();
        int int48 = classReader41.readByte((int) '#');
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader41, 590080);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 590080);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        java.lang.Object obj54 = label53.info;
        java.lang.String str55 = label53.toString();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitCode();
        aSMifierMethodVisitor56.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor56.visitEnd();
        aSMifierMethodVisitor56.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        aSMifierMethodVisitor56.visitJumpInsn(25, label66);
        java.lang.Object obj68 = label66.info;
        java.lang.String str69 = label66.toString();
        java.lang.String str70 = label66.toString();
        label53.info = str70;
        aSMifierMethodVisitor0.visitLabel(label53);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(fieldVisitor36);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 8532477865490146625L + "'", long43 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 72057598333118569L + "'", long45 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 86 + "'", int48 == 86);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNull(obj54);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L986801666" + "'", str55, "L986801666");
        org.junit.Assert.assertNull(obj68);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L1114585926" + "'", str69, "L1114585926");
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L1114585926" + "'", str70, "L1114585926");
    }

    @Test
    public void test12369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12369");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        printWriter31.println((int) (short) 10);
        java.io.PrintWriter printWriter60 = printWriter31.append((java.lang.CharSequence) "L1434348811");
        printWriter60.println(true);
        boolean boolean63 = printWriter60.checkError();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test12370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12370");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor26.visitLabel(label32);
        aSMifierMethodVisitor26.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor26.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor21.visitField(8, "L994489370", "L1703143512", "L1434348811", (java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = fieldVisitor43.visitAnnotation("L1319996471", true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test12371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12371");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label33);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("L326432149", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(29801, "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test12372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12372");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray30 = classWriter17.toByteArray();
        org.mockito.asm.ByteVector byteVector33 = byteVector13.putByteArray(byteArray30, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray30);
        long long36 = classReader34.readLong((int) (byte) 100);
        long long38 = classReader34.readLong((int) (byte) 10);
        java.lang.String[] strArray39 = classReader34.getInterfaces();
        aSMifierClassVisitor4.visit((int) (byte) 1, (-1), "", "hi!", "", strArray39);
        aSMifierClassVisitor4.visitOuterClass("L1434348811", "L326432149", "L994489370");
        aSMifierClassVisitor4.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor4.visitAnnotation("L2113189186", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierClassVisitor4.visitAnnotation("L598840791", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierClassVisitor4.visitAnnotation("L1182941977", true);
        aSMifierClassVisitor4.visitEnd();
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 8532477865490146625L + "'", long36 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 72057598333118569L + "'", long38 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test12373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12373");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitSource("", "hi!");
        int int16 = classWriter1.newConst((java.lang.Object) "");
        classWriter1.visitInnerClass("L834812042", "L459227517", "", 30313);
        int int23 = classWriter1.newClass("L61669440");
        int int28 = classWriter1.newMethod("L1508691945", "L1644755393", "L804028497", false);
        java.lang.String[] strArray34 = null;
        classWriter1.visit(86, 24942, "L79355481", "L1849458793", "L122837608", strArray34);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 9 + "'", int23 == 9);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 15 + "'", int28 == 15);
    }

    @Test
    public void test12374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12374");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        printWriter1.println((long) 5);
        printWriter1.write("hi!", 14, (-1161953280));
        java.io.PrintWriter printWriter40 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor41.visit(2, (int) (byte) 0, "", "", "", strArray50);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierClassVisitor41.visitAnnotation("", false);
        aSMifierClassVisitor41.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        java.util.List list60 = aSMifierClassVisitor41.text;
        printWriter1.print((java.lang.Object) aSMifierClassVisitor41);
        aSMifierClassVisitor41.visitInnerClass("L836986691", "L666971223", "L231657813", 590080);
        aSMifierClassVisitor41.visitSource("L1432518723", "L949601768");
        org.mockito.asm.Attribute attribute70 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor41.visitAttribute(attribute70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(list60);
    }

    @Test
    public void test12375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12375");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor10.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor10.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor23.visitAnnotation("hi!", false);
        org.mockito.asm.Label label39 = new org.mockito.asm.Label();
        aSMifierMethodVisitor23.visitLineNumber(10, label39);
        aSMifierMethodVisitor10.visitLineNumber(1, label39);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor42.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor42.visitLocalVariable("hi!", "hi!", "hi!", label57, label58, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor62.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor62.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor62.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor62.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label82 = new org.mockito.asm.Label();
        aSMifierMethodVisitor62.visitLabel(label82);
        java.lang.String str84 = label82.toString();
        aSMifierMethodVisitor42.visitJumpInsn(5, label82);
        java.lang.Object obj86 = label82.info;
        label39.info = label82;
        java.lang.String str88 = label82.toString();
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label82);
        java.lang.String str90 = label82.toString();
        java.lang.String str91 = label82.toString();
        java.lang.Object obj92 = label82.info;
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor74);
        org.junit.Assert.assertNotNull(annotationVisitor81);
// flaky:         org.junit.Assert.assertEquals("'" + str84 + "' != '" + "L630830137" + "'", str84, "L630830137");
        org.junit.Assert.assertNull(obj86);
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "L630830137" + "'", str88, "L630830137");
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "L630830137" + "'", str90, "L630830137");
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "L630830137" + "'", str91, "L630830137");
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test12376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12376");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println(7);
        printWriter1.println(false);
        boolean boolean36 = printWriter1.checkError();
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray45 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter39.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray45);
        java.io.PrintWriter printWriter47 = printWriter1.format("L1444913603", (java.lang.Object[]) strArray45);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(printWriter47);
    }

    @Test
    public void test12377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12377");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitInsn((int) (short) 1);
        java.util.List list45 = aSMifierMethodVisitor24.getText();
        aSMifierMethodVisitor24.visitTypeInsn((int) '#', "L1216476214");
        aSMifierMethodVisitor24.visitEnd();
        aSMifierMethodVisitor24.visitVarInsn(118, 16779859);
        java.util.List list53 = aSMifierMethodVisitor24.getText();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(list53);
    }

    @Test
    public void test12378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12378");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L994489370");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        printWriter40.close();
        printWriter40.print((double) 590080L);
        printWriter40.write("L78149900");
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter40, false);
        java.io.PrintWriter printWriter49 = printWriter40.append((java.lang.CharSequence) "L1715840275");
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter((java.io.Writer) printWriter40, true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter49);
    }

    @Test
    public void test12379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12379");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print(9);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter14 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor15 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter14);
        aSMifierClassVisitor15.visitSource("hi!", "");
        org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter24.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter24.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = annotationVisitor30.visitArray("hi!");
        org.mockito.asm.FieldVisitor fieldVisitor33 = aSMifierClassVisitor15.visitField(3, "hi!", "hi!", "hi!", (java.lang.Object) annotationVisitor30);
        aSMifierClassVisitor15.visitInnerClass("hi!", "", "hi!", 3);
        aSMifierClassVisitor15.visitSource("L601661571", "L601661571");
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierClassVisitor51.visitAnnotation("", false);
        aSMifierClassVisitor51.visitEnd();
        aSMifierClassVisitor51.visitSource("L1749641217", "L994489370");
        aSMifierClassVisitor51.visitOuterClass("L137501116", "L2036836790", "L1230702653");
        org.mockito.asm.ClassWriter classWriter68 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray74 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter68.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray74);
        org.mockito.asm.MethodVisitor methodVisitor76 = aSMifierClassVisitor51.visitMethod((int) (short) -326, "L1004430080", "L1931374313", "L137136720", strArray74);
        aSMifierClassVisitor15.visit(11, 1, "L55453359", "L1527711418", "L1000949368", strArray74);
        org.mockito.asm.FieldVisitor fieldVisitor78 = aSMifierClassVisitor9.visitField(332, "L70131839", "L767403187", "L1426096058", (java.lang.Object) "L55453359");
        org.mockito.asm.Attribute attribute79 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor78.visitAttribute(attribute79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(methodVisitor76);
        org.junit.Assert.assertNotNull(fieldVisitor78);
    }

    @Test
    public void test12380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12380");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj25);
        aSMifierMethodVisitor0.visitVarInsn(2, 256);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L344842840", 28526);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        java.util.List list46 = aSMifierMethodVisitor35.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor35.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor35.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.Label label55 = new org.mockito.asm.Label();
        java.lang.Object obj56 = label55.info;
        java.lang.String str57 = label55.toString();
        aSMifierMethodVisitor35.visitLineNumber((int) '#', label55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label67 = null;
        int[] intArray69 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray70 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor61.visitLookupSwitchInsn(label67, intArray69, labelArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor72.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label78 = null;
        int[] intArray80 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor72.visitLookupSwitchInsn(label78, intArray80, labelArray81);
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label60, intArray69, labelArray81);
        aSMifierMethodVisitor0.visitTableSwitchInsn(872, 320, label55, labelArray81);
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1030786659", 118);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) 30066, "", "L267150651", "L678501427");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(list46);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNull(obj56);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "L541609554" + "'", str57, "L541609554");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1]");
        org.junit.Assert.assertNotNull(labelArray70);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1]");
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(annotationVisitor85);
    }

    @Test
    public void test12381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12381");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        java.lang.String[] strArray18 = null;
        aSMifierClassVisitor1.visit((int) (byte) 10, 1, "", "L1434348811", "L326432149", strArray18);
        java.util.List list20 = aSMifierClassVisitor1.text;
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray46 = classWriter33.toByteArray();
        org.mockito.asm.ByteVector byteVector49 = byteVector29.putByteArray(byteArray46, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader50 = new org.mockito.asm.ClassReader(byteArray46);
        long long52 = classReader50.readLong((int) (byte) 100);
        int int54 = classReader50.readUnsignedShort((int) (short) 0);
        int int56 = classReader50.readUnsignedShort((int) 'a');
        int int57 = classReader50.getAccess();
        java.lang.String[] strArray58 = classReader50.getInterfaces();
        aSMifierClassVisitor1.visit((int) (short) 4, 16842765, "L1570018250", "L289288072", "L779142371", strArray58);
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 8532477865490146625L + "'", long52 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 51966 + "'", int54 == 51966);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 25929 + "'", int56 == 25929);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strArray58);
    }

    @Test
    public void test12382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12382");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        char[] charArray42 = new char[] { 'a', '#' };
        printWriter1.println(charArray42);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter45);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, #]");
    }

    @Test
    public void test12383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12383");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter75.println((double) 100);
        java.io.PrintWriter printWriter79 = printWriter75.append((java.lang.CharSequence) "L1808073265");
        printWriter79.println(0.0d);
        printWriter79.flush();
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter79);
    }

    @Test
    public void test12384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12384");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter19.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = classWriter19.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter19.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray32 = classWriter19.toByteArray();
        org.mockito.asm.ByteVector byteVector35 = byteVector15.putByteArray(byteArray32, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader36 = new org.mockito.asm.ClassReader(byteArray32);
        long long38 = classReader36.readLong((int) (byte) 100);
        int int40 = classReader36.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray41 = classReader36.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor42 = aSMifierClassVisitor4.visitMethod(0, "hi!", "L994489370", "hi!", strArray41);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("L1703143512");
        org.mockito.asm.FieldVisitor fieldVisitor49 = aSMifierClassVisitor4.visitField(86, "L799304101", "L1321861150", "L801849928", (java.lang.Object) "L1703143512");
        fieldVisitor49.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 8532477865490146625L + "'", long38 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 51966 + "'", int40 == 51966);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(methodVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor49);
    }

    @Test
    public void test12385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12385");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("", "", "L142696279");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((int) 'a');
        printWriter29.println("");
        printWriter29.print((float) 590080L);
        java.lang.Object[] objArray37 = null;
        java.io.PrintWriter printWriter38 = printWriter29.printf("hi!", objArray37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L994489370", "L142696279", "L326432149", (java.lang.Object) printWriter29);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter29, false);
        java.io.PrintWriter printWriter43 = printWriter29.append((java.lang.CharSequence) "L745195575");
        printWriter43.print(true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test12386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12386");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putByte((int) (short) 256);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putLong((long) '#');
        org.mockito.asm.ByteVector byteVector30 = byteVector26.putInt((int) (byte) 0);
        org.mockito.asm.ByteVector byteVector32 = byteVector26.putLong(0L);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
    }

    @Test
    public void test12387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12387");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitIincInsn((int) (short) 872, 0);
        aSMifierMethodVisitor26.visitInsn(0);
        aSMifierMethodVisitor26.visitMethodInsn(12, "L1829941255", "L911973346", "L298663367");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor26.visitFieldInsn(32768, "L1890580259", "L55453359", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32768");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12388");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.println((int) (short) 256);
        printWriter51.print((long) 1);
        aSMifierMethodVisitor0.print(printWriter51);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter51, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        aSMifierClassVisitor61.visitEnd();
        aSMifierClassVisitor61.visitEnd();
        org.mockito.asm.Attribute attribute64 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor61.visitAttribute(attribute64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test12389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12389");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        org.mockito.asm.Attribute[] attributeArray18 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter19 = printWriter6.format("L142696279", (java.lang.Object[]) attributeArray18);
        java.io.PrintWriter printWriter21 = printWriter6.append('4');
        java.io.PrintWriter printWriter23 = printWriter6.append('4');
        printWriter6.println("L815733228");
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(attributeArray18);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(printWriter23);
    }

    @Test
    public void test12390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12390");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label13);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotation("L96121905", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "L1541482702", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 9, "", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test12391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12391");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        printWriter9.print(9);
        printWriter9.print((double) 2817);
        printWriter9.print((double) 590080L);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor20.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor35.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor35.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray50 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor35.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray50, (int) 'a', (java.lang.Object[]) labelArray61);
        aSMifierMethodVisitor20.visitTableSwitchInsn(8, (int) (byte) 1, label34, labelArray61);
        aSMifierMethodVisitor20.visitMaxs(3, 51966);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor69.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label79 = null;
        aSMifierMethodVisitor69.visitLineNumber((int) (byte) 10, label79);
        aSMifierMethodVisitor69.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor69.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label90 = new org.mockito.asm.Label();
        aSMifierMethodVisitor69.visitLineNumber(4, label90);
        aSMifierMethodVisitor20.visitLineNumber((-1), label90);
        aSMifierMethodVisitor20.visitEnd();
        printWriter9.print((java.lang.Object) aSMifierMethodVisitor20);
        aSMifierMethodVisitor20.visitIntInsn(98, (int) (short) 29556);
        java.util.List list98 = aSMifierMethodVisitor20.getText();
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(attributeArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(list98);
    }

    @Test
    public void test12392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12392");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        printWriter31.println((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor59.visitCode();
        aSMifierMethodVisitor59.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label69, label70, label71, "hi!");
        aSMifierMethodVisitor59.visitIntInsn(2, (int) (short) -1);
        aSMifierMethodVisitor59.visitMethodInsn(0, "hi!", "", "L61669440");
        aSMifierMethodVisitor59.visitMaxs((int) (byte) 0, 16777217);
        printWriter31.println((java.lang.Object) aSMifierMethodVisitor59);
        printWriter31.write(21);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12393");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitCode();
        aSMifierMethodVisitor26.visitMaxs(65210, (int) (short) -326);
        aSMifierMethodVisitor26.visitMaxs(0, 1751720195);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("L1703143512");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor62 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter61);
        aSMifierMethodVisitor26.visitLdcInsn((java.lang.Object) printWriter61);
        printWriter61.println("L1305827832");
        printWriter61.println("L1815018994");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12394");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((-889275714));
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label29 = null;
        int[] intArray31 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor23.visitLookupSwitchInsn(label29, intArray31, labelArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor21.visitLookupSwitchInsn(label22, intArray31, labelArray43);
        java.io.PrintWriter printWriter46 = printWriter16.format(locale19, "hi!", (java.lang.Object[]) labelArray43);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        char[] charArray55 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter48.print(charArray55);
        printWriter46.print(charArray55);
        printWriter46.print(true);
        aSMifierMethodVisitor0.print(printWriter46);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1009311081", 16778088);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitAnnotation("L285151538", true);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(24, 152);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test12395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12395");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L601661571");
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitTypeInsn(100, "L666971223");
        java.util.List list40 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMaxs(0, 66);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(list40);
    }

    @Test
    public void test12396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12396");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitIincInsn(16842765, (int) (byte) 0);
        aSMifierMethodVisitor0.visitMaxs(111, 14);
    }

    @Test
    public void test12397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12397");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.lang.Object obj37 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj37);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((int) 'a');
        printWriter40.println("");
        printWriter40.print((float) 590080L);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter40, true);
        printWriter48.println('a');
        printWriter48.print(9);
        printWriter48.print((double) 2817);
        printWriter48.print((double) 590080L);
        printWriter48.println(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        printWriter48.println(true);
        printWriter48.println(32);
        aSMifierMethodVisitor0.print(printWriter48);
        printWriter48.print(false);
        printWriter48.println(17);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test12398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12398");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        java.util.List list42 = aSMifierMethodVisitor24.text;
        aSMifierMethodVisitor24.visitIincInsn(24942, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitIntInsn((int) (short) -1, 15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list42);
    }

    @Test
    public void test12399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12399");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor17.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor17.visitLocalVariable("hi!", "hi!", "hi!", label32, label33, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor37.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor37.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor37.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor37.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        aSMifierMethodVisitor37.visitLabel(label57);
        java.lang.String str59 = label57.toString();
        aSMifierMethodVisitor17.visitJumpInsn(5, label57);
        java.lang.Object obj61 = label57.info;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label57);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitCode();
        aSMifierMethodVisitor63.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor63);
        aSMifierMethodVisitor63.visitIincInsn(86, 5);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor63.visitParameterAnnotation((int) (short) -1, "", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor63.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor56);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L56452960" + "'", str59, "L56452960");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test12400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12400");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int42 = classWriter1.newField("L1284973471", "L1284973471", "L1216476214");
        classWriter1.visitOuterClass("L1105153118", "L1544572272", "");
        classWriter1.visitSource("L1931374313", "L544338606");
        int int51 = classWriter1.newClass("L858787082");
        int int55 = classWriter1.newField("L1454236833", "L823983574", "L1656212772");
        int int57 = classWriter1.newUTF8("L1133749595");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 11 + "'", int42 == 11);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 18 + "'", int51 == 18);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 24 + "'", int55 == 24);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 25 + "'", int57 == 25);
    }

    @Test
    public void test12401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12401");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        boolean boolean19 = printWriter1.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor20.visitSource("L978789454", "");
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter30 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter30.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = classWriter30.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter30.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label28.info = classWriter30;
        int int46 = classWriter30.newNameType("", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter30.visitAnnotation("L142696279", true);
        org.mockito.asm.FieldVisitor fieldVisitor50 = aSMifierClassVisitor20.visitField(321, "L967033583", "L1271688136", "L389484434", (java.lang.Object) true);
        aSMifierClassVisitor20.visitInnerClass("", "L1137045083", "L111851498", (int) (short) 0);
        aSMifierClassVisitor20.visitEnd();
        aSMifierClassVisitor20.visitEnd();
        aSMifierClassVisitor20.visitSource("L402095277", "L181922740");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor50);
    }

    @Test
    public void test12402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12402");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1715840275", 24942);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1691870655", 3);
        java.util.List list40 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitTypeInsn(27, "L1669980843");
        aSMifierMethodVisitor0.visitMaxs((int) (short) 28533, 36);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor0.visitAnnotation("L1301622947", true);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(annotationVisitor49);
    }

    @Test
    public void test12403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12403");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label16, label17, 8);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter51.print((int) '4');
        aSMifierMethodVisitor0.print(printWriter51);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L1216476214");
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 1, 101);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) 25196);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 25196");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test12404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12404");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        printWriter21.print(0.0d);
        printWriter21.print(9);
        printWriter21.println('4');
        aSMifierMethodVisitor0.print(printWriter21);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((-889275714));
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        java.io.PrintWriter printWriter63 = printWriter33.format(locale36, "hi!", (java.lang.Object[]) labelArray60);
        printWriter33.println((int) (short) 1);
        java.lang.String[] strArray67 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter68 = printWriter33.format("hi!", (java.lang.Object[]) strArray67);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter33);
        boolean boolean70 = printWriter33.checkError();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter33);
        aSMifierMethodVisitor0.visitIincInsn((int) 'a', 25929);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter("L1518460396");
        printWriter76.println();
        java.io.PrintWriter printWriter79 = printWriter76.append(' ');
        printWriter79.println(false);
        aSMifierMethodVisitor0.print(printWriter79);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(printWriter79);
    }

    @Test
    public void test12405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12405");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print(9);
        java.util.Locale locale9 = null;
        org.mockito.asm.ClassWriter classWriter12 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor18 = classWriter12.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor24.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list36 = aSMifierMethodVisitor24.text;
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter40.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter40.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter40.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter40.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter40.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter65 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor66.visit(2, (int) (byte) 0, "", "", "", strArray75);
        classWriter40.visit((int) 'a', (int) '#', "", "", "hi!", strArray75);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor79.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label85 = null;
        int[] intArray87 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray88 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor79.visitLookupSwitchInsn(label85, intArray87, labelArray88);
        aSMifierMethodVisitor24.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray75, (int) (short) 100, (java.lang.Object[]) labelArray88);
        classWriter12.visit(7, (-889275714), "", "hi!", "hi!", strArray75);
        java.io.PrintWriter printWriter92 = printWriter1.format(locale9, "L1434348811", (java.lang.Object[]) strArray75);
        printWriter1.println((long) (short) 1);
        printWriter1.println((double) 590080L);
        java.io.PrintWriter printWriter97 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.junit.Assert.assertNotNull(fieldVisitor18);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1]");
        org.junit.Assert.assertNotNull(labelArray88);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test12406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12406");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.println("L799304101");
        java.io.PrintWriter printWriter35 = printWriter31.append('#');
        boolean boolean36 = printWriter31.checkError();
        printWriter31.println();
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        java.io.PrintWriter printWriter41 = printWriter31.append((java.lang.CharSequence) "L731130013");
        printWriter41.println((float) '4');
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(printWriter41);
    }

    @Test
    public void test12407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12407");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitVarInsn((int) 'a', 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor42.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor55.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor55.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor55.visitAnnotation("hi!", false);
        org.mockito.asm.Label label71 = new org.mockito.asm.Label();
        aSMifierMethodVisitor55.visitLineNumber(10, label71);
        aSMifierMethodVisitor42.visitLineNumber(1, label71);
        aSMifierMethodVisitor0.visitLabel(label71);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitInsn(123);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor69);
    }

    @Test
    public void test12408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12408");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label63);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (byte) 0);
        java.util.List list69 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L666971223", 1986622313);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1555790481", (int) (short) -326);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L97937772", (int) (short) 100);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1770505064", 21);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn((-1107296256), 47806);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1675913995", 1634628694);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(28526, 318);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test12409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12409");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte(2);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter7.visitEnd();
        classWriter7.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter7.visitSource("hi!", "hi!");
        byte[] byteArray29 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector32 = byteVector5.putByteArray(byteArray29, 118, (int) (short) 1);
        org.mockito.asm.ClassReader classReader33 = new org.mockito.asm.ClassReader(byteArray29);
        int int34 = classReader33.getAccess();
        java.lang.String str35 = classReader33.getSuperName();
        java.lang.String str36 = classReader33.getSuperName();
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter38);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        long long75 = classReader71.readLong((int) (byte) 10);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        aSMifierClassVisitor41.visit((int) (byte) 1, (-1), "", "hi!", "", strArray76);
        aSMifierClassVisitor41.visitOuterClass("L1434348811", "L326432149", "L994489370");
        aSMifierClassVisitor41.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            classReader33.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor41, 142);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 72057598333118569L + "'", long75 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray76);
    }

    @Test
    public void test12410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12410");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitInsn((int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor24.visitAnnotation("L459227517", true);
        aSMifierMethodVisitor24.visitMaxs((int) (byte) 0, 5);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor24.visitAnnotation("L2026162020", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor53);
    }

    @Test
    public void test12411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12411");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        int[] intArray19 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label17, intArray19, labelArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label28 = null;
        int[] intArray30 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray31 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label28, intArray30, labelArray31);
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label10, intArray19, labelArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label8, intArray19, labelArray56);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "L326432149", "L326432149", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotation("L601661571", true);
        org.mockito.asm.Label label69 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter71 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter71.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = classWriter71.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor83 = classWriter71.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label69.info = classWriter71;
        java.lang.Object obj85 = label69.info;
        aSMifierMethodVisitor0.visitLineNumber(254, label69);
        org.mockito.asm.Attribute attribute87 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1]");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1]");
        org.junit.Assert.assertNotNull(labelArray31);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor83);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test12412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12412");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        int int44 = classWriter1.newMethod("hi!", "L326432149", "hi!", false);
        int int46 = classWriter1.newUTF8("L994489370");
        int int49 = classWriter1.newNameType("L1441782014", "");
        classWriter1.visitOuterClass("L406814154", "L1675913995", "L1761736395");
        int int56 = classWriter1.newNameType("L990238104", "L555214098");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 13 + "'", int44 == 13);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 14 + "'", int46 == 14);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 16 + "'", int49 == 16);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 24 + "'", int56 == 24);
    }

    @Test
    public void test12413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12413");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor7);
    }

    @Test
    public void test12414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12414");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor22.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray37 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor22.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray37, (int) 'a', (java.lang.Object[]) labelArray48);
        aSMifierMethodVisitor22.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor54.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor54.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor54.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label74 = new org.mockito.asm.Label();
        aSMifierMethodVisitor54.visitLabel(label74);
        aSMifierMethodVisitor22.visitLineNumber((int) '#', label74);
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label74);
        java.util.List list78 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "");
        aSMifierMethodVisitor0.visitCode();
        java.util.List list84 = aSMifierMethodVisitor0.getText();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(1751720195, (int) (short) 28533);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(attributeArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(list84);
    }

    @Test
    public void test12415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12415");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor49.visitLineNumber((int) (byte) 10, label59);
        aSMifierMethodVisitor49.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor49.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        aSMifierMethodVisitor49.visitLineNumber(4, label70);
        aSMifierMethodVisitor0.visitLineNumber((-1), label70);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn(12, "L2113189186", "L407895089", "L326432149");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 1, "L231657813", "L514553090", "");
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
    }

    @Test
    public void test12416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12416");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor10.visitAnnotation("L1555790481", false);
        org.mockito.asm.ClassWriter classWriter19 = new org.mockito.asm.ClassWriter((-889275714));
        int int21 = classWriter19.newClass("");
        classWriter19.visitInnerClass("L1853824624", "L1230702653", "L97937772", 256);
        org.mockito.asm.FieldVisitor fieldVisitor27 = aSMifierClassVisitor10.visitField(100, "L575352164", "L1297264300", "L838424803", (java.lang.Object) "L1853824624");
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitEnd();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(fieldVisitor27);
    }

    @Test
    public void test12417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12417");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        aSMifierClassVisitor1.visitInnerClass("L1722902851", "L2113189186", "L142696279", 9);
        org.mockito.asm.Attribute attribute16 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitAttribute(attribute16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12418");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
    }

    @Test
    public void test12419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12419");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierClassVisitor1.visitAnnotation("L666971223", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierClassVisitor1.visitAnnotation("L298663367", false);
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter25);
        java.io.PrintWriter printWriter30 = printWriter25.append('#');
        printWriter30.println((double) 51966);
        char[] charArray39 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter30.write(charArray39);
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField(3, "L967033583", "L454715523", "L237245406", (java.lang.Object) charArray39);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = fieldVisitor41.visitAnnotation("L1962067231", false);
        fieldVisitor41.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = fieldVisitor41.visitAnnotation("L1847415535", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = fieldVisitor41.visitAnnotation("L1254755410", true);
        org.mockito.asm.Attribute attribute52 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor41.visitAttribute(attribute52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(printWriter30);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test12420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12420");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(2, (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 0, "L1694926691");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotation("L1849458793", false);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test12421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12421");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor2.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor2.visitLineNumber((int) (byte) 10, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor2.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor2.visitParameterAnnotation(151060480, "hi!", false);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter29.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = classWriter29.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor41 = classWriter29.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray42 = classWriter29.toByteArray();
        org.mockito.asm.ByteVector byteVector45 = byteVector25.putByteArray(byteArray42, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader46 = new org.mockito.asm.ClassReader(byteArray42);
        org.mockito.asm.ClassReader classReader47 = new org.mockito.asm.ClassReader(byteArray42);
        annotationVisitor20.visit("L326432149", (java.lang.Object) byteArray42);
        org.mockito.asm.ByteVector byteVector51 = byteVector1.putByteArray(byteArray42, (int) (short) 100, 25);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("L704540978");
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putByte((int) 'a');
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putShort(8);
        org.mockito.asm.ByteVector byteVector59 = byteVector55.putInt(136);
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putUTF8("L133657978");
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
    }

    @Test
    public void test12422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12422");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor49.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putByte(2);
        annotationVisitor61.visit("", (java.lang.Object) byteVector64);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor61);
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        java.lang.Object obj73 = label72.info;
        aSMifierMethodVisitor0.visitJumpInsn(25, label72);
        aSMifierMethodVisitor0.visitMaxs(3, 8);
        aSMifierMethodVisitor0.visitFieldInsn(0, "L575352164", "L943959020", "L384579388");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(872, 118);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test12423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12423");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 1, 7);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotation("L799304101", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor0.visitAnnotation("L2112385861", false);
        aSMifierMethodVisitor0.visitIincInsn(1937006958, 1853118049);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) 25970, "L1124099526", "L58806472", "L847652191");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor44);
    }

    @Test
    public void test12424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12424");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        printWriter1.write("");
        printWriter1.println((double) (short) 100);
        printWriter1.println((float) (-1107296256));
        printWriter1.println();
        printWriter1.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.close();
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12425");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector3.putShort((int) '4');
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("");
        org.mockito.asm.ByteVector byteVector11 = byteVector7.putInt((int) (byte) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor12.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor12.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor12.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putByte(2);
        annotationVisitor24.visit("", (java.lang.Object) byteVector27);
        org.mockito.asm.ByteVector byteVector34 = byteVector27.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector36 = byteVector27.putByte(3);
        org.mockito.asm.ByteVector byteVector38 = byteVector27.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector40 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter46 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter46.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = classWriter46.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter46.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray59 = classWriter46.toByteArray();
        org.mockito.asm.ByteVector byteVector62 = byteVector42.putByteArray(byteArray59, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader63 = new org.mockito.asm.ClassReader(byteArray59);
        org.mockito.asm.ClassReader classReader64 = new org.mockito.asm.ClassReader(byteArray59);
        org.mockito.asm.ClassReader classReader65 = new org.mockito.asm.ClassReader(byteArray59);
        byte[] byteArray66 = classReader65.b;
        org.mockito.asm.ByteVector byteVector69 = byteVector38.putByteArray(byteArray66, 0, 5);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray66);
        org.mockito.asm.ByteVector byteVector73 = byteVector7.putByteArray(byteArray66, 15, 105);
        org.mockito.asm.ByteVector byteVector75 = byteVector7.putByte(1853030400);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertNotNull(byteVector75);
    }

    @Test
    public void test12426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12426");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        fieldVisitor12.visitEnd();
        org.mockito.asm.Attribute attribute14 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor12.visitAttribute(attribute14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor12);
    }

    @Test
    public void test12427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12427");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("L943959020", false);
        aSMifierMethodVisitor0.visitTypeInsn(6, "L585665233");
        org.junit.Assert.assertNotNull(annotationVisitor16);
    }

    @Test
    public void test12428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12428");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray49 = classReader48.b;
        byte[] byteArray50 = classReader48.b;
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter(classReader48, 30313);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertNotNull(strArray53);
    }

    @Test
    public void test12429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12429");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        printWriter1.println((long) 5);
        printWriter1.write("hi!", 14, (-1161953280));
        printWriter1.println((double) 2817);
        java.io.PrintWriter printWriter43 = printWriter1.append('a');
        printWriter1.print("L1837291041");
        printWriter1.close();
        printWriter1.println(282574710861678L);
        printWriter1.print("L615340472");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test12430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12430");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, 151060480);
        aSMifierMethodVisitor0.visitIincInsn(114, 37);
    }

    @Test
    public void test12431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12431");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (short) 0);
        aSMifierMethodVisitor0.visitTypeInsn((int) ' ', "L1845262982");
        aSMifierMethodVisitor0.visitIincInsn(86, 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = annotationVisitor41.visitArray("");
        annotationVisitor43.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test12432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12432");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        int int44 = classWriter1.newMethod("hi!", "L326432149", "hi!", false);
        int int46 = classWriter1.newUTF8("L994489370");
        classWriter1.visitInnerClass("L326432149", "L666971223", "L2113189186", (-1107296256));
        classWriter1.visitEnd();
        int int57 = classWriter1.newMethod("L18470166", "L111016143", "L1761736395", false);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 13 + "'", int44 == 13);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 14 + "'", int46 == 14);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 24 + "'", int57 == 24);
    }

    @Test
    public void test12433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12433");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        boolean boolean89 = printWriter88.checkError();
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.Writer) printWriter88, false);
        printWriter91.print("L1703143512");
        printWriter91.print('4');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test12434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12434");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("", true);
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 3);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("L1434348811", false);
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "L326432149", "L326432149", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitParameterAnnotation(1751720195, "", false);
        annotationVisitor27.visitEnum("L1579492813", "L1077931653", "L1413764419");
        annotationVisitor27.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test12435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12435");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        byte[] byteArray39 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray39);
        org.mockito.asm.ClassReader classReader41 = new org.mockito.asm.ClassReader(byteArray39);
        org.mockito.asm.ClassReader classReader42 = new org.mockito.asm.ClassReader(byteArray39);
        java.lang.String str43 = classReader42.getClassName();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test12436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12436");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println(8532477865490146625L);
        printWriter1.close();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        java.util.Locale locale37 = null;
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray46 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter40.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray46);
        java.io.PrintWriter printWriter48 = printWriter1.printf(locale37, "L1592299270", (java.lang.Object[]) strArray46);
        printWriter48.write("L1579141229", (int) (short) -13570, (int) (short) 27745);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(printWriter48);
    }

    @Test
    public void test12437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12437");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int42 = classWriter1.newField("L799304101", "L967033583", "");
        java.lang.Object obj47 = null;
        org.mockito.asm.FieldVisitor fieldVisitor48 = classWriter1.visitField(136, "L2101667039", "L834812042", "L1749641217", obj47);
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter54.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor73 = classWriter54.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        classWriter54.visitInnerClass("L644390938", "L666971223", "L454715523", (int) (short) 257);
        classWriter54.visitOuterClass("", "L1000949368", "L1216476214");
        org.mockito.asm.FieldVisitor fieldVisitor83 = classWriter1.visitField(0, "L2018459260", "L1555790481", "L1536756937", (java.lang.Object) "");
        fieldVisitor83.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 11 + "'", int42 == 11);
        org.junit.Assert.assertNotNull(fieldVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(fieldVisitor83);
    }

    @Test
    public void test12438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12438");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotation("L2099222213", false);
        org.mockito.asm.Label label23 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        int int52 = classReader48.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        org.mockito.asm.ClassWriter classWriter55 = new org.mockito.asm.ClassWriter(classReader48, 2);
        int int57 = classWriter55.newUTF8("");
        label23.info = classWriter55;
        aSMifierMethodVisitor0.visitJumpInsn(2, label23);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitParameterAnnotation(29793, "L1576898305", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((int) (byte) -1, "L914596724", "L70782547", "L1963899562");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor21);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 51966 + "'", int52 == 51966);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test12439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12439");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(23);
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        printWriter7.print((-889275714));
        java.util.Locale locale10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label20 = null;
        int[] intArray22 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray23 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor14.visitLookupSwitchInsn(label20, intArray22, labelArray23);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label31 = null;
        int[] intArray33 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray34 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label31, intArray33, labelArray34);
        aSMifierMethodVisitor12.visitLookupSwitchInsn(label13, intArray22, labelArray34);
        java.io.PrintWriter printWriter37 = printWriter7.format(locale10, "hi!", (java.lang.Object[]) labelArray34);
        printWriter7.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor40 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter7);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        printWriter47.print((-889275714));
        java.util.Locale locale50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label60 = null;
        int[] intArray62 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label60, intArray62, labelArray63);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label71 = null;
        int[] intArray73 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor65.visitLookupSwitchInsn(label71, intArray73, labelArray74);
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label53, intArray62, labelArray74);
        java.io.PrintWriter printWriter77 = printWriter47.format(locale50, "hi!", (java.lang.Object[]) labelArray74);
        printWriter47.println((int) (short) 1);
        java.lang.String[] strArray81 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter82 = printWriter47.format("hi!", (java.lang.Object[]) strArray81);
        java.lang.String[] strArray84 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter85 = printWriter47.printf("", (java.lang.Object[]) strArray84);
        aSMifierClassVisitor40.visit((int) (short) 9, 5, "hi!", "", "", strArray84);
        org.mockito.asm.FieldVisitor fieldVisitor87 = classWriter1.visitField(23, "L1544572272", "L1321861150", "L1479479862", (java.lang.Object) "");
        classWriter1.visitInnerClass("L1174087069", "L767403187", "L1775421725", 145);
        int int95 = classWriter1.newNameType("L1123989782", "L136029544");
        classWriter1.visitEnd();
        int int98 = classWriter1.newClass("L888698528");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1]");
        org.junit.Assert.assertNotNull(labelArray23);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[1]");
        org.junit.Assert.assertNotNull(labelArray34);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1]");
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(printWriter82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(fieldVisitor87);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 13 + "'", int95 == 13);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 15 + "'", int98 == 15);
    }

    @Test
    public void test12440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12440");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitCode();
        aSMifierMethodVisitor10.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor10.visitEnd();
        aSMifierMethodVisitor10.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor10.visitJumpInsn(25, label20);
        java.lang.Object obj22 = label20.info;
        java.lang.String str23 = label20.toString();
        aSMifierMethodVisitor0.visitLineNumber(22, label20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor25.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor25.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor25.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor25.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((-889275714));
        java.util.Locale locale49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label52 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label59 = null;
        int[] intArray61 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray62 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor53.visitLookupSwitchInsn(label59, intArray61, labelArray62);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor64.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label70 = null;
        int[] intArray72 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray73 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor64.visitLookupSwitchInsn(label70, intArray72, labelArray73);
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label52, intArray61, labelArray73);
        java.io.PrintWriter printWriter76 = printWriter46.format(locale49, "hi!", (java.lang.Object[]) labelArray73);
        printWriter46.print(false);
        printWriter46.println((long) (-889275714));
        aSMifierMethodVisitor25.visitLdcInsn((java.lang.Object) printWriter46);
        java.io.PrintWriter printWriter82 = new java.io.PrintWriter((java.io.Writer) printWriter46);
        printWriter82.println("L61669440");
        java.io.PrintWriter printWriter86 = new java.io.PrintWriter((java.io.Writer) printWriter82, true);
        label20.info = printWriter82;
        org.junit.Assert.assertNull(obj22);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L571481897" + "'", str23, "L571481897");
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[1]");
        org.junit.Assert.assertNotNull(labelArray62);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[1]");
        org.junit.Assert.assertNotNull(labelArray73);
        org.junit.Assert.assertNotNull(printWriter76);
    }

    @Test
    public void test12441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12441");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        java.lang.Object obj21 = label20.info;
        java.lang.String str22 = label20.toString();
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label20);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor25.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor25.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray40 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label48 = null;
        int[] intArray50 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray51 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor42.visitLookupSwitchInsn(label48, intArray50, labelArray51);
        aSMifierMethodVisitor25.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray40, (int) 'a', (java.lang.Object[]) labelArray51);
        aSMifierMethodVisitor25.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor57.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor57.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor57.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        aSMifierMethodVisitor57.visitLabel(label77);
        aSMifierMethodVisitor25.visitLineNumber((int) '#', label77);
        aSMifierMethodVisitor0.visitLabel(label77);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor0.visitAnnotation("L2146012452", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor86 = annotationVisitor84.visitArray("L1521763917");
        java.lang.Class<?> wildcardClass87 = annotationVisitor86.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L72088178" + "'", str22, "L72088178");
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(attributeArray40);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[1]");
        org.junit.Assert.assertNotNull(labelArray51);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(annotationVisitor86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test12442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12442");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor14.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter21.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter21.visitAnnotation("", true);
        classWriter21.visitSource("", "");
        annotationVisitor14.visit("L454715523", (java.lang.Object) classWriter21);
        classWriter21.visitInnerClass("L799304101", "L1441782014", "L1434348811", 57174305);
        int int44 = classWriter21.newMethod("L1669980843", "L614568462", "L834812042", false);
        classWriter21.visitEnd();
        classWriter21.visitInnerClass("L723576843", "", "L326432149", 48640);
        byte[] byteArray51 = classWriter21.toByteArray();
        classWriter21.visitInnerClass("L1009311081", "L1105153118", "L648105835", 22);
        classWriter21.visitOuterClass("L723576843", "L880088992", "L2146012452");
        int int62 = classWriter21.newClass("L981073027");
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = classWriter21.visitAnnotation("L1200596014", false);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 13 + "'", int44 == 13);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 33 + "'", int62 == 33);
        org.junit.Assert.assertNotNull(annotationVisitor65);
    }

    @Test
    public void test12443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12443");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        annotationVisitor14.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter21.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter21.visitAnnotation("", true);
        classWriter21.visitSource("", "");
        annotationVisitor14.visit("L454715523", (java.lang.Object) classWriter21);
        classWriter21.visitInnerClass("L799304101", "L1441782014", "L1434348811", 57174305);
        int int44 = classWriter21.newMethod("L1669980843", "L614568462", "L834812042", false);
        classWriter21.visitEnd();
        classWriter21.visitInnerClass("L723576843", "", "L326432149", 48640);
        byte[] byteArray51 = classWriter21.toByteArray();
        classWriter21.visitInnerClass("L1009311081", "L1105153118", "L648105835", 22);
        classWriter21.visitOuterClass("L723576843", "L880088992", "L2146012452");
        int int64 = classWriter21.newField("L1289682213", "L2041941526", "L1150441014");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 13 + "'", int44 == 13);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 37 + "'", int64 == 37);
    }

    @Test
    public void test12444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12444");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        printWriter19.print(0.0d);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        long long52 = classReader48.readLong((int) (byte) 10);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        int int54 = classReader48.getAccess();
        int int55 = classReader48.getAccess();
        printWriter19.println((java.lang.Object) int55);
        printWriter19.print("L1344346170");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        printWriter19.println(35);
        printWriter19.print("L136336566");
        printWriter19.println();
        printWriter19.write("L1800049467");
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter70 = printWriter19.append((java.lang.CharSequence) "L429919322", 1869509492, 332);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 332");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 72057598333118569L + "'", long52 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test12445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12445");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(17, 21);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Attribute attribute28 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test12446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12446");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        java.lang.Object obj25 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj25);
        aSMifierMethodVisitor0.visitVarInsn(2, 256);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L344842840", 28526);
        org.mockito.asm.ByteVector byteVector34 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector36 = byteVector34.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter40.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter40.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter40.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray53 = classWriter40.toByteArray();
        org.mockito.asm.ByteVector byteVector56 = byteVector36.putByteArray(byteArray53, (int) (byte) 1, 0);
        org.mockito.asm.ByteVector byteVector58 = byteVector36.putUTF8("");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteVector58);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor0.visitParameterAnnotation(17, "L2063102727", true);
        aSMifierMethodVisitor0.visitMaxs(3841, (int) 'a');
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test12447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12447");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print((float) 10L);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((int) 'a');
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter50.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = fieldVisitor56.visitAnnotation("hi!", true);
        printWriter46.print((java.lang.Object) annotationVisitor59);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter("hi!");
        printWriter62.print((int) 'a');
        printWriter62.println("");
        java.io.PrintWriter printWriter67 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        aSMifierClassVisitor68.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierClassVisitor68.visitAnnotation("", false);
        printWriter62.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor78 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        java.io.PrintWriter printWriter80 = printWriter62.append(' ');
        printWriter62.println(true);
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter("hi!");
        char[] charArray91 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter84.print(charArray91);
        printWriter62.print(charArray91);
        printWriter46.write(charArray91);
        printWriter31.write(charArray91);
        java.io.PrintWriter printWriter97 = printWriter31.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor98 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter97);
        java.util.List list99 = aSMifierClassVisitor98.text;
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter97);
        org.junit.Assert.assertNotNull(list99);
    }

    @Test
    public void test12448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12448");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn(86, (int) 'a');
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(218169344);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 218169344");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test12449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12449");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitCode();
        aSMifierMethodVisitor11.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor11.visitTryCatchBlock(label21, label22, label23, "hi!");
        aSMifierMethodVisitor11.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor29.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor29.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label39 = null;
        aSMifierMethodVisitor29.visitLineNumber((int) (byte) 10, label39);
        org.mockito.asm.Label label43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor44.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label50 = null;
        int[] intArray52 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray53 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label50, intArray52, labelArray53);
        aSMifierMethodVisitor29.visitTableSwitchInsn((int) (byte) 0, 51966, label43, labelArray53);
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor29.visitLabel(label56);
        org.mockito.asm.Label label58 = new org.mockito.asm.Label();
        aSMifierMethodVisitor29.visitLabel(label58);
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor61.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor61.visitAnnotation("hi!", false);
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(10, label77);
        aSMifierMethodVisitor11.visitTryCatchBlock(label58, label60, label77, "L1434348811");
        aSMifierMethodVisitor0.visitLabel(label77);
        label77.info = "L994489370";
        java.lang.String str84 = label77.toString();
        java.lang.Object obj85 = label77.info;
        // The following exception was thrown during execution in test generation
        try {
            int int86 = label77.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[1]");
        org.junit.Assert.assertNotNull(labelArray53);
        org.junit.Assert.assertNotNull(annotationVisitor75);
// flaky:         org.junit.Assert.assertEquals("'" + str84 + "' != '" + "L1601763142" + "'", str84, "L1601763142");
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "L994489370" + "'", obj85, "L994489370");
    }

    @Test
    public void test12450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12450");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation(2, "", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        aSMifierMethodVisitor39.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list69 = aSMifierMethodVisitor39.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor39.visitAnnotationDefault();
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        aSMifierMethodVisitor39.visitLineNumber((int) (byte) 10, label72);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor39.visitAnnotation("L326432149", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L326432149");
        aSMifierMethodVisitor0.visitIincInsn(3, (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierMethodVisitor0.visitAnnotation("L1647649528", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(29793, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 29793");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test12451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12451");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray33 = null;
        org.mockito.asm.MethodVisitor methodVisitor34 = aSMifierClassVisitor28.visitMethod((-1), "", "hi!", "", strArray33);
        org.mockito.asm.FieldVisitor fieldVisitor35 = aSMifierClassVisitor1.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        aSMifierClassVisitor1.visitInnerClass("L1669980843", "L142696279", "", (int) (byte) 100);
        aSMifierClassVisitor1.visitSource("L326432149", "L1715840275");
        aSMifierClassVisitor1.visitSource("L1749641217", "L61669440");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor1.visitAnnotation("L949601768", true);
        java.lang.Object obj54 = null;
        org.mockito.asm.FieldVisitor fieldVisitor55 = aSMifierClassVisitor1.visitField(324, "L767403187", "L717207883", "L48323983", obj54);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor55);
    }

    @Test
    public void test12452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12452");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label75 = null;
        int[] intArray77 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor69.visitLookupSwitchInsn(label75, intArray77, labelArray78);
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label57, intArray66, labelArray78);
        aSMifierMethodVisitor56.visitMaxs((int) (short) 1, 86);
        printWriter31.print((java.lang.Object) 86);
        printWriter31.print((long) 590080);
        printWriter31.println(115);
        printWriter31.print((long) 1651270977);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[1]");
        org.junit.Assert.assertNotNull(labelArray78);
    }

    @Test
    public void test12453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12453");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        byte[] byteArray39 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray39);
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        classWriter42.visitInnerClass("hi!", "", "", 3);
        classWriter42.visitSource("L994489370", "L1669980843");
        int int56 = classWriter42.newNameType("L326432149", "");
        classReader40.accept((org.mockito.asm.ClassVisitor) classWriter42, (int) (short) 10);
        int int63 = classWriter42.newMethod("L614568462", "L1592299270", "L316026808", true);
        int int68 = classWriter42.newMethod("L1931374313", "L1694926691", "L978789454", true);
        org.mockito.asm.ClassWriter classWriter70 = new org.mockito.asm.ClassWriter((int) '#');
        int int71 = classWriter42.newConst((java.lang.Object) '#');
        classWriter42.visitSource("L743230707", "L32099858");
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7 + "'", int56 == 7);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 15 + "'", int63 == 15);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 21 + "'", int68 == 21);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 22 + "'", int71 == 22);
    }

    @Test
    public void test12454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12454");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((long) 28526);
        printWriter31.print(321);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter((java.io.Writer) printWriter37);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test12455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12455");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray33 = null;
        org.mockito.asm.MethodVisitor methodVisitor34 = aSMifierClassVisitor28.visitMethod((-1), "", "hi!", "", strArray33);
        org.mockito.asm.FieldVisitor fieldVisitor35 = aSMifierClassVisitor1.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        aSMifierClassVisitor1.visitInnerClass("L1669980843", "L142696279", "", (int) (byte) 100);
        aSMifierClassVisitor1.visitSource("L326432149", "L1715840275");
        org.mockito.asm.ByteVector byteVector49 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter55 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter55.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = classWriter55.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor67 = classWriter55.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray68 = classWriter55.toByteArray();
        org.mockito.asm.ByteVector byteVector71 = byteVector51.putByteArray(byteArray68, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader72 = new org.mockito.asm.ClassReader(byteArray68);
        long long74 = classReader72.readLong((int) (byte) 100);
        long long76 = classReader72.readLong((int) (byte) 10);
        short short78 = classReader72.readShort(1);
        int int80 = classReader72.readUnsignedShort(0);
        java.lang.String[] strArray81 = classReader72.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor82 = aSMifierClassVisitor1.visitMethod((int) (short) 872, "L96121905", "L61669440", "L1853824624", strArray81);
        aSMifierClassVisitor1.visitSource("", "L97937772");
        org.mockito.asm.ByteVector byteVector91 = new org.mockito.asm.ByteVector(2);
        org.mockito.asm.ByteVector byteVector93 = byteVector91.putInt(22113);
        org.mockito.asm.FieldVisitor fieldVisitor94 = aSMifierClassVisitor1.visitField(27, "L1805888593", "L723576843", "L911973346", (java.lang.Object) 22113);
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = fieldVisitor94.visitAnnotation("L2070714089", true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor67);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector71);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 8532477865490146625L + "'", long74 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 72057598333118569L + "'", long76 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short78 + "' != '" + (short) -326 + "'", short78 == (short) -326);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 51966 + "'", int80 == 51966);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(methodVisitor82);
        org.junit.Assert.assertNotNull(byteVector93);
        org.junit.Assert.assertNotNull(fieldVisitor94);
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test12456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12456");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        int[] intArray19 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label17, intArray19, labelArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label28 = null;
        int[] intArray30 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray31 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label28, intArray30, labelArray31);
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label10, intArray19, labelArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label8, intArray19, labelArray56);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "L326432149", "L326432149", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMethodInsn(3, "L1544572272", "hi!", "L1297264300");
        org.mockito.asm.Label label71 = new org.mockito.asm.Label();
        java.lang.Object obj72 = label71.info;
        java.lang.String str73 = label71.toString();
        aSMifierMethodVisitor0.visitLabel(label71);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor0.visitAnnotation("L603155286", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(1536, "", "L1232938969", "L1977427665");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1536");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1]");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1]");
        org.junit.Assert.assertNotNull(labelArray31);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNull(obj72);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "L1919737609" + "'", str73, "L1919737609");
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test12457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12457");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((long) 28526);
        printWriter31.print(321);
        java.io.PrintWriter printWriter37 = printWriter31.append(' ');
        printWriter31.write("L421530542");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter37);
    }

    @Test
    public void test12458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12458");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor16.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor16.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLabel(label36);
        aSMifierMethodVisitor16.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor40.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        aSMifierMethodVisitor40.visitLabel(label60);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor62.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor62.visitIincInsn(1, 0);
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor62.visitLabel(label74);
        label60.info = aSMifierMethodVisitor62;
        aSMifierMethodVisitor16.visitLineNumber(24942, label60);
        aSMifierMethodVisitor0.visitJumpInsn(6, label60);
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 10, (int) (short) -326);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 9, "L43786096", "L1278664853", "L1549311922");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 257, 1651270977);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor81);
    }

    @Test
    public void test12459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12459");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor76 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        aSMifierClassVisitor76.visitInnerClass("L172059849", "L2075420132", "L1706181374", 223337);
        aSMifierClassVisitor76.visitOuterClass("L1619590163", "L252015005", "L406965428");
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test12460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12460");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        aSMifierMethodVisitor0.visitInsn(0);
        java.util.List list31 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitLineNumber((int) (byte) 10, label42);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor32.visitAnnotation("hi!", true);
        aSMifierMethodVisitor32.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor51.visitLineNumber((int) (byte) 10, label61);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label72 = null;
        int[] intArray74 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor66.visitLookupSwitchInsn(label72, intArray74, labelArray75);
        aSMifierMethodVisitor51.visitTableSwitchInsn((int) (byte) 0, 51966, label65, labelArray75);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor51.visitLabel(label78);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor51.visitLabel(label80);
        aSMifierMethodVisitor32.visitJumpInsn((int) (short) 10, label80);
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitVarInsn(10, (int) (short) 10);
        aSMifierMethodVisitor0.visitInsn((int) (short) 100);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierMethodVisitor0.visitParameterAnnotation(17, "L1085773562", true);
        annotationVisitor94.visitEnum("", "", "L527197175");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1]");
        org.junit.Assert.assertNotNull(labelArray75);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test12461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12461");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.lang.String str22 = label20.toString();
        java.lang.String str23 = label20.toString();
        java.lang.Object obj24 = label20.info;
        java.lang.String str25 = label20.toString();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L456226115" + "'", str22, "L456226115");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "L456226115" + "'", str23, "L456226115");
        org.junit.Assert.assertNull(obj24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "L456226115" + "'", str25, "L456226115");
    }

    @Test
    public void test12462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12462");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        classWriter1.visitSource("", "");
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter32);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter48 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter48.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = classWriter48.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor60 = classWriter48.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray61 = classWriter48.toByteArray();
        org.mockito.asm.ByteVector byteVector64 = byteVector44.putByteArray(byteArray61, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader65 = new org.mockito.asm.ClassReader(byteArray61);
        long long67 = classReader65.readLong((int) (byte) 100);
        long long69 = classReader65.readLong((int) (byte) 10);
        java.lang.String[] strArray70 = classReader65.getInterfaces();
        aSMifierClassVisitor35.visit((int) (byte) 1, (-1), "", "hi!", "", strArray70);
        classWriter1.visit(10, 202, "L601661571", "L1669980843", "L1669980843", strArray70);
        classWriter1.visitSource("", "L911973346");
        int int80 = classWriter1.newMethod("L1628873907", "L614568462", "L943959020", false);
        byte[] byteArray81 = classWriter1.toByteArray();
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = classWriter1.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 8532477865490146625L + "'", long67 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 72057598333118569L + "'", long69 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 14 + "'", int80 == 14);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertNotNull(annotationVisitor84);
    }

    @Test
    public void test12463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12463");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitVarInsn(8, 25);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L926821323", 320);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test12464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12464");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray49 = classReader48.b;
        byte[] byteArray50 = classReader48.b;
        int int51 = classReader48.header;
        byte[] byteArray52 = classReader48.b;
        // The following exception was thrown during execution in test generation
        try {
            int int54 = classReader48.readInt((int) (short) -326);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 203 + "'", int51 == 203);
        org.junit.Assert.assertNotNull(byteArray52);
    }

    @Test
    public void test12465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12465");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.print(0.0f);
        boolean boolean39 = printWriter1.checkError();
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test12466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12466");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray53 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor38.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray53, (int) 'a', (java.lang.Object[]) labelArray64);
        aSMifierMethodVisitor23.visitTableSwitchInsn(8, (int) (byte) 1, label37, labelArray64);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-889275714), (int) '#', label22, labelArray64);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L96121905", (int) (short) -1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L967033583", (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor0.visitParameterAnnotation(136, "L1829941255", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = annotationVisitor78.visitArray("L175145913");
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = annotationVisitor80.visitArray("L1444913603");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(attributeArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test12467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12467");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        printWriter31.print('a');
        java.io.PrintWriter printWriter37 = printWriter31.append('#');
        java.io.PrintWriter printWriter39 = printWriter31.append(' ');
        java.io.PrintWriter printWriter41 = printWriter39.append('a');
        printWriter41.println();
        printWriter41.println((float) 1699311222);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(printWriter41);
    }

    @Test
    public void test12468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12468");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitFieldInsn(0, "L459227517", "L1592299270", "L1592299270");
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 4, (int) (short) 10);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 100, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(1970431233, "L1736155405", "L1987236254", "L2131834600");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
    }

    @Test
    public void test12469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12469");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println("hi!");
        printWriter1.close();
        printWriter1.println((double) 3);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        printWriter9.print((int) 'a');
        printWriter9.println("");
        printWriter9.print((float) 590080L);
        java.lang.Object[] objArray17 = null;
        java.io.PrintWriter printWriter18 = printWriter9.printf("hi!", objArray17);
        printWriter18.println('a');
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter((java.io.Writer) printWriter18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor23.visitLineNumber((int) (byte) 10, label33);
        aSMifierMethodVisitor23.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor23.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor23.visitIincInsn((int) (byte) -1, (-1107296256));
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        printWriter47.print((-889275714));
        java.util.Locale locale50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label60 = null;
        int[] intArray62 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label60, intArray62, labelArray63);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label71 = null;
        int[] intArray73 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor65.visitLookupSwitchInsn(label71, intArray73, labelArray74);
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label53, intArray62, labelArray74);
        java.io.PrintWriter printWriter77 = printWriter47.format(locale50, "hi!", (java.lang.Object[]) labelArray74);
        aSMifierMethodVisitor23.visitLdcInsn((java.lang.Object) labelArray74);
        java.io.PrintWriter printWriter79 = printWriter18.format("L61669440", (java.lang.Object[]) labelArray74);
        java.io.PrintWriter printWriter80 = printWriter1.printf("L1200350890", (java.lang.Object[]) labelArray74);
        printWriter1.flush();
        org.junit.Assert.assertNotNull(printWriter18);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1]");
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(printWriter80);
    }

    @Test
    public void test12470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12470");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitInnerClass("", "hi!", "hi!", 100);
        int int10 = classWriter1.newField("", "hi!", "L994489370");
        int int14 = classWriter1.newField("", "L555214098", "L659269359");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor19.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor19.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor19.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor19.visitEnd();
        aSMifierMethodVisitor19.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor19.visitAnnotation("hi!", false);
        aSMifierMethodVisitor19.visitFieldInsn((int) (byte) 100, "L1434348811", "L454715523", "L1284973471");
        java.util.List list51 = aSMifierMethodVisitor19.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierMethodVisitor19.visitParameterAnnotation(3, "L1421508585", false);
        java.util.List list56 = aSMifierMethodVisitor19.getText();
        aSMifierMethodVisitor19.visitEnd();
        aSMifierMethodVisitor19.visitMaxs(1853030400, 0);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter1.visitField((int) (short) 24942, "L1610282393", "L664055953", "L744095971", (java.lang.Object) 0);
        org.mockito.asm.Attribute attribute62 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor61.visitAttribute(attribute62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 11 + "'", int14 == 11);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(list56);
        org.junit.Assert.assertNotNull(fieldVisitor61);
    }

    @Test
    public void test12471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12471");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print(true);
        printWriter31.println('#');
        java.io.PrintWriter printWriter48 = printWriter31.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        printWriter48.write("L1962067231");
        org.mockito.asm.ByteVector byteVector54 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector58 = byteVector56.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter60 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter60.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = classWriter60.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor72 = classWriter60.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray73 = classWriter60.toByteArray();
        org.mockito.asm.ByteVector byteVector76 = byteVector56.putByteArray(byteArray73, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader77 = new org.mockito.asm.ClassReader(byteArray73);
        long long79 = classReader77.readLong((int) (byte) 100);
        long long81 = classReader77.readLong((int) (byte) 10);
        java.lang.String[] strArray82 = classReader77.getInterfaces();
        int int84 = classReader77.readInt(0);
        int int85 = classReader77.getAccess();
        int int87 = classReader77.getItem(2);
        java.lang.String[] strArray88 = classReader77.getInterfaces();
        int int90 = classReader77.readByte((int) (byte) 10);
        int int91 = classReader77.getAccess();
        int int93 = classReader77.readByte(1);
        byte[] byteArray94 = classReader77.b;
        long long96 = classReader77.readLong(86);
        long long98 = classReader77.readLong(0);
        printWriter48.print((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(fieldVisitor72);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 8532477865490146625L + "'", long79 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 72057598333118569L + "'", long81 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-889275714) + "'", int84 == (-889275714));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 14 + "'", int87 == 14);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 254 + "'", int93 == 254);
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 8029356285618189678L + "'", long96 == 8029356285618189678L);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + (-3819410108757049344L) + "'", long98 == (-3819410108757049344L));
    }

    @Test
    public void test12472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12472");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L97937772");
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter("hi!");
        printWriter4.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor7.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label13 = null;
        int[] intArray15 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray16 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitLookupSwitchInsn(label13, intArray15, labelArray16);
        java.util.List list18 = aSMifierMethodVisitor7.getText();
        printWriter4.println((java.lang.Object) list18);
        printWriter4.print((double) 10L);
        printWriter4.print('4');
        printWriter4.print("");
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        long long53 = classReader51.readLong((int) (byte) 100);
        int int55 = classReader51.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray56 = classReader51.getInterfaces();
        java.io.PrintWriter printWriter57 = printWriter4.printf("", (java.lang.Object[]) strArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor59.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor59.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray74 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor76 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor76.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label82 = null;
        int[] intArray84 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray85 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor76.visitLookupSwitchInsn(label82, intArray84, labelArray85);
        aSMifierMethodVisitor59.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray74, (int) 'a', (java.lang.Object[]) labelArray85);
        java.io.PrintWriter printWriter88 = printWriter57.format("hi!", (java.lang.Object[]) attributeArray74);
        java.io.PrintWriter printWriter89 = printWriter1.printf("L1749641217", (java.lang.Object[]) attributeArray74);
        printWriter1.print((double) (short) 1);
        printWriter1.write("L459227517", 1634628694, 1986622313);
        java.io.PrintWriter printWriter97 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter97.print("L1862033567");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[1]");
        org.junit.Assert.assertNotNull(labelArray16);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 8532477865490146625L + "'", long53 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 51966 + "'", int55 == 51966);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(printWriter57);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(attributeArray74);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[1]");
        org.junit.Assert.assertNotNull(labelArray85);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test12473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12473");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        classWriter1.visitOuterClass("hi!", "", "hi!");
        classWriter1.visitEnd();
        int int16 = classWriter1.newField("hi!", "L666971223", "L801849928");
        org.mockito.asm.ByteVector byteVector22 = new org.mockito.asm.ByteVector(10);
        org.mockito.asm.FieldVisitor fieldVisitor23 = classWriter1.visitField(100, "", "L967033583", "L298663367", (java.lang.Object) 10);
        classWriter1.visitOuterClass("L1716111915", "L1608972287", "L25251448");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitCode();
        aSMifierMethodVisitor32.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitAnnotation("hi!", false);
        aSMifierMethodVisitor32.visitFieldInsn((int) 'a', "L137136720", "L838424803", "L836986691");
        aSMifierMethodVisitor32.visitMethodInsn(33, "L78149900", "L767403187", "L555214098");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor32.visitParameterAnnotation(23, "L1441782014", false);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter1.visitField(18798, "L601882898", "L1121272190", "L1720888652", (java.lang.Object) aSMifierMethodVisitor32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.util.ASMifierMethodVisitor@2a2e98fb");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
        org.junit.Assert.assertNotNull(fieldVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test12474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12474");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = annotationVisitor13.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor13.visitAnnotation("", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor20.visitLineNumber((int) (byte) 10, label30);
        org.mockito.asm.Label label34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        aSMifierMethodVisitor20.visitTableSwitchInsn((int) (byte) 0, 51966, label34, labelArray44);
        org.mockito.asm.Label label47 = null;
        aSMifierMethodVisitor20.visitLabel(label47);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor20.visitParameterAnnotation(0, "L1669980843", false);
        annotationVisitor13.visit("L1441782014", (java.lang.Object) false);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = annotationVisitor13.visitArray("L1390196302");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = annotationVisitor55.visitArray("L1533650022");
        annotationVisitor57.visitEnd();
        annotationVisitor57.visitEnum("L1142561338", "L555214098", "L337085009");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test12475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12475");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        int int45 = classWriter1.newField("", "", "L1434348811");
        int int47 = classWriter1.newClass("");
        classWriter1.visitSource("L943959020", "L1137045083");
        int int55 = classWriter1.newMethod("L477731576", "L1761736395", "L1432518723", false);
        java.io.PrintWriter printWriter61 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor62 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter61);
        aSMifierClassVisitor62.visitSource("", "hi!");
        java.io.PrintWriter printWriter71 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter71);
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor72.visit(2, (int) (byte) 0, "", "", "", strArray81);
        aSMifierClassVisitor62.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray81);
        classWriter1.visit(151060480, (int) (byte) 0, "L540616366", "L220206000", "L141702847", strArray81);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 17 + "'", int55 == 17);
        org.junit.Assert.assertNotNull(strArray81);
    }

    @Test
    public void test12476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12476");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor15.visitLocalVariable("", "hi!", "", label31, label32, 8);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.print((-889275714));
        java.util.Locale locale39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label42 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label49 = null;
        int[] intArray51 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor43.visitLookupSwitchInsn(label49, intArray51, labelArray52);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label60 = null;
        int[] intArray62 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label60, intArray62, labelArray63);
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label42, intArray51, labelArray63);
        java.io.PrintWriter printWriter66 = printWriter36.format(locale39, "hi!", (java.lang.Object[]) labelArray63);
        printWriter66.print((int) '4');
        aSMifierMethodVisitor15.print(printWriter66);
        printWriter66.println((long) 1986622313);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter66);
        org.mockito.asm.FieldVisitor fieldVisitor73 = aSMifierClassVisitor10.visitField((int) (byte) -1, "L407895089", "L978789454", "L1532047758", (java.lang.Object) aSMifierClassVisitor72);
        java.util.List list74 = aSMifierClassVisitor10.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierClassVisitor10.visitAnnotation("L104358438", true);
        java.util.List list78 = aSMifierClassVisitor10.text;
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(list78);
    }

    @Test
    public void test12477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12477");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        int int30 = classReader24.readUnsignedShort(0);
        int int32 = classReader24.readUnsignedShort(3);
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter(classReader24, (int) (short) 30313);
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        java.util.List list50 = aSMifierMethodVisitor39.getText();
        printWriter36.println((java.lang.Object) list50);
        printWriter36.print((double) 10L);
        printWriter36.println(false);
        int int56 = classWriter34.newConst((java.lang.Object) false);
        classWriter34.visitSource("L1526656810", "L514140742");
        classWriter34.visitEnd();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 51966 + "'", int30 == 51966);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 48640 + "'", int32 == 48640);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(list50);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 9 + "'", int56 == 9);
    }

    @Test
    public void test12478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12478");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readInt(0);
        byte[] byteArray32 = classReader24.b;
        byte[] byteArray33 = classReader24.b;
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray33);
        org.mockito.asm.ClassReader classReader35 = new org.mockito.asm.ClassReader(byteArray33);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.print((-889275714));
        printWriter37.write("");
        printWriter37.write("L994489370");
        java.io.PrintWriter printWriter45 = printWriter37.append((java.lang.CharSequence) "L237245406");
        printWriter45.print((float) (short) 22113);
        printWriter45.flush();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        // The following exception was thrown during execution in test generation
        try {
            classReader35.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor49, 1986622313);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-889275714) + "'", int31 == (-889275714));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(printWriter45);
    }

    @Test
    public void test12479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12479");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        java.util.List list48 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMethodInsn(14, "L1715840275", "L601661571", "L1715840275");
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMethodInsn(15, "L921255442", "L1143644228", "L1364567446");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test12480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12480");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.flush();
        java.io.PrintWriter printWriter8 = printWriter1.append((java.lang.CharSequence) "L61669440");
        printWriter8.close();
        printWriter8.print((float) 16779859);
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor14.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray29 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor14.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray29, (int) 'a', (java.lang.Object[]) labelArray40);
        org.mockito.asm.Attribute[] attributeArray45 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor47.visitLineNumber((int) (byte) 10, label57);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        int[] intArray70 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label68, intArray70, labelArray71);
        aSMifierMethodVisitor47.visitTableSwitchInsn((int) (byte) 0, 51966, label61, labelArray71);
        aSMifierMethodVisitor14.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray45, (int) '4', (java.lang.Object[]) labelArray71);
        java.io.PrintWriter printWriter75 = printWriter8.format(locale12, "L1067926277", (java.lang.Object[]) attributeArray45);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter79 = printWriter8.append((java.lang.CharSequence) "L1105153118", (int) (short) 26729, 3841);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 3841");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter8);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(attributeArray29);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(attributeArray45);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test12481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12481");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L939261813", 27);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 22113);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(16780108, "L261648562", "L2112385861", "L1696732583");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test12482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12482");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        printWriter1.println(true);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter35.println();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
    }

    @Test
    public void test12483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12483");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray54 = classReader53.b;
        org.mockito.asm.ByteVector byteVector57 = byteVector26.putByteArray(byteArray54, 0, 5);
        org.mockito.asm.ByteVector byteVector59 = byteVector26.putUTF8("L666971223");
        org.mockito.asm.ByteVector byteVector61 = byteVector59.putInt(4);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putByte(254);
        org.mockito.asm.ByteVector byteVector65 = byteVector61.putShort((int) (short) -13570);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector69 = byteVector65.putByte(48640);
        org.mockito.asm.ByteVector byteVector71 = byteVector69.putInt((int) 'a');
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(byteVector61);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(byteVector71);
    }

    @Test
    public void test12484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12484");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        printWriter88.println('#');
        printWriter88.flush();
        printWriter88.println('4');
        printWriter88.println("");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
    }

    @Test
    public void test12485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12485");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor21.visitInnerClass("L1434348811", "", "L142696279", 24942);
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray52 = classWriter39.toByteArray();
        org.mockito.asm.ByteVector byteVector55 = byteVector35.putByteArray(byteArray52, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader56 = new org.mockito.asm.ClassReader(byteArray52);
        long long58 = classReader56.readLong((int) (byte) 100);
        long long60 = classReader56.readLong((int) (byte) 10);
        java.lang.String[] strArray61 = classReader56.getInterfaces();
        int int63 = classReader56.readByte((int) '#');
        long long65 = classReader56.readLong(4);
        java.lang.String[] strArray66 = classReader56.getInterfaces();
        aSMifierClassVisitor21.visit(8, (int) (short) 9, "L1284973471", "L801849928", "L237245406", strArray66);
        aSMifierClassVisitor21.visitSource("L1829941255", "L1829941255");
        java.util.List list71 = aSMifierClassVisitor21.getText();
        org.mockito.asm.Attribute attribute72 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor21.visitAttribute(attribute72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 8532477865490146625L + "'", long58 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 72057598333118569L + "'", long60 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 86 + "'", int63 == 86);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 590080L + "'", long65 == 590080L);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(list71);
    }

    @Test
    public void test12486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12486");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitVarInsn(12, (int) (byte) -1);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L169779857", false);
        annotationVisitor19.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test12487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12487");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.lang.Object[] objArray33 = null;
        java.io.PrintWriter printWriter34 = printWriter1.printf("", objArray33);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor35.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor35.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label48 = null;
        int[] intArray55 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor56.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor56.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray71 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label79 = null;
        int[] intArray81 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray82 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor73.visitLookupSwitchInsn(label79, intArray81, labelArray82);
        aSMifierMethodVisitor56.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray71, (int) 'a', (java.lang.Object[]) labelArray82);
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label48, intArray55, labelArray82);
        aSMifierMethodVisitor35.visitInsn(7);
        printWriter1.println((java.lang.Object) 7);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter89.print((long) 8);
        java.io.PrintWriter printWriter93 = new java.io.PrintWriter((java.io.Writer) printWriter89, true);
        printWriter89.write("L1734603415");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(attributeArray71);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[1]");
        org.junit.Assert.assertNotNull(labelArray82);
    }

    @Test
    public void test12488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12488");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(2, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 2817);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIincInsn(24942, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotation("L384579388", false);
        aSMifierMethodVisitor0.visitMaxs(24942, 13);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L911946641", 203);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(330, "L1159625657", "L619088697", "L1453527686");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 330");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test12489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12489");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list16 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("L674352908", false);
        annotationVisitor20.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test12490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12490");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation(151060480, "hi!", false);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 0, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitParameterAnnotation(16777217, "L723576843", true);
        aSMifierMethodVisitor0.visitTypeInsn((int) '4', "L1482294079");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L210899389", 115);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test12491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12491");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1434348811", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L142696279", (-889275714));
        aSMifierMethodVisitor0.visitTypeInsn(118, "L1931374313");
        aSMifierMethodVisitor0.visitMaxs(0, 16);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotation("L615188845", false);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test12492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12492");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn(8, "L943959020");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("L1992109437", true);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test12493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12493");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray53 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor38.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray53, (int) 'a', (java.lang.Object[]) labelArray64);
        aSMifierMethodVisitor23.visitTableSwitchInsn(8, (int) (byte) 1, label37, labelArray64);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-889275714), (int) '#', label22, labelArray64);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L96121905", (int) (short) -1);
        aSMifierMethodVisitor0.visitIincInsn(17, 324);
        aSMifierMethodVisitor0.visitIincInsn(86, 23);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (short) 24942, (int) (short) 18798);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(attributeArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
    }

    @Test
    public void test12494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12494");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitCode();
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor23.visitTryCatchBlock(label25, label26, label27, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor23.visitAnnotationDefault();
        java.util.List list31 = aSMifierMethodVisitor23.getText();
        aSMifierMethodVisitor23.visitMethodInsn(15, "L799304101", "L1532047758", "L1669980843");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L799304101");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotation("L614568462", true);
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((-889275714));
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label66 = null;
        int[] intArray68 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor60.visitLookupSwitchInsn(label66, intArray68, labelArray69);
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label48, intArray57, labelArray69);
        java.io.PrintWriter printWriter72 = printWriter42.format(locale45, "hi!", (java.lang.Object[]) labelArray69);
        printWriter42.println((int) (short) 1);
        java.lang.String[] strArray76 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter77 = printWriter42.format("hi!", (java.lang.Object[]) strArray76);
        java.lang.String[] strArray79 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter80 = printWriter42.printf("", (java.lang.Object[]) strArray79);
        printWriter80.print((long) 2);
        printWriter80.write("hi!");
        aSMifierMethodVisitor0.print(printWriter80);
        java.io.PrintWriter printWriter86 = new java.io.PrintWriter((java.io.Writer) printWriter80);
        boolean boolean87 = printWriter80.checkError();
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter91 = printWriter80.append((java.lang.CharSequence) "L1939891096", (int) (short) 29793, 34);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 34");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1]");
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test12495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12495");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitIntInsn(86, 18);
        aSMifierMethodVisitor0.visitMaxs((-21316096), (int) (byte) 10);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitAnnotation("", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(30313);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 30313");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor10);
    }

    @Test
    public void test12496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12496");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 1, 7);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotation("L799304101", true);
        aSMifierMethodVisitor0.visitFieldInsn(22, "L1085773562", "L911973346", "L231657813");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitCode();
        aSMifierMethodVisitor47.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor47.visitTypeInsn(8, "");
        aSMifierMethodVisitor47.visitEnd();
        java.util.List list61 = aSMifierMethodVisitor47.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor63.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor63.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor63.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor63.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label83 = new org.mockito.asm.Label();
        aSMifierMethodVisitor63.visitLabel(label83);
        aSMifierMethodVisitor47.visitLineNumber(24942, label83);
        java.lang.String str86 = label83.toString();
        aSMifierMethodVisitor0.visitLabel(label83);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(1937006958);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1937006958");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(list61);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor82);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "L1975070810" + "'", str86, "L1975070810");
    }

    @Test
    public void test12497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12497");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor43.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor43.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor43.visitLocalVariable("hi!", "hi!", "hi!", label58, label59, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor63.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor63.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor63.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor63.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label83 = new org.mockito.asm.Label();
        aSMifierMethodVisitor63.visitLabel(label83);
        java.lang.String str85 = label83.toString();
        aSMifierMethodVisitor43.visitJumpInsn(5, label83);
        aSMifierMethodVisitor24.visitJumpInsn(100, label83);
        aSMifierMethodVisitor24.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor82);
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "L700412125" + "'", str85, "L700412125");
    }

    @Test
    public void test12498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12498");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.print("L666971223");
        printWriter1.println('a');
        printWriter1.println((float) 7958820893801644044L);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector(13);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putLong((long) (short) 9);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putInt(22);
        org.mockito.asm.ByteVector byteVector31 = byteVector27.putShort(590080);
        printWriter1.print((java.lang.Object) byteVector31);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.print(721152L);
        printWriter1.flush();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
    }

    @Test
    public void test12499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12499");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray53 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor38.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray53, (int) 'a', (java.lang.Object[]) labelArray64);
        aSMifierMethodVisitor23.visitTableSwitchInsn(8, (int) (byte) 1, label37, labelArray64);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-889275714), (int) '#', label22, labelArray64);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor0.visitParameterAnnotation(6, "L1749641217", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor0.visitParameterAnnotation(53, "L1866436761", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(203);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 203");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(attributeArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test12500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12500");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation(16779859, "L2113189186", false);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "L1775421725", "L252015005", "L231657813");
        aSMifierMethodVisitor0.visitMaxs(16777217, 65539);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }
}
